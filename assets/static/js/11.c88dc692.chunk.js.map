{"version":3,"sources":["component/Admin/Dashboard.js","component/Admin/Index.js","component/Admin/Setting/SiteInformation.js","component/Admin/Dialogs/Alert.js","component/Admin/Setting/Access.js","component/Admin/Setting/Mail.js","component/Admin/Common/SizeInput.js","component/Admin/Setting/UploadDownload.js","component/Admin/Dialogs/CreateTheme.js","component/Admin/Setting/Theme.js","component/Admin/Setting/Image.js","component/Admin/Dialogs/AddPolicy.js","component/Admin/Policy/Policy.js","component/Admin/Common/DomainInput.js","component/Admin/Dialogs/MagicVar.js","component/Admin/Policy/Guid/COSGuide.js","component/Admin/Policy/Guid/LocalGuide.js","component/Admin/Policy/Guid/OneDriveGuide.js","component/Admin/Policy/Guid/OSSGuide.js","component/Admin/Policy/Guid/QiniuGuide.js","component/Admin/Policy/Guid/RemoteGuide.js","component/Admin/Policy/Guid/UpyunGuide.js","component/Admin/Policy/Guid/S3Guide.js","component/Admin/Policy/AddPolicy.js","component/Admin/Policy/Guid/EditPro.js","component/Admin/Policy/EditPolicy.js","component/Admin/Group/Group.js","component/Admin/Group/GroupForm.js","component/Admin/Group/EditGroup.js","component/Admin/Dialogs/UserFilter.js","component/Admin/User/User.js","component/Admin/User/UserForm.js","component/Admin/User/EditUser.js","component/Admin/Dialogs/FileFilter.js","component/Admin/File/File.js","component/Admin/Dialogs/ShareFilter.js","component/Admin/Share/Share.js","component/Admin/Task/Aria2Helper.js","component/Admin/Task/Download.js","component/Admin/Task/Task.js","component/Admin/File/Import.js","component/Admin/Setting/Captcha.js","component/Admin/Node/Node.js","component/Admin/Node/Guide/Communication.js","component/Admin/Node/Guide/Aria2RPC.js","component/Admin/Node/Guide/Metainfo.js","component/Admin/Node/Guide/Completed.js","component/Admin/Node/Guide/NodeGuide.js","component/Admin/Node/AddNode.js","component/Admin/Node/EditNode.js","Admin.js"],"names":["ExpansionPanel","withStyles","root","maxWidth","boxShadow","borderBottom","display","margin","expanded","MuiExpansionPanel","ExpansionPanelSummary","minHeight","padding","content","MuiExpansionPanelSummary","ExpansionPanelDetails","theme","spacing","MuiExpansionPanelDetails","useStyles","makeStyles","width","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","title","flexGrow","toolbar","alignItems","justifyContent","mixins","sub","paddingLeft","color","palette","text","secondary","subMenu","backgroundColor","background","default","paddingTop","paddingBottom","active","lighten","primary","main","activeText","fontWeight","activeIcon","items","icon","Home","path","Settings","Language","Contacts","Mail","SettingsEthernet","Palette","Image","Category","Storage","Contactless","Group","Person","InsertDriveFile","Share","Assignment","CloudDownload","ListAlt","Dashboard","t","useTranslation","classes","useTheme","useState","pathHelper","isMobile","open","setOpen","menuOpen","setMenuOpen","history","useHistory","location","useLocation","dispatch","useDispatch","SetSubTitle","useCallback","changeSubTitle","useEffect","useRouteMatch","className","AppBar","position","clsx","Toolbar","IconButton","aria-label","onClick","edge","Typography","variant","noWrap","UserAvatar","Drawer","paper","direction","Divider","List","noPadding","map","item","undefined","ListItem","push","button","pathname","startsWith","key","ListItemIcon","ListItemText","square","onChange","event","isExpanded","aria-controls","id","height","logo","logoContainer","cloudreve","fontSize","version","hint","links","iconRight","minWidth","userIcon","blue","fileIcon","yellow","publicIcon","green","secretIcon","red","Index","lineData","setLineData","news","setNews","newsUsers","setNewsUsers","React","siteURL","setSiteURL","fileTotal","userTotal","publicShareTotal","secretShareTotal","statistics","setStatistics","backend","setVersion","ToggleSnackbar","vertical","horizontal","msg","toggleSnackbar","API","get","then","response","data","date","forEach","v","k","name","file","files","user","users","share","shares","window","origin","catch","error","message","axios","res","included","type","attributes","Grid","container","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","current","DialogActions","Button","patch","options","value","alignContent","xs","md","lg","Paper","gutterBottom","ResponsiveContainer","aspect","LineChart","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Line","stroke","ListItemAvatar","Avatar","People","FileCopy","Public","Lock","alt","src","is_pro","Chip","size","label","component","Launch","GitHub","Description","Forum","Telegram","style","Favorite","relationships","startUser","avatarUrl","Fragment","inline","username","Trans","ns","i18nKey","components","datetime","startTime","locale","form","marginTop","marginBottom","formContainer","SiteInformation","keyPrefix","loading","setLoading","siteName","siteTitle","siteDes","siteScript","pwa_small_icon","pwa_medium_icon","pwa_large_icon","pwa_display","pwa_theme_color","pwa_background_color","setOptions","handleChange","target","post","keys","Object","onSubmit","e","preventDefault","option","FormControl","fullWidth","InputLabel","htmlFor","Input","required","FormHelperText","multiline","Select","MenuItem","disabled","AlertDialog","Access","register_enabled","default_group","email_active","login_captcha","reg_captcha","forget_captcha","authn_enabled","groups","setGroups","httpAlert","setHttpAlert","checked","FormControlLabel","control","Switch","ID","toString","Name","buttonMargin","tGlobal","test","setTest","tesInput","setTestInput","fromName","fromAdress","smtpHost","smtpPort","replyTo","smtpUser","smtpPass","smtpEncryption","mail_keepalive","mail_activation_template","mail_reset_pwd_template","TextField","autoFocus","to","inputProps","min","step","rowsMax","SizeInput","max","suffix","unit","setUnit","val","setVal","err","setError","i","base","Math","pow","unitTransform","endAdornment","InputAdornment","labelId","UploadDownload","max_worker_num","max_parallel_transfer","temp_path","maxEditSize","chunk_retries","archive_timeout","download_timeout","preview_timeout","doc_preview_timeout","upload_credential_timeout","upload_session_timeout","slave_api_timeout","onedrive_monitor_timeout","share_download_session_timeout","onedrive_callback_check","reset_after_upload_failed","onedrive_source_timeout","slave_node_retry","slave_ping_interval","slave_recover_interval","slave_transfer_timeout","use_temp_chunk_buffer","handleCheckChange","field","des","input","picker","statusBar","fab","textAlign","CreateTheme","contrastText","setTheme","subTheme","createMuiTheme","colors","onChangeComplete","c","hex","ThemeProvider","dark","Fab","Add","colorContainer","colorDot","borderRadius","Theme","tApp","themes","defaultTheme","home_view_method","share_view_method","themeConfig","setThemeConfig","themeConfigError","setThemeConfigError","setCreate","JSON","parse","themeString","stringify","Table","TableHead","TableRow","TableCell","TableBody","scope","helperText","onBlur","length","themeCopy","resStr","deleteTheme","Delete","Alert","severity","Link","href","newTheme","ImageSetting","gravatar_server","avatar_path","avatar_size","avatar_size_l","avatar_size_m","avatar_size_s","thumb_width","thumb_height","office_preview_service","thumb_file_suffix","thumb_max_task_count","thumb_encode_method","thumb_gc_after_gen","thumb_encode_quality","cardContainer","cover","card","flex","bg","dialogFooter","policies","img","AddPolicy","tCommon","dividers","sm","Card","CardActionArea","CardMedia","image","CardContent","tableContainer","header","headerRight","columns","align","Policy","setPolicies","statics","setStatics","page","setPage","pageSize","setPageSize","total","setTotal","addDialog","setAddDialog","filter","setFilter","anchorEl","setAnchorEl","editID","setEditID","query","URLSearchParams","search","handleClose","loadList","page_size","order_by","conditions","Boolean","TableContainer","column","row","hover","Type","toLocaleString","sizeToString","delete","currentTarget","Edit","TablePagination","rowsPerPageOptions","count","rowsPerPage","onChangePage","p","onChangeRowsPerPage","keepMounted","DomainInput","domain","setDomain","protocol","setProtocol","replace","startAdornment","magicVars","example","fileOnly","MagicVar","isFile","isSlave","m","stepContent","subStepContainer","stepNumber","light","stepNumberContainer","stepFooter","viewButtonLabel","textTransform","code","fontFamily","steps","optional","COSGuide","props","activeStep","setActiveStep","Set","skipped","setSkipped","magicVar","setMagicVar","useCDN","setUseCDN","policy","SecretKey","AccessKey","BaseURL","Server","IsPrivate","DirNameRule","AutoRename","FileNameRule","IsOriginLinkEnable","MaxSize","OptionsSerialized","file_type","placeholder_with_size","setPolicy","policyID","setPolicyID","region","setRegion","handleOptionChange","Stepper","index","stepProps","labelProps","has","completed","Step","StepLabel","subStepContent","pattern","BucketName","RadioGroup","Radio","Collapse","in","getNumber","stepContental","policyCopy","parseInt","chunk_size","split","prevActiveStep","prevSkipped","newSkipped","values","add","LocalGuide","OneDriveGuide","od_proxy","od_driver","useSharePoint","setUseSharePoint","od_redirect","tps_limit","tps_limit_burst","httpsAlert","setHttpsAlert","URL","url","placeholder","parseFloat","OSSGuide","server_side_endpoint","useLanEndpoint","setUseLanEndpoint","submitPolicy","RemoteGuide","mimetype","pre","overflow","randomStr","minlength","server","secret","UpyunGuide","token","regions","S3Guide","alertOpen","setAlertOpen","Autocomplete","freeSolo","onInputChange","_","renderOption","renderInput","params","AddPolicyParent","useParams","EditPro","EditPolicyPreload","setType","mode","join","tDashboard","PolicyList","pid","MaxStorage","GroupForm","group","ShareEnabled","WebDAVEnabled","SpeedLimit","share_download","aria2_options","compress_size","decompress_size","source_batch","aria2_batch","setGroup","handleOptionCheckChange","groupCopy","one_time_download","aria2","archive_download","archive_task","EditGroupPreload","UserFilter","setSearch","group_id","status","setInput","keywords","setKeywords","nick","email","highlight","visuallyHidden","border","clip","top","setUsers","orderBy","setOrderBy","filterDialog","setFilterDialog","selected","setSelected","searches","isSelected","indexOf","alignSelf","Badge","invisible","FilterList","num","Checkbox","indeterminate","newSelecteds","n","TableSortLabel","role","selectedIndex","newSelected","concat","slice","handleClick","Nick","Email","Status","success","Block","UserForm","Password","GroupID","setUser","userCopy","password","EditUserPreload","FileFilter","policy_id","user_id","disabledBadge","File","setFiles","deleteBatch","force","DeleteForever","UploadSessionID","Size","UserID","formatLocalTime","CreatedAt","ShareFilter","is_dir","source_name","setShares","ids","setIds","wordBreak","SourceName","Views","Downloads","RemainDownloads","Aria2Helper","RouterLink","Download","downloads","setDownloads","helperOpen","setHelperOpen","Source","NodeID","TotalSize","Task","tasks","setTasks","getTaskType","getTaskStatus","getTaskProgress","Progress","getError","Error","userSelect","Import","userInput","dst","recursive","selectRemote","setSelectRemote","selectLocal","setSelectLocal","debouncedSearchTerm","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","setMoveTarget","setter","folder","openPathSelector","isSrcSelect","PathSelector","presentPath","api","onSelect","uid","onDelete","Popper","placement","TransitionProps","Fade","timeout","u","selectUser","Captcha","captcha_type","captcha_height","captcha_width","captcha_mode","captcha_CaptchaLen","captcha_ComplexOfNoiseText","captcha_ComplexOfNoiseDot","captcha_IsShowHollowLine","captcha_IsShowNoiseDot","captcha_IsShowNoiseText","captcha_IsShowSlimeLine","captcha_IsShowSineLine","captcha_ReCaptchaKey","captcha_ReCaptchaSecret","captcha_TCaptcha_CaptchaAppId","captcha_TCaptcha_AppSecretKey","captcha_TCaptcha_SecretId","captcha_TCaptcha_SecretKey","disabledCell","verticalAlign","features","Node","nodes","setNodes","isActive","setIsActive","minWidthclassNames","classNames","getStatusBadge","Box","CheckCircle","Cancel","node","feature","desired","PlayArrow","Pause","Communication","SlaveKey","handleTextChange","Aria2RPC","Aria2Enabled","Aria2OptionsSerialized","interval","rpc","onBack","Metainfo","Rank","Completed","slaveOnly","NodeGuide","MasterKey","setNode","usedSteps","useMemo","nodeCopy","nextStep","AddNode","EditNode","createTheme","overrides","MuiButton","MuiTab","zhCN","Admin","show","setShow","Auth","GetUser","CssBaseline","exact"],"mappings":"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","file":"static/js/11.c88dc692.chunk.js","sourcesContent":["import { withStyles } from \"@material-ui/core\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { lighten, makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {\r\n    Assignment,\r\n    Category,\r\n    CloudDownload,\r\n    Contacts,\r\n    Group,\r\n    Home,\r\n    Image,\r\n    InsertDriveFile,\r\n    Language,\r\n    ListAlt,\r\n    Mail,\r\n    Palette,\r\n    Person,\r\n    Settings,\r\n    SettingsEthernet,\r\n    Share,\r\n    Storage,\r\n    Contactless,\r\n} from \"@material-ui/icons\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport clsx from \"clsx\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport { changeSubTitle } from \"../../redux/viewUpdate/action\";\r\nimport pathHelper from \"../../utils/page\";\r\nimport UserAvatar from \"../Navbar/UserAvatar\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst ExpansionPanel = withStyles({\r\n    root: {\r\n        maxWidth: \"100%\",\r\n        boxShadow: \"none\",\r\n        \"&:not(:last-child)\": {\r\n            borderBottom: 0,\r\n        },\r\n        \"&:before\": {\r\n            display: \"none\",\r\n        },\r\n        \"&$expanded\": { margin: 0 },\r\n    },\r\n    expanded: {},\r\n})(MuiExpansionPanel);\r\n\r\nconst ExpansionPanelSummary = withStyles({\r\n    root: {\r\n        minHeight: 0,\r\n        padding: 0,\r\n\r\n        \"&$expanded\": {\r\n            minHeight: 0,\r\n        },\r\n    },\r\n    content: {\r\n        maxWidth: \"100%\",\r\n        margin: 0,\r\n        display: \"block\",\r\n        \"&$expanded\": {\r\n            margin: \"0\",\r\n        },\r\n    },\r\n    expanded: {},\r\n})(MuiExpansionPanelSummary);\r\n\r\nconst ExpansionPanelDetails = withStyles((theme) => ({\r\n    root: {\r\n        display: \"block\",\r\n        padding: theme.spacing(0),\r\n    },\r\n}))(MuiExpansionPanelDetails);\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create([\"width\", \"margin\"], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create([\"width\", \"margin\"], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    hide: {\r\n        display: \"none\",\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: \"nowrap\",\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create(\"width\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create(\"width\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: \"hidden\",\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            width: theme.spacing(9) + 1,\r\n        },\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    toolbar: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-end\",\r\n        padding: theme.spacing(0, 1),\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n    sub: {\r\n        paddingLeft: 36,\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    subMenu: {\r\n        backgroundColor: theme.palette.background.default,\r\n        paddingTop: 0,\r\n        paddingBottom: 0,\r\n    },\r\n    active: {\r\n        backgroundColor: lighten(theme.palette.primary.main, 0.8),\r\n        color: theme.palette.primary.main,\r\n        \"&:hover\": {\r\n            backgroundColor: lighten(theme.palette.primary.main, 0.7),\r\n        },\r\n    },\r\n    activeText: {\r\n        fontWeight: 500,\r\n    },\r\n    activeIcon: {\r\n        color: theme.palette.primary.main,\r\n    },\r\n}));\r\n\r\nconst items = [\r\n    {\r\n        title: \"nav.summary\",\r\n        icon: <Home />,\r\n        path: \"home\",\r\n    },\r\n    {\r\n        title: \"nav.settings\",\r\n        icon: <Settings />,\r\n        sub: [\r\n            {\r\n                title: \"nav.basicSetting\",\r\n                path: \"basic\",\r\n                icon: <Language />,\r\n            },\r\n            {\r\n                title: \"nav.publicAccess\",\r\n                path: \"access\",\r\n                icon: <Contacts />,\r\n            },\r\n            {\r\n                title: \"nav.email\",\r\n                path: \"mail\",\r\n                icon: <Mail />,\r\n            },\r\n            {\r\n                title: \"nav.transportation\",\r\n                path: \"upload\",\r\n                icon: <SettingsEthernet />,\r\n            },\r\n            {\r\n                title: \"nav.appearance\",\r\n                path: \"theme\",\r\n                icon: <Palette />,\r\n            },\r\n            {\r\n                title: \"nav.image\",\r\n                path: \"image\",\r\n                icon: <Image />,\r\n            },\r\n            {\r\n                title: \"nav.captcha\",\r\n                path: \"captcha\",\r\n                icon: <Category />,\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        title: \"nav.storagePolicy\",\r\n        icon: <Storage />,\r\n        path: \"policy\",\r\n    },\r\n    {\r\n        title: \"nav.nodes\",\r\n        icon: <Contactless />,\r\n        path: \"node\",\r\n    },\r\n    {\r\n        title: \"nav.groups\",\r\n        icon: <Group />,\r\n        path: \"group\",\r\n    },\r\n    {\r\n        title: \"nav.users\",\r\n        icon: <Person />,\r\n        path: \"user\",\r\n    },\r\n    {\r\n        title: \"nav.files\",\r\n        icon: <InsertDriveFile />,\r\n        path: \"file\",\r\n    },\r\n    {\r\n        title: \"nav.shares\",\r\n        icon: <Share />,\r\n        path: \"share\",\r\n    },\r\n    {\r\n        title: \"nav.tasks\",\r\n        icon: <Assignment />,\r\n        sub: [\r\n            {\r\n                title: \"nav.remoteDownload\",\r\n                path: \"download\",\r\n                icon: <CloudDownload />,\r\n            },\r\n            {\r\n                title: \"nav.generalTasks\",\r\n                path: \"task\",\r\n                icon: <ListAlt />,\r\n            },\r\n        ],\r\n    },\r\n];\r\n\r\nexport default function Dashboard({ content }) {\r\n    const { t } = useTranslation(\"dashboard\");\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = useState(!pathHelper.isMobile());\r\n    const [menuOpen, setMenuOpen] = useState(null);\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const SetSubTitle = useCallback(\r\n        (title) => dispatch(changeSubTitle(title)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        SetSubTitle(t(\"nav.title\"));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            SetSubTitle();\r\n        };\r\n    }, []);\r\n\r\n    const { path } = useRouteMatch();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, {\r\n                            [classes.hide]: open,\r\n                        })}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" className={classes.title} noWrap>\r\n                        {t(\"nav.dashboard\")}\r\n                    </Typography>\r\n                    <UserAvatar />\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                className={clsx(classes.drawer, {\r\n                    [classes.drawerOpen]: open,\r\n                    [classes.drawerClose]: !open,\r\n                })}\r\n                classes={{\r\n                    paper: clsx({\r\n                        [classes.drawerOpen]: open,\r\n                        [classes.drawerClose]: !open,\r\n                    }),\r\n                }}\r\n            >\r\n                <div className={classes.toolbar}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === \"rtl\" ? (\r\n                            <ChevronRightIcon />\r\n                        ) : (\r\n                            <ChevronLeftIcon />\r\n                        )}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List className={classes.noPadding}>\r\n                    {items.map((item) => {\r\n                        if (item.path !== undefined) {\r\n                            return (\r\n                                <ListItem\r\n                                    onClick={() =>\r\n                                        history.push(\"/admin/\" + item.path)\r\n                                    }\r\n                                    button\r\n                                    className={clsx({\r\n                                        [classes.active]: location.pathname.startsWith(\r\n                                            \"/admin/\" + item.path\r\n                                        ),\r\n                                    })}\r\n                                    key={item.title}\r\n                                >\r\n                                    <ListItemIcon\r\n                                        className={clsx({\r\n                                            [classes.activeIcon]: location.pathname.startsWith(\r\n                                                \"/admin/\" + item.path\r\n                                            ),\r\n                                        })}\r\n                                    >\r\n                                        {item.icon}\r\n                                    </ListItemIcon>\r\n                                    <ListItemText\r\n                                        className={clsx({\r\n                                            [classes.activeText]: location.pathname.startsWith(\r\n                                                \"/admin/\" + item.path\r\n                                            ),\r\n                                        })}\r\n                                        primary={t(item.title)}\r\n                                    />\r\n                                </ListItem>\r\n                            );\r\n                        }\r\n                        return (\r\n                            <ExpansionPanel\r\n                                key={item.title}\r\n                                square\r\n                                expanded={menuOpen === item.title}\r\n                                onChange={(event, isExpanded) => {\r\n                                    setMenuOpen(isExpanded ? item.title : null);\r\n                                }}\r\n                            >\r\n                                <ExpansionPanelSummary\r\n                                    aria-controls=\"panel1d-content\"\r\n                                    id=\"panel1d-header\"\r\n                                >\r\n                                    <ListItem button key={item.title}>\r\n                                        <ListItemIcon>{item.icon}</ListItemIcon>\r\n                                        <ListItemText primary={t(item.title)} />\r\n                                    </ListItem>\r\n                                </ExpansionPanelSummary>\r\n                                <ExpansionPanelDetails>\r\n                                    <List className={classes.subMenu}>\r\n                                        {item.sub.map((sub) => (\r\n                                            <ListItem\r\n                                                onClick={() =>\r\n                                                    history.push(\r\n                                                        \"/admin/\" + sub.path\r\n                                                    )\r\n                                                }\r\n                                                className={clsx({\r\n                                                    [classes.sub]: open,\r\n                                                    [classes.active]: location.pathname.startsWith(\r\n                                                        \"/admin/\" + sub.path\r\n                                                    ),\r\n                                                })}\r\n                                                button\r\n                                                key={sub.title}\r\n                                            >\r\n                                                <ListItemIcon\r\n                                                    className={clsx({\r\n                                                        [classes.activeIcon]: location.pathname.startsWith(\r\n                                                            \"/admin/\" + sub.path\r\n                                                        ),\r\n                                                    })}\r\n                                                >\r\n                                                    {sub.icon}\r\n                                                </ListItemIcon>\r\n                                                <ListItemText\r\n                                                    primary={t(sub.title)}\r\n                                                />\r\n                                            </ListItem>\r\n                                        ))}\r\n                                    </List>\r\n                                </ExpansionPanelDetails>\r\n                            </ExpansionPanel>\r\n                        );\r\n                    })}\r\n                </List>\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar} />\r\n                {content(path)}\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n","import Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { blue, green, red, yellow } from \"@material-ui/core/colors\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {\r\n    Description,\r\n    Favorite,\r\n    FileCopy,\r\n    Forum,\r\n    GitHub,\r\n    Home,\r\n    Launch,\r\n    Lock,\r\n    People,\r\n    Public,\r\n    Telegram,\r\n} from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n    CartesianGrid,\r\n    Legend,\r\n    Line,\r\n    LineChart,\r\n    Tooltip,\r\n    XAxis,\r\n    YAxis,\r\n} from \"recharts\";\r\nimport { ResponsiveContainer } from \"recharts/lib/component/ResponsiveContainer\";\r\nimport TimeAgo from \"timeago-react\";\r\nimport { toggleSnackbar } from \"../../redux/explorer\";\r\nimport API from \"../../middleware/Api\";\r\nimport pathHelper from \"../../utils/page\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        padding: theme.spacing(3),\r\n        height: \"100%\",\r\n    },\r\n    logo: {\r\n        width: 70,\r\n    },\r\n    logoContainer: {\r\n        padding: theme.spacing(3),\r\n        display: \"flex\",\r\n    },\r\n    title: {\r\n        marginLeft: 16,\r\n    },\r\n    cloudreve: {\r\n        fontSize: 25,\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    version: {\r\n        color: theme.palette.text.hint,\r\n    },\r\n    links: {\r\n        padding: theme.spacing(3),\r\n    },\r\n    iconRight: {\r\n        minWidth: 0,\r\n    },\r\n    userIcon: {\r\n        backgroundColor: blue[100],\r\n        color: blue[600],\r\n    },\r\n    fileIcon: {\r\n        backgroundColor: yellow[100],\r\n        color: yellow[800],\r\n    },\r\n    publicIcon: {\r\n        backgroundColor: green[100],\r\n        color: green[800],\r\n    },\r\n    secretIcon: {\r\n        backgroundColor: red[100],\r\n        color: red[800],\r\n    },\r\n}));\r\n\r\nexport default function Index() {\r\n    const { t } = useTranslation(\"dashboard\");\r\n    const classes = useStyles();\r\n    const [lineData, setLineData] = useState([]);\r\n    const [news, setNews] = useState([]);\r\n    const [newsUsers, setNewsUsers] = useState({});\r\n    const [open, setOpen] = React.useState(false);\r\n    const [siteURL, setSiteURL] = React.useState(\"\");\r\n    const [statistics, setStatistics] = useState({\r\n        fileTotal: 0,\r\n        userTotal: 0,\r\n        publicShareTotal: 0,\r\n        secretShareTotal: 0,\r\n    });\r\n    const [version, setVersion] = useState({\r\n        backend: \"-\",\r\n    });\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const ResetSiteURL = () => {\r\n        setOpen(false);\r\n        API.patch(\"/admin/setting\", {\r\n            options: [\r\n                {\r\n                    key: \"siteURL\",\r\n                    value: window.location.origin,\r\n                },\r\n            ],\r\n        })\r\n            .then(() => {\r\n                setSiteURL(window.location.origin);\r\n                ToggleSnackbar(\"top\", \"right\", t(\"settings.saved\"), \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        API.get(\"/admin/summary\")\r\n            .then((response) => {\r\n                const data = [];\r\n                response.data.date.forEach((v, k) => {\r\n                    data.push({\r\n                        name: v,\r\n                        file: response.data.files[k],\r\n                        user: response.data.users[k],\r\n                        share: response.data.shares[k],\r\n                    });\r\n                });\r\n                setLineData(data);\r\n                setStatistics({\r\n                    fileTotal: response.data.fileTotal,\r\n                    userTotal: response.data.userTotal,\r\n                    publicShareTotal: response.data.publicShareTotal,\r\n                    secretShareTotal: response.data.secretShareTotal,\r\n                });\r\n                setVersion(response.data.version);\r\n                setSiteURL(response.data.siteURL);\r\n                if (\r\n                    response.data.siteURL === \"\" ||\r\n                    response.data.siteURL !== window.location.origin\r\n                ) {\r\n                    setOpen(true);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n\r\n        axios\r\n            .get(\"/api/v3/admin/news?tag=\" + t(\"summary.newsTag\"))\r\n            .then((response) => {\r\n                setNews(response.data.data);\r\n                const res = {};\r\n                response.data.included.forEach((v) => {\r\n                    if (v.type === \"users\") {\r\n                        res[v.id] = v.attributes;\r\n                    }\r\n                });\r\n                setNewsUsers(res);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    t(\"summary.newsletterError\"),\r\n                    \"warning\"\r\n                );\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <Grid container spacing={3}>\r\n            <Dialog\r\n                open={open}\r\n                onClose={() => setOpen(false)}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {t(\"summary.confirmSiteURLTitle\")}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        <Typography>\r\n                            {siteURL === \"\" &&\r\n                                t(\"summary.siteURLNotSet\", {\r\n                                    current: window.location.origin,\r\n                                })}\r\n                            {siteURL !== \"\" &&\r\n                                t(\"summary.siteURLNotMatch\", {\r\n                                    current: window.location.origin,\r\n                                })}\r\n                        </Typography>\r\n                        <Typography>\r\n                            {t(\"summary.siteURLDescription\")}\r\n                        </Typography>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setOpen(false)} color=\"default\">\r\n                        {t(\"summary.ignore\")}\r\n                    </Button>\r\n                    <Button onClick={() => ResetSiteURL()} color=\"primary\">\r\n                        {t(\"summary.changeIt\")}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Grid alignContent={\"stretch\"} item xs={12} md={8} lg={9}>\r\n                <Paper className={classes.paper}>\r\n                    <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n                        {t(\"summary.trend\")}\r\n                    </Typography>\r\n                    <ResponsiveContainer\r\n                        width=\"100%\"\r\n                        aspect={pathHelper.isMobile() ? 4.0 / 3.0 : 3.0 / 1.0}\r\n                    >\r\n                        <LineChart width={1200} height={300} data={lineData}>\r\n                            <CartesianGrid strokeDasharray=\"3 3\" />\r\n                            <XAxis dataKey=\"name\" />\r\n                            <YAxis />\r\n                            <Tooltip />\r\n                            <Legend />\r\n                            <Line\r\n                                name={t(\"nav.files\")}\r\n                                type=\"monotone\"\r\n                                dataKey=\"file\"\r\n                                stroke=\"#3f51b5\"\r\n                            />\r\n                            <Line\r\n                                name={t(\"nav.users\")}\r\n                                type=\"monotone\"\r\n                                dataKey=\"user\"\r\n                                stroke=\"#82ca9d\"\r\n                            />\r\n                            <Line\r\n                                name={t(\"nav.shares\")}\r\n                                type=\"monotone\"\r\n                                dataKey=\"share\"\r\n                                stroke=\"#e91e63\"\r\n                            />\r\n                        </LineChart>\r\n                    </ResponsiveContainer>\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} md={4} lg={3}>\r\n                <Paper className={classes.paper}>\r\n                    <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n                        {t(\"summary.summary\")}\r\n                    </Typography>\r\n                    <Divider />\r\n                    <List className={classes.root}>\r\n                        <ListItem>\r\n                            <ListItemAvatar>\r\n                                <Avatar className={classes.userIcon}>\r\n                                    <People />\r\n                                </Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText\r\n                                primary={statistics.userTotal}\r\n                                secondary={t(\"summary.totalUsers\")}\r\n                            />\r\n                        </ListItem>\r\n                        <ListItem>\r\n                            <ListItemAvatar>\r\n                                <Avatar className={classes.fileIcon}>\r\n                                    <FileCopy />\r\n                                </Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText\r\n                                primary={statistics.fileTotal}\r\n                                secondary={t(\"summary.totalFiles\")}\r\n                            />\r\n                        </ListItem>\r\n                        <ListItem>\r\n                            <ListItemAvatar>\r\n                                <Avatar className={classes.publicIcon}>\r\n                                    <Public />\r\n                                </Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText\r\n                                primary={statistics.publicShareTotal}\r\n                                secondary={t(\"summary.publicShares\")}\r\n                            />\r\n                        </ListItem>\r\n                        <ListItem>\r\n                            <ListItemAvatar>\r\n                                <Avatar className={classes.secretIcon}>\r\n                                    <Lock />\r\n                                </Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText\r\n                                primary={statistics.secretShareTotal}\r\n                                secondary={t(\"summary.privateShares\")}\r\n                            />\r\n                        </ListItem>\r\n                    </List>\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} md={4} lg={3}>\r\n                <Paper>\r\n                    <div className={classes.logoContainer}>\r\n                        <img\r\n                            alt=\"Tsuki\"\r\n                            className={classes.logo}\r\n                            src={\"/static/img/cloudreve.svg\"}\r\n                        />\r\n                        <div className={classes.title}>\r\n                            <Typography className={classes.cloudreve}>\r\n                                Tsuki\r\n                            </Typography>\r\n                            <Typography className={classes.version}>\r\n                                {version.backend}{\" \"}\r\n                                {version.is_pro === \"true\" && (\r\n                                    <Chip size=\"small\" label=\"Pro\" />\r\n                                )}\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n                    <Divider />\r\n                    <div>\r\n                        <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n                            <ListItem\r\n                                button\r\n                                onClick={() =>\r\n                                    window.open(\"https://tsuki.icu\")\r\n                                }\r\n                            >\r\n                                <ListItemIcon>\r\n                                    <Home />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t(\"summary.homepage\")} />\r\n                                <ListItemIcon className={classes.iconRight}>\r\n                                    <Launch />\r\n                                </ListItemIcon>\r\n                            </ListItem>\r\n                            <ListItem\r\n                                button\r\n                                onClick={() =>\r\n                                    window.open(\r\n                                        \"https://tsuki.icu\"\r\n                                    )\r\n                                }\r\n                            >\r\n                                <ListItemIcon>\r\n                                    <GitHub />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"GitHub\" />\r\n                                <ListItemIcon className={classes.iconRight}>\r\n                                    <Launch />\r\n                                </ListItemIcon>\r\n                            </ListItem>\r\n                            <ListItem\r\n                                button\r\n                                onClick={() =>\r\n                                    window.open(\"https://tsuki.icu\")\r\n                                }\r\n                            >\r\n                                <ListItemIcon>\r\n                                    <Description />\r\n                                </ListItemIcon>\r\n                                <ListItemText\r\n                                    primary={t(\"summary.documents\")}\r\n                                />\r\n                                <ListItemIcon className={classes.iconRight}>\r\n                                    <Launch />\r\n                                </ListItemIcon>\r\n                            </ListItem>\r\n                            <ListItem\r\n                                button\r\n                                onClick={() =>\r\n                                    window.open(t(\"summary.forumLink\"))\r\n                                }\r\n                            >\r\n                                <ListItemIcon>\r\n                                    <Forum />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t(\"summary.forum\")} />\r\n                                <ListItemIcon className={classes.iconRight}>\r\n                                    <Launch />\r\n                                </ListItemIcon>\r\n                            </ListItem>\r\n                            <ListItem\r\n                                button\r\n                                onClick={() =>\r\n                                    window.open(t(\"summary.telegramGroupLink\"))\r\n                                }\r\n                            >\r\n                                <ListItemIcon>\r\n                                    <Telegram />\r\n                                </ListItemIcon>\r\n                                <ListItemText\r\n                                    primary={t(\"summary.telegramGroup\")}\r\n                                />\r\n                                <ListItemIcon className={classes.iconRight}>\r\n                                    <Launch />\r\n                                </ListItemIcon>\r\n                            </ListItem>\r\n                            <ListItem\r\n                                button\r\n                                onClick={() =>\r\n                                    window.open(\"https://tsuki.icu\")\r\n                                }\r\n                            >\r\n                                <ListItemIcon style={{ color: \"#ff789d\" }}>\r\n                                    <Favorite />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t(\"summary.buyPro\")} />\r\n                                <ListItemIcon className={classes.iconRight}>\r\n                                    <Launch />\r\n                                </ListItemIcon>\r\n                            </ListItem>\r\n                        </List>\r\n                    </div>\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} md={8} lg={9}>\r\n                <Paper className={classes.paper}>\r\n                    <List>\r\n                        {news &&\r\n                            news.map((v) => (\r\n                                <>\r\n                                    <ListItem\r\n                                        button\r\n                                        alignItems=\"flex-start\"\r\n                                        onClick={() =>\r\n                                            window.open(\r\n                                                \"https://tsuki.icu\" +\r\n                                                    v.id\r\n                                            )\r\n                                        }\r\n                                    >\r\n                                        <ListItemAvatar>\r\n                                            <Avatar\r\n                                                alt=\"Travis Howard\"\r\n                                                src={\r\n                                                    newsUsers[\r\n                                                        v.relationships\r\n                                                            .startUser.data.id\r\n                                                    ] &&\r\n                                                    newsUsers[\r\n                                                        v.relationships\r\n                                                            .startUser.data.id\r\n                                                    ].avatarUrl\r\n                                                }\r\n                                            />\r\n                                        </ListItemAvatar>\r\n                                        <ListItemText\r\n                                            primary={v.attributes.title}\r\n                                            secondary={\r\n                                                <React.Fragment>\r\n                                                    <Typography\r\n                                                        component=\"span\"\r\n                                                        variant=\"body2\"\r\n                                                        className={\r\n                                                            classes.inline\r\n                                                        }\r\n                                                        color=\"textPrimary\"\r\n                                                    >\r\n                                                        {newsUsers[\r\n                                                            v.relationships\r\n                                                                .startUser.data\r\n                                                                .id\r\n                                                        ] &&\r\n                                                            newsUsers[\r\n                                                                v.relationships\r\n                                                                    .startUser\r\n                                                                    .data.id\r\n                                                            ].username}{\" \"}\r\n                                                    </Typography>\r\n                                                    <Trans\r\n                                                        ns={\"dashboard\"}\r\n                                                        i18nKey=\"summary.publishedAt\"\r\n                                                        components={[\r\n                                                            <TimeAgo\r\n                                                                key={0}\r\n                                                                datetime={\r\n                                                                    v.attributes\r\n                                                                        .startTime\r\n                                                                }\r\n                                                                locale={t(\r\n                                                                    \"timeAgoLocaleCode\",\r\n                                                                    {\r\n                                                                        ns:\r\n                                                                            \"common\",\r\n                                                                    }\r\n                                                                )}\r\n                                                            />,\r\n                                                        ]}\r\n                                                    />\r\n                                                </React.Fragment>\r\n                                            }\r\n                                        />\r\n                                    </ListItem>\r\n                                    <Divider />\r\n                                </>\r\n                            ))}\r\n                    </List>\r\n                </Paper>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../redux/explorer\";\r\nimport API from \"../../../middleware/Api\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function SiteInformation() {\r\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"settings\" });\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false);\r\n    const [options, setOptions] = useState({\r\n        siteURL: \"\",\r\n        siteName: \"\",\r\n        siteTitle: \"\",\r\n        siteDes: \"\",\r\n        siteScript: \"\",\r\n        pwa_small_icon: \"\",\r\n        pwa_medium_icon: \"\",\r\n        pwa_large_icon: \"\",\r\n        pwa_display: \"\",\r\n        pwa_theme_color: \"\",\r\n        pwa_background_color: \"\",\r\n    });\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setOptions({\r\n            ...options,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        API.post(\"/admin/setting\", {\r\n            keys: Object.keys(options),\r\n        })\r\n            .then((response) => {\r\n                setOptions(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const option = [];\r\n        Object.keys(options).forEach((k) => {\r\n            option.push({\r\n                key: k,\r\n                value: options[k],\r\n            });\r\n        });\r\n        API.patch(\"/admin/setting\", {\r\n            options: option,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\"top\", \"right\", t(\"saved\"), \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={submit}>\r\n                <div className={classes.root}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        {t(\"basicInformation\")}\r\n                    </Typography>\r\n                    <div className={classes.formContainer}>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    {t(\"mainTitle\")}\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.siteName}\r\n                                    onChange={handleChange(\"siteName\")}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"mainTitleDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    {t(\"subTitle\")}\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.siteTitle}\r\n                                    onChange={handleChange(\"siteTitle\")}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"subTitleDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    {t(\"siteDescription\")}\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.siteDes}\r\n                                    onChange={handleChange(\"siteDes\")}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"siteDescriptionDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    {t(\"siteURL\")}\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"url\"}\r\n                                    value={options.siteURL}\r\n                                    onChange={handleChange(\"siteURL\")}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"siteURLDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    {t(\"customFooterHTML\")}\r\n                                </InputLabel>\r\n                                <Input\r\n                                    multiline\r\n                                    value={options.siteScript}\r\n                                    onChange={handleChange(\"siteScript\")}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"customFooterHTMLDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.root}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        {t(\"pwa\")}\r\n                    </Typography>\r\n                    <div className={classes.formContainer}>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    {t(\"smallIcon\")}\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.pwa_small_icon}\r\n                                    onChange={handleChange(\"pwa_small_icon\")}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"smallIconDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    {t(\"mediumIcon\")}\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.pwa_medium_icon}\r\n                                    onChange={handleChange(\"pwa_medium_icon\")}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"mediumIconDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    {t(\"largeIcon\")}\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.pwa_large_icon}\r\n                                    onChange={handleChange(\"pwa_large_icon\")}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"largeIconDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    {t(\"displayMode\")}\r\n                                </InputLabel>\r\n                                <Select\r\n                                    value={options.pwa_display}\r\n                                    onChange={handleChange(\"pwa_display\")}\r\n                                >\r\n                                    <MenuItem value={\"fullscreen\"}>\r\n                                        fullscreen\r\n                                    </MenuItem>\r\n                                    <MenuItem value={\"standalone\"}>\r\n                                        standalone\r\n                                    </MenuItem>\r\n                                    <MenuItem value={\"minimal-ui\"}>\r\n                                        minimal-ui\r\n                                    </MenuItem>\r\n                                    <MenuItem value={\"browser\"}>\r\n                                        browser\r\n                                    </MenuItem>\r\n                                </Select>\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"displayModeDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    {t(\"themeColor\")}\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.pwa_theme_color}\r\n                                    onChange={handleChange(\"pwa_theme_color\")}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"themeColorDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.formContainer}>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    {t(\"backgroundColor\")}\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.pwa_background_color}\r\n                                    onChange={handleChange(\r\n                                        \"pwa_background_color\"\r\n                                    )}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"backgroundColorDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.root}>\r\n                    <Button\r\n                        disabled={loading}\r\n                        type={\"submit\"}\r\n                        variant={\"contained\"}\r\n                        color={\"primary\"}\r\n                    >\r\n                        {t(\"save\")}\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nexport default function AlertDialog({ title, msg, open, onClose }) {\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={onClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    <Typography>{msg}</Typography>\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={onClose} color=\"primary\">\r\n                    知道了\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../redux/explorer\";\r\nimport API from \"../../../middleware/Api\";\r\nimport AlertDialog from \"../Dialogs/Alert\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function Access() {\r\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"settings\" });\r\n    const { t: tVas } = useTranslation(\"dashboard\", { keyPrefix: \"vas\" });\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false);\r\n    const [options, setOptions] = useState({\r\n        register_enabled: \"1\",\r\n        default_group: \"1\",\r\n        email_active: \"0\",\r\n        login_captcha: \"0\",\r\n        reg_captcha: \"0\",\r\n        forget_captcha: \"0\",\r\n        authn_enabled: \"0\",\r\n    });\r\n    const [siteURL, setSiteURL] = useState(\"\");\r\n    const [groups, setGroups] = useState([]);\r\n    const [httpAlert, setHttpAlert] = useState(false);\r\n\r\n    const handleChange = (name) => (event) => {\r\n        let value = event.target.value;\r\n        if (event.target.checked !== undefined) {\r\n            value = event.target.checked ? \"1\" : \"0\";\r\n        }\r\n        setOptions({\r\n            ...options,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    const handleInputChange = (name) => (event) => {\r\n        const value = event.target.value;\r\n        setOptions({\r\n            ...options,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        API.post(\"/admin/setting\", {\r\n            keys: [...Object.keys(options), \"siteURL\"],\r\n        })\r\n            .then((response) => {\r\n                setSiteURL(response.data.siteURL);\r\n                delete response.data.siteURL;\r\n                setOptions(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n\r\n        API.get(\"/admin/groups\")\r\n            .then((response) => {\r\n                setGroups(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const option = [];\r\n        Object.keys(options).forEach((k) => {\r\n            option.push({\r\n                key: k,\r\n                value: options[k],\r\n            });\r\n        });\r\n        API.patch(\"/admin/setting\", {\r\n            options: option,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\"top\", \"right\", t(\"saved\"), \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <AlertDialog\r\n                title={t(\"hint\")}\r\n                msg={t(\"webauthnNoHttps\")}\r\n                onClose={() => setHttpAlert(false)}\r\n                open={httpAlert}\r\n            />\r\n            <form onSubmit={submit}>\r\n                <div className={classes.root}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        {t(\"accountManagement\")}\r\n                    </Typography>\r\n                    <div className={classes.formContainer}>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Switch\r\n                                            checked={\r\n                                                options.register_enabled === \"1\"\r\n                                            }\r\n                                            onChange={handleChange(\r\n                                                \"register_enabled\"\r\n                                            )}\r\n                                        />\r\n                                    }\r\n                                    label={t(\"allowNewRegistrations\")}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"allowNewRegistrationsDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Switch\r\n                                            checked={\r\n                                                options.email_active === \"1\"\r\n                                            }\r\n                                            onChange={handleChange(\r\n                                                \"email_active\"\r\n                                            )}\r\n                                        />\r\n                                    }\r\n                                    label={t(\"emailActivation\")}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"emailActivationDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Switch\r\n                                            checked={\r\n                                                options.reg_captcha === \"1\"\r\n                                            }\r\n                                            onChange={handleChange(\r\n                                                \"reg_captcha\"\r\n                                            )}\r\n                                        />\r\n                                    }\r\n                                    label={t(\"captchaForSignup\")}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"captchaForSignupDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Switch\r\n                                            checked={\r\n                                                options.login_captcha === \"1\"\r\n                                            }\r\n                                            onChange={handleChange(\r\n                                                \"login_captcha\"\r\n                                            )}\r\n                                        />\r\n                                    }\r\n                                    label={t(\"captchaForLogin\")}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"captchaForLoginDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Switch\r\n                                            checked={\r\n                                                options.forget_captcha === \"1\"\r\n                                            }\r\n                                            onChange={handleChange(\r\n                                                \"forget_captcha\"\r\n                                            )}\r\n                                        />\r\n                                    }\r\n                                    label={t(\"captchaForReset\")}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"captchaForResetDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Switch\r\n                                            checked={\r\n                                                options.authn_enabled === \"1\"\r\n                                            }\r\n                                            onChange={(e) => {\r\n                                                if (\r\n                                                    !siteURL.startsWith(\r\n                                                        \"https://\"\r\n                                                    )\r\n                                                ) {\r\n                                                    setHttpAlert(true);\r\n                                                    return;\r\n                                                }\r\n                                                handleChange(\"authn_enabled\")(\r\n                                                    e\r\n                                                );\r\n                                            }}\r\n                                        />\r\n                                    }\r\n                                    label={t(\"webauthn\")}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"webauthnDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    {t(\"defaultGroup\")}\r\n                                </InputLabel>\r\n                                <Select\r\n                                    value={options.default_group}\r\n                                    onChange={handleInputChange(\r\n                                        \"default_group\"\r\n                                    )}\r\n                                    required\r\n                                >\r\n                                    {groups.map((v) => {\r\n                                        if (v.ID === 3) {\r\n                                            return null;\r\n                                        }\r\n                                        return (\r\n                                            <MenuItem\r\n                                                key={v.ID}\r\n                                                value={v.ID.toString()}\r\n                                            >\r\n                                                {v.Name}\r\n                                            </MenuItem>\r\n                                        );\r\n                                    })}\r\n                                </Select>\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"defaultGroupDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.root}>\r\n                    <Button\r\n                        disabled={loading}\r\n                        type={\"submit\"}\r\n                        variant={\"contained\"}\r\n                        color={\"primary\"}\r\n                    >\r\n                        {t(\"save\")}\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../redux/explorer\";\r\nimport API from \"../../../middleware/Api\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n    buttonMargin: {\r\n        marginLeft: 8,\r\n    },\r\n}));\r\n\r\nexport default function Mail() {\r\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"settings\" });\r\n    const { t: tVas } = useTranslation(\"dashboard\", { keyPrefix: \"vas\" });\r\n    const { t: tGlobal } = useTranslation(\"common\");\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false);\r\n    const [test, setTest] = useState(false);\r\n    const [tesInput, setTestInput] = useState(\"\");\r\n    const [options, setOptions] = useState({\r\n        fromName: \"\",\r\n        fromAdress: \"\",\r\n        smtpHost: \"\",\r\n        smtpPort: \"\",\r\n        replyTo: \"\",\r\n        smtpUser: \"\",\r\n        smtpPass: \"\",\r\n        smtpEncryption: \"\",\r\n        mail_keepalive: \"30\",\r\n        mail_activation_template: \"\",\r\n        mail_reset_pwd_template: \"\",\r\n    });\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setOptions({\r\n            ...options,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const handleCheckChange = (name) => (event) => {\r\n        let value = event.target.value;\r\n        if (event.target.checked !== undefined) {\r\n            value = event.target.checked ? \"1\" : \"0\";\r\n        }\r\n        setOptions({\r\n            ...options,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        API.post(\"/admin/setting\", {\r\n            keys: Object.keys(options),\r\n        })\r\n            .then((response) => {\r\n                setOptions(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const sendTestMail = () => {\r\n        setLoading(true);\r\n        API.post(\"/admin/mailTest\", {\r\n            to: tesInput,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\"top\", \"right\", t(\"testMailSent\"), \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const reload = () => {\r\n        API.get(\"/admin/reload/email\")\r\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n            .then(() => {})\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n            .then(() => {});\r\n    };\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const option = [];\r\n        Object.keys(options).forEach((k) => {\r\n            option.push({\r\n                key: k,\r\n                value: options[k],\r\n            });\r\n        });\r\n        API.patch(\"/admin/setting\", {\r\n            options: option,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\"top\", \"right\", t(\"saved\"), \"success\");\r\n                reload();\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={test}\r\n                onClose={() => setTest(false)}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">\r\n                    {t(\"testSMTPSettings\")}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <Typography>{t(\"testSMTPTooltip\")}</Typography>\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label={t(\"recipient\")}\r\n                        value={tesInput}\r\n                        onChange={(e) => setTestInput(e.target.value)}\r\n                        type=\"email\"\r\n                        fullWidth\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setTest(false)} color=\"default\">\r\n                        {tGlobal(\"cancel\")}\r\n                    </Button>\r\n                    <Button\r\n                        onClick={() => sendTestMail()}\r\n                        disabled={loading}\r\n                        color=\"primary\"\r\n                    >\r\n                        {t(\"send\")}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <form onSubmit={submit}>\r\n                <div className={classes.root}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        {t(\"smtp\")}\r\n                    </Typography>\r\n\r\n                    <div className={classes.formContainer}>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    {t(\"senderName\")}\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.fromName}\r\n                                    onChange={handleChange(\"fromName\")}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"senderNameDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    {t(\"senderAddress\")}\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"email\"}\r\n                                    required\r\n                                    value={options.fromAdress}\r\n                                    onChange={handleChange(\"fromAdress\")}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"senderAddressDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    {t(\"smtpServer\")}\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.smtpHost}\r\n                                    onChange={handleChange(\"smtpHost\")}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"smtpServerDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    {t(\"smtpPort\")}\r\n                                </InputLabel>\r\n                                <Input\r\n                                    inputProps={{ min: 1, step: 1 }}\r\n                                    type={\"number\"}\r\n                                    value={options.smtpPort}\r\n                                    onChange={handleChange(\"smtpPort\")}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"smtpPortDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    {t(\"smtpUsername\")}\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.smtpUser}\r\n                                    onChange={handleChange(\"smtpUser\")}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"smtpUsernameDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    {t(\"smtpPassword\")}\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"password\"}\r\n                                    value={options.smtpPass}\r\n                                    onChange={handleChange(\"smtpPass\")}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"smtpPasswordDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    {t(\"replyToAddress\")}\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.replyTo}\r\n                                    onChange={handleChange(\"replyTo\")}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"replyToAddressDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Switch\r\n                                            checked={\r\n                                                options.smtpEncryption === \"1\"\r\n                                            }\r\n                                            onChange={handleCheckChange(\r\n                                                \"smtpEncryption\"\r\n                                            )}\r\n                                        />\r\n                                    }\r\n                                    label={t(\"enforceSSL\")}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"enforceSSLDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    {t(\"smtpTTL\")}\r\n                                </InputLabel>\r\n                                <Input\r\n                                    inputProps={{ min: 1, step: 1 }}\r\n                                    type={\"number\"}\r\n                                    value={options.mail_keepalive}\r\n                                    onChange={handleChange(\"mail_keepalive\")}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"smtpTTLDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.root}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        {t(\"emailTemplates\")}\r\n                    </Typography>\r\n\r\n                    <div className={classes.formContainer}>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    {t(\"activateNewUser\")}\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.mail_activation_template}\r\n                                    onChange={handleChange(\r\n                                        \"mail_activation_template\"\r\n                                    )}\r\n                                    multiline\r\n                                    rowsMax=\"10\"\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"activateNewUserDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    {t(\"resetPassword\")}\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.mail_reset_pwd_template}\r\n                                    onChange={handleChange(\r\n                                        \"mail_reset_pwd_template\"\r\n                                    )}\r\n                                    multiline\r\n                                    rowsMax=\"10\"\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"resetPasswordDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.root}>\r\n                    <Button\r\n                        disabled={loading}\r\n                        type={\"submit\"}\r\n                        variant={\"contained\"}\r\n                        color={\"primary\"}\r\n                    >\r\n                        {t(\"save\")}\r\n                    </Button>\r\n                    {\"   \"}\r\n                    <Button\r\n                        className={classes.buttonMargin}\r\n                        variant={\"outlined\"}\r\n                        color={\"primary\"}\r\n                        onClick={() => setTest(true)}\r\n                    >\r\n                        {t(\"sendTestEmail\")}\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","import FormControl from \"@material-ui/core/FormControl\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../redux/explorer\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\n\r\nconst unitTransform = (v) => {\r\n    if (!v || v.toString() === \"0\") {\r\n        return [0, 1024 * 1024];\r\n    }\r\n    for (let i = 4; i >= 0; i--) {\r\n        const base = Math.pow(1024, i);\r\n        if (v % base === 0) {\r\n            return [v / base, base];\r\n        }\r\n    }\r\n};\r\n\r\nexport default function SizeInput({\r\n    onChange,\r\n    min,\r\n    value,\r\n    required,\r\n    label,\r\n    max,\r\n    suffix,\r\n}) {\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const [unit, setUnit] = useState(1);\r\n    const [val, setVal] = useState(value);\r\n    const [err, setError] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        onChange({\r\n            target: {\r\n                value: (val * unit).toString(),\r\n            },\r\n        });\r\n        if (val * unit > max || val * unit < min) {\r\n            setError(\"不符合尺寸限制\");\r\n        } else {\r\n            setError(\"\");\r\n        }\r\n    }, [val, unit, max, min]);\r\n\r\n    useEffect(() => {\r\n        const res = unitTransform(value);\r\n        setUnit(res[1]);\r\n        setVal(res[0]);\r\n    }, []);\r\n\r\n    return (\r\n        <FormControl error={err !== \"\"}>\r\n            <InputLabel htmlFor=\"component-helper\">{label}</InputLabel>\r\n            <Input\r\n                style={{ width: 200 }}\r\n                value={val}\r\n                type={\"number\"}\r\n                inputProps={{ step: 1 }}\r\n                onChange={(e) => setVal(e.target.value)}\r\n                required={required}\r\n                endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                        <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-select\"\r\n                            value={unit}\r\n                            onChange={(e) => setUnit(e.target.value)}\r\n                        >\r\n                            <MenuItem value={1}>B{suffix && suffix}</MenuItem>\r\n                            <MenuItem value={1024}>\r\n                                KB{suffix && suffix}\r\n                            </MenuItem>\r\n                            <MenuItem value={1024 * 1024}>\r\n                                MB{suffix && suffix}\r\n                            </MenuItem>\r\n                            <MenuItem value={1024 * 1024 * 1024}>\r\n                                GB{suffix && suffix}\r\n                            </MenuItem>\r\n                            <MenuItem value={1024 * 1024 * 1024 * 1024}>\r\n                                TB{suffix && suffix}\r\n                            </MenuItem>\r\n                        </Select>\r\n                    </InputAdornment>\r\n                }\r\n            />\r\n            {err !== \"\" && <FormHelperText>{err}</FormHelperText>}\r\n        </FormControl>\r\n    );\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../redux/explorer\";\r\nimport API from \"../../../middleware/Api\";\r\nimport SizeInput from \"../Common/SizeInput\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function UploadDownload() {\r\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"settings\" });\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false);\r\n    const [options, setOptions] = useState({\r\n        max_worker_num: \"1\",\r\n        max_parallel_transfer: \"1\",\r\n        temp_path: \"\",\r\n        maxEditSize: \"\",\r\n        chunk_retries: \"0\",\r\n        archive_timeout: \"0\",\r\n        download_timeout: \"0\",\r\n        preview_timeout: \"0\",\r\n        doc_preview_timeout: \"0\",\r\n        upload_credential_timeout: \"0\",\r\n        upload_session_timeout: \"0\",\r\n        slave_api_timeout: \"0\",\r\n        onedrive_monitor_timeout: \"0\",\r\n        share_download_session_timeout: \"0\",\r\n        onedrive_callback_check: \"0\",\r\n        reset_after_upload_failed: \"0\",\r\n        onedrive_source_timeout: \"0\",\r\n        slave_node_retry: \"0\",\r\n        slave_ping_interval: \"0\",\r\n        slave_recover_interval: \"0\",\r\n        slave_transfer_timeout: \"0\",\r\n        use_temp_chunk_buffer: \"1\",\r\n    });\r\n\r\n    const handleCheckChange = (name) => (event) => {\r\n        const value = event.target.checked ? \"1\" : \"0\";\r\n        setOptions({\r\n            ...options,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setOptions({\r\n            ...options,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        API.post(\"/admin/setting\", {\r\n            keys: Object.keys(options),\r\n        })\r\n            .then((response) => {\r\n                setOptions(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const option = [];\r\n        Object.keys(options).forEach((k) => {\r\n            option.push({\r\n                key: k,\r\n                value: options[k],\r\n            });\r\n        });\r\n        API.patch(\"/admin/setting\", {\r\n            options: option,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\"top\", \"right\", t(\"saved\"), \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={submit}>\r\n                <div className={classes.root}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        {t(\"transportation\")}\r\n                    </Typography>\r\n                    <div className={classes.formContainer}>\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    {t(\"workerNum\")}\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"number\"}\r\n                                    inputProps={{\r\n                                        min: 1,\r\n                                        step: 1,\r\n                                    }}\r\n                                    value={options.max_worker_num}\r\n                                    onChange={handleChange(\"max_worker_num\")}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"workerNumDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    {t(\"transitParallelNum\")}\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"number\"}\r\n                                    inputProps={{\r\n                                        min: 1,\r\n                                        step: 1,\r\n                                    }}\r\n                                    value={options.max_parallel_transfer}\r\n                                    onChange={handleChange(\r\n                                        \"max_parallel_transfer\"\r\n                                    )}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"transitParallelNumDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    {t(\"tempFolder\")}\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.temp_path}\r\n                                    onChange={handleChange(\"temp_path\")}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"tempFolderDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                {options.maxEditSize !== \"\" && (\r\n                                    <SizeInput\r\n                                        value={options.maxEditSize}\r\n                                        onChange={handleChange(\"maxEditSize\")}\r\n                                        required\r\n                                        min={0}\r\n                                        max={2147483647}\r\n                                        label={t(\"textEditMaxSize\")}\r\n                                    />\r\n                                )}\r\n\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"textEditMaxSizeDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    {t(\"failedChunkRetry\")}\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"number\"}\r\n                                    inputProps={{\r\n                                        min: 0,\r\n                                        step: 1,\r\n                                    }}\r\n                                    value={options.chunk_retries}\r\n                                    onChange={handleChange(\"chunk_retries\")}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"failedChunkRetryDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Switch\r\n                                            checked={\r\n                                                options.use_temp_chunk_buffer ===\r\n                                                \"1\"\r\n                                            }\r\n                                            onChange={handleCheckChange(\r\n                                                \"use_temp_chunk_buffer\"\r\n                                            )}\r\n                                        />\r\n                                    }\r\n                                    label={t(\"cacheChunks\")}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"cacheChunksDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Switch\r\n                                            checked={\r\n                                                options.reset_after_upload_failed ===\r\n                                                \"1\"\r\n                                            }\r\n                                            onChange={handleCheckChange(\r\n                                                \"reset_after_upload_failed\"\r\n                                            )}\r\n                                        />\r\n                                    }\r\n                                    label={t(\"resetConnection\")}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"resetConnectionDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.root}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        {t(\"expirationDuration\")}\r\n                    </Typography>\r\n                    <div className={classes.formContainer}>\r\n                        {[\r\n                            {\r\n                                name: \"batchDownload\",\r\n                                field: \"archive_timeout\",\r\n                            },\r\n                            {\r\n                                name: \"downloadSession\",\r\n                                field: \"download_timeout\",\r\n                            },\r\n                            {\r\n                                name: \"previewURL\",\r\n                                field: \"preview_timeout\",\r\n                            },\r\n                            {\r\n                                name: \"docPreviewURL\",\r\n                                field: \"doc_preview_timeout\",\r\n                            },\r\n                            {\r\n                                name: \"uploadSession\",\r\n                                field: \"upload_session_timeout\",\r\n                                des: \"uploadSessionDes\",\r\n                            },\r\n                            {\r\n                                name: \"downloadSessionForShared\",\r\n                                field: \"share_download_session_timeout\",\r\n                                des: \"downloadSessionForSharedDes\",\r\n                            },\r\n                            {\r\n                                name: \"onedriveMonitorInterval\",\r\n                                field: \"onedrive_monitor_timeout\",\r\n                                des: \"onedriveMonitorIntervalDes\",\r\n                            },\r\n                            {\r\n                                name: \"onedriveCallbackTolerance\",\r\n                                field: \"onedrive_callback_check\",\r\n                                des: \"onedriveCallbackToleranceDes\",\r\n                            },\r\n                            {\r\n                                name: \"onedriveDownloadURLCache\",\r\n                                field: \"onedrive_source_timeout\",\r\n                                des: \"onedriveDownloadURLCacheDes\",\r\n                            },\r\n                        ].map((input) => (\r\n                            <div key={input.name} className={classes.form}>\r\n                                <FormControl>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        {t(input.name)}\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        type={\"number\"}\r\n                                        inputProps={{\r\n                                            min: 1,\r\n                                            step: 1,\r\n                                        }}\r\n                                        value={options[input.field]}\r\n                                        onChange={handleChange(input.field)}\r\n                                        required\r\n                                    />\r\n                                    {input.des && (\r\n                                        <FormHelperText id=\"component-helper-text\">\r\n                                            {t(input.des)}\r\n                                        </FormHelperText>\r\n                                    )}\r\n                                </FormControl>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.root}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        {t(\"nodesCommunication\")}\r\n                    </Typography>\r\n                    <div className={classes.formContainer}>\r\n                        {[\r\n                            {\r\n                                name: \"slaveAPIExpiration\",\r\n                                field: \"slave_api_timeout\",\r\n                                des: \"slaveAPIExpirationDes\",\r\n                            },\r\n                            {\r\n                                name: \"heartbeatInterval\",\r\n                                field: \"slave_ping_interval\",\r\n                                des: \"heartbeatIntervalDes\",\r\n                            },\r\n                            {\r\n                                name: \"heartbeatFailThreshold\",\r\n                                field: \"slave_node_retry\",\r\n                                des: \"heartbeatFailThresholdDes\",\r\n                            },\r\n                            {\r\n                                name: \"heartbeatRecoverModeInterval\",\r\n                                field: \"slave_recover_interval\",\r\n                                des: \"heartbeatRecoverModeIntervalDes\",\r\n                            },\r\n                            {\r\n                                name: \"slaveTransitExpiration\",\r\n                                field: \"slave_transfer_timeout\",\r\n                                des: \"slaveTransitExpirationDes\",\r\n                            },\r\n                        ].map((input) => (\r\n                            <div key={input.name} className={classes.form}>\r\n                                <FormControl>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        {t(input.name)}\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        type={\"number\"}\r\n                                        inputProps={{\r\n                                            min: 1,\r\n                                            step: 1,\r\n                                        }}\r\n                                        value={options[input.field]}\r\n                                        onChange={handleChange(input.field)}\r\n                                        required\r\n                                    />\r\n                                    <FormHelperText id=\"component-helper-text\">\r\n                                        {t(input.des)}\r\n                                    </FormHelperText>\r\n                                </FormControl>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.root}>\r\n                    <Button\r\n                        disabled={loading}\r\n                        type={\"submit\"}\r\n                        variant={\"contained\"}\r\n                        color={\"primary\"}\r\n                    >\r\n                        {t(\"save\")}\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","import AppBar from \"@material-ui/core/AppBar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { createMuiTheme, makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Add, Menu } from \"@material-ui/icons\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport { CompactPicker } from \"react-color\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    picker: {\r\n        \"& div\": {\r\n            boxShadow: \"none !important\",\r\n        },\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    \"@global\": {\r\n        \".compact-picker:parent \": {\r\n            boxShadow: \"none !important\",\r\n        },\r\n    },\r\n    statusBar: {\r\n        height: 24,\r\n        width: \"100%\",\r\n    },\r\n    fab: {\r\n        textAlign: \"right\",\r\n    },\r\n}));\r\n\r\nexport default function CreateTheme({ open, onClose, onSubmit }) {\r\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"settings\" });\r\n    const { t: tGlobal } = useTranslation(\"common\");\r\n    const classes = useStyles();\r\n    const [theme, setTheme] = useState({\r\n        palette: {\r\n            primary: {\r\n                main: \"#3f51b5\",\r\n                contrastText: \"#fff\",\r\n            },\r\n            secondary: {\r\n                main: \"#d81b60\",\r\n                contrastText: \"#fff\",\r\n            },\r\n        },\r\n    });\r\n\r\n    const subTheme = useCallback(() => {\r\n        try {\r\n            return createMuiTheme(theme);\r\n        } catch (e) {\r\n            return createMuiTheme({});\r\n        }\r\n    }, [theme]);\r\n\r\n    return (\r\n        <Dialog open={open} onClose={onClose} fullWidth maxWidth={\"md\"}>\r\n            <DialogContent>\r\n                <Grid container>\r\n                    <Grid spacing={2} md={8} xs={12} container>\r\n                        <Grid md={6} xs={12} item>\r\n                            <Typography variant=\"h6\" gutterBottom>\r\n                                {t(\"primaryColor\")}\r\n                            </Typography>\r\n                            <TextField\r\n                                value={theme.palette.primary.main}\r\n                                onChange={(e) => {\r\n                                    setTheme({\r\n                                        ...theme,\r\n                                        palette: {\r\n                                            ...theme.palette,\r\n                                            primary: {\r\n                                                ...theme.palette.primary,\r\n                                                main: e.target.value,\r\n                                            },\r\n                                        },\r\n                                    });\r\n                                }}\r\n                                fullWidth\r\n                            />\r\n                            <div className={classes.picker}>\r\n                                <CompactPicker\r\n                                    colors={[\r\n                                        \"#4D4D4D\",\r\n                                        \"#999999\",\r\n                                        \"#FFFFFF\",\r\n                                        \"#f44336\",\r\n                                        \"#ff9800\",\r\n                                        \"#ffeb3b\",\r\n                                        \"#cddc39\",\r\n                                        \"#A4DD00\",\r\n                                        \"#00bcd4\",\r\n                                        \"#03a9f4\",\r\n                                        \"#AEA1FF\",\r\n                                        \"#FDA1FF\",\r\n                                        \"#333333\",\r\n                                        \"#808080\",\r\n                                        \"#cccccc\",\r\n                                        \"#ff5722\",\r\n                                        \"#ffc107\",\r\n                                        \"#FCC400\",\r\n                                        \"#8bc34a\",\r\n                                        \"#4caf50\",\r\n                                        \"#009688\",\r\n                                        \"#2196f3\",\r\n                                        \"#3f51b5\",\r\n                                        \"#e91e63\",\r\n                                        \"#000000\",\r\n                                        \"#666666\",\r\n                                        \"#B3B3B3\",\r\n                                        \"#9F0500\",\r\n                                        \"#C45100\",\r\n                                        \"#FB9E00\",\r\n                                        \"#808900\",\r\n                                        \"#194D33\",\r\n                                        \"#0C797D\",\r\n                                        \"#0062B1\",\r\n                                        \"#673ab7\",\r\n                                        \"#9c27b0\",\r\n                                    ]}\r\n                                    color={theme.palette.primary.main}\r\n                                    onChangeComplete={(c) => {\r\n                                        setTheme({\r\n                                            ...theme,\r\n                                            palette: {\r\n                                                ...theme.palette,\r\n                                                primary: {\r\n                                                    ...theme.palette.primary,\r\n                                                    main: c.hex,\r\n                                                },\r\n                                            },\r\n                                        });\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid md={6} xs={12} item>\r\n                            <Typography variant=\"h6\" gutterBottom>\r\n                                {t(\"secondaryColor\")}\r\n                            </Typography>\r\n                            <TextField\r\n                                value={theme.palette.secondary.main}\r\n                                onChange={(e) => {\r\n                                    setTheme({\r\n                                        ...theme,\r\n                                        palette: {\r\n                                            ...theme.palette,\r\n                                            secondary: {\r\n                                                ...theme.palette.secondary,\r\n                                                main: e.target.value,\r\n                                            },\r\n                                        },\r\n                                    });\r\n                                }}\r\n                                fullWidth\r\n                            />\r\n                            <div className={classes.picker}>\r\n                                <CompactPicker\r\n                                    colors={[\r\n                                        \"#4D4D4D\",\r\n                                        \"#999999\",\r\n                                        \"#FFFFFF\",\r\n                                        \"#ff1744\",\r\n                                        \"#ff3d00\",\r\n                                        \"#ffeb3b\",\r\n                                        \"#cddc39\",\r\n                                        \"#A4DD00\",\r\n                                        \"#00bcd4\",\r\n                                        \"#00e5ff\",\r\n                                        \"#AEA1FF\",\r\n                                        \"#FDA1FF\",\r\n                                        \"#333333\",\r\n                                        \"#808080\",\r\n                                        \"#cccccc\",\r\n                                        \"#ff5722\",\r\n                                        \"#ffea00\",\r\n                                        \"#ffc400\",\r\n                                        \"#c6ff00\",\r\n                                        \"#00e676\",\r\n                                        \"#76ff03\",\r\n                                        \"#00b0ff\",\r\n                                        \"#2979ff\",\r\n                                        \"#f50057\",\r\n                                        \"#000000\",\r\n                                        \"#666666\",\r\n                                        \"#B3B3B3\",\r\n                                        \"#9F0500\",\r\n                                        \"#C45100\",\r\n                                        \"#FB9E00\",\r\n                                        \"#808900\",\r\n                                        \"#1de9b6\",\r\n                                        \"#0C797D\",\r\n                                        \"#3d5afe\",\r\n                                        \"#651fff\",\r\n                                        \"#d500f9\",\r\n                                    ]}\r\n                                    color={theme.palette.secondary.main}\r\n                                    onChangeComplete={(c) => {\r\n                                        setTheme({\r\n                                            ...theme,\r\n                                            palette: {\r\n                                                ...theme.palette,\r\n                                                secondary: {\r\n                                                    ...theme.palette.secondary,\r\n                                                    main: c.hex,\r\n                                                },\r\n                                            },\r\n                                        });\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid md={6} xs={12} item>\r\n                            <Typography variant=\"h6\" gutterBottom>\r\n                                {t(\"primaryColorText\")}\r\n                            </Typography>\r\n                            <TextField\r\n                                value={theme.palette.primary.contrastText}\r\n                                onChange={(e) => {\r\n                                    setTheme({\r\n                                        ...theme,\r\n                                        palette: {\r\n                                            ...theme.palette,\r\n                                            primary: {\r\n                                                ...theme.palette.primary,\r\n                                                contrastText: e.target.value,\r\n                                            },\r\n                                        },\r\n                                    });\r\n                                }}\r\n                                fullWidth\r\n                            />\r\n                            <div className={classes.picker}>\r\n                                <CompactPicker\r\n                                    color={theme.palette.primary.contrastText}\r\n                                    onChangeComplete={(c) => {\r\n                                        setTheme({\r\n                                            ...theme,\r\n                                            palette: {\r\n                                                ...theme.palette,\r\n                                                primary: {\r\n                                                    ...theme.palette.primary,\r\n                                                    contrastText: c.hex,\r\n                                                },\r\n                                            },\r\n                                        });\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid md={6} xs={12} item>\r\n                            <Typography variant=\"h6\" gutterBottom>\r\n                                {t(\"secondaryColorText\")}\r\n                            </Typography>\r\n                            <TextField\r\n                                value={theme.palette.secondary.contrastText}\r\n                                onChange={(e) => {\r\n                                    setTheme({\r\n                                        ...theme,\r\n                                        palette: {\r\n                                            ...theme.palette,\r\n                                            secondary: {\r\n                                                ...theme.palette.secondary,\r\n                                                contrastText: e.target.value,\r\n                                            },\r\n                                        },\r\n                                    });\r\n                                }}\r\n                                fullWidth\r\n                            />\r\n                            <div className={classes.picker}>\r\n                                <CompactPicker\r\n                                    color={theme.palette.secondary.contrastText}\r\n                                    onChangeComplete={(c) => {\r\n                                        setTheme({\r\n                                            ...theme,\r\n                                            palette: {\r\n                                                ...theme.palette,\r\n                                                secondary: {\r\n                                                    ...theme.palette.secondary,\r\n                                                    contrastText: c.hex,\r\n                                                },\r\n                                            },\r\n                                        });\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid spacing={2} md={4} xs={12}>\r\n                        <ThemeProvider theme={subTheme()}>\r\n                            <div\r\n                                className={classes.statusBar}\r\n                                style={{\r\n                                    backgroundColor: subTheme().palette.primary\r\n                                        .dark,\r\n                                }}\r\n                            />\r\n                            <AppBar position=\"static\">\r\n                                <Toolbar>\r\n                                    <IconButton\r\n                                        edge=\"start\"\r\n                                        className={classes.menuButton}\r\n                                        color=\"inherit\"\r\n                                        aria-label=\"menu\"\r\n                                    >\r\n                                        <Menu />\r\n                                    </IconButton>\r\n                                    <Typography\r\n                                        variant=\"h6\"\r\n                                        className={classes.title}\r\n                                    >\r\n                                        Color\r\n                                    </Typography>\r\n                                </Toolbar>\r\n                            </AppBar>\r\n                            <div style={{ padding: 16 }}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    color={\"secondary\"}\r\n                                    label={\"Text input\"}\r\n                                />\r\n                                <div\r\n                                    className={classes.fab}\r\n                                    style={{ paddingTop: 64 }}\r\n                                >\r\n                                    <Fab color=\"secondary\" aria-label=\"add\">\r\n                                        <Add />\r\n                                    </Fab>\r\n                                </div>\r\n                            </div>\r\n                        </ThemeProvider>\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={onClose} color=\"default\">\r\n                    {tGlobal(\"cancel\")}\r\n                </Button>\r\n                <Button onClick={() => onSubmit(theme)} color=\"primary\">\r\n                    {tGlobal(\"ok\")}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Delete } from \"@material-ui/icons\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../redux/explorer\";\r\nimport API from \"../../../middleware/Api\";\r\nimport CreateTheme from \"../Dialogs/CreateTheme\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    form: {\r\n        maxWidth: 500,\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n    colorContainer: {\r\n        display: \"flex\",\r\n    },\r\n    colorDot: {\r\n        width: 20,\r\n        height: 20,\r\n        borderRadius: \"50%\",\r\n        marginLeft: 6,\r\n    },\r\n}));\r\n\r\nexport default function Theme() {\r\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"settings\" });\r\n    const { t: tApp } = useTranslation();\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false);\r\n    const [theme, setTheme] = useState({});\r\n    const [options, setOptions] = useState({\r\n        themes: \"{}\",\r\n        defaultTheme: \"\",\r\n        home_view_method: \"icon\",\r\n        share_view_method: \"list\",\r\n    });\r\n    const [themeConfig, setThemeConfig] = useState({});\r\n    const [themeConfigError, setThemeConfigError] = useState({});\r\n    const [create, setCreate] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const deleteTheme = (color) => {\r\n        if (color === options.defaultTheme) {\r\n            ToggleSnackbar(\r\n                \"top\",\r\n                \"right\",\r\n                t(\"cannotDeleteDefaultTheme\"),\r\n                \"warning\"\r\n            );\r\n            return;\r\n        }\r\n        if (Object.keys(theme).length <= 1) {\r\n            ToggleSnackbar(\"top\", \"right\", t(\"keepAtLeastOneTheme\"), \"warning\");\r\n            return;\r\n        }\r\n        const themeCopy = { ...theme };\r\n        delete themeCopy[color];\r\n        const resStr = JSON.stringify(themeCopy);\r\n        setOptions({\r\n            ...options,\r\n            themes: resStr,\r\n        });\r\n    };\r\n\r\n    const addTheme = (newTheme) => {\r\n        setCreate(false);\r\n        if (theme[newTheme.palette.primary.main] !== undefined) {\r\n            ToggleSnackbar(\r\n                \"top\",\r\n                \"right\",\r\n                t(\"duplicatedThemePrimaryColor\"),\r\n                \"warning\"\r\n            );\r\n            return;\r\n        }\r\n        const res = {\r\n            ...theme,\r\n            [newTheme.palette.primary.main]: newTheme,\r\n        };\r\n        const resStr = JSON.stringify(res);\r\n        setOptions({\r\n            ...options,\r\n            themes: resStr,\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        const res = JSON.parse(options.themes);\r\n        const themeString = {};\r\n\r\n        Object.keys(res).forEach((k) => {\r\n            themeString[k] = JSON.stringify(res[k]);\r\n        });\r\n\r\n        setTheme(res);\r\n        setThemeConfig(themeString);\r\n    }, [options.themes]);\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setOptions({\r\n            ...options,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        API.post(\"/admin/setting\", {\r\n            keys: Object.keys(options),\r\n        })\r\n            .then((response) => {\r\n                setOptions(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const option = [];\r\n        Object.keys(options).forEach((k) => {\r\n            option.push({\r\n                key: k,\r\n                value: options[k],\r\n            });\r\n        });\r\n        API.patch(\"/admin/setting\", {\r\n            options: option,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\"top\", \"right\", t(\"saved\"), \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={submit}>\r\n                <div className={classes.root}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        {t(\"themes\")}\r\n                    </Typography>\r\n                    <div className={classes.formContainer}>\r\n                        <div className={classes.form}>\r\n                            <Table aria-label=\"simple table\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell>{t(\"colors\")}</TableCell>\r\n                                        <TableCell>\r\n                                            {t(\"themeConfig\")}\r\n                                        </TableCell>\r\n                                        <TableCell>{t(\"actions\")}</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {Object.keys(theme).map((k) => (\r\n                                        <TableRow key={k}>\r\n                                            <TableCell\r\n                                                component=\"th\"\r\n                                                scope=\"row\"\r\n                                            >\r\n                                                <div\r\n                                                    className={\r\n                                                        classes.colorContainer\r\n                                                    }\r\n                                                >\r\n                                                    <div\r\n                                                        style={{\r\n                                                            backgroundColor:\r\n                                                                theme[k].palette\r\n                                                                    .primary\r\n                                                                    .main,\r\n                                                        }}\r\n                                                        className={\r\n                                                            classes.colorDot\r\n                                                        }\r\n                                                    />\r\n                                                    <div\r\n                                                        style={{\r\n                                                            backgroundColor:\r\n                                                                theme[k].palette\r\n                                                                    .secondary\r\n                                                                    .main,\r\n                                                        }}\r\n                                                        className={\r\n                                                            classes.colorDot\r\n                                                        }\r\n                                                    />\r\n                                                </div>\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                <TextField\r\n                                                    error={themeConfigError[k]}\r\n                                                    helperText={\r\n                                                        themeConfigError[k] &&\r\n                                                        t(\"wrongFormat\")\r\n                                                    }\r\n                                                    fullWidth\r\n                                                    multiline\r\n                                                    onChange={(e) => {\r\n                                                        setThemeConfig({\r\n                                                            ...themeConfig,\r\n                                                            [k]: e.target.value,\r\n                                                        });\r\n                                                    }}\r\n                                                    onBlur={(e) => {\r\n                                                        try {\r\n                                                            const res = JSON.parse(\r\n                                                                e.target.value\r\n                                                            );\r\n                                                            if (\r\n                                                                !(\r\n                                                                    \"palette\" in\r\n                                                                    res\r\n                                                                ) ||\r\n                                                                !(\r\n                                                                    \"primary\" in\r\n                                                                    res.palette\r\n                                                                ) ||\r\n                                                                !(\r\n                                                                    \"main\" in\r\n                                                                    res.palette\r\n                                                                        .primary\r\n                                                                ) ||\r\n                                                                !(\r\n                                                                    \"secondary\" in\r\n                                                                    res.palette\r\n                                                                ) ||\r\n                                                                !(\r\n                                                                    \"main\" in\r\n                                                                    res.palette\r\n                                                                        .secondary\r\n                                                                )\r\n                                                            ) {\r\n                                                                throw e;\r\n                                                            }\r\n                                                            setTheme({\r\n                                                                ...theme,\r\n                                                                [k]: res,\r\n                                                            });\r\n                                                        } catch (e) {\r\n                                                            setThemeConfigError(\r\n                                                                {\r\n                                                                    ...themeConfigError,\r\n                                                                    [k]: true,\r\n                                                                }\r\n                                                            );\r\n                                                            return;\r\n                                                        }\r\n                                                        setThemeConfigError({\r\n                                                            ...themeConfigError,\r\n                                                            [k]: false,\r\n                                                        });\r\n                                                    }}\r\n                                                    value={themeConfig[k]}\r\n                                                />\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                <IconButton\r\n                                                    onClick={() =>\r\n                                                        deleteTheme(k)\r\n                                                    }\r\n                                                >\r\n                                                    <Delete />\r\n                                                </IconButton>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                            <div>\r\n                                <Button\r\n                                    variant=\"outlined\"\r\n                                    color=\"primary\"\r\n                                    style={{ marginTop: 8 }}\r\n                                    onClick={() => setCreate(true)}\r\n                                >\r\n                                    {t(\"createNewTheme\")}\r\n                                </Button>\r\n                            </div>\r\n                            <Alert severity=\"info\" style={{ marginTop: 8 }}>\r\n                                <Typography variant=\"body2\">\r\n                                    <Trans\r\n                                        i18nKey={\"settings.themeConfigDes\"}\r\n                                        ns={\"dashboard\"}\r\n                                        components={[\r\n                                            <Link\r\n                                                key={0}\r\n                                                href={t(\"themeConfigDoc\")}\r\n                                                target={\"_blank\"}\r\n                                            />,\r\n                                        ]}\r\n                                    />\r\n                                </Typography>\r\n                            </Alert>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    {t(\"defaultTheme\")}\r\n                                </InputLabel>\r\n                                <Select\r\n                                    value={options.defaultTheme}\r\n                                    onChange={handleChange(\"defaultTheme\")}\r\n                                >\r\n                                    {Object.keys(theme).map((k) => (\r\n                                        <MenuItem key={k} value={k}>\r\n                                            <div\r\n                                                className={\r\n                                                    classes.colorContainer\r\n                                                }\r\n                                            >\r\n                                                <div\r\n                                                    style={{\r\n                                                        backgroundColor:\r\n                                                            theme[k].palette\r\n                                                                .primary.main,\r\n                                                    }}\r\n                                                    className={classes.colorDot}\r\n                                                />\r\n                                                <div\r\n                                                    style={{\r\n                                                        backgroundColor:\r\n                                                            theme[k].palette\r\n                                                                .secondary.main,\r\n                                                    }}\r\n                                                    className={classes.colorDot}\r\n                                                />\r\n                                            </div>\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </Select>\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"defaultThemeDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.root}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        {t(\"appearance\")}\r\n                    </Typography>\r\n\r\n                    <div className={classes.formContainer}>\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    {t(\"personalFileListView\")}\r\n                                </InputLabel>\r\n                                <Select\r\n                                    value={options.home_view_method}\r\n                                    onChange={handleChange(\"home_view_method\")}\r\n                                    required\r\n                                >\r\n                                    <MenuItem value={\"icon\"}>\r\n                                        {tApp(\"fileManager.gridViewLarge\")}\r\n                                    </MenuItem>\r\n                                    <MenuItem value={\"smallIcon\"}>\r\n                                        {tApp(\"fileManager.gridViewSmall\")}\r\n                                    </MenuItem>\r\n                                    <MenuItem value={\"list\"}>\r\n                                        {tApp(\"fileManager.listView\")}\r\n                                    </MenuItem>\r\n                                </Select>\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"personalFileListViewDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.formContainer}>\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    {t(\"sharedFileListView\")}\r\n                                </InputLabel>\r\n                                <Select\r\n                                    value={options.share_view_method}\r\n                                    onChange={handleChange(\"share_view_method\")}\r\n                                    required\r\n                                >\r\n                                    <MenuItem value={\"icon\"}>\r\n                                        {tApp(\"fileManager.gridViewLarge\")}\r\n                                    </MenuItem>\r\n                                    <MenuItem value={\"smallIcon\"}>\r\n                                        {tApp(\"fileManager.gridViewSmall\")}\r\n                                    </MenuItem>\r\n                                    <MenuItem value={\"list\"}>\r\n                                        {tApp(\"fileManager.listView\")}\r\n                                    </MenuItem>\r\n                                </Select>\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"sharedFileListViewDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.root}>\r\n                    <Button\r\n                        disabled={loading}\r\n                        type={\"submit\"}\r\n                        variant={\"contained\"}\r\n                        color={\"primary\"}\r\n                    >\r\n                        {t(\"save\")}\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n\r\n            <CreateTheme\r\n                onSubmit={addTheme}\r\n                open={create}\r\n                onClose={() => setCreate(false)}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../redux/explorer\";\r\nimport API from \"../../../middleware/Api\";\r\nimport SizeInput from \"../Common/SizeInput\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function ImageSetting() {\r\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"settings\" });\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false);\r\n    const [options, setOptions] = useState({\r\n        gravatar_server: \"\",\r\n        avatar_path: \"\",\r\n        avatar_size: \"\",\r\n        avatar_size_l: \"\",\r\n        avatar_size_m: \"\",\r\n        avatar_size_s: \"\",\r\n        thumb_width: \"\",\r\n        thumb_height: \"\",\r\n        office_preview_service: \"\",\r\n        thumb_file_suffix: \"\",\r\n        thumb_max_task_count: \"\",\r\n        thumb_encode_method: \"\",\r\n        thumb_gc_after_gen: \"0\",\r\n        thumb_encode_quality: \"\",\r\n    });\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setOptions({\r\n            ...options,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        API.post(\"/admin/setting\", {\r\n            keys: Object.keys(options),\r\n        })\r\n            .then((response) => {\r\n                setOptions(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const option = [];\r\n        Object.keys(options).forEach((k) => {\r\n            option.push({\r\n                key: k,\r\n                value: options[k],\r\n            });\r\n        });\r\n        API.patch(\"/admin/setting\", {\r\n            options: option,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\"top\", \"right\", t(\"saved\"), \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const handleCheckChange = (name) => (event) => {\r\n        const value = event.target.checked ? \"1\" : \"0\";\r\n        setOptions({\r\n            ...options,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={submit}>\r\n                <div className={classes.root}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        {t(\"avatar\")}\r\n                    </Typography>\r\n                    <div className={classes.formContainer}>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    {t(\"gravatarServer\")}\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"url\"}\r\n                                    value={options.gravatar_server}\r\n                                    onChange={handleChange(\"gravatar_server\")}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"gravatarServerDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    {t(\"avatarFilePath\")}\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.avatar_path}\r\n                                    onChange={handleChange(\"avatar_path\")}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"avatarFilePathDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                {options.avatar_size !== \"\" && (\r\n                                    <SizeInput\r\n                                        value={options.avatar_size}\r\n                                        onChange={handleChange(\"avatar_size\")}\r\n                                        required\r\n                                        min={0}\r\n                                        max={2147483647}\r\n                                        label={t(\"avatarSize\")}\r\n                                    />\r\n                                )}\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"avatarSizeDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    {t(\"smallAvatarSize\")}\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"number\"}\r\n                                    inputProps={{\r\n                                        min: 1,\r\n                                        step: 1,\r\n                                    }}\r\n                                    value={options.avatar_size_s}\r\n                                    onChange={handleChange(\"avatar_size_s\")}\r\n                                    required\r\n                                />\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    {t(\"mediumAvatarSize\")}\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"number\"}\r\n                                    inputProps={{\r\n                                        min: 1,\r\n                                        step: 1,\r\n                                    }}\r\n                                    value={options.avatar_size_m}\r\n                                    onChange={handleChange(\"avatar_size_m\")}\r\n                                    required\r\n                                />\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    {t(\"largeAvatarSize\")}\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"number\"}\r\n                                    inputProps={{\r\n                                        min: 1,\r\n                                        step: 1,\r\n                                    }}\r\n                                    value={options.avatar_size_l}\r\n                                    onChange={handleChange(\"avatar_size_l\")}\r\n                                    required\r\n                                />\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.root}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        {t(\"filePreview\")}\r\n                    </Typography>\r\n\r\n                    <div className={classes.formContainer}>\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    {t(\"officePreviewService\")}\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.office_preview_service}\r\n                                    onChange={handleChange(\r\n                                        \"office_preview_service\"\r\n                                    )}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"officePreviewServiceDes\")}\r\n                                    <br />\r\n                                    <code>{\"{$src}\"}</code> -{\" \"}\r\n                                    {t(\"officePreviewServiceSrcDes\")}\r\n                                    <br />\r\n                                    <code>{\"{$srcB64}\"}</code> -{\" \"}\r\n                                    {t(\"officePreviewServiceSrcB64Des \")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.root}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        {t(\"thumbnails\")}\r\n                    </Typography>\r\n\r\n                    <div className={classes.formContainer}>\r\n                        <div className={classes.form}>\r\n                            <Alert severity=\"info\">{t(\"localOnlyInfo\")}</Alert>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    {t(\"thumbWidth\")}\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"number\"}\r\n                                    inputProps={{\r\n                                        min: 1,\r\n                                        step: 1,\r\n                                    }}\r\n                                    value={options.thumb_width}\r\n                                    onChange={handleChange(\"thumb_width\")}\r\n                                    required\r\n                                />\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    {t(\"thumbHeight\")}\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"number\"}\r\n                                    inputProps={{\r\n                                        min: 1,\r\n                                        step: 1,\r\n                                    }}\r\n                                    value={options.thumb_height}\r\n                                    onChange={handleChange(\"thumb_height\")}\r\n                                    required\r\n                                />\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    {t(\"thumbSuffix\")}\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"text\"}\r\n                                    value={options.thumb_file_suffix}\r\n                                    onChange={handleChange(\"thumb_file_suffix\")}\r\n                                    required\r\n                                />\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    {t(\"thumbConcurrent\")}\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"number\"}\r\n                                    inputProps={{\r\n                                        min: -1,\r\n                                        step: 1,\r\n                                    }}\r\n                                    value={options.thumb_max_task_count}\r\n                                    onChange={handleChange(\r\n                                        \"thumb_max_task_count\"\r\n                                    )}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"thumbConcurrentDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    {t(\"thumbFormat\")}\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"test\"}\r\n                                    value={options.thumb_encode_method}\r\n                                    onChange={handleChange(\r\n                                        \"thumb_encode_method\"\r\n                                    )}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"thumbFormatDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    {t(\"thumbQuality\")}\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"number\"}\r\n                                    inputProps={{\r\n                                        min: 1,\r\n                                        step: 1,\r\n                                        max: 100,\r\n                                    }}\r\n                                    value={options.thumb_encode_quality}\r\n                                    onChange={handleChange(\r\n                                        \"thumb_encode_quality\"\r\n                                    )}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"thumbQualityDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Switch\r\n                                            checked={\r\n                                                options.thumb_gc_after_gen ===\r\n                                                \"1\"\r\n                                            }\r\n                                            onChange={handleCheckChange(\r\n                                                \"thumb_gc_after_gen\"\r\n                                            )}\r\n                                        />\r\n                                    }\r\n                                    label={t(\"thumbGC\")}\r\n                                />\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.root}>\r\n                    <Button\r\n                        disabled={loading}\r\n                        type={\"submit\"}\r\n                        variant={\"contained\"}\r\n                        color={\"primary\"}\r\n                    >\r\n                        {t(\"save\")}\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    cardContainer: {\r\n        display: \"flex\",\r\n    },\r\n    cover: {\r\n        width: 100,\r\n        height: 60,\r\n    },\r\n    card: {},\r\n    content: {\r\n        flex: \"1 0 auto\",\r\n    },\r\n    bg: {\r\n        backgroundColor: theme.palette.background.default,\r\n        padding: \"24px 24px\",\r\n    },\r\n    dialogFooter: {\r\n        justifyContent: \"space-between\",\r\n    },\r\n}));\r\n\r\nconst policies = [\r\n    {\r\n        name: \"local\",\r\n        img: \"local.png\",\r\n        path: \"/admin/policy/add/local\",\r\n    },\r\n    {\r\n        name: \"remote\",\r\n        img: \"remote.png\",\r\n        path: \"/admin/policy/add/remote\",\r\n    },\r\n    {\r\n        name: \"qiniu\",\r\n        img: \"qiniu.png\",\r\n        path: \"/admin/policy/add/qiniu\",\r\n    },\r\n    {\r\n        name: \"oss\",\r\n        img: \"oss.png\",\r\n        path: \"/admin/policy/add/oss\",\r\n    },\r\n    {\r\n        name: \"upyun\",\r\n        img: \"upyun.png\",\r\n        path: \"/admin/policy/add/upyun\",\r\n    },\r\n    {\r\n        name: \"cos\",\r\n        img: \"cos.png\",\r\n        path: \"/admin/policy/add/cos\",\r\n    },\r\n    {\r\n        name: \"onedrive\",\r\n        img: \"onedrive.png\",\r\n        path: \"/admin/policy/add/onedrive\",\r\n    },\r\n    {\r\n        name: \"s3\",\r\n        img: \"s3.png\",\r\n        path: \"/admin/policy/add/s3\",\r\n    },\r\n];\r\n\r\nexport default function AddPolicy({ open, onClose }) {\r\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"policy\" });\r\n    const { t: tCommon } = useTranslation(\"common\");\r\n    const classes = useStyles();\r\n\r\n    const location = useHistory();\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={onClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n            maxWidth={\"sm\"}\r\n            fullWidth\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">\r\n                {t(\"selectAStorageProvider\")}\r\n            </DialogTitle>\r\n            <DialogContent dividers className={classes.bg}>\r\n                <Grid container spacing={2}>\r\n                    {policies.map((v) => (\r\n                        <Grid item sm={12} md={6} key={v.path}>\r\n                            <Card className={classes.card}>\r\n                                <CardActionArea\r\n                                    onClick={() => {\r\n                                        location.push(v.path);\r\n                                        onClose();\r\n                                    }}\r\n                                    className={classes.cardContainer}\r\n                                >\r\n                                    <CardMedia\r\n                                        className={classes.cover}\r\n                                        image={\"/static/img/\" + v.img}\r\n                                    />\r\n                                    <CardContent className={classes.content}>\r\n                                        <Typography\r\n                                            variant=\"subtitle1\"\r\n                                            color=\"textSecondary\"\r\n                                        >\r\n                                            {t(v.name)}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            </DialogContent>\r\n            <DialogActions className={classes.dialogFooter}>\r\n                <Button\r\n                    onClick={() =>\r\n                        window.open(t(\"comparesStoragePoliciesLink\"))\r\n                    }\r\n                    color=\"primary\"\r\n                >\r\n                    {t(\"comparesStoragePolicies\")}\r\n                </Button>\r\n                <Button onClick={onClose} color=\"primary\">\r\n                    {tCommon(\"cancel\")}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { Delete, Edit } from \"@material-ui/icons\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport { toggleSnackbar } from \"../../../redux/explorer\";\r\nimport API from \"../../../middleware/Api\";\r\nimport { sizeToString } from \"../../../utils\";\r\nimport AddPolicy from \"../Dialogs/AddPolicy\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    content: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    container: {\r\n        overflowX: \"auto\",\r\n    },\r\n    tableContainer: {\r\n        marginTop: 16,\r\n    },\r\n    header: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    headerRight: {},\r\n}));\r\n\r\nconst columns = [\r\n    { id: \"#\", label: \"sharp\", minWidth: 50 },\r\n    { id: \"name\", label: \"name\", minWidth: 170 },\r\n    { id: \"type\", label: \"type\", minWidth: 170 },\r\n    {\r\n        id: \"count\",\r\n        label: \"childFiles\",\r\n        minWidth: 50,\r\n        align: \"right\",\r\n    },\r\n    {\r\n        id: \"size\",\r\n        label: \"totalSize\",\r\n        minWidth: 100,\r\n        align: \"right\",\r\n    },\r\n    {\r\n        id: \"action\",\r\n        label: \"actions\",\r\n        minWidth: 170,\r\n        align: \"right\",\r\n    },\r\n];\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nexport default function Policy() {\r\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"policy\" });\r\n    const classes = useStyles();\r\n    // const [loading, setLoading] = useState(false);\r\n    // const [tab, setTab] = useState(0);\r\n    const [policies, setPolicies] = useState([]);\r\n    const [statics, setStatics] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [total, setTotal] = useState(0);\r\n    const [addDialog, setAddDialog] = useState(false);\r\n    const [filter, setFilter] = useState(\"all\");\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [editID, setEditID] = React.useState(0);\r\n\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const query = useQuery();\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (query.get(\"code\") === \"0\") {\r\n            ToggleSnackbar(\"top\", \"right\", t(\"authSuccess\"), \"success\");\r\n        } else if (query.get(\"msg\") && query.get(\"msg\") !== \"\") {\r\n            ToggleSnackbar(\r\n                \"top\",\r\n                \"right\",\r\n                query.get(\"msg\") + \", \" + query.get(\"err\"),\r\n                \"warning\"\r\n            );\r\n        }\r\n    }, [location]);\r\n\r\n    const loadList = () => {\r\n        API.post(\"/admin/policy/list\", {\r\n            page: page,\r\n            page_size: pageSize,\r\n            order_by: \"id desc\",\r\n            conditions: filter === \"all\" ? {} : { type: filter },\r\n        })\r\n            .then((response) => {\r\n                setPolicies(response.data.items);\r\n                setStatics(response.data.statics);\r\n                setTotal(response.data.total);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadList();\r\n    }, [page, pageSize, filter]);\r\n\r\n    const deletePolicy = (id) => {\r\n        API.delete(\"/admin/policy/\" + id)\r\n            .then(() => {\r\n                loadList();\r\n                ToggleSnackbar(\"top\", \"right\", t(\"policyDeleted\"), \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    const open = Boolean(anchorEl);\r\n\r\n    return (\r\n        <div>\r\n            <AddPolicy open={addDialog} onClose={() => setAddDialog(false)} />\r\n            <div className={classes.header}>\r\n                <Button\r\n                    color={\"primary\"}\r\n                    onClick={() => setAddDialog(true)}\r\n                    variant={\"contained\"}\r\n                >\r\n                    {t(\"newStoragePolicy\")}\r\n                </Button>\r\n                <div className={classes.headerRight}>\r\n                    <Select\r\n                        style={{\r\n                            marginRight: 8,\r\n                        }}\r\n                        value={filter}\r\n                        onChange={(e) => setFilter(e.target.value)}\r\n                    >\r\n                        {[\r\n                            \"all\",\r\n                            \"local\",\r\n                            \"remote\",\r\n                            \"qiniu\",\r\n                            \"upyun\",\r\n                            \"oss\",\r\n                            \"cos\",\r\n                            \"onedrive\",\r\n                            \"s3\",\r\n                        ].map((v) => (\r\n                            <MenuItem key={v} value={v}>\r\n                                {t(v)}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                    <Button\r\n                        color={\"primary\"}\r\n                        onClick={() => loadList()}\r\n                        variant={\"outlined\"}\r\n                    >\r\n                        {t(\"refresh\")}\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\r\n            <Paper square className={classes.tableContainer}>\r\n                <TableContainer className={classes.container}>\r\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\r\n                        <TableHead>\r\n                            <TableRow style={{ height: 52 }}>\r\n                                {columns.map((column) => (\r\n                                    <TableCell\r\n                                        key={column.id}\r\n                                        align={column.align}\r\n                                        style={{ minWidth: column.minWidth }}\r\n                                    >\r\n                                        {t(column.label)}\r\n                                    </TableCell>\r\n                                ))}\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {policies.map((row) => (\r\n                                <TableRow hover key={row.ID}>\r\n                                    <TableCell>{row.ID}</TableCell>\r\n                                    <TableCell>{row.Name}</TableCell>\r\n                                    <TableCell>{t(row.Type)}</TableCell>\r\n                                    <TableCell align={\"right\"}>\r\n                                        {statics[row.ID] !== undefined &&\r\n                                            statics[row.ID][0].toLocaleString()}\r\n                                    </TableCell>\r\n                                    <TableCell align={\"right\"}>\r\n                                        {statics[row.ID] !== undefined &&\r\n                                            sizeToString(statics[row.ID][1])}\r\n                                    </TableCell>\r\n                                    <TableCell align={\"right\"}>\r\n                                        <Tooltip title={t(\"delete\")}>\r\n                                            <IconButton\r\n                                                onClick={() =>\r\n                                                    deletePolicy(row.ID)\r\n                                                }\r\n                                                size={\"small\"}\r\n                                            >\r\n                                                <Delete />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                        <Tooltip title={t(\"edit\")}>\r\n                                            <IconButton\r\n                                                onClick={(e) => {\r\n                                                    setEditID(row.ID);\r\n                                                    handleClick(e);\r\n                                                }}\r\n                                                size={\"small\"}\r\n                                            >\r\n                                                <Edit />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 100]}\r\n                    component=\"div\"\r\n                    count={total}\r\n                    rowsPerPage={pageSize}\r\n                    page={page - 1}\r\n                    onChangePage={(e, p) => setPage(p + 1)}\r\n                    onChangeRowsPerPage={(e) => {\r\n                        setPageSize(e.target.value);\r\n                        setPage(1);\r\n                    }}\r\n                />\r\n            </Paper>\r\n            <Menu\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={handleClose}\r\n                keepMounted\r\n            >\r\n                <MenuItem\r\n                    onClick={(e) => {\r\n                        handleClose(e);\r\n                        history.push(\"/admin/policy/edit/pro/\" + editID);\r\n                    }}\r\n                >\r\n                    {t(\"editInProMode\")}\r\n                </MenuItem>\r\n                <MenuItem\r\n                    onClick={(e) => {\r\n                        handleClose(e);\r\n                        history.push(\"/admin/policy/edit/guide/\" + editID);\r\n                    }}\r\n                >\r\n                    {t(\"editInWizardMode\")}\r\n                </MenuItem>\r\n            </Menu>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\n\r\nexport default function DomainInput({ onChange, value, required, label }) {\r\n    const [domain, setDomain] = useState(\"\");\r\n    const [protocol, setProtocol] = useState(\"https://\");\r\n    const [error, setError] = useState();\r\n\r\n    useState(() => {\r\n        value = value ? value : \"\";\r\n        if (value.startsWith(\"https://\")) {\r\n            setDomain(value.replace(\"https://\", \"\"));\r\n            setProtocol(\"https://\");\r\n        } else {\r\n            if (value !== \"\") {\r\n                setDomain(value.replace(\"http://\", \"\"));\r\n                setProtocol(\"http://\");\r\n            }\r\n        }\r\n    }, [value]);\r\n\r\n    useEffect(() => {\r\n        if (protocol === \"http://\" && window.location.protocol === \"https:\") {\r\n            setError(\r\n                \"您当前站点启用了 HTTPS ，此处选择 HTTP 可能会导致无法连接。\"\r\n            );\r\n        } else {\r\n            setError(\"\");\r\n        }\r\n    }, [protocol]);\r\n\r\n    return (\r\n        <FormControl>\r\n            <InputLabel htmlFor=\"component-helper\">{label}</InputLabel>\r\n            <Input\r\n                error={error !== \"\"}\r\n                value={domain}\r\n                onChange={(e) => {\r\n                    setDomain(e.target.value);\r\n                    onChange({\r\n                        target: {\r\n                            value: protocol + e.target.value,\r\n                        },\r\n                    });\r\n                }}\r\n                required={required}\r\n                startAdornment={\r\n                    <InputAdornment position=\"start\">\r\n                        <Select\r\n                            value={protocol}\r\n                            onChange={(e) => {\r\n                                setProtocol(e.target.value);\r\n                                onChange({\r\n                                    target: {\r\n                                        value: e.target.value + domain,\r\n                                    },\r\n                                });\r\n                            }}\r\n                        >\r\n                            <MenuItem value={\"http://\"}>http://</MenuItem>\r\n                            <MenuItem value={\"https://\"}>https://</MenuItem>\r\n                        </Select>\r\n                    </InputAdornment>\r\n                }\r\n            />\r\n            {error !== \"\" && (\r\n                <FormHelperText error={error !== \"\"}>{error}</FormHelperText>\r\n            )}\r\n        </FormControl>\r\n    );\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst magicVars = [\r\n    {\r\n        value: \"{randomkey16}\",\r\n        des: \"16digitsRandomString\",\r\n        example: \"N6IimT5XZP324ACK\",\r\n        fileOnly: false,\r\n    },\r\n    {\r\n        value: \"{randomkey8}\",\r\n        des: \"8digitsRandomString\",\r\n        example: \"gWz78q30\",\r\n        fileOnly: false,\r\n    },\r\n    {\r\n        value: \"{timestamp}\",\r\n        des: \"secondTimestamp\",\r\n        example: \"1582692933\",\r\n        fileOnly: false,\r\n    },\r\n    {\r\n        value: \"{timestamp_nano}\",\r\n        des: \"nanoTimestamp\",\r\n        example: \"1582692933231834600\",\r\n        fileOnly: false,\r\n    },\r\n    {\r\n        value: \"{uid}\",\r\n        des: \"uid\",\r\n        example: \"1\",\r\n        fileOnly: false,\r\n    },\r\n    {\r\n        value: \"{originname}\",\r\n        des: \"originalFileName\",\r\n        example: \"MyPico.mp4\",\r\n        fileOnly: true,\r\n    },\r\n    {\r\n        value: \"{ext}\",\r\n        des: \"extension\",\r\n        example: \".jpg\",\r\n        fileOnly: true,\r\n    },\r\n    {\r\n        value: \"{uuid}\",\r\n        des: \"uuidV4\",\r\n        example: \"31f0a770-659d-45bf-a5a9-166c06f33281\",\r\n        fileOnly: true,\r\n    },\r\n    {\r\n        value: \"{date}\",\r\n        des: \"date\",\r\n        example: \"20060102\",\r\n        fileOnly: false,\r\n    },\r\n    {\r\n        value: \"{datetime}\",\r\n        des: \"dateAndTime\",\r\n        example: \"20060102150405\",\r\n        fileOnly: false,\r\n    },\r\n    {\r\n        value: \"{year}\",\r\n        des: \"year\",\r\n        example: \"2006\",\r\n        fileOnly: false,\r\n    },\r\n    {\r\n        value: \"{month}\",\r\n        des: \"month\",\r\n        example: \"01\",\r\n        fileOnly: false,\r\n    },\r\n    {\r\n        value: \"{day}\",\r\n        des: \"day\",\r\n        example: \"02\",\r\n        fileOnly: false,\r\n    },\r\n    {\r\n        value: \"{hour}\",\r\n        des: \"hour\",\r\n        example: \"15\",\r\n        fileOnly: false,\r\n    },\r\n    {\r\n        value: \"{minute}\",\r\n        des: \"minute\",\r\n        example: \"04\",\r\n        fileOnly: false,\r\n    },\r\n    {\r\n        value: \"{second}\",\r\n        des: \"second\",\r\n        example: \"05\",\r\n        fileOnly: false,\r\n    },\r\n];\r\n\r\nexport default function MagicVar({ isFile, open, onClose, isSlave }) {\r\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"policy.magicVar\" });\r\n    const { t: tCommon } = useTranslation(\"common\");\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={onClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">\r\n                {isFile ? t(\"fileNameMagicVar\") : t(\"pathMagicVar\")}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <TableContainer>\r\n                    <Table size=\"small\" aria-label=\"a dense table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>{t(\"variable\")}</TableCell>\r\n                                <TableCell>{t(\"description\")}</TableCell>\r\n                                <TableCell>{t(\"example\")}</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {magicVars.map((m) => {\r\n                                if (!m.fileOnly || isFile) {\r\n                                    return (\r\n                                        <TableRow>\r\n                                            <TableCell\r\n                                                component=\"th\"\r\n                                                scope=\"row\"\r\n                                            >\r\n                                                {m.value}\r\n                                            </TableCell>\r\n                                            <TableCell>{t(m.des)}</TableCell>\r\n                                            <TableCell>{m.example}</TableCell>\r\n                                        </TableRow>\r\n                                    );\r\n                                }\r\n                            })}\r\n                            {!isFile && (\r\n                                <TableRow>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {\"{path}\"}\r\n                                    </TableCell>\r\n                                    <TableCell>{t(\"userUploadPath\")}</TableCell>\r\n                                    <TableCell>/MyFile/Documents/</TableCell>\r\n                                </TableRow>\r\n                            )}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={onClose} color=\"primary\">\r\n                    {tCommon(\"close\")}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { toggleSnackbar } from \"../../../../redux/explorer\";\r\nimport API from \"../../../../middleware/Api\";\r\nimport { getNumber } from \"../../../../utils\";\r\nimport DomainInput from \"../../Common/DomainInput\";\r\nimport SizeInput from \"../../Common/SizeInput\";\r\nimport MagicVar from \"../../Dialogs/MagicVar\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    stepContent: {\r\n        padding: \"16px 32px 16px 32px\",\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n    subStepContainer: {\r\n        display: \"flex\",\r\n        marginBottom: 20,\r\n        padding: 10,\r\n        transition: theme.transitions.create(\"background-color\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        \"&:focus-within\": {\r\n            backgroundColor: theme.palette.background.default,\r\n        },\r\n    },\r\n    stepNumber: {\r\n        width: 20,\r\n        height: 20,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\r\n        color: theme.palette.secondary.contrastText,\r\n        textAlign: \"center\",\r\n        borderRadius: \" 50%\",\r\n    },\r\n    stepNumberContainer: {\r\n        marginRight: 10,\r\n    },\r\n    stepFooter: {\r\n        marginTop: 32,\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    viewButtonLabel: { textTransform: \"none\" },\r\n    \"@global\": {\r\n        code: {\r\n            color: \"rgba(0, 0, 0, 0.87)\",\r\n            display: \"inline-block\",\r\n            padding: \"2px 6px\",\r\n            fontFamily:\r\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\r\n            borderRadius: \"2px\",\r\n            backgroundColor: \"rgba(255,229,100,0.1)\",\r\n        },\r\n    },\r\n}));\r\n\r\nconst steps = [\r\n    {\r\n        title: \"storageBucket\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"storagePathStep\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"sourceLinkStep\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"uploadSettingStep\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"corsSettingStep\",\r\n        optional: true,\r\n    },\r\n    {\r\n        title: \"callbackFunctionStep\",\r\n        optional: true,\r\n    },\r\n    {\r\n        title: \"finishStep\",\r\n        optional: false,\r\n    },\r\n];\r\n\r\nexport default function COSGuide(props) {\r\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"policy\" });\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [loading, setLoading] = useState(false);\r\n    const [skipped, setSkipped] = React.useState(new Set());\r\n    const [magicVar, setMagicVar] = useState(\"\");\r\n    const [useCDN, setUseCDN] = useState(\"false\");\r\n    const [policy, setPolicy] = useState(\r\n        props.policy\r\n            ? props.policy\r\n            : {\r\n                  Type: \"cos\",\r\n                  Name: \"\",\r\n                  SecretKey: \"\",\r\n                  AccessKey: \"\",\r\n                  BaseURL: \"\",\r\n                  Server: \"\",\r\n                  IsPrivate: \"true\",\r\n                  DirNameRule: \"uploads/{year}/{month}/{day}\",\r\n                  AutoRename: \"true\",\r\n                  FileNameRule: \"{randomkey8}_{originname}\",\r\n                  IsOriginLinkEnable: \"false\",\r\n                  MaxSize: \"0\",\r\n                  OptionsSerialized: {\r\n                      file_type: \"\",\r\n                      placeholder_with_size: \"false\",\r\n                  },\r\n              }\r\n    );\r\n    const [policyID, setPolicyID] = useState(\r\n        props.policy ? props.policy.ID : 0\r\n    );\r\n    const [region, setRegion] = useState(\"ap-chengdu\");\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setPolicy({\r\n            ...policy,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const handleOptionChange = (name) => (event) => {\r\n        setPolicy({\r\n            ...policy,\r\n            OptionsSerialized: {\r\n                ...policy.OptionsSerialized,\r\n                [name]: event.target.value,\r\n            },\r\n        });\r\n    };\r\n\r\n    const isStepSkipped = (step) => {\r\n        return skipped.has(step);\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const submitPolicy = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n\r\n        const policyCopy = { ...policy };\r\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\r\n\r\n        if (useCDN === \"false\") {\r\n            policyCopy.BaseURL = policy.Server;\r\n        }\r\n\r\n        // 类型转换\r\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\r\n        policyCopy.IsOriginLinkEnable =\r\n            policyCopy.IsOriginLinkEnable === \"true\";\r\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\r\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\r\n        policyCopy.OptionsSerialized.chunk_size = parseInt(\r\n            policyCopy.OptionsSerialized.chunk_size\r\n        );\r\n        policyCopy.OptionsSerialized.placeholder_with_size =\r\n            policyCopy.OptionsSerialized.placeholder_with_size === \"true\";\r\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\r\n            \",\"\r\n        );\r\n        if (\r\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\r\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\r\n        ) {\r\n            policyCopy.OptionsSerialized.file_type = [];\r\n        }\r\n\r\n        API.post(\"/admin/policy\", {\r\n            policy: policyCopy,\r\n        })\r\n            .then((response) => {\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    props.policy ? t(\"policySaved\") : t(\"policyAdded\"),\r\n                    \"success\"\r\n                );\r\n                setActiveStep(4);\r\n                setPolicyID(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n\r\n        setLoading(false);\r\n    };\r\n\r\n    const createCORS = () => {\r\n        setLoading(true);\r\n        API.post(\"/admin/policy/cors\", {\r\n            id: policyID,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\"top\", \"right\", t(\"corsPolicyAdded\"), \"success\");\r\n                setActiveStep(5);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const creatCallback = () => {\r\n        setLoading(true);\r\n        API.post(\"/admin/policy/scf\", {\r\n            id: policyID,\r\n            region: region,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    t(\"callbackFunctionAdded\"),\r\n                    \"success\"\r\n                );\r\n                setActiveStep(6);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant={\"h6\"}>\r\n                {props.policy\r\n                    ? t(\"editCOSStoragePolicy\")\r\n                    : t(\"addCOSStoragePolicy\")}\r\n            </Typography>\r\n            <Stepper activeStep={activeStep}>\r\n                {steps.map((label, index) => {\r\n                    const stepProps = {};\r\n                    const labelProps = {};\r\n                    if (label.optional) {\r\n                        labelProps.optional = (\r\n                            <Typography variant=\"caption\">\r\n                                {t(\"optional\")}\r\n                            </Typography>\r\n                        );\r\n                    }\r\n                    if (isStepSkipped(index)) {\r\n                        stepProps.completed = false;\r\n                    }\r\n                    return (\r\n                        <Step key={label.title} {...stepProps}>\r\n                            <StepLabel {...labelProps}>\r\n                                {t(label.title)}\r\n                            </StepLabel>\r\n                        </Step>\r\n                    );\r\n                })}\r\n            </Stepper>\r\n\r\n            {activeStep === 0 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(1);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>0</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                <Trans\r\n                                    ns={\"dashboard\"}\r\n                                    i18nKey={\"policy.wanSiteURLDes\"}\r\n                                    components={[<strong key={0} />]}\r\n                                />\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                <Trans\r\n                                    ns={\"dashboard\"}\r\n                                    i18nKey={\"policy.createCOSBucketDes\"}\r\n                                    components={[\r\n                                        <Link\r\n                                            key={0}\r\n                                            href={\r\n                                                \"https://console.cloud.tencent.com/cos5\"\r\n                                            }\r\n                                            target={\"_blank\"}\r\n                                        />,\r\n                                    ]}\r\n                                />\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>2</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                <Trans\r\n                                    ns={\"dashboard\"}\r\n                                    i18nKey={\"policy.cosBucketNameDes\"}\r\n                                    components={[<code key={0} />]}\r\n                                />\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        {t(\"qiniuBucketName\")}\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        inputProps={{\r\n                                            pattern: \"[a-z0-9-]+-[0-9]+\",\r\n                                            title: t(\"cosBucketFormatError\"),\r\n                                        }}\r\n                                        required\r\n                                        value={policy.BucketName}\r\n                                        onChange={handleChange(\"BucketName\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>3</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                <Trans\r\n                                    ns={\"dashboard\"}\r\n                                    i18nKey={\"policy.cosBucketTypeDes\"}\r\n                                    components={[<code key={0} />]}\r\n                                />\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={policy.IsPrivate}\r\n                                        onChange={handleChange(\"IsPrivate\")}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"cosPrivateRW\")}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"cosPublicRW\")}\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>4</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                <Trans\r\n                                    ns={\"dashboard\"}\r\n                                    i18nKey={\"policy.cosAccessDomainDes\"}\r\n                                    components={[\r\n                                        <code key={0} />,\r\n                                        <code key={1} />,\r\n                                    ]}\r\n                                />\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <DomainInput\r\n                                    value={policy.Server}\r\n                                    onChange={handleChange(\"Server\")}\r\n                                    required\r\n                                    label={t(\"accessDomain\")}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>5</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"cosCDNDes\")}\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={useCDN}\r\n                                        onChange={(e) => {\r\n                                            setUseCDN(e.target.value);\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"use\")}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"notUse\")}\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={useCDN === \"true\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>6</div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    <Trans\r\n                                        ns={\"dashboard\"}\r\n                                        i18nKey={\"policy.cosCDNDomainDes\"}\r\n                                        components={[\r\n                                            <Link\r\n                                                key={0}\r\n                                                href={\r\n                                                    \"https://console.cloud.tencent.com/cdn/access/guid\"\r\n                                                }\r\n                                                target={\"_blank\"}\r\n                                            />,\r\n                                        ]}\r\n                                    />\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <DomainInput\r\n                                        value={policy.BaseURL}\r\n                                        onChange={handleChange(\"BaseURL\")}\r\n                                        required={useCDN === \"true\"}\r\n                                        label={t(\"bucketCDNDomain\")}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {getNumber(6, [useCDN === \"true\"])}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                <Trans\r\n                                    ns={\"dashboard\"}\r\n                                    i18nKey={\"policy.cosCredentialDes\"}\r\n                                    components={[\r\n                                        <Link\r\n                                            key={0}\r\n                                            href={\r\n                                                \"https://console.cloud.tencent.com/cam/capi\"\r\n                                            }\r\n                                            target={\"_blank\"}\r\n                                        />,\r\n                                    ]}\r\n                                />\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        {t(\"secretId\")}\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        inputProps={{\r\n                                            pattern: \"\\\\S+\",\r\n                                            title: t(\"shouldNotContainSpace\"),\r\n                                        }}\r\n                                        value={policy.AccessKey}\r\n                                        onChange={handleChange(\"AccessKey\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        {t(\"secretKey\")}\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        inputProps={{\r\n                                            pattern: \"\\\\S+\",\r\n                                            title: t(\"shouldNotContainSpace\"),\r\n                                        }}\r\n                                        value={policy.SecretKey}\r\n                                        onChange={handleChange(\"SecretKey\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {getNumber(7, [useCDN === \"true\"])}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"nameThePolicyFirst\")}\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        {t(\"policyName\")}\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.Name}\r\n                                        onChange={handleChange(\"Name\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            {t(\"next\")}\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 1 && (\r\n                <form\r\n                    className={classes.stepContental}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(2);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                <Trans\r\n                                    ns={\"dashboard\"}\r\n                                    i18nKey={\"policy.pathMagicVarDes\"}\r\n                                    components={[\r\n                                        <Link\r\n                                            key={0}\r\n                                            color={\"secondary\"}\r\n                                            href={\"javascript:void()\"}\r\n                                            onClick={() => setMagicVar(\"path\")}\r\n                                        />,\r\n                                    ]}\r\n                                />\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        {t(\"pathOfFolderToStoreFiles\")}\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.DirNameRule}\r\n                                        onChange={handleChange(\"DirNameRule\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>2</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                <Trans\r\n                                    ns={\"dashboard\"}\r\n                                    i18nKey={\"policy.filePathMagicVarDes\"}\r\n                                    components={[\r\n                                        <Link\r\n                                            key={0}\r\n                                            color={\"secondary\"}\r\n                                            href={\"javascript:void()\"}\r\n                                            onClick={() => setMagicVar(\"file\")}\r\n                                        />,\r\n                                    ]}\r\n                                />\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        aria-label=\"gender\"\r\n                                        name=\"gender1\"\r\n                                        value={policy.AutoRename}\r\n                                        onChange={handleChange(\"AutoRename\")}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"autoRenameStoredFile\")}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"keepOriginalFileName\")}\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n\r\n                            <Collapse in={policy.AutoRename === \"true\"}>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            {t(\"renameRule\")}\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            required={\r\n                                                policy.AutoRename === \"true\"\r\n                                            }\r\n                                            value={policy.FileNameRule}\r\n                                            onChange={handleChange(\r\n                                                \"FileNameRule\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </Collapse>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(0)}\r\n                        >\r\n                            {t(\"back\")}\r\n                        </Button>\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            {t(\"next\")}\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 2 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(3);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"enableGettingPermanentSourceLink\")}\r\n                                <br />\r\n                                {t(\"enableGettingPermanentSourceLinkDes\")}\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={policy.IsOriginLinkEnable}\r\n                                        onChange={(e) => {\r\n                                            if (\r\n                                                policy.IsPrivate === \"true\" &&\r\n                                                e.target.value === \"true\"\r\n                                            ) {\r\n                                                ToggleSnackbar(\r\n                                                    \"top\",\r\n                                                    \"right\",\r\n                                                    t(\r\n                                                        \"cannotEnableForPrivateBucket\"\r\n                                                    ),\r\n                                                    \"warning\"\r\n                                                );\r\n                                                return;\r\n                                            }\r\n                                            handleChange(\"IsOriginLinkEnable\")(\r\n                                                e\r\n                                            );\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"allowed\")}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"forbidden\")}\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(1)}\r\n                        >\r\n                            {t(\"back\")}\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            {t(\"next\")}\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 3 && (\r\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"limitFileSize\")}\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={\r\n                                            policy.MaxSize === \"0\"\r\n                                                ? \"false\"\r\n                                                : \"true\"\r\n                                        }\r\n                                        onChange={(e) => {\r\n                                            if (e.target.value === \"true\") {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    MaxSize: \"10485760\",\r\n                                                });\r\n                                            } else {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    MaxSize: \"0\",\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"limit\")}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"notLimit\")}\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.MaxSize !== \"0\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>2</div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    {t(\"enterSizeLimit\")}\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <SizeInput\r\n                                        value={policy.MaxSize}\r\n                                        onChange={handleChange(\"MaxSize\")}\r\n                                        min={0}\r\n                                        max={9223372036854775807}\r\n                                        label={t(\"maxSizeOfSingleFile\")}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"limitFileExt\")}\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={\r\n                                            policy.OptionsSerialized\r\n                                                .file_type === \"\"\r\n                                                ? \"false\"\r\n                                                : \"true\"\r\n                                        }\r\n                                        onChange={(e) => {\r\n                                            if (e.target.value === \"true\") {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    OptionsSerialized: {\r\n                                                        ...policy.OptionsSerialized,\r\n                                                        file_type:\r\n                                                            \"jpg,png,mp4,zip,rar\",\r\n                                                    },\r\n                                                });\r\n                                            } else {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    OptionsSerialized: {\r\n                                                        ...policy.OptionsSerialized,\r\n                                                        file_type: \"\",\r\n                                                    },\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"limit\")}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"notLimit\")}\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>\r\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    {t(\"enterFileExt\")}\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            {t(\"extList\")}\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .file_type\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"file_type\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {getNumber(3, [\r\n                                    policy.MaxSize !== \"0\",\r\n                                    policy.OptionsSerialized.file_type !== \"\",\r\n                                ])}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"createPlaceholderDes\")}\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        aria-label=\"gender\"\r\n                                        name=\"gender1\"\r\n                                        value={\r\n                                            policy.OptionsSerialized\r\n                                                .placeholder_with_size\r\n                                        }\r\n                                        onChange={handleOptionChange(\r\n                                            \"placeholder_with_size\"\r\n                                        )}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"createPlaceholder\")}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"notCreatePlaceholder\")}\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(2)}\r\n                        >\r\n                            {t(\"back\")}\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            {t(\"next\")}\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 4 && (\r\n                <form className={classes.stepContent}>\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer} />\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"ossCORSDes\")}\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <Button\r\n                                    disabled={loading}\r\n                                    color={\"secondary\"}\r\n                                    variant={\"contained\"}\r\n                                    className={classes.button}\r\n                                    onClick={() => createCORS()}\r\n                                    classes={{ label: classes.viewButtonLabel }}\r\n                                >\r\n                                    {t(\"letCloudreveHelpMe\")}\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => {\r\n                                setActiveStep(\r\n                                    (prevActiveStep) => prevActiveStep + 1\r\n                                );\r\n                                setSkipped((prevSkipped) => {\r\n                                    const newSkipped = new Set(\r\n                                        prevSkipped.values()\r\n                                    );\r\n                                    newSkipped.add(activeStep);\r\n                                    return newSkipped;\r\n                                });\r\n                            }}\r\n                        >\r\n                            {t(\"skip\")}\r\n                        </Button>{\" \"}\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 5 && (\r\n                <form className={classes.stepContent}>\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer} />\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                <Trans\r\n                                    ns={\"dashboard\"}\r\n                                    i18nKey={\"policy.cosCallbackDes\"}\r\n                                    components={[\r\n                                        <Link\r\n                                            key={0}\r\n                                            href={\r\n                                                \"https://console.cloud.tencent.com/scf/index?rid=16\"\r\n                                            }\r\n                                            target={\"_blank\"}\r\n                                        />,\r\n                                    ]}\r\n                                />\r\n                                <br />\r\n                                <br />\r\n                            </Typography>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"cosCallbackCreate\")}\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        {t(\"cosBucketRegion\")}\r\n                                    </InputLabel>\r\n                                    <Select\r\n                                        value={region}\r\n                                        onChange={(e) =>\r\n                                            setRegion(e.target.value)\r\n                                        }\r\n                                        required\r\n                                    >\r\n                                        {[\r\n                                            \"ap-beijing\",\r\n                                            \"ap-chengdu\",\r\n                                            \"ap-guangzhou\",\r\n                                            \"ap-guangzhou-open\",\r\n                                            \"ap-hongkong\",\r\n                                            \"ap-mumbai\",\r\n                                            \"na-siliconvalley\",\r\n                                            \"na-toronto\",\r\n                                        ].map((v) => (\r\n                                            <MenuItem key={v} value={v}>\r\n                                                {t(v)}\r\n                                            </MenuItem>\r\n                                        ))}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </div>\r\n\r\n                            <div className={classes.form}>\r\n                                <Button\r\n                                    disabled={loading}\r\n                                    color={\"secondary\"}\r\n                                    variant={\"contained\"}\r\n                                    className={classes.button}\r\n                                    onClick={() => creatCallback()}\r\n                                    classes={{ label: classes.viewButtonLabel }}\r\n                                >\r\n                                    {t(\"letCloudreveHelpMe\")}\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => {\r\n                                setActiveStep(\r\n                                    (prevActiveStep) => prevActiveStep + 1\r\n                                );\r\n                                setSkipped((prevSkipped) => {\r\n                                    const newSkipped = new Set(\r\n                                        prevSkipped.values()\r\n                                    );\r\n                                    newSkipped.add(activeStep);\r\n                                    return newSkipped;\r\n                                });\r\n                            }}\r\n                        >\r\n                            {t(\"skip\")}\r\n                        </Button>{\" \"}\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 6 && (\r\n                <>\r\n                    <form className={classes.stepContent}>\r\n                        <Typography>\r\n                            {props.policy ? t(\"policySaved\") : t(\"policyAdded\")}\r\n                        </Typography>\r\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\r\n                            {t(\"furtherActions\")}\r\n                        </Typography>\r\n                    </form>\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"primary\"}\r\n                            className={classes.button}\r\n                            onClick={() => history.push(\"/admin/policy\")}\r\n                        >\r\n                            {t(\"backToList\")}\r\n                        </Button>\r\n                    </div>\r\n                </>\r\n            )}\r\n\r\n            <MagicVar\r\n                open={magicVar === \"file\"}\r\n                isFile\r\n                onClose={() => setMagicVar(\"\")}\r\n            />\r\n            <MagicVar\r\n                open={magicVar === \"path\"}\r\n                onClose={() => setMagicVar(\"\")}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { toggleSnackbar } from \"../../../../redux/explorer\";\r\nimport API from \"../../../../middleware/Api\";\r\nimport DomainInput from \"../../Common/DomainInput\";\r\nimport SizeInput from \"../../Common/SizeInput\";\r\nimport MagicVar from \"../../Dialogs/MagicVar\";\r\nimport { getNumber } from \"../../../../utils\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    stepContent: {\r\n        padding: \"16px 32px 16px 32px\",\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n    subStepContainer: {\r\n        display: \"flex\",\r\n        marginBottom: 20,\r\n        padding: 10,\r\n        transition: theme.transitions.create(\"background-color\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        \"&:focus-within\": {\r\n            backgroundColor: theme.palette.background.default,\r\n        },\r\n    },\r\n    stepNumber: {\r\n        width: 20,\r\n        height: 20,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\r\n        color: theme.palette.secondary.contrastText,\r\n        textAlign: \"center\",\r\n        borderRadius: \" 50%\",\r\n    },\r\n    stepNumberContainer: {\r\n        marginRight: 10,\r\n    },\r\n    stepFooter: {\r\n        marginTop: 32,\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst steps = [\r\n    {\r\n        title: \"storagePathStep\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"sourceLinkStep\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"uploadSettingStep\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"finishStep\",\r\n        optional: false,\r\n    },\r\n];\r\n\r\nexport default function LocalGuide(props) {\r\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"policy\" });\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [loading, setLoading] = useState(false);\r\n    const [skipped] = React.useState(new Set());\r\n    const [magicVar, setMagicVar] = useState(\"\");\r\n    const [useCDN, setUseCDN] = useState(\"false\");\r\n    const [policy, setPolicy] = useState(\r\n        props.policy\r\n            ? props.policy\r\n            : {\r\n                  Type: \"local\",\r\n                  Name: \"\",\r\n                  DirNameRule: \"uploads/{uid}/{path}\",\r\n                  AutoRename: \"true\",\r\n                  FileNameRule: \"{randomkey8}_{originname}\",\r\n                  IsOriginLinkEnable: \"false\",\r\n                  BaseURL: \"\",\r\n                  IsPrivate: \"true\",\r\n                  MaxSize: \"0\",\r\n                  OptionsSerialized: {\r\n                      file_type: \"\",\r\n                      chunk_size: 25 << 20,\r\n                  },\r\n              }\r\n    );\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setPolicy({\r\n            ...policy,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const handleOptionChange = (name) => (event) => {\r\n        setPolicy({\r\n            ...policy,\r\n            OptionsSerialized: {\r\n                ...policy.OptionsSerialized,\r\n                [name]: event.target.value,\r\n            },\r\n        });\r\n    };\r\n\r\n    const isStepSkipped = (step) => {\r\n        return skipped.has(step);\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const checkPathSetting = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n\r\n        // 测试路径是否可用\r\n        API.post(\"/admin/policy/test/path\", {\r\n            path: policy.DirNameRule,\r\n        })\r\n            .then(() => {\r\n                setActiveStep(1);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const submitPolicy = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n\r\n        const policyCopy = { ...policy };\r\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\r\n\r\n        // 处理存储策略\r\n        if (useCDN === \"false\" || policy.IsOriginLinkEnable === \"false\") {\r\n            policyCopy.BaseURL = \"\";\r\n        }\r\n\r\n        // 类型转换\r\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\r\n        policyCopy.IsOriginLinkEnable =\r\n            policyCopy.IsOriginLinkEnable === \"true\";\r\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\r\n        policyCopy.OptionsSerialized.chunk_size = parseInt(\r\n            policyCopy.OptionsSerialized.chunk_size\r\n        );\r\n        policyCopy.OptionsSerialized.placeholder_with_size =\r\n            policyCopy.OptionsSerialized.placeholder_with_size === \"true\";\r\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\r\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\r\n            \",\"\r\n        );\r\n        if (\r\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\r\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\r\n        ) {\r\n            policyCopy.OptionsSerialized.file_type = [];\r\n        }\r\n\r\n        API.post(\"/admin/policy\", {\r\n            policy: policyCopy,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    props.policy ? t(\"policySaved\") : t(\"policyAdded\"),\r\n                    \"success\"\r\n                );\r\n                setActiveStep(4);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n\r\n        setLoading(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant={\"h6\"}>\r\n                {props.policy\r\n                    ? t(\"editLocalStoragePolicy\")\r\n                    : t(\"addLocalStoragePolicy\")}\r\n            </Typography>\r\n            <Stepper activeStep={activeStep}>\r\n                {steps.map((label, index) => {\r\n                    const stepProps = {};\r\n                    const labelProps = {};\r\n                    if (label.optional) {\r\n                        labelProps.optional = (\r\n                            <Typography variant=\"caption\">\r\n                                {t(\"optional\")}\r\n                            </Typography>\r\n                        );\r\n                    }\r\n                    if (isStepSkipped(index)) {\r\n                        stepProps.completed = false;\r\n                    }\r\n                    return (\r\n                        <Step key={t(label.title)} {...stepProps}>\r\n                            <StepLabel {...labelProps}>\r\n                                {t(label.title)}\r\n                            </StepLabel>\r\n                        </Step>\r\n                    );\r\n                })}\r\n            </Stepper>\r\n            {activeStep === 0 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={checkPathSetting}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                <Trans\r\n                                    ns={\"dashboard\"}\r\n                                    i18nKey={\"policy.pathMagicVarDes\"}\r\n                                    components={[\r\n                                        <Link\r\n                                            key={0}\r\n                                            color={\"secondary\"}\r\n                                            href={\"javascript:void()\"}\r\n                                            onClick={() => setMagicVar(\"path\")}\r\n                                        />,\r\n                                    ]}\r\n                                />\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        {t(\"pathOfFolderToStoreFiles\")}\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.DirNameRule}\r\n                                        onChange={handleChange(\"DirNameRule\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>2</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                <Trans\r\n                                    ns={\"dashboard\"}\r\n                                    i18nKey={\"policy.filePathMagicVarDes\"}\r\n                                    components={[\r\n                                        <Link\r\n                                            key={0}\r\n                                            color={\"secondary\"}\r\n                                            href={\"javascript:void()\"}\r\n                                            onClick={() => setMagicVar(\"file\")}\r\n                                        />,\r\n                                    ]}\r\n                                />\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        aria-label=\"gender\"\r\n                                        name=\"gender1\"\r\n                                        value={policy.AutoRename}\r\n                                        onChange={handleChange(\"AutoRename\")}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"autoRenameStoredFile\")}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"keepOriginalFileName\")}\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n\r\n                            <Collapse in={policy.AutoRename === \"true\"}>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            {t(\"renameRule\")}\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            required={\r\n                                                policy.AutoRename === \"true\"\r\n                                            }\r\n                                            value={policy.FileNameRule}\r\n                                            onChange={handleChange(\r\n                                                \"FileNameRule\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </Collapse>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            {t(\"next\")}\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 1 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(2);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"enableGettingPermanentSourceLink\")}\r\n                                <br />\r\n                                {t(\"enableGettingPermanentSourceLinkDes\")}\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={policy.IsOriginLinkEnable}\r\n                                        onChange={handleChange(\r\n                                            \"IsOriginLinkEnable\"\r\n                                        )}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"allowed\")}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"forbidden\")}\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.IsOriginLinkEnable === \"true\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>2</div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    {t(\"useCDN\")}\r\n                                    <br />\r\n                                    {t(\"useCDNDes\")}\r\n                                </Typography>\r\n\r\n                                <div className={classes.form}>\r\n                                    <FormControl required component=\"fieldset\">\r\n                                        <RadioGroup\r\n                                            required\r\n                                            value={useCDN}\r\n                                            onChange={(e) => {\r\n                                                if (\r\n                                                    e.target.value === \"false\"\r\n                                                ) {\r\n                                                    setPolicy({\r\n                                                        ...policy,\r\n                                                        BaseURL: \"\",\r\n                                                    });\r\n                                                }\r\n                                                setUseCDN(e.target.value);\r\n                                            }}\r\n                                            row\r\n                                        >\r\n                                            <FormControlLabel\r\n                                                value={\"true\"}\r\n                                                control={\r\n                                                    <Radio color={\"primary\"} />\r\n                                                }\r\n                                                label={t(\"use\")}\r\n                                            />\r\n                                            <FormControlLabel\r\n                                                value={\"false\"}\r\n                                                control={\r\n                                                    <Radio color={\"primary\"} />\r\n                                                }\r\n                                                label={t(\"notUse\")}\r\n                                            />\r\n                                        </RadioGroup>\r\n                                    </FormControl>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <Collapse in={useCDN === \"true\"}>\r\n                            <div className={classes.subStepContainer}>\r\n                                <div className={classes.stepNumberContainer}>\r\n                                    <div className={classes.stepNumber}>3</div>\r\n                                </div>\r\n                                <div className={classes.subStepContent}>\r\n                                    <Typography variant={\"body2\"}>\r\n                                        {t(\"cdnDomain\")}\r\n                                    </Typography>\r\n\r\n                                    <div className={classes.form}>\r\n                                        <DomainInput\r\n                                            value={policy.BaseURL}\r\n                                            onChange={handleChange(\"BaseURL\")}\r\n                                            required={\r\n                                                policy.IsOriginLinkEnable ===\r\n                                                    \"true\" && useCDN === \"true\"\r\n                                            }\r\n                                            label={t(\"cdnPrefix\")}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Collapse>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(0)}\r\n                        >\r\n                            {t(\"back\")}\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            {t(\"next\")}\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 2 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(3);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"limitFileSize\")}\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={\r\n                                            policy.MaxSize === \"0\"\r\n                                                ? \"false\"\r\n                                                : \"true\"\r\n                                        }\r\n                                        onChange={(e) => {\r\n                                            if (e.target.value === \"true\") {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    MaxSize: \"10485760\",\r\n                                                });\r\n                                            } else {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    MaxSize: \"0\",\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"limit\")}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"notLimit\")}\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.MaxSize !== \"0\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>2</div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    {t(\"enterSizeLimit\")}\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <SizeInput\r\n                                        value={policy.MaxSize}\r\n                                        onChange={handleChange(\"MaxSize\")}\r\n                                        min={0}\r\n                                        max={9223372036854775807}\r\n                                        label={t(\"maxSizeOfSingleFile\")}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"limitFileExt\")}\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={\r\n                                            policy.OptionsSerialized\r\n                                                .file_type === \"\"\r\n                                                ? \"false\"\r\n                                                : \"true\"\r\n                                        }\r\n                                        onChange={(e) => {\r\n                                            if (e.target.value === \"true\") {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    OptionsSerialized: {\r\n                                                        ...policy.OptionsSerialized,\r\n                                                        file_type:\r\n                                                            \"jpg,png,mp4,zip,rar\",\r\n                                                    },\r\n                                                });\r\n                                            } else {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    OptionsSerialized: {\r\n                                                        ...policy.OptionsSerialized,\r\n                                                        file_type: \"\",\r\n                                                    },\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"limit\")}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"notLimit\")}\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>\r\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    {t(\"enterFileExt\")}\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            {t(\"extList\")}\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .file_type\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"file_type\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {getNumber(3, [\r\n                                    policy.MaxSize !== \"0\",\r\n                                    policy.OptionsSerialized.file_type !== \"\",\r\n                                ])}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"chunkSizeLabel\")}\r\n                                <br />\r\n                                {t(\"chunkSizeDes\")}\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <SizeInput\r\n                                    value={policy.OptionsSerialized.chunk_size}\r\n                                    onChange={handleOptionChange(\"chunk_size\")}\r\n                                    min={0}\r\n                                    max={9223372036854775807}\r\n                                    label={t(\"chunkSize\")}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(1)}\r\n                        >\r\n                            {t(\"back\")}\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            {t(\"next\")}\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 3 && (\r\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer} />\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"nameThePolicy\")}\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        {t(\"policyName\")}\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.Name}\r\n                                        onChange={handleChange(\"Name\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(2)}\r\n                        >\r\n                            {t(\"back\")}\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            {t(\"finish\")}\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 4 && (\r\n                <>\r\n                    <form className={classes.stepContent}>\r\n                        <Typography>\r\n                            {props.policy ? t(\"policySaved\") : t(\"policyAdded\")}\r\n                        </Typography>\r\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\r\n                            {t(\"furtherActions\")}\r\n                        </Typography>\r\n                    </form>\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"primary\"}\r\n                            className={classes.button}\r\n                            onClick={() => history.push(\"/admin/policy\")}\r\n                        >\r\n                            {t(\"backToList\")}\r\n                        </Button>\r\n                    </div>\r\n                </>\r\n            )}\r\n\r\n            <MagicVar\r\n                open={magicVar === \"file\"}\r\n                isFile\r\n                onClose={() => setMagicVar(\"\")}\r\n            />\r\n            <MagicVar\r\n                open={magicVar === \"path\"}\r\n                onClose={() => setMagicVar(\"\")}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { toggleSnackbar } from \"../../../../redux/explorer\";\r\nimport API from \"../../../../middleware/Api\";\r\nimport SizeInput from \"../../Common/SizeInput\";\r\nimport AlertDialog from \"../../Dialogs/Alert\";\r\nimport MagicVar from \"../../Dialogs/MagicVar\";\r\nimport DomainInput from \"../../Common/DomainInput\";\r\nimport { getNumber } from \"../../../../utils\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    stepContent: {\r\n        padding: \"16px 32px 16px 32px\",\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n    subStepContainer: {\r\n        display: \"flex\",\r\n        marginBottom: 20,\r\n        padding: 10,\r\n        transition: theme.transitions.create(\"background-color\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        \"&:focus-within\": {\r\n            backgroundColor: theme.palette.background.default,\r\n        },\r\n    },\r\n    stepNumber: {\r\n        width: 20,\r\n        height: 20,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\r\n        color: theme.palette.secondary.contrastText,\r\n        textAlign: \"center\",\r\n        borderRadius: \" 50%\",\r\n    },\r\n    stepNumberContainer: {\r\n        marginRight: 10,\r\n    },\r\n    stepFooter: {\r\n        marginTop: 32,\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    viewButtonLabel: { textTransform: \"none\" },\r\n    \"@global\": {\r\n        code: {\r\n            color: \"rgba(0, 0, 0, 0.87)\",\r\n            display: \"inline-block\",\r\n            padding: \"2px 6px\",\r\n            fontFamily:\r\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\r\n            borderRadius: \"2px\",\r\n            backgroundColor: \"rgba(255,229,100,0.1)\",\r\n        },\r\n    },\r\n}));\r\n\r\nconst steps = [\r\n    {\r\n        title: \"applicationRegistration\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"storagePathStep\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"sourceLinkStep\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"uploadSettingStep\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"grantAccess\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"finishStep\",\r\n        optional: false,\r\n    },\r\n];\r\n\r\nexport default function OneDriveGuide(props) {\r\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"policy\" });\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [loading, setLoading] = useState(false);\r\n    const [skipped] = React.useState(new Set());\r\n    const [magicVar, setMagicVar] = useState(\"\");\r\n    const [useCDN, setUseCDN] = useState(\r\n        props.policy && props.policy.OptionsSerialized.od_proxy\r\n            ? props.policy.OptionsSerialized.od_proxy !== \"\"\r\n            : false\r\n    );\r\n    const [useSharePoint, setUseSharePoint] = useState(\r\n        props.policy && props.policy.OptionsSerialized.od_driver\r\n            ? props.policy.OptionsSerialized.od_driver !== \"\"\r\n            : false\r\n    );\r\n    const [policy, setPolicy] = useState(\r\n        props.policy\r\n            ? props.policy\r\n            : {\r\n                  Type: \"onedrive\",\r\n                  Name: \"\",\r\n                  BucketName: \"\",\r\n                  SecretKey: \"\",\r\n                  AccessKey: \"\",\r\n                  BaseURL: \"\",\r\n                  Server: \"https://graph.microsoft.com/v1.0\",\r\n                  IsPrivate: \"true\",\r\n                  DirNameRule: \"uploads/{year}/{month}/{day}\",\r\n                  AutoRename: \"true\",\r\n                  FileNameRule: \"{randomkey8}_{originname}\",\r\n                  IsOriginLinkEnable: \"false\",\r\n                  MaxSize: \"0\",\r\n                  OptionsSerialized: {\r\n                      file_type: \"\",\r\n                      od_redirect: \"\",\r\n                      od_proxy: \"\",\r\n                      od_driver: \"\",\r\n                      chunk_size: 50 << 20,\r\n                      placeholder_with_size: \"false\",\r\n                      tps_limit: \"0\",\r\n                      tps_limit_burst: \"0\",\r\n                  },\r\n              }\r\n    );\r\n    const [policyID, setPolicyID] = useState(\r\n        props.policy ? props.policy.ID : 0\r\n    );\r\n    const [httpsAlert, setHttpsAlert] = useState(false);\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setPolicy({\r\n            ...policy,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const handleOptionChange = (name) => (event) => {\r\n        setPolicy({\r\n            ...policy,\r\n            OptionsSerialized: {\r\n                ...policy.OptionsSerialized,\r\n                [name]: event.target.value,\r\n            },\r\n        });\r\n    };\r\n\r\n    const isStepSkipped = (step) => {\r\n        return skipped.has(step);\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        API.post(\"/admin/setting\", {\r\n            keys: [\"siteURL\"],\r\n        })\r\n            .then((response) => {\r\n                if (!response.data.siteURL.startsWith(\"https://\")) {\r\n                    setHttpsAlert(true);\r\n                }\r\n                if (policy.OptionsSerialized.od_redirect === \"\") {\r\n                    setPolicy({\r\n                        ...policy,\r\n                        OptionsSerialized: {\r\n                            ...policy.OptionsSerialized,\r\n                            od_redirect: new URL(\r\n                                \"/api/v3/callback/onedrive/auth\",\r\n                                response.data.siteURL\r\n                            ).toString(),\r\n                        },\r\n                    });\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    }, []);\r\n\r\n    const statOAuth = () => {\r\n        setLoading(true);\r\n        API.get(\"/admin/policy/\" + policyID + \"/oauth\")\r\n            .then((response) => {\r\n                window.location.href = response.data;\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const submitPolicy = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n\r\n        const policyCopy = { ...policy };\r\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\r\n\r\n        // baseURL处理\r\n        if (policyCopy.Server === \"https://graph.microsoft.com/v1.0\") {\r\n            policyCopy.BaseURL =\r\n                \"https://login.microsoftonline.com/common/oauth2/v2.0\";\r\n        } else {\r\n            policyCopy.BaseURL = \"https://login.chinacloudapi.cn/common/oauth2\";\r\n        }\r\n\r\n        if (!useCDN) {\r\n            policyCopy.OptionsSerialized.od_proxy = \"\";\r\n        }\r\n\r\n        if (!useSharePoint) {\r\n            policyCopy.OptionsSerialized.od_driver = \"\";\r\n        }\r\n\r\n        // 类型转换\r\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\r\n        policyCopy.IsOriginLinkEnable =\r\n            policyCopy.IsOriginLinkEnable === \"true\";\r\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\r\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\r\n        policyCopy.OptionsSerialized.chunk_size = parseInt(\r\n            policyCopy.OptionsSerialized.chunk_size\r\n        );\r\n        policyCopy.OptionsSerialized.tps_limit = parseFloat(\r\n            policyCopy.OptionsSerialized.tps_limit\r\n        );\r\n        policyCopy.OptionsSerialized.tps_limit_burst = parseInt(\r\n            policyCopy.OptionsSerialized.tps_limit_burst\r\n        );\r\n        policyCopy.OptionsSerialized.placeholder_with_size =\r\n            policyCopy.OptionsSerialized.placeholder_with_size === \"true\";\r\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\r\n            \",\"\r\n        );\r\n        if (\r\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\r\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\r\n        ) {\r\n            policyCopy.OptionsSerialized.file_type = [];\r\n        }\r\n\r\n        API.post(\"/admin/policy\", {\r\n            policy: policyCopy,\r\n        })\r\n            .then((response) => {\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    props.policy ? t(\"policySaved\") : t(\"policyAdded\"),\r\n                    \"success\"\r\n                );\r\n                setActiveStep(4);\r\n                setPolicyID(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n\r\n        setLoading(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <AlertDialog\r\n                open={httpsAlert}\r\n                onClose={() => setHttpsAlert(false)}\r\n                title={t(\"warning\")}\r\n                msg={t(\"odHttpsWarning\")}\r\n            />\r\n            <Typography variant={\"h6\"}>\r\n                {props.policy\r\n                    ? t(\"editOdStoragePolicy\")\r\n                    : t(\"addOdStoragePolicy\")}\r\n            </Typography>\r\n            <Stepper activeStep={activeStep}>\r\n                {steps.map((label, index) => {\r\n                    const stepProps = {};\r\n                    const labelProps = {};\r\n                    if (label.optional) {\r\n                        labelProps.optional = (\r\n                            <Typography variant=\"caption\">\r\n                                {t(\"optional\")}\r\n                            </Typography>\r\n                        );\r\n                    }\r\n                    if (isStepSkipped(index)) {\r\n                        stepProps.completed = false;\r\n                    }\r\n                    return (\r\n                        <Step key={label.title} {...stepProps}>\r\n                            <StepLabel {...labelProps}>\r\n                                {t(label.title)}\r\n                            </StepLabel>\r\n                        </Step>\r\n                    );\r\n                })}\r\n            </Stepper>\r\n\r\n            {activeStep === 0 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(1);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                <Trans\r\n                                    ns={\"dashboard\"}\r\n                                    i18nKey={\"policy.creatAadAppDes\"}\r\n                                    components={[\r\n                                        <Link\r\n                                            key={0}\r\n                                            href={\r\n                                                \"https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/Overview\"\r\n                                            }\r\n                                            target={\"_blank\"}\r\n                                        />,\r\n                                        <Link\r\n                                            key={1}\r\n                                            href={\r\n                                                \"https://portal.azure.cn/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/Overview\"\r\n                                            }\r\n                                            target={\"_blank\"}\r\n                                        />,\r\n                                        <code key={2} />,\r\n                                    ]}\r\n                                />\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>2</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                <Trans\r\n                                    ns={\"dashboard\"}\r\n                                    i18nKey={\"policy.createAadAppDes2\"}\r\n                                    components={[\r\n                                        <code key={0} />,\r\n                                        <code key={1} />,\r\n                                    ]}\r\n                                />\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>3</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                <Trans\r\n                                    ns={\"dashboard\"}\r\n                                    i18nKey={\"policy.createAadAppDes3\"}\r\n                                    values={{\r\n                                        url:\r\n                                            policy.OptionsSerialized\r\n                                                .od_redirect,\r\n                                    }}\r\n                                    components={[\r\n                                        <code key={0} />,\r\n                                        <code key={1} />,\r\n                                        <code key={2} />,\r\n                                        <code key={3} />,\r\n                                        <code key={4} />,\r\n                                    ]}\r\n                                />\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>4</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                <Trans\r\n                                    ns={\"dashboard\"}\r\n                                    i18nKey={\"policy.aadAppIDDes\"}\r\n                                    components={[\r\n                                        <code key={0} />,\r\n                                        <code key={1} />,\r\n                                    ]}\r\n                                />\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        {t(\"aadAppID\")}\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.BucketName}\r\n                                        onChange={handleChange(\"BucketName\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>5</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                <Trans\r\n                                    ns={\"dashboard\"}\r\n                                    i18nKey={\"policy.addAppSecretDes\"}\r\n                                    components={[\r\n                                        <code key={0} />,\r\n                                        <code key={1} />,\r\n                                        <code key={2} />,\r\n                                        <code key={3} />,\r\n                                    ]}\r\n                                />\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        {t(\"aadAppSecret\")}\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.SecretKey}\r\n                                        onChange={handleChange(\"SecretKey\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>6</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"aadAccountCloudDes\")}\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={policy.Server}\r\n                                        onChange={handleChange(\"Server\")}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\r\n                                                \"https://graph.microsoft.com/v1.0\"\r\n                                            }\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"multiTenant\")}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\r\n                                                \"https://microsoftgraph.chinacloudapi.cn/v1.0\"\r\n                                            }\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"gallatin\")}\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>7</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"sharePointDes\")}\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={useSharePoint.toString()}\r\n                                        onChange={(e) => {\r\n                                            setUseSharePoint(\r\n                                                e.target.value === \"true\"\r\n                                            );\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"saveToSharePoint\")}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"saveToOneDrive\")}\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                            <Collapse in={useSharePoint}>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            {t(\"spSiteURL\")}\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            placeholder={\r\n                                                \"https://example.sharepoint.com/sites/demo\"\r\n                                            }\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .od_driver\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"od_driver\"\r\n                                            )}\r\n                                            required={useSharePoint}\r\n                                            label={t(\"spSiteURL\")}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </Collapse>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>8</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"odReverseProxyURLDes\")}\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={useCDN.toString()}\r\n                                        onChange={(e) => {\r\n                                            setUseCDN(\r\n                                                e.target.value === \"true\"\r\n                                            );\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"use\")}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"notUse\")}\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                            <Collapse in={useCDN}>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <DomainInput\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .od_proxy\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"od_proxy\"\r\n                                            )}\r\n                                            required={useCDN}\r\n                                            label={t(\"odReverseProxyURL\")}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </Collapse>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>9</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"nameThePolicyFirst\")}\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        {t(\"policyName\")}\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.Name}\r\n                                        onChange={handleChange(\"Name\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            {t(\"next\")}\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 1 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(2);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                <Trans\r\n                                    ns={\"dashboard\"}\r\n                                    i18nKey={\"policy.pathMagicVarDes\"}\r\n                                    components={[\r\n                                        <Link\r\n                                            key={0}\r\n                                            color={\"secondary\"}\r\n                                            href={\"javascript:void()\"}\r\n                                            onClick={() => setMagicVar(\"path\")}\r\n                                        />,\r\n                                    ]}\r\n                                />\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        {t(\"pathOfFolderToStoreFiles\")}\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.DirNameRule}\r\n                                        onChange={handleChange(\"DirNameRule\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>2</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                <Trans\r\n                                    ns={\"dashboard\"}\r\n                                    i18nKey={\"policy.filePathMagicVarDes\"}\r\n                                    components={[\r\n                                        <Link\r\n                                            key={0}\r\n                                            color={\"secondary\"}\r\n                                            href={\"javascript:void()\"}\r\n                                            onClick={() => setMagicVar(\"file\")}\r\n                                        />,\r\n                                    ]}\r\n                                />\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        aria-label=\"gender\"\r\n                                        name=\"gender1\"\r\n                                        value={policy.AutoRename}\r\n                                        onChange={handleChange(\"AutoRename\")}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"autoRenameStoredFile\")}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"keepOriginalFileName\")}\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n\r\n                            <Collapse in={policy.AutoRename === \"true\"}>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            {t(\"renameRule\")}\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            required={\r\n                                                policy.AutoRename === \"true\"\r\n                                            }\r\n                                            value={policy.FileNameRule}\r\n                                            onChange={handleChange(\r\n                                                \"FileNameRule\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </Collapse>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(0)}\r\n                        >\r\n                            {t(\"back\")}\r\n                        </Button>\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            {t(\"next\")}\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 2 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(3);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"enableGettingPermanentSourceLink\")}\r\n                                <br />\r\n                                {t(\"enableGettingPermanentSourceLinkDes\")}\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={policy.IsOriginLinkEnable}\r\n                                        onChange={(e) => {\r\n                                            handleChange(\"IsOriginLinkEnable\")(\r\n                                                e\r\n                                            );\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"allowed\")}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"forbidden\")}\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(1)}\r\n                        >\r\n                            {t(\"back\")}\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            {t(\"next\")}\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 3 && (\r\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"limitFileSize\")}\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={\r\n                                            policy.MaxSize === \"0\"\r\n                                                ? \"false\"\r\n                                                : \"true\"\r\n                                        }\r\n                                        onChange={(e) => {\r\n                                            if (e.target.value === \"true\") {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    MaxSize: \"10485760\",\r\n                                                });\r\n                                            } else {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    MaxSize: \"0\",\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"limit\")}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"notLimit\")}\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.MaxSize !== \"0\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>2</div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    {t(\"enterSizeLimit\")}\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <SizeInput\r\n                                        value={policy.MaxSize}\r\n                                        onChange={handleChange(\"MaxSize\")}\r\n                                        min={0}\r\n                                        max={9223372036854775807}\r\n                                        label={t(\"maxSizeOfSingleFile\")}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"limitFileExt\")}\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={\r\n                                            policy.OptionsSerialized\r\n                                                .file_type === \"\"\r\n                                                ? \"false\"\r\n                                                : \"true\"\r\n                                        }\r\n                                        onChange={(e) => {\r\n                                            if (e.target.value === \"true\") {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    OptionsSerialized: {\r\n                                                        ...policy.OptionsSerialized,\r\n                                                        file_type:\r\n                                                            \"jpg,png,mp4,zip,rar\",\r\n                                                    },\r\n                                                });\r\n                                            } else {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    OptionsSerialized: {\r\n                                                        ...policy.OptionsSerialized,\r\n                                                        file_type: \"\",\r\n                                                    },\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"limit\")}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"notLimit\")}\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>\r\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    {t(\"enterFileExt\")}\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            {t(\"extList\")}\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .file_type\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"file_type\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {getNumber(3, [\r\n                                    policy.MaxSize !== \"0\",\r\n                                    policy.OptionsSerialized.file_type !== \"\",\r\n                                ])}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"chunkSizeLabelOd\")}\r\n                                <br />\r\n                                {t(\"chunkSizeDes\")}\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <SizeInput\r\n                                    value={policy.OptionsSerialized.chunk_size}\r\n                                    onChange={handleOptionChange(\"chunk_size\")}\r\n                                    min={0}\r\n                                    max={9223372036854775807}\r\n                                    label={t(\"chunkSize\")}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {getNumber(4, [\r\n                                    policy.MaxSize !== \"0\",\r\n                                    policy.OptionsSerialized.file_type !== \"\",\r\n                                ])}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"createPlaceholderDes\")}\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        aria-label=\"gender\"\r\n                                        name=\"gender1\"\r\n                                        value={\r\n                                            policy.OptionsSerialized\r\n                                                .placeholder_with_size\r\n                                        }\r\n                                        onChange={handleOptionChange(\r\n                                            \"placeholder_with_size\"\r\n                                        )}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"createPlaceholder\")}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"notCreatePlaceholder\")}\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {getNumber(5, [\r\n                                    policy.MaxSize !== \"0\",\r\n                                    policy.OptionsSerialized.file_type !== \"\",\r\n                                ])}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"limitOdTPSDes\")}\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={\r\n                                            parseFloat(\r\n                                                policy.OptionsSerialized\r\n                                                    .tps_limit\r\n                                            ) === 0\r\n                                                ? \"false\"\r\n                                                : \"true\"\r\n                                        }\r\n                                        onChange={(e) => {\r\n                                            if (e.target.value === \"true\") {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    OptionsSerialized: {\r\n                                                        ...policy.OptionsSerialized,\r\n                                                        tps_limit: \"5.0\",\r\n                                                    },\r\n                                                });\r\n                                            } else {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    OptionsSerialized: {\r\n                                                        ...policy.OptionsSerialized,\r\n                                                        tps_limit: \"0\",\r\n                                                    },\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"limit\")}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"notLimit\")}\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n\r\n                            <Collapse\r\n                                in={\r\n                                    parseFloat(\r\n                                        policy.OptionsSerialized.tps_limit\r\n                                    ) !== 0\r\n                                }\r\n                            >\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            {t(\"tps\")}\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            type={\"number\"}\r\n                                            inputProps={{\r\n                                                step: 0.1,\r\n                                            }}\r\n                                            required\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .tps_limit\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"tps_limit\"\r\n                                            )}\r\n                                        />\r\n                                        <FormHelperText>\r\n                                            {t(\"tpsDes\")}\r\n                                        </FormHelperText>\r\n                                    </FormControl>\r\n                                </div>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            {t(\"tpsBurst\")}\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            type={\"number\"}\r\n                                            inputProps={{\r\n                                                step: 1,\r\n                                            }}\r\n                                            required\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .tps_limit_burst\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"tps_limit_burst\"\r\n                                            )}\r\n                                        />\r\n                                        <FormHelperText>\r\n                                            {t(\"tpsBurstDes\")}\r\n                                        </FormHelperText>\r\n                                    </FormControl>\r\n                                </div>\r\n                            </Collapse>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(4)}\r\n                        >\r\n                            {t(\"back\")}\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            {t(\"next\")}\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 4 && (\r\n                <form className={classes.stepContent}>\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer} />\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {props.policy\r\n                                    ? t(\"policySaved\")\r\n                                    : t(\"policyAdded\")}\r\n                            </Typography>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"odOauthDes\")}\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <Button\r\n                                    disabled={loading}\r\n                                    color={\"secondary\"}\r\n                                    variant={\"contained\"}\r\n                                    className={classes.button}\r\n                                    onClick={statOAuth}\r\n                                    classes={{ label: classes.viewButtonLabel }}\r\n                                >\r\n                                    {t(\"gotoAuthPage\")}\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.stepFooter}></div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 5 && (\r\n                <>\r\n                    <form className={classes.stepContent}>\r\n                        <Typography>\r\n                            {props.policy ? t(\"policySaved\") : t(\"policyAdded\")}\r\n                        </Typography>\r\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\r\n                            {t(\"furtherActions\")}\r\n                        </Typography>\r\n                    </form>\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"primary\"}\r\n                            className={classes.button}\r\n                            onClick={() => history.push(\"/admin/policy\")}\r\n                        >\r\n                            {t(\"backToList\")}\r\n                        </Button>\r\n                    </div>\r\n                </>\r\n            )}\r\n\r\n            <MagicVar\r\n                open={magicVar === \"file\"}\r\n                isFile\r\n                onClose={() => setMagicVar(\"\")}\r\n            />\r\n            <MagicVar\r\n                open={magicVar === \"path\"}\r\n                onClose={() => setMagicVar(\"\")}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { toggleSnackbar } from \"../../../../redux/explorer\";\r\nimport API from \"../../../../middleware/Api\";\r\nimport { getNumber } from \"../../../../utils\";\r\nimport DomainInput from \"../../Common/DomainInput\";\r\nimport SizeInput from \"../../Common/SizeInput\";\r\nimport MagicVar from \"../../Dialogs/MagicVar\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    stepContent: {\r\n        padding: \"16px 32px 16px 32px\",\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n    subStepContainer: {\r\n        display: \"flex\",\r\n        marginBottom: 20,\r\n        padding: 10,\r\n        transition: theme.transitions.create(\"background-color\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        \"&:focus-within\": {\r\n            backgroundColor: theme.palette.background.default,\r\n        },\r\n    },\r\n    stepNumber: {\r\n        width: 20,\r\n        height: 20,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\r\n        color: theme.palette.secondary.contrastText,\r\n        textAlign: \"center\",\r\n        borderRadius: \" 50%\",\r\n    },\r\n    stepNumberContainer: {\r\n        marginRight: 10,\r\n    },\r\n    stepFooter: {\r\n        marginTop: 32,\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    viewButtonLabel: { textTransform: \"none\" },\r\n    \"@global\": {\r\n        code: {\r\n            color: \"rgba(0, 0, 0, 0.87)\",\r\n            display: \"inline-block\",\r\n            padding: \"2px 6px\",\r\n            fontFamily:\r\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\r\n            borderRadius: \"2px\",\r\n            backgroundColor: \"rgba(255,229,100,0.1)\",\r\n        },\r\n    },\r\n}));\r\n\r\nconst steps = [\r\n    {\r\n        title: \"storageBucket\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"storagePathStep\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"sourceLinkStep\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"uploadSettingStep\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"corsSettingStep\",\r\n        optional: true,\r\n    },\r\n    {\r\n        title: \"finishStep\",\r\n        optional: false,\r\n    },\r\n];\r\n\r\nexport default function OSSGuide(props) {\r\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"policy\" });\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [loading, setLoading] = useState(false);\r\n    const [skipped, setSkipped] = React.useState(new Set());\r\n    const [magicVar, setMagicVar] = useState(\"\");\r\n    const [useCDN, setUseCDN] = useState(\"false\");\r\n    const [useLanEndpoint, setUseLanEndpoint] = useState(\r\n        props.policy && props.policy.OptionsSerialized.server_side_endpoint\r\n            ? props.policy.OptionsSerialized.server_side_endpoint !== \"\"\r\n            : false\r\n    );\r\n    const [policy, setPolicy] = useState(\r\n        props.policy\r\n            ? props.policy\r\n            : {\r\n                  Type: \"oss\",\r\n                  Name: \"\",\r\n                  SecretKey: \"\",\r\n                  AccessKey: \"\",\r\n                  BaseURL: \"\",\r\n                  Server: \"\",\r\n                  IsPrivate: \"true\",\r\n                  DirNameRule: \"uploads/{year}/{month}/{day}\",\r\n                  AutoRename: \"true\",\r\n                  FileNameRule: \"{randomkey8}_{originname}\",\r\n                  IsOriginLinkEnable: \"false\",\r\n                  MaxSize: \"0\",\r\n                  OptionsSerialized: {\r\n                      file_type: \"\",\r\n                      server_side_endpoint: \"\",\r\n                      chunk_size: 25 << 20,\r\n                      placeholder_with_size: \"false\",\r\n                  },\r\n              }\r\n    );\r\n    const [policyID, setPolicyID] = useState(\r\n        props.policy ? props.policy.ID : 0\r\n    );\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setPolicy({\r\n            ...policy,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const handleOptionChange = (name) => (event) => {\r\n        setPolicy({\r\n            ...policy,\r\n            OptionsSerialized: {\r\n                ...policy.OptionsSerialized,\r\n                [name]: event.target.value,\r\n            },\r\n        });\r\n    };\r\n\r\n    const isStepSkipped = (step) => {\r\n        return skipped.has(step);\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const submitPolicy = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n\r\n        const policyCopy = { ...policy };\r\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\r\n\r\n        if (useCDN === \"false\") {\r\n            policyCopy.BaseURL = \"\";\r\n        }\r\n\r\n        if (!useLanEndpoint) {\r\n            policyCopy.OptionsSerialized.server_side_endpoint = \"\";\r\n        }\r\n\r\n        // 类型转换\r\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\r\n        policyCopy.IsOriginLinkEnable =\r\n            policyCopy.IsOriginLinkEnable === \"true\";\r\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\r\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\r\n        policyCopy.OptionsSerialized.chunk_size = parseInt(\r\n            policyCopy.OptionsSerialized.chunk_size\r\n        );\r\n        policyCopy.OptionsSerialized.placeholder_with_size =\r\n            policyCopy.OptionsSerialized.placeholder_with_size === \"true\";\r\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\r\n            \",\"\r\n        );\r\n        if (\r\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\r\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\r\n        ) {\r\n            policyCopy.OptionsSerialized.file_type = [];\r\n        }\r\n\r\n        API.post(\"/admin/policy\", {\r\n            policy: policyCopy,\r\n        })\r\n            .then((response) => {\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    props.policy ? t(\"policySaved\") : t(\"policyAdded\"),\r\n                    \"success\"\r\n                );\r\n                setActiveStep(4);\r\n                setPolicyID(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n\r\n        setLoading(false);\r\n    };\r\n\r\n    const createCORS = () => {\r\n        setLoading(true);\r\n        API.post(\"/admin/policy/cors\", {\r\n            id: policyID,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\"top\", \"right\", t(\"corsPolicyAdded\"), \"success\");\r\n                setActiveStep(5);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant={\"h6\"}>\r\n                {props.policy\r\n                    ? t(\"editOSSStoragePolicy\")\r\n                    : t(\"addOSSStoragePolicy\")}\r\n            </Typography>\r\n            <Stepper activeStep={activeStep}>\r\n                {steps.map((label, index) => {\r\n                    const stepProps = {};\r\n                    const labelProps = {};\r\n                    if (label.optional) {\r\n                        labelProps.optional = (\r\n                            <Typography variant=\"caption\">\r\n                                {t(\"optional\")}\r\n                            </Typography>\r\n                        );\r\n                    }\r\n                    if (isStepSkipped(index)) {\r\n                        stepProps.completed = false;\r\n                    }\r\n                    return (\r\n                        <Step key={label.title} {...stepProps}>\r\n                            <StepLabel {...labelProps}>\r\n                                {t(label.title)}\r\n                            </StepLabel>\r\n                        </Step>\r\n                    );\r\n                })}\r\n            </Stepper>\r\n\r\n            {activeStep === 0 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(1);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>0</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                <Trans\r\n                                    ns={\"dashboard\"}\r\n                                    i18nKey={\"policy.wanSiteURLDes\"}\r\n                                    components={[<strong key={0} />]}\r\n                                />\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                <Trans\r\n                                    ns={\"dashboard\"}\r\n                                    i18nKey={\"policy.createOSSBucketDes\"}\r\n                                    components={[\r\n                                        <Link\r\n                                            key={0}\r\n                                            href={\r\n                                                \"https://oss.console.aliyun.com/overview\"\r\n                                            }\r\n                                            target={\"_blank\"}\r\n                                        />,\r\n                                        <code key={1} />,\r\n                                        <code key={2} />,\r\n                                        <code key={3} />,\r\n                                    ]}\r\n                                />\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>2</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                <Trans\r\n                                    ns={\"dashboard\"}\r\n                                    i18nKey={\"policy.ossBucketNameDes\"}\r\n                                    components={[<code key={0} />]}\r\n                                />\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        {t(\"bucketName\")}\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.BucketName}\r\n                                        onChange={handleChange(\"BucketName\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>3</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"bucketTypeDes\")}\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={policy.IsPrivate}\r\n                                        onChange={handleChange(\"IsPrivate\")}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"privateBucket\")}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"publicReadBucket\")}\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>4</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                <Trans\r\n                                    ns={\"dashboard\"}\r\n                                    i18nKey={\"policy.ossEndpointDes\"}\r\n                                    components={[\r\n                                        <code key={0} />,\r\n                                        <code key={1} />,\r\n                                        <code key={2} />,\r\n                                    ]}\r\n                                />\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        {t(\"endpoint\")}\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.Server}\r\n                                        onChange={handleChange(\"Server\")}\r\n                                        inputProps={{\r\n                                            pattern:\r\n                                                \"(?:(?:(?<thld>[\\\\w\\\\-]*)(?:\\\\.))?(?<sld>[\\\\w\\\\-]*))\\\\.(?<tld>[\\\\w\\\\-]*)\",\r\n                                            title: t(\"endpointDomainOnly\"),\r\n                                        }}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>5</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"ossLANEndpointDes\")}\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={useLanEndpoint.toString()}\r\n                                        onChange={(e) => {\r\n                                            setUseLanEndpoint(\r\n                                                e.target.value === \"true\"\r\n                                            );\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"use\")}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"notUse\")}\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                            <Collapse in={useLanEndpoint}>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            {t(\"intranetEndPoint\")}\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            required={useLanEndpoint}\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .server_side_endpoint\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"server_side_endpoint\"\r\n                                            )}\r\n                                            inputProps={{\r\n                                                pattern:\r\n                                                    \"(?:(?:(?<thld>[\\\\w\\\\-]*)(?:\\\\.))?(?<sld>[\\\\w\\\\-]*))\\\\.(?<tld>[\\\\w\\\\-]*)\",\r\n                                                title: t(\"endpointDomainOnly\"),\r\n                                            }}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </Collapse>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>6</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"ossCDNDes\")}\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={useCDN}\r\n                                        onChange={(e) => {\r\n                                            setUseCDN(e.target.value);\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"use\")}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"notUse\")}\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={useCDN === \"true\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>7</div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    <Trans\r\n                                        ns={\"dashboard\"}\r\n                                        i18nKey={\"policy.createOSSCDNDes\"}\r\n                                        components={[\r\n                                            <Link\r\n                                                key={0}\r\n                                                href={\r\n                                                    \"https://cdn.console.aliyun.com/domain/list\"\r\n                                                }\r\n                                                target={\"_blank\"}\r\n                                            />,\r\n                                        ]}\r\n                                    />\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <DomainInput\r\n                                        value={policy.BaseURL}\r\n                                        onChange={handleChange(\"BaseURL\")}\r\n                                        required={useCDN === \"true\"}\r\n                                        label={t(\"bucketCDNDomain\")}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {getNumber(7, [useCDN === \"true\"])}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                <Trans\r\n                                    ns={\"dashboard\"}\r\n                                    i18nKey={\"policy.ossAKDes\"}\r\n                                    components={[\r\n                                        <Link\r\n                                            key={0}\r\n                                            href={\r\n                                                \"https://usercenter.console.aliyun.com/#/manage/ak\"\r\n                                            }\r\n                                            target={\"_blank\"}\r\n                                        />,\r\n                                    ]}\r\n                                />\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        AccessKey ID\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        inputProps={{\r\n                                            pattern: \"\\\\S+\",\r\n                                            title: t(\"shouldNotContainSpace\"),\r\n                                        }}\r\n                                        value={policy.AccessKey}\r\n                                        onChange={handleChange(\"AccessKey\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        Access Key Secret\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        inputProps={{\r\n                                            pattern: \"\\\\S+\",\r\n                                            title: t(\"shouldNotContainSpace\"),\r\n                                        }}\r\n                                        value={policy.SecretKey}\r\n                                        onChange={handleChange(\"SecretKey\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {getNumber(8, [useCDN === \"true\"])}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"nameThePolicyFirst\")}\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        {t(\"policyName\")}\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.Name}\r\n                                        onChange={handleChange(\"Name\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            {t(\"next\")}\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 1 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(2);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                <Trans\r\n                                    ns={\"dashboard\"}\r\n                                    i18nKey={\"policy.pathMagicVarDes\"}\r\n                                    components={[\r\n                                        <Link\r\n                                            key={0}\r\n                                            color={\"secondary\"}\r\n                                            href={\"javascript:void()\"}\r\n                                            onClick={() => setMagicVar(\"path\")}\r\n                                        />,\r\n                                    ]}\r\n                                />\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        {t(\"pathOfFolderToStoreFiles\")}\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.DirNameRule}\r\n                                        onChange={handleChange(\"DirNameRule\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>2</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                <Trans\r\n                                    ns={\"dashboard\"}\r\n                                    i18nKey={\"policy.filePathMagicVarDes\"}\r\n                                    components={[\r\n                                        <Link\r\n                                            key={0}\r\n                                            color={\"secondary\"}\r\n                                            href={\"javascript:void()\"}\r\n                                            onClick={() => setMagicVar(\"file\")}\r\n                                        />,\r\n                                    ]}\r\n                                />\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        aria-label=\"gender\"\r\n                                        name=\"gender1\"\r\n                                        value={policy.AutoRename}\r\n                                        onChange={handleChange(\"AutoRename\")}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"autoRenameStoredFile\")}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"keepOriginalFileName\")}\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n\r\n                            <Collapse in={policy.AutoRename === \"true\"}>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            {t(\"renameRule\")}\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            required={\r\n                                                policy.AutoRename === \"true\"\r\n                                            }\r\n                                            value={policy.FileNameRule}\r\n                                            onChange={handleChange(\r\n                                                \"FileNameRule\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </Collapse>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(0)}\r\n                        >\r\n                            {t(\"back\")}\r\n                        </Button>\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            {t(\"next\")}\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 2 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(3);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"enableGettingPermanentSourceLink\")}\r\n                                <br />\r\n                                {t(\"enableGettingPermanentSourceLinkDes\")}\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={policy.IsOriginLinkEnable}\r\n                                        onChange={(e) => {\r\n                                            if (\r\n                                                policy.IsPrivate === \"true\" &&\r\n                                                e.target.value === \"true\"\r\n                                            ) {\r\n                                                ToggleSnackbar(\r\n                                                    \"top\",\r\n                                                    \"right\",\r\n                                                    t(\r\n                                                        \"cannotEnableForPrivateBucket\"\r\n                                                    ),\r\n                                                    \"warning\"\r\n                                                );\r\n                                                return;\r\n                                            }\r\n                                            handleChange(\"IsOriginLinkEnable\")(\r\n                                                e\r\n                                            );\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"allowed\")}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"forbidden\")}\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(1)}\r\n                        >\r\n                            {t(\"back\")}\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            {t(\"next\")}\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 3 && (\r\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"limitFileSize\")}\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={\r\n                                            policy.MaxSize === \"0\"\r\n                                                ? \"false\"\r\n                                                : \"true\"\r\n                                        }\r\n                                        onChange={(e) => {\r\n                                            if (e.target.value === \"true\") {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    MaxSize: \"10485760\",\r\n                                                });\r\n                                            } else {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    MaxSize: \"0\",\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"limit\")}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"notLimit\")}\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.MaxSize !== \"0\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>2</div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    {t(\"enterSizeLimit\")}\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <SizeInput\r\n                                        value={policy.MaxSize}\r\n                                        onChange={handleChange(\"MaxSize\")}\r\n                                        min={0}\r\n                                        max={9223372036854775807}\r\n                                        label={t(\"maxSizeOfSingleFile\")}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"limitFileExt\")}\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={\r\n                                            policy.OptionsSerialized\r\n                                                .file_type === \"\"\r\n                                                ? \"false\"\r\n                                                : \"true\"\r\n                                        }\r\n                                        onChange={(e) => {\r\n                                            if (e.target.value === \"true\") {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    OptionsSerialized: {\r\n                                                        ...policy.OptionsSerialized,\r\n                                                        file_type:\r\n                                                            \"jpg,png,mp4,zip,rar\",\r\n                                                    },\r\n                                                });\r\n                                            } else {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    OptionsSerialized: {\r\n                                                        ...policy.OptionsSerialized,\r\n                                                        file_type: \"\",\r\n                                                    },\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"limit\")}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"notLimit\")}\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>\r\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    {t(\"enterFileExt\")}\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            {t(\"extList\")}\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .file_type\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"file_type\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {getNumber(3, [\r\n                                    policy.MaxSize !== \"0\",\r\n                                    policy.OptionsSerialized.file_type !== \"\",\r\n                                ])}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"chunkSizeLabelOSS\")}\r\n                                <br />\r\n                                {t(\"chunkSizeDes\")}\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <SizeInput\r\n                                    value={policy.OptionsSerialized.chunk_size}\r\n                                    onChange={handleOptionChange(\"chunk_size\")}\r\n                                    min={100 * 1024}\r\n                                    max={5368709120}\r\n                                    label={t(\"chunkSize\")}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {getNumber(4, [\r\n                                    policy.MaxSize !== \"0\",\r\n                                    policy.OptionsSerialized.file_type !== \"\",\r\n                                ])}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"createPlaceholderDes\")}\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        aria-label=\"gender\"\r\n                                        name=\"gender1\"\r\n                                        value={\r\n                                            policy.OptionsSerialized\r\n                                                .placeholder_with_size\r\n                                        }\r\n                                        onChange={handleOptionChange(\r\n                                            \"placeholder_with_size\"\r\n                                        )}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"createPlaceholder\")}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"notCreatePlaceholder\")}\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(2)}\r\n                        >\r\n                            {t(\"back\")}\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            {t(\"next\")}\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 4 && (\r\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer} />\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"ossCORSDes\")}\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <Button\r\n                                    disabled={loading}\r\n                                    color={\"secondary\"}\r\n                                    variant={\"contained\"}\r\n                                    className={classes.button}\r\n                                    onClick={() => createCORS()}\r\n                                    classes={{ label: classes.viewButtonLabel }}\r\n                                >\r\n                                    {t(\"letCloudreveHelpMe\")}\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => {\r\n                                setActiveStep(\r\n                                    (prevActiveStep) => prevActiveStep + 1\r\n                                );\r\n                                setSkipped((prevSkipped) => {\r\n                                    const newSkipped = new Set(\r\n                                        prevSkipped.values()\r\n                                    );\r\n                                    newSkipped.add(activeStep);\r\n                                    return newSkipped;\r\n                                });\r\n                            }}\r\n                        >\r\n                            {t(\"skip\")}\r\n                        </Button>{\" \"}\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 5 && (\r\n                <>\r\n                    <form className={classes.stepContent}>\r\n                        <Typography>\r\n                            {props.policy ? t(\"policySaved\") : t(\"policyAdded\")}\r\n                        </Typography>\r\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\r\n                            {t(\"furtherActions\")}\r\n                        </Typography>\r\n                    </form>\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"primary\"}\r\n                            className={classes.button}\r\n                            onClick={() => history.push(\"/admin/policy\")}\r\n                        >\r\n                            {t(\"backToList\")}\r\n                        </Button>\r\n                    </div>\r\n                </>\r\n            )}\r\n\r\n            <MagicVar\r\n                open={magicVar === \"file\"}\r\n                isFile\r\n                onClose={() => setMagicVar(\"\")}\r\n            />\r\n            <MagicVar\r\n                open={magicVar === \"path\"}\r\n                onClose={() => setMagicVar(\"\")}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { toggleSnackbar } from \"../../../../redux/explorer\";\r\nimport API from \"../../../../middleware/Api\";\r\nimport { getNumber } from \"../../../../utils\";\r\nimport DomainInput from \"../../Common/DomainInput\";\r\nimport SizeInput from \"../../Common/SizeInput\";\r\nimport MagicVar from \"../../Dialogs/MagicVar\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    stepContent: {\r\n        padding: \"16px 32px 16px 32px\",\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n    subStepContainer: {\r\n        display: \"flex\",\r\n        marginBottom: 20,\r\n        padding: 10,\r\n        transition: theme.transitions.create(\"background-color\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        \"&:focus-within\": {\r\n            backgroundColor: theme.palette.background.default,\r\n        },\r\n    },\r\n    stepNumber: {\r\n        width: 20,\r\n        height: 20,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\r\n        color: theme.palette.secondary.contrastText,\r\n        textAlign: \"center\",\r\n        borderRadius: \" 50%\",\r\n    },\r\n    stepNumberContainer: {\r\n        marginRight: 10,\r\n    },\r\n    stepFooter: {\r\n        marginTop: 32,\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst steps = [\r\n    {\r\n        title: \"storageBucket\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"storagePathStep\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"sourceLinkStep\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"uploadSettingStep\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"finishStep\",\r\n        optional: false,\r\n    },\r\n];\r\n\r\nexport default function RemoteGuide(props) {\r\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"policy\" });\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [loading, setLoading] = useState(false);\r\n    const [skipped] = React.useState(new Set());\r\n    const [magicVar, setMagicVar] = useState(\"\");\r\n    // const [useCDN, setUseCDN] = useState(\"false\");\r\n    const [policy, setPolicy] = useState(\r\n        props.policy\r\n            ? props.policy\r\n            : {\r\n                  Type: \"qiniu\",\r\n                  Name: \"\",\r\n                  SecretKey: \"\",\r\n                  AccessKey: \"\",\r\n                  BaseURL: \"\",\r\n                  IsPrivate: \"true\",\r\n                  DirNameRule: \"uploads/{year}/{month}/{day}\",\r\n                  AutoRename: \"true\",\r\n                  FileNameRule: \"{randomkey8}_{originname}\",\r\n                  IsOriginLinkEnable: \"false\",\r\n                  MaxSize: \"0\",\r\n                  OptionsSerialized: {\r\n                      file_type: \"\",\r\n                      mimetype: \"\",\r\n                      chunk_size: 25 << 20,\r\n                      placeholder_with_size: \"false\",\r\n                  },\r\n              }\r\n    );\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setPolicy({\r\n            ...policy,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const handleOptionChange = (name) => (event) => {\r\n        setPolicy({\r\n            ...policy,\r\n            OptionsSerialized: {\r\n                ...policy.OptionsSerialized,\r\n                [name]: event.target.value,\r\n            },\r\n        });\r\n    };\r\n\r\n    const isStepSkipped = (step) => {\r\n        return skipped.has(step);\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const submitPolicy = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n\r\n        const policyCopy = { ...policy };\r\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\r\n\r\n        // 类型转换\r\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\r\n        policyCopy.IsOriginLinkEnable =\r\n            policyCopy.IsOriginLinkEnable === \"true\";\r\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\r\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\r\n        policyCopy.OptionsSerialized.chunk_size = parseInt(\r\n            policyCopy.OptionsSerialized.chunk_size\r\n        );\r\n        policyCopy.OptionsSerialized.placeholder_with_size =\r\n            policyCopy.OptionsSerialized.placeholder_with_size === \"true\";\r\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\r\n            \",\"\r\n        );\r\n        if (\r\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\r\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\r\n        ) {\r\n            policyCopy.OptionsSerialized.file_type = [];\r\n        }\r\n\r\n        API.post(\"/admin/policy\", {\r\n            policy: policyCopy,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    props.policy ? t(\"policySaved\") : t(\"policyAdded\"),\r\n                    \"success\"\r\n                );\r\n                setActiveStep(5);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n\r\n        setLoading(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant={\"h6\"}>\r\n                {props.policy\r\n                    ? t(\"editQiniuStoragePolicy\")\r\n                    : t(\"addQiniuStoragePolicy\")}\r\n            </Typography>\r\n            <Stepper activeStep={activeStep}>\r\n                {steps.map((label, index) => {\r\n                    const stepProps = {};\r\n                    const labelProps = {};\r\n                    if (label.optional) {\r\n                        labelProps.optional = (\r\n                            <Typography variant=\"caption\">\r\n                                {t(\"optional\")}\r\n                            </Typography>\r\n                        );\r\n                    }\r\n                    if (isStepSkipped(index)) {\r\n                        stepProps.completed = false;\r\n                    }\r\n                    return (\r\n                        <Step key={label.title} {...stepProps}>\r\n                            <StepLabel {...labelProps}>\r\n                                {t(label.title)}\r\n                            </StepLabel>\r\n                        </Step>\r\n                    );\r\n                })}\r\n            </Stepper>\r\n\r\n            {activeStep === 0 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(1);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>0</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                <Trans\r\n                                    ns={\"dashboard\"}\r\n                                    i18nKey={\"policy.wanSiteURLDes\"}\r\n                                    components={[<strong key={0} />]}\r\n                                />\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                <Trans\r\n                                    ns={\"dashboard\"}\r\n                                    i18nKey={\"policy.createQiniuBucket\"}\r\n                                    components={[\r\n                                        <Link\r\n                                            key={0}\r\n                                            href={\r\n                                                \"https://portal.qiniu.com/create\"\r\n                                            }\r\n                                            target={\"_blank\"}\r\n                                        />,\r\n                                    ]}\r\n                                />\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>2</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"enterQiniuBucket\")}\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        {t(\"qiniuBucketName\")}\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.BucketName}\r\n                                        onChange={handleChange(\"BucketName\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>3</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"bucketTypeDes\")}\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={policy.IsPrivate}\r\n                                        onChange={handleChange(\"IsPrivate\")}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"privateBucket\")}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"publicBucket\")}\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>4</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"bucketCDNDes\")}\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <DomainInput\r\n                                    value={policy.BaseURL}\r\n                                    onChange={handleChange(\"BaseURL\")}\r\n                                    required\r\n                                    label={t(\"bucketCDNDomain\")}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>5</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"qiniuCredentialDes\")}\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        {t(\"ak\")}\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.AccessKey}\r\n                                        onChange={handleChange(\"AccessKey\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        {t(\"sk\")}\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.SecretKey}\r\n                                        onChange={handleChange(\"SecretKey\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            {t(\"next\")}\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 1 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(2);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                <Trans\r\n                                    ns={\"dashboard\"}\r\n                                    i18nKey={\"policy.pathMagicVarDes\"}\r\n                                    components={[\r\n                                        <Link\r\n                                            key={0}\r\n                                            color={\"secondary\"}\r\n                                            href={\"javascript:void()\"}\r\n                                            onClick={() => setMagicVar(\"path\")}\r\n                                        />,\r\n                                    ]}\r\n                                />\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        {t(\"pathOfFolderToStoreFiles\")}\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.DirNameRule}\r\n                                        onChange={handleChange(\"DirNameRule\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>2</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                <Trans\r\n                                    ns={\"dashboard\"}\r\n                                    i18nKey={\"policy.filePathMagicVarDes\"}\r\n                                    components={[\r\n                                        <Link\r\n                                            key={0}\r\n                                            color={\"secondary\"}\r\n                                            href={\"javascript:void()\"}\r\n                                            onClick={() => setMagicVar(\"file\")}\r\n                                        />,\r\n                                    ]}\r\n                                />\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        aria-label=\"gender\"\r\n                                        name=\"gender1\"\r\n                                        value={policy.AutoRename}\r\n                                        onChange={handleChange(\"AutoRename\")}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"autoRenameStoredFile\")}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"keepOriginalFileName\")}\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n\r\n                            <Collapse in={policy.AutoRename === \"true\"}>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            {t(\"renameRule\")}\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            required={\r\n                                                policy.AutoRename === \"true\"\r\n                                            }\r\n                                            value={policy.FileNameRule}\r\n                                            onChange={handleChange(\r\n                                                \"FileNameRule\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </Collapse>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(0)}\r\n                        >\r\n                            {t(\"back\")}\r\n                        </Button>\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            {t(\"next\")}\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 2 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(3);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"enableGettingPermanentSourceLink\")}\r\n                                <br />\r\n                                {t(\"enableGettingPermanentSourceLinkDes\")}\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={policy.IsOriginLinkEnable}\r\n                                        onChange={(e) => {\r\n                                            if (\r\n                                                policy.IsPrivate === \"true\" &&\r\n                                                e.target.value === \"true\"\r\n                                            ) {\r\n                                                ToggleSnackbar(\r\n                                                    \"top\",\r\n                                                    \"right\",\r\n                                                    t(\r\n                                                        \"cannotEnableForPrivateBucket\"\r\n                                                    ),\r\n                                                    \"warning\"\r\n                                                );\r\n                                                return;\r\n                                            }\r\n                                            handleChange(\"IsOriginLinkEnable\")(\r\n                                                e\r\n                                            );\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"allowed\")}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"forbidden\")}\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(1)}\r\n                        >\r\n                            {t(\"back\")}\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            {t(\"next\")}\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 3 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(4);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"limitFileSize\")}\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={\r\n                                            policy.MaxSize === \"0\"\r\n                                                ? \"false\"\r\n                                                : \"true\"\r\n                                        }\r\n                                        onChange={(e) => {\r\n                                            if (e.target.value === \"true\") {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    MaxSize: \"10485760\",\r\n                                                });\r\n                                            } else {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    MaxSize: \"0\",\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"limit\")}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"notLimit\")}\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.MaxSize !== \"0\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>2</div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    {t(\"enterSizeLimit\")}\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <SizeInput\r\n                                        value={policy.MaxSize}\r\n                                        onChange={handleChange(\"MaxSize\")}\r\n                                        min={0}\r\n                                        max={9223372036854775807}\r\n                                        label={t(\"maxSizeOfSingleFile\")}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"limitFileExt\")}\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={\r\n                                            policy.OptionsSerialized\r\n                                                .file_type === \"\"\r\n                                                ? \"false\"\r\n                                                : \"true\"\r\n                                        }\r\n                                        onChange={(e) => {\r\n                                            if (e.target.value === \"true\") {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    OptionsSerialized: {\r\n                                                        ...policy.OptionsSerialized,\r\n                                                        file_type:\r\n                                                            \"jpg,png,mp4,zip,rar\",\r\n                                                    },\r\n                                                });\r\n                                            } else {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    OptionsSerialized: {\r\n                                                        ...policy.OptionsSerialized,\r\n                                                        file_type: \"\",\r\n                                                    },\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"limit\")}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"notLimit\")}\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>\r\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    {t(\"enterFileExt\")}\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            {t(\"extList\")}\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .file_type\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"file_type\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {getNumber(3, [\r\n                                    policy.MaxSize !== \"0\",\r\n                                    policy.OptionsSerialized.file_type !== \"\",\r\n                                ])}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"limitMimeType\")}\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={\r\n                                            policy.OptionsSerialized\r\n                                                .mimetype === \"\"\r\n                                                ? \"false\"\r\n                                                : \"true\"\r\n                                        }\r\n                                        onChange={(e) => {\r\n                                            if (e.target.value === \"true\") {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    OptionsSerialized: {\r\n                                                        ...policy.OptionsSerialized,\r\n                                                        mimetype: \"image/*\",\r\n                                                    },\r\n                                                });\r\n                                            } else {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    OptionsSerialized: {\r\n                                                        ...policy.OptionsSerialized,\r\n                                                        mimetype: \"\",\r\n                                                    },\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"limit\")}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"notLimit\")}\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.OptionsSerialized.mimetype !== \"\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>\r\n                                    {getNumber(4, [\r\n                                        policy.MaxSize !== \"0\",\r\n                                        policy.OptionsSerialized.file_type !==\r\n                                            \"\",\r\n                                    ])}\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    {t(\"mimeTypeDes\")}\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            {t(\"mimeTypeList\")}\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .mimetype\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"mimetype\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {getNumber(4, [\r\n                                    policy.MaxSize !== \"0\",\r\n                                    policy.OptionsSerialized.file_type !== \"\",\r\n                                    policy.OptionsSerialized.mimetype !== \"\",\r\n                                ])}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"chunkSizeLabelQiniu\")}\r\n                                <br />\r\n                                {t(\"chunkSizeDes\")}\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <SizeInput\r\n                                    value={policy.OptionsSerialized.chunk_size}\r\n                                    onChange={handleOptionChange(\"chunk_size\")}\r\n                                    min={1 << 20}\r\n                                    max={1024 << 20}\r\n                                    label={t(\"chunkSize\")}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {getNumber(5, [\r\n                                    policy.MaxSize !== \"0\",\r\n                                    policy.OptionsSerialized.file_type !== \"\",\r\n                                    policy.OptionsSerialized.mimetype !== \"\",\r\n                                ])}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"createPlaceholderDes\")}\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        aria-label=\"gender\"\r\n                                        name=\"gender1\"\r\n                                        value={\r\n                                            policy.OptionsSerialized\r\n                                                .placeholder_with_size\r\n                                        }\r\n                                        onChange={handleOptionChange(\r\n                                            \"placeholder_with_size\"\r\n                                        )}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"createPlaceholder\")}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"notCreatePlaceholder\")}\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(2)}\r\n                        >\r\n                            {t(\"back\")}\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            {t(\"next\")}\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 4 && (\r\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer} />\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"nameThePolicy\")}\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        {t(\"policyName\")}\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.Name}\r\n                                        onChange={handleChange(\"Name\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(3)}\r\n                        >\r\n                            {t(\"back\")}\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            {t(\"finish\")}\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 5 && (\r\n                <>\r\n                    <form className={classes.stepContent}>\r\n                        <Typography>\r\n                            {props.policy ? t(\"policySaved\") : t(\"policyAdded\")}\r\n                        </Typography>\r\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\r\n                            {t(\"furtherActions\")}\r\n                        </Typography>\r\n                    </form>\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"primary\"}\r\n                            className={classes.button}\r\n                            onClick={() => history.push(\"/admin/policy\")}\r\n                        >\r\n                            {t(\"backToList\")}\r\n                        </Button>\r\n                    </div>\r\n                </>\r\n            )}\r\n\r\n            <MagicVar\r\n                open={magicVar === \"file\"}\r\n                isFile\r\n                onClose={() => setMagicVar(\"\")}\r\n            />\r\n            <MagicVar\r\n                open={magicVar === \"path\"}\r\n                onClose={() => setMagicVar(\"\")}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { toggleSnackbar } from \"../../../../redux/explorer\";\r\nimport API from \"../../../../middleware/Api\";\r\nimport { getNumber, randomStr } from \"../../../../utils\";\r\nimport DomainInput from \"../../Common/DomainInput\";\r\nimport SizeInput from \"../../Common/SizeInput\";\r\nimport MagicVar from \"../../Dialogs/MagicVar\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    stepContent: {\r\n        padding: \"16px 32px 16px 32px\",\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n    subStepContainer: {\r\n        display: \"flex\",\r\n        marginBottom: 20,\r\n        padding: 10,\r\n        transition: theme.transitions.create(\"background-color\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        \"&:focus-within\": {\r\n            backgroundColor: theme.palette.background.default,\r\n        },\r\n    },\r\n    stepNumber: {\r\n        width: 20,\r\n        height: 20,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\r\n        color: theme.palette.secondary.contrastText,\r\n        textAlign: \"center\",\r\n        borderRadius: \" 50%\",\r\n    },\r\n    stepNumberContainer: {\r\n        marginRight: 10,\r\n    },\r\n    stepFooter: {\r\n        marginTop: 32,\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    \"@global\": {\r\n        code: {\r\n            color: \"rgba(0, 0, 0, 0.87)\",\r\n            display: \"inline-block\",\r\n            padding: \"2px 6px\",\r\n            fontSize: \"14px\",\r\n            fontFamily:\r\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\r\n            borderRadius: \"2px\",\r\n            backgroundColor: \"rgba(255,229,100,0.1)\",\r\n        },\r\n        pre: {\r\n            margin: \"24px 0\",\r\n            padding: \"12px 18px\",\r\n            overflow: \"auto\",\r\n            direction: \"ltr\",\r\n            borderRadius: \"4px\",\r\n            backgroundColor: \"#272c34\",\r\n            color: \"#fff\",\r\n        },\r\n    },\r\n}));\r\n\r\nconst steps = [\r\n    {\r\n        title: \"storageNode\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"storagePathStep\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"sourceLinkStep\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"uploadSettingStep\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"finishStep\",\r\n        optional: false,\r\n    },\r\n];\r\n\r\nexport default function RemoteGuide(props) {\r\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"policy\" });\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [loading, setLoading] = useState(false);\r\n    const [skipped] = React.useState(new Set());\r\n    const [magicVar, setMagicVar] = useState(\"\");\r\n    const [useCDN, setUseCDN] = useState(\"false\");\r\n    const [policy, setPolicy] = useState(\r\n        props.policy\r\n            ? props.policy\r\n            : {\r\n                  Type: \"remote\",\r\n                  Name: \"\",\r\n                  Server: \"https://example.com:5212\",\r\n                  SecretKey: randomStr(64),\r\n                  DirNameRule: \"uploads/{year}/{month}/{day}\",\r\n                  AutoRename: \"true\",\r\n                  FileNameRule: \"{randomkey8}_{originname}\",\r\n                  IsOriginLinkEnable: \"false\",\r\n                  BaseURL: \"\",\r\n                  IsPrivate: \"true\",\r\n                  MaxSize: \"0\",\r\n                  OptionsSerialized: {\r\n                      file_type: \"\",\r\n                      chunk_size: 25 << 20,\r\n                  },\r\n              }\r\n    );\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setPolicy({\r\n            ...policy,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const handleOptionChange = (name) => (event) => {\r\n        setPolicy({\r\n            ...policy,\r\n            OptionsSerialized: {\r\n                ...policy.OptionsSerialized,\r\n                [name]: event.target.value,\r\n            },\r\n        });\r\n    };\r\n\r\n    const isStepSkipped = (step) => {\r\n        return skipped.has(step);\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const testSlave = () => {\r\n        setLoading(true);\r\n\r\n        // 测试路径是否可用\r\n        API.post(\"/admin/policy/test/slave\", {\r\n            server: policy.Server,\r\n            secret: policy.SecretKey,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\"top\", \"right\", t(\"communicationOK\"), \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const submitPolicy = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n\r\n        const policyCopy = { ...policy };\r\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\r\n\r\n        // 处理存储策略\r\n        if (useCDN === \"false\" || policy.IsOriginLinkEnable === \"false\") {\r\n            policyCopy.BaseURL = \"\";\r\n        }\r\n\r\n        // 类型转换\r\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\r\n        policyCopy.IsOriginLinkEnable =\r\n            policyCopy.IsOriginLinkEnable === \"true\";\r\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\r\n        policyCopy.OptionsSerialized.chunk_size = parseInt(\r\n            policyCopy.OptionsSerialized.chunk_size\r\n        );\r\n        policyCopy.OptionsSerialized.placeholder_with_size =\r\n            policyCopy.OptionsSerialized.placeholder_with_size === \"true\";\r\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\r\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\r\n            \",\"\r\n        );\r\n        if (\r\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\r\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\r\n        ) {\r\n            policyCopy.OptionsSerialized.file_type = [];\r\n        }\r\n\r\n        API.post(\"/admin/policy\", {\r\n            policy: policyCopy,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    props.policy ? t(\"policySaved\") : t(\"policyAdded\"),\r\n                    \"success\"\r\n                );\r\n                setActiveStep(5);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n\r\n        setLoading(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant={\"h6\"}>\r\n                {props.policy\r\n                    ? t(\"editRemoteStoragePolicy\")\r\n                    : t(\"addRemoteStoragePolicy\")}\r\n            </Typography>\r\n            <Stepper activeStep={activeStep}>\r\n                {steps.map((label, index) => {\r\n                    const stepProps = {};\r\n                    const labelProps = {};\r\n                    if (label.optional) {\r\n                        labelProps.optional = (\r\n                            <Typography variant=\"caption\">\r\n                                {t(\"optional\")}\r\n                            </Typography>\r\n                        );\r\n                    }\r\n                    if (isStepSkipped(index)) {\r\n                        stepProps.completed = false;\r\n                    }\r\n                    return (\r\n                        <Step key={label.title} {...stepProps}>\r\n                            <StepLabel {...labelProps}>\r\n                                {t(label.title)}\r\n                            </StepLabel>\r\n                        </Step>\r\n                    );\r\n                })}\r\n            </Stepper>\r\n\r\n            {activeStep === 0 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(1);\r\n                    }}\r\n                >\r\n                    <Alert severity=\"info\" style={{ marginBottom: 10 }}>\r\n                        {t(\"remoteDescription\")}\r\n                    </Alert>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"remoteCopyBinaryDescription\")}\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>2</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"remoteSecretDescription\")}\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        {t(\"remoteSecret\")}\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        inputProps={{\r\n                                            minlength: 64,\r\n                                        }}\r\n                                        value={policy.SecretKey}\r\n                                        onChange={handleChange(\"SecretKey\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>3</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"modifyRemoteConfig\")}\r\n                                <br />\r\n                                <Trans\r\n                                    ns={\"dashboard\"}\r\n                                    i18nKey={\"policy.addRemoteConfigDes\"}\r\n                                    components={[<code key={0} />]}\r\n                                />\r\n                            </Typography>\r\n                            <pre>\r\n                                [System]\r\n                                <br />\r\n                                Mode = slave\r\n                                <br />\r\n                                Listen = :5212\r\n                                <br />\r\n                                <br />\r\n                                [Slave]\r\n                                <br />\r\n                                Secret = {policy.SecretKey}\r\n                                <br />\r\n                                <br />\r\n                                [CORS]\r\n                                <br />\r\n                                AllowOrigins = *<br />\r\n                                AllowMethods = OPTIONS,GET,POST\r\n                                <br />\r\n                                AllowHeaders = *<br />\r\n                            </pre>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"remoteConfigDifference\")}\r\n                                <ul>\r\n                                    <li>\r\n                                        <Trans\r\n                                            ns={\"dashboard\"}\r\n                                            i18nKey={\r\n                                                \"policy.remoteConfigDifference1\"\r\n                                            }\r\n                                            components={[\r\n                                                <code key={0} />,\r\n                                                <code key={1} />,\r\n                                                <code key={2} />,\r\n                                            ]}\r\n                                        />\r\n                                    </li>\r\n                                    <li>\r\n                                        <Trans\r\n                                            ns={\"dashboard\"}\r\n                                            i18nKey={\r\n                                                \"policy.remoteConfigDifference2\"\r\n                                            }\r\n                                            components={[\r\n                                                <code key={0} />,\r\n                                                <code key={1} />,\r\n                                            ]}\r\n                                        />\r\n                                    </li>\r\n                                    <li>\r\n                                        <Trans\r\n                                            ns={\"dashboard\"}\r\n                                            i18nKey={\r\n                                                \"policy.remoteConfigDifference3\"\r\n                                            }\r\n                                            components={[<code key={0} />]}\r\n                                        />\r\n                                    </li>\r\n                                </ul>\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>4</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"inputRemoteAddress\")}\r\n                                <br />\r\n                                {t(\"inputRemoteAddressDes\")}\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        {t(\"remoteAddress\")}\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        fullWidth\r\n                                        required\r\n                                        type={\"url\"}\r\n                                        value={policy.Server}\r\n                                        onChange={handleChange(\"Server\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>5</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"testCommunicationDes\")}\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <Button\r\n                                    disabled={loading}\r\n                                    onClick={() => testSlave()}\r\n                                    variant={\"outlined\"}\r\n                                    color={\"primary\"}\r\n                                >\r\n                                    {t(\"testCommunication\")}\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            {t(\"next\")}\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 1 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(2);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                <Trans\r\n                                    ns={\"dashboard\"}\r\n                                    i18nKey={\"policy.filePathMagicVarDes\"}\r\n                                    components={[\r\n                                        <Link\r\n                                            key={0}\r\n                                            color={\"secondary\"}\r\n                                            href={\"javascript:void()\"}\r\n                                            onClick={() => setMagicVar(\"file\")}\r\n                                        />,\r\n                                    ]}\r\n                                />\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        {t(\"pathOfFolderToStoreFiles\")}\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.DirNameRule}\r\n                                        onChange={handleChange(\"DirNameRule\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>2</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\r\n                                文件名。文件名也可使用魔法变量，\r\n                                可用魔法变量可参考{\" \"}\r\n                                <Link\r\n                                    color={\"secondary\"}\r\n                                    onClick={(e) => {\r\n                                        e.preventDefault();\r\n                                        setMagicVar(\"file\");\r\n                                    }}\r\n                                >\r\n                                    文件名魔法变量列表\r\n                                </Link>{\" \"}\r\n                                。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        aria-label=\"gender\"\r\n                                        name=\"gender1\"\r\n                                        value={policy.AutoRename}\r\n                                        onChange={handleChange(\"AutoRename\")}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"autoRenameStoredFile\")}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"keepOriginalFileName\")}\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n\r\n                            <Collapse in={policy.AutoRename === \"true\"}>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            {t(\"renameRule\")}\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            required={\r\n                                                policy.AutoRename === \"true\"\r\n                                            }\r\n                                            value={policy.FileNameRule}\r\n                                            onChange={handleChange(\r\n                                                \"FileNameRule\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </Collapse>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(0)}\r\n                        >\r\n                            {t(\"back\")}\r\n                        </Button>\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            {t(\"next\")}\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 2 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(3);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"enableGettingPermanentSourceLink\")}\r\n                                <br />\r\n                                {t(\"enableGettingPermanentSourceLinkDes\")}\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={policy.IsOriginLinkEnable}\r\n                                        onChange={handleChange(\r\n                                            \"IsOriginLinkEnable\"\r\n                                        )}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"allowed\")}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"forbidden\")}\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.IsOriginLinkEnable === \"true\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>2</div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    {t(\"useCDN\")}\r\n                                    <br />\r\n                                    {t(\"useCDNDes\")}\r\n                                </Typography>\r\n\r\n                                <div className={classes.form}>\r\n                                    <FormControl required component=\"fieldset\">\r\n                                        <RadioGroup\r\n                                            required\r\n                                            value={useCDN}\r\n                                            onChange={(e) => {\r\n                                                if (\r\n                                                    e.target.value === \"false\"\r\n                                                ) {\r\n                                                    setPolicy({\r\n                                                        ...policy,\r\n                                                        BaseURL: \"\",\r\n                                                    });\r\n                                                }\r\n                                                setUseCDN(e.target.value);\r\n                                            }}\r\n                                            row\r\n                                        >\r\n                                            <FormControlLabel\r\n                                                value={\"true\"}\r\n                                                control={\r\n                                                    <Radio color={\"primary\"} />\r\n                                                }\r\n                                                label={t(\"use\")}\r\n                                            />\r\n                                            <FormControlLabel\r\n                                                value={\"false\"}\r\n                                                control={\r\n                                                    <Radio color={\"primary\"} />\r\n                                                }\r\n                                                label={t(\"notUse\")}\r\n                                            />\r\n                                        </RadioGroup>\r\n                                    </FormControl>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <Collapse in={useCDN === \"true\"}>\r\n                            <div className={classes.subStepContainer}>\r\n                                <div className={classes.stepNumberContainer}>\r\n                                    <div className={classes.stepNumber}>3</div>\r\n                                </div>\r\n                                <div className={classes.subStepContent}>\r\n                                    <Typography variant={\"body2\"}>\r\n                                        {t(\"cdnDomain\")}\r\n                                    </Typography>\r\n\r\n                                    <div className={classes.form}>\r\n                                        <DomainInput\r\n                                            value={policy.BaseURL}\r\n                                            onChange={handleChange(\"BaseURL\")}\r\n                                            required={\r\n                                                policy.IsOriginLinkEnable ===\r\n                                                    \"true\" && useCDN === \"true\"\r\n                                            }\r\n                                            label={t(\"cdnPrefix\")}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Collapse>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(1)}\r\n                        >\r\n                            {t(\"back\")}\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            {t(\"next\")}\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 3 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(4);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"limitFileSize\")}\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={\r\n                                            policy.MaxSize === \"0\"\r\n                                                ? \"false\"\r\n                                                : \"true\"\r\n                                        }\r\n                                        onChange={(e) => {\r\n                                            if (e.target.value === \"true\") {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    MaxSize: \"10485760\",\r\n                                                });\r\n                                            } else {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    MaxSize: \"0\",\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"limit\")}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"notLimit\")}\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.MaxSize !== \"0\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>2</div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    {t(\"enterSizeLimit\")}\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <SizeInput\r\n                                        value={policy.MaxSize}\r\n                                        onChange={handleChange(\"MaxSize\")}\r\n                                        min={0}\r\n                                        max={9223372036854775807}\r\n                                        label={t(\"maxSizeOfSingleFile\")}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"limitFileExt\")}\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={\r\n                                            policy.OptionsSerialized\r\n                                                .file_type === \"\"\r\n                                                ? \"false\"\r\n                                                : \"true\"\r\n                                        }\r\n                                        onChange={(e) => {\r\n                                            if (e.target.value === \"true\") {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    OptionsSerialized: {\r\n                                                        ...policy.OptionsSerialized,\r\n                                                        file_type:\r\n                                                            \"jpg,png,mp4,zip,rar\",\r\n                                                    },\r\n                                                });\r\n                                            } else {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    OptionsSerialized: {\r\n                                                        ...policy.OptionsSerialized,\r\n                                                        file_type: \"\",\r\n                                                    },\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"limit\")}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"notLimit\")}\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>\r\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    {t(\"enterFileExt\")}\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            {t(\"extList\")}\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .file_type\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"file_type\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {getNumber(3, [\r\n                                    policy.MaxSize !== \"0\",\r\n                                    policy.OptionsSerialized.file_type !== \"\",\r\n                                ])}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"chunkSizeLabel\")}\r\n                                <br />\r\n                                {t(\"chunkSizeDes\")}\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <SizeInput\r\n                                    value={policy.OptionsSerialized.chunk_size}\r\n                                    onChange={handleOptionChange(\"chunk_size\")}\r\n                                    min={0}\r\n                                    max={9223372036854775807}\r\n                                    label={t(\"chunkSize\")}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(2)}\r\n                        >\r\n                            {t(\"back\")}\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            {t(\"next\")}\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 4 && (\r\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}></div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"nameThePolicy\")}\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        {t(\"policyName\")}\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.Name}\r\n                                        onChange={handleChange(\"Name\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(3)}\r\n                        >\r\n                            {t(\"back\")}\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            {t(\"finish\")}\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 5 && (\r\n                <>\r\n                    <form className={classes.stepContent}>\r\n                        <Typography>\r\n                            {props.policy ? t(\"policySaved\") : t(\"policyAdded\")}\r\n                        </Typography>\r\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\r\n                            {t(\"furtherActions\")}\r\n                        </Typography>\r\n                    </form>\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"primary\"}\r\n                            className={classes.button}\r\n                            onClick={() => history.push(\"/admin/policy\")}\r\n                        >\r\n                            {t(\"backToList\")}\r\n                        </Button>\r\n                    </div>\r\n                </>\r\n            )}\r\n\r\n            <MagicVar\r\n                open={magicVar === \"file\"}\r\n                isFile\r\n                isSlave\r\n                onClose={() => setMagicVar(\"\")}\r\n            />\r\n            <MagicVar\r\n                open={magicVar === \"path\"}\r\n                isSlave\r\n                onClose={() => setMagicVar(\"\")}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { toggleSnackbar } from \"../../../../redux/explorer\";\r\nimport API from \"../../../../middleware/Api\";\r\nimport DomainInput from \"../../Common/DomainInput\";\r\nimport SizeInput from \"../../Common/SizeInput\";\r\nimport MagicVar from \"../../Dialogs/MagicVar\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    stepContent: {\r\n        padding: \"16px 32px 16px 32px\",\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n    subStepContainer: {\r\n        display: \"flex\",\r\n        marginBottom: 20,\r\n        padding: 10,\r\n        transition: theme.transitions.create(\"background-color\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        \"&:focus-within\": {\r\n            backgroundColor: theme.palette.background.default,\r\n        },\r\n    },\r\n    stepNumber: {\r\n        width: 20,\r\n        height: 20,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\r\n        color: theme.palette.secondary.contrastText,\r\n        textAlign: \"center\",\r\n        borderRadius: \" 50%\",\r\n    },\r\n    stepNumberContainer: {\r\n        marginRight: 10,\r\n    },\r\n    stepFooter: {\r\n        marginTop: 32,\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst steps = [\r\n    {\r\n        title: \"storageBucket\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"storagePathStep\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"sourceLinkStep\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"uploadSettingStep\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"finishStep\",\r\n        optional: false,\r\n    },\r\n];\r\n\r\nexport default function UpyunGuide(props) {\r\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"policy\" });\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [loading, setLoading] = useState(false);\r\n    const [skipped] = React.useState(new Set());\r\n    const [magicVar, setMagicVar] = useState(\"\");\r\n    const [policy, setPolicy] = useState(\r\n        props.policy\r\n            ? props.policy\r\n            : {\r\n                  Type: \"upyun\",\r\n                  Name: \"\",\r\n                  SecretKey: \"\",\r\n                  AccessKey: \"\",\r\n                  BaseURL: \"\",\r\n                  IsPrivate: \"false\",\r\n                  DirNameRule: \"uploads/{year}/{month}/{day}\",\r\n                  AutoRename: \"true\",\r\n                  FileNameRule: \"{randomkey8}_{originname}\",\r\n                  IsOriginLinkEnable: \"false\",\r\n                  MaxSize: \"0\",\r\n                  OptionsSerialized: {\r\n                      file_type: \"\",\r\n                      token: \"\",\r\n                  },\r\n              }\r\n    );\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setPolicy({\r\n            ...policy,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const handleOptionChange = (name) => (event) => {\r\n        setPolicy({\r\n            ...policy,\r\n            OptionsSerialized: {\r\n                ...policy.OptionsSerialized,\r\n                [name]: event.target.value,\r\n            },\r\n        });\r\n    };\r\n\r\n    const isStepSkipped = (step) => {\r\n        return skipped.has(step);\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const submitPolicy = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n\r\n        const policyCopy = { ...policy };\r\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\r\n\r\n        // 类型转换\r\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\r\n        policyCopy.IsOriginLinkEnable =\r\n            policyCopy.IsOriginLinkEnable === \"true\";\r\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\r\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\r\n        policyCopy.OptionsSerialized.chunk_size = parseInt(\r\n            policyCopy.OptionsSerialized.chunk_size\r\n        );\r\n        policyCopy.OptionsSerialized.placeholder_with_size =\r\n            policyCopy.OptionsSerialized.placeholder_with_size === \"true\";\r\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\r\n            \",\"\r\n        );\r\n        if (\r\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\r\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\r\n        ) {\r\n            policyCopy.OptionsSerialized.file_type = [];\r\n        }\r\n\r\n        API.post(\"/admin/policy\", {\r\n            policy: policyCopy,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    props.policy ? t(\"policySaved\") : t(\"policyAdded\"),\r\n                    \"success\"\r\n                );\r\n                setActiveStep(5);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n\r\n        setLoading(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant={\"h6\"}>\r\n                {props.policy\r\n                    ? t(\"editUpyunStoragePolicy\")\r\n                    : t(\"addUpyunStoragePolicy\")}\r\n            </Typography>\r\n            <Stepper activeStep={activeStep}>\r\n                {steps.map((label, index) => {\r\n                    const stepProps = {};\r\n                    const labelProps = {};\r\n                    if (label.optional) {\r\n                        labelProps.optional = (\r\n                            <Typography variant=\"caption\">可选</Typography>\r\n                        );\r\n                    }\r\n                    if (isStepSkipped(index)) {\r\n                        stepProps.completed = false;\r\n                    }\r\n                    return (\r\n                        <Step key={label.title} {...stepProps}>\r\n                            <StepLabel {...labelProps}>\r\n                                {t(label.title)}\r\n                            </StepLabel>\r\n                        </Step>\r\n                    );\r\n                })}\r\n            </Stepper>\r\n\r\n            {activeStep === 0 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(1);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>0</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                <Trans\r\n                                    ns={\"dashboard\"}\r\n                                    i18nKey={\"policy.wanSiteURLDes\"}\r\n                                    components={[<strong key={0} />]}\r\n                                />\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                <Trans\r\n                                    ns={\"dashboard\"}\r\n                                    i18nKey={\"policy.createUpyunBucketDes\"}\r\n                                    components={[\r\n                                        <Link\r\n                                            key={0}\r\n                                            href={\r\n                                                \"https://console.upyun.com/services/create/file/\"\r\n                                            }\r\n                                            target={\"_blank\"}\r\n                                        />,\r\n                                    ]}\r\n                                />\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>2</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"storageServiceNameDes\")}\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        {t(\"storageServiceName\")}\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.BucketName}\r\n                                        onChange={handleChange(\"BucketName\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>3</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"operatorNameDes\")}\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        {t(\"operatorName\")}\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.AccessKey}\r\n                                        onChange={handleChange(\"AccessKey\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        {t(\"operatorPassword\")}\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.SecretKey}\r\n                                        onChange={handleChange(\"SecretKey\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>4</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"upyunCDNDes\")}\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <DomainInput\r\n                                    value={policy.BaseURL}\r\n                                    onChange={handleChange(\"BaseURL\")}\r\n                                    required\r\n                                    label={t(\"bucketCDNDomain\")}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>5</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"upyunOptionalDes\")}\r\n                                <br />\r\n                                {t(\"upyunTokenDes\")}\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={policy.IsPrivate}\r\n                                        onChange={handleChange(\"IsPrivate\")}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"tokenEnabled\")}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"tokenDisabled\")}\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.IsPrivate === \"true\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>6</div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    {t(\"upyunTokenSecretDes\")}\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            {t(\"upyunTokenSecret\")}\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            value={\r\n                                                policy.OptionsSerialized.token\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"token\"\r\n                                            )}\r\n                                            required={\r\n                                                policy.IsPrivate === \"true\"\r\n                                            }\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            {t(\"next\")}\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 1 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(2);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                <Trans\r\n                                    ns={\"dashboard\"}\r\n                                    i18nKey={\"policy.pathMagicVarDes\"}\r\n                                    components={[\r\n                                        <Link\r\n                                            key={0}\r\n                                            color={\"secondary\"}\r\n                                            href={\"javascript:void()\"}\r\n                                            onClick={() => setMagicVar(\"path\")}\r\n                                        />,\r\n                                    ]}\r\n                                />\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        {t(\"pathOfFolderToStoreFiles\")}\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.DirNameRule}\r\n                                        onChange={handleChange(\"DirNameRule\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>2</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                <Trans\r\n                                    ns={\"dashboard\"}\r\n                                    i18nKey={\"policy.filePathMagicVarDes\"}\r\n                                    components={[\r\n                                        <Link\r\n                                            key={0}\r\n                                            color={\"secondary\"}\r\n                                            href={\"javascript:void()\"}\r\n                                            onClick={() => setMagicVar(\"file\")}\r\n                                        />,\r\n                                    ]}\r\n                                />\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        aria-label=\"gender\"\r\n                                        name=\"gender1\"\r\n                                        value={policy.AutoRename}\r\n                                        onChange={handleChange(\"AutoRename\")}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"autoRenameStoredFile\")}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"keepOriginalFileName\")}\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n\r\n                            <Collapse in={policy.AutoRename === \"true\"}>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            {t(\"renameRule\")}\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            required={\r\n                                                policy.AutoRename === \"true\"\r\n                                            }\r\n                                            value={policy.FileNameRule}\r\n                                            onChange={handleChange(\r\n                                                \"FileNameRule\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </Collapse>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(0)}\r\n                        >\r\n                            {t(\"back\")}\r\n                        </Button>\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            {t(\"next\")}\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 2 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(3);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"enableGettingPermanentSourceLink\")}\r\n                                <br />\r\n                                {t(\"enableGettingPermanentSourceLinkDes\")}\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={policy.IsOriginLinkEnable}\r\n                                        onChange={(e) => {\r\n                                            if (\r\n                                                policy.IsPrivate === \"true\" &&\r\n                                                e.target.value === \"true\"\r\n                                            ) {\r\n                                                ToggleSnackbar(\r\n                                                    \"top\",\r\n                                                    \"right\",\r\n                                                    t(\r\n                                                        \"cannotEnableForTokenProtectedBucket\"\r\n                                                    ),\r\n                                                    \"warning\"\r\n                                                );\r\n                                                return;\r\n                                            }\r\n                                            handleChange(\"IsOriginLinkEnable\")(\r\n                                                e\r\n                                            );\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"allowed\")}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"forbidden\")}\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(1)}\r\n                        >\r\n                            {t(\"back\")}\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            {t(\"next\")}\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 3 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(4);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"limitFileSize\")}\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={\r\n                                            policy.MaxSize === \"0\"\r\n                                                ? \"false\"\r\n                                                : \"true\"\r\n                                        }\r\n                                        onChange={(e) => {\r\n                                            if (e.target.value === \"true\") {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    MaxSize: \"10485760\",\r\n                                                });\r\n                                            } else {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    MaxSize: \"0\",\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"limit\")}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"notLimit\")}\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.MaxSize !== \"0\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>2</div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    {t(\"enterSizeLimit\")}\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <SizeInput\r\n                                        value={policy.MaxSize}\r\n                                        onChange={handleChange(\"MaxSize\")}\r\n                                        min={0}\r\n                                        max={9223372036854775807}\r\n                                        label={t(\"maxSizeOfSingleFile\")}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"limitFileExt\")}\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={\r\n                                            policy.OptionsSerialized\r\n                                                .file_type === \"\"\r\n                                                ? \"false\"\r\n                                                : \"true\"\r\n                                        }\r\n                                        onChange={(e) => {\r\n                                            if (e.target.value === \"true\") {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    OptionsSerialized: {\r\n                                                        ...policy.OptionsSerialized,\r\n                                                        file_type:\r\n                                                            \"jpg,png,mp4,zip,rar\",\r\n                                                    },\r\n                                                });\r\n                                            } else {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    OptionsSerialized: {\r\n                                                        ...policy.OptionsSerialized,\r\n                                                        file_type: \"\",\r\n                                                    },\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"limit\")}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"notLimit\")}\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>\r\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    {t(\"enterFileExt\")}\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            {t(\"extList\")}\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .file_type\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"file_type\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(2)}\r\n                        >\r\n                            {t(\"back\")}\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            {t(\"next\")}\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 4 && (\r\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}></div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"nameThePolicy\")}\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        {t(\"policyName\")}\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.Name}\r\n                                        onChange={handleChange(\"Name\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(3)}\r\n                        >\r\n                            {t(\"back\")}\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            {t(\"finish\")}\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 5 && (\r\n                <>\r\n                    <form className={classes.stepContent}>\r\n                        <Typography>\r\n                            {props.policy ? t(\"policySaved\") : t(\"policyAdded\")}\r\n                        </Typography>\r\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\r\n                            {t(\"furtherActions\")}\r\n                        </Typography>\r\n                    </form>\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"primary\"}\r\n                            className={classes.button}\r\n                            onClick={() => history.push(\"/admin/policy\")}\r\n                        >\r\n                            {t(\"backToList\")}\r\n                        </Button>\r\n                    </div>\r\n                </>\r\n            )}\r\n\r\n            <MagicVar\r\n                open={magicVar === \"file\"}\r\n                isFile\r\n                onClose={() => setMagicVar(\"\")}\r\n            />\r\n            <MagicVar\r\n                open={magicVar === \"path\"}\r\n                onClose={() => setMagicVar(\"\")}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport API from \"../../../../middleware/Api\";\r\nimport MagicVar from \"../../Dialogs/MagicVar\";\r\nimport DomainInput from \"../../Common/DomainInput\";\r\nimport SizeInput from \"../../Common/SizeInput\";\r\nimport { useHistory } from \"react-router\";\r\nimport { getNumber } from \"../../../../utils\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport AlertDialog from \"../../Dialogs/Alert\";\r\nimport { toggleSnackbar } from \"../../../../redux/explorer\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    stepContent: {\r\n        padding: \"16px 32px 16px 32px\",\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n    subStepContainer: {\r\n        display: \"flex\",\r\n        marginBottom: 20,\r\n        padding: 10,\r\n        transition: theme.transitions.create(\"background-color\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        \"&:focus-within\": {\r\n            backgroundColor: theme.palette.background.default,\r\n        },\r\n    },\r\n    stepNumber: {\r\n        width: 20,\r\n        height: 20,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\r\n        color: theme.palette.secondary.contrastText,\r\n        textAlign: \"center\",\r\n        borderRadius: \" 50%\",\r\n    },\r\n    stepNumberContainer: {\r\n        marginRight: 10,\r\n    },\r\n    stepFooter: {\r\n        marginTop: 32,\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    viewButtonLabel: { textTransform: \"none\" },\r\n    \"@global\": {\r\n        code: {\r\n            color: \"rgba(0, 0, 0, 0.87)\",\r\n            display: \"inline-block\",\r\n            padding: \"2px 6px\",\r\n            fontFamily:\r\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\r\n            borderRadius: \"2px\",\r\n            backgroundColor: \"rgba(255,229,100,0.1)\",\r\n        },\r\n        pre: {\r\n            margin: \"24px 0\",\r\n            padding: \"12px 18px\",\r\n            overflow: \"auto\",\r\n            direction: \"ltr\",\r\n            borderRadius: \"4px\",\r\n            backgroundColor: \"#272c34\",\r\n            color: \"#fff\",\r\n        },\r\n    },\r\n}));\r\n\r\nconst steps = [\r\n    {\r\n        title: \"storageBucket\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"storagePathStep\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"sourceLinkStep\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"uploadSettingStep\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"corsSettingStep\",\r\n        optional: true,\r\n    },\r\n    {\r\n        title: \"finishStep\",\r\n        optional: false,\r\n    },\r\n];\r\n\r\nconst regions = {\r\n    \"us-east-2\": \"US East (Ohio)\",\r\n    \"us-east-1\": \"US East (N. Virginia)\",\r\n    \"us-west-1\": \"US West (N. California)\",\r\n    \"us-west-2\": \"US West (Oregon)\",\r\n    \"af-south-1\": \"Africa (Cape Town)\",\r\n    \"ap-east-1\": \"Asia Pacific (Hong Kong)\",\r\n    \"ap-south-1\": \"Asia Pacific (Mumbai)\",\r\n    \"ap-northeast-3\": \"Asia Pacific (Osaka-Local)\",\r\n    \"ap-northeast-2\": \"Asia Pacific (Seoul)\",\r\n    \"ap-southeast-1\": \"Asia Pacific (Singapore)\",\r\n    \"ap-southeast-2\": \"Asia Pacific (Sydney)\",\r\n    \"ap-northeast-1\": \"Asia Pacific (Tokyo)\",\r\n    \"ca-central-1\": \"Canada (Central)\",\r\n    \"cn-north-1\": \"China (Beijing)\",\r\n    \"cn-northwest-1\": \"China (Ningxia)\",\r\n    \"eu-central-1\": \"Europe (Frankfurt)\",\r\n    \"eu-west-1\": \"Europe (Ireland)\",\r\n    \"eu-west-2\": \"Europe (London)\",\r\n    \"eu-south-1\": \"Europe (Milan)\",\r\n    \"eu-west-3\": \"Europe (Paris)\",\r\n    \"eu-north-1\": \"Europe (Stockholm)\",\r\n    \"me-south-1\": \"Middle East (Bahrain)\",\r\n    \"sa-east-1\": \"South America (São Paulo)\",\r\n};\r\n\r\nexport default function S3Guide(props) {\r\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"policy\" });\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [loading, setLoading] = useState(false);\r\n    const [alertOpen, setAlertOpen] = useState(true);\r\n    const [skipped, setSkipped] = React.useState(new Set());\r\n    const [magicVar, setMagicVar] = useState(\"\");\r\n    const [useCDN, setUseCDN] = useState(\"false\");\r\n    const [policy, setPolicy] = useState(\r\n        props.policy\r\n            ? props.policy\r\n            : {\r\n                  Type: \"s3\",\r\n                  Name: \"\",\r\n                  SecretKey: \"\",\r\n                  AccessKey: \"\",\r\n                  BaseURL: \"\",\r\n                  Server: \"\",\r\n                  IsPrivate: \"true\",\r\n                  DirNameRule: \"uploads/{year}/{month}/{day}\",\r\n                  AutoRename: \"true\",\r\n                  FileNameRule: \"{randomkey8}_{originname}\",\r\n                  IsOriginLinkEnable: \"false\",\r\n                  MaxSize: \"0\",\r\n                  OptionsSerialized: {\r\n                      file_type: \"\",\r\n                      region: \"us-east-2\",\r\n                      chunk_size: 25 << 20,\r\n                      placeholder_with_size: \"false\",\r\n                  },\r\n              }\r\n    );\r\n    const [policyID, setPolicyID] = useState(\r\n        props.policy ? props.policy.ID : 0\r\n    );\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setPolicy({\r\n            ...policy,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const handleOptionChange = (name) => (event) => {\r\n        setPolicy({\r\n            ...policy,\r\n            OptionsSerialized: {\r\n                ...policy.OptionsSerialized,\r\n                [name]: event.target.value,\r\n            },\r\n        });\r\n    };\r\n\r\n    const isStepSkipped = (step) => {\r\n        return skipped.has(step);\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const submitPolicy = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n\r\n        const policyCopy = { ...policy };\r\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\r\n\r\n        if (useCDN === \"false\") {\r\n            policyCopy.BaseURL = \"\";\r\n        }\r\n\r\n        // 类型转换\r\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\r\n        policyCopy.IsOriginLinkEnable =\r\n            policyCopy.IsOriginLinkEnable === \"true\";\r\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\r\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\r\n        policyCopy.OptionsSerialized.chunk_size = parseInt(\r\n            policyCopy.OptionsSerialized.chunk_size\r\n        );\r\n        policyCopy.OptionsSerialized.placeholder_with_size =\r\n            policyCopy.OptionsSerialized.placeholder_with_size === \"true\";\r\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\r\n            \",\"\r\n        );\r\n        if (\r\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\r\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\r\n        ) {\r\n            policyCopy.OptionsSerialized.file_type = [];\r\n        }\r\n\r\n        API.post(\"/admin/policy\", {\r\n            policy: policyCopy,\r\n        })\r\n            .then((response) => {\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    props.policy ? t(\"policySaved\") : t(\"policyAdded\"),\r\n                    \"success\"\r\n                );\r\n                setActiveStep(4);\r\n                setPolicyID(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n\r\n        setLoading(false);\r\n    };\r\n\r\n    const createCORS = () => {\r\n        setLoading(true);\r\n        API.post(\"/admin/policy/cors\", {\r\n            id: policyID,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\"top\", \"right\", t(\"corsPolicyAdded\"), \"success\");\r\n                setActiveStep(5);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <AlertDialog\r\n                open={alertOpen}\r\n                onClose={() => setAlertOpen(false)}\r\n                title={t(\"warning\")}\r\n                msg={t(\"s3SelfHostWarning\")}\r\n            />\r\n            <Typography variant={\"h6\"}>\r\n                {props.policy\r\n                    ? t(\"editS3StoragePolicy\")\r\n                    : t(\"addS3StoragePolicy\")}\r\n            </Typography>\r\n            <Stepper activeStep={activeStep}>\r\n                {steps.map((label, index) => {\r\n                    const stepProps = {};\r\n                    const labelProps = {};\r\n                    if (label.optional) {\r\n                        labelProps.optional = (\r\n                            <Typography variant=\"caption\">\r\n                                {t(\"optional\")}\r\n                            </Typography>\r\n                        );\r\n                    }\r\n                    if (isStepSkipped(index)) {\r\n                        stepProps.completed = false;\r\n                    }\r\n                    return (\r\n                        <Step key={label.title} {...stepProps}>\r\n                            <StepLabel {...labelProps}>\r\n                                {t(label.title)}\r\n                            </StepLabel>\r\n                        </Step>\r\n                    );\r\n                })}\r\n            </Stepper>\r\n\r\n            {activeStep === 0 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(1);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                <Trans\r\n                                    ns={\"dashboard\"}\r\n                                    i18nKey={\"policy.s3BucketDes\"}\r\n                                    components={[<code key={0} />]}\r\n                                />\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        {t(\"bucketName\")}\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.BucketName}\r\n                                        onChange={handleChange(\"BucketName\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>2</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"bucketTypeDes\")}\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={policy.IsPrivate}\r\n                                        onChange={handleChange(\"IsPrivate\")}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"publicAccessDisabled\")}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"publicAccessEnabled\")}\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>3</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                <Trans\r\n                                    ns={\"dashboard\"}\r\n                                    i18nKey={\"policy.s3EndpointDes\"}\r\n                                    components={[<code key={0} />]}\r\n                                />\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        {t(\"endpoint\")}\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        value={policy.Server}\r\n                                        onChange={handleChange(\"Server\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>4</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"selectRegionDes\")}\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <Autocomplete\r\n                                        options={Object.keys(regions)}\r\n                                        freeSolo\r\n                                        value={policy.OptionsSerialized.region}\r\n                                        onInputChange={(_, value) =>\r\n                                            handleOptionChange(\"region\")({\r\n                                                target: { value: value },\r\n                                            })\r\n                                        }\r\n                                        renderOption={(option) => (\r\n                                            <React.Fragment>\r\n                                                {regions[option]}\r\n                                            </React.Fragment>\r\n                                        )}\r\n                                        renderInput={(params) => (\r\n                                            <TextField\r\n                                                style={{ width: \"100%\" }}\r\n                                                {...params}\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>5</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"useCDN\")}\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={useCDN}\r\n                                        onChange={(e) => {\r\n                                            setUseCDN(e.target.value);\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"use\")}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"notUse\")}\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={useCDN === \"true\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>6</div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    {t(\"bucketCDNDomain\")}\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <DomainInput\r\n                                        value={policy.BaseURL}\r\n                                        onChange={handleChange(\"BaseURL\")}\r\n                                        required={useCDN === \"true\"}\r\n                                        label={t(\"bucketCDNDomain\")}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {getNumber(6, [useCDN === \"true\"])}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"enterAccessCredentials\")}\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        {t(\"accessKey\")}\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        inputProps={{\r\n                                            pattern: \"\\\\S+\",\r\n                                            title: t(\"shouldNotContainSpace\"),\r\n                                        }}\r\n                                        value={policy.AccessKey}\r\n                                        onChange={handleChange(\"AccessKey\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        {t(\"secretKey\")}\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        inputProps={{\r\n                                            pattern: \"\\\\S+\",\r\n                                            title: t(\"shouldNotContainSpace\"),\r\n                                        }}\r\n                                        value={policy.SecretKey}\r\n                                        onChange={handleChange(\"SecretKey\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {getNumber(7, [useCDN === \"true\"])}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"nameThePolicyFirst\")}\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        {t(\"policyName\")}\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.Name}\r\n                                        onChange={handleChange(\"Name\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            {t(\"next\")}\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 1 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(2);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                <Trans\r\n                                    ns={\"dashboard\"}\r\n                                    i18nKey={\"policy.pathMagicVarDes\"}\r\n                                    components={[\r\n                                        <Link\r\n                                            key={0}\r\n                                            color={\"secondary\"}\r\n                                            href={\"javascript:void()\"}\r\n                                            onClick={() => setMagicVar(\"path\")}\r\n                                        />,\r\n                                    ]}\r\n                                />\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        {t(\"pathOfFolderToStoreFiles\")}\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.DirNameRule}\r\n                                        onChange={handleChange(\"DirNameRule\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>2</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                <Trans\r\n                                    ns={\"dashboard\"}\r\n                                    i18nKey={\"policy.filePathMagicVarDes\"}\r\n                                    components={[\r\n                                        <Link\r\n                                            key={0}\r\n                                            color={\"secondary\"}\r\n                                            href={\"javascript:void()\"}\r\n                                            onClick={() => setMagicVar(\"file\")}\r\n                                        />,\r\n                                    ]}\r\n                                />\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        aria-label=\"gender\"\r\n                                        name=\"gender1\"\r\n                                        value={policy.AutoRename}\r\n                                        onChange={handleChange(\"AutoRename\")}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"autoRenameStoredFile\")}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"keepOriginalFileName\")}\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n\r\n                            <Collapse in={policy.AutoRename === \"true\"}>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            {t(\"renameRule\")}\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            required={\r\n                                                policy.AutoRename === \"true\"\r\n                                            }\r\n                                            value={policy.FileNameRule}\r\n                                            onChange={handleChange(\r\n                                                \"FileNameRule\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </Collapse>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(0)}\r\n                        >\r\n                            {t(\"back\")}\r\n                        </Button>\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            {t(\"next\")}\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 2 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(3);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"enableGettingPermanentSourceLink\")}\r\n                                <br />\r\n                                {t(\"enableGettingPermanentSourceLinkDes\")}\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={policy.IsOriginLinkEnable}\r\n                                        onChange={(e) => {\r\n                                            if (\r\n                                                policy.IsPrivate === \"true\" &&\r\n                                                e.target.value === \"true\"\r\n                                            ) {\r\n                                                ToggleSnackbar(\r\n                                                    \"top\",\r\n                                                    \"right\",\r\n                                                    t(\r\n                                                        \"cannotEnableForPrivateBucket\"\r\n                                                    ),\r\n                                                    \"warning\"\r\n                                                );\r\n                                                return;\r\n                                            }\r\n                                            handleChange(\"IsOriginLinkEnable\")(\r\n                                                e\r\n                                            );\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"allowed\")}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"forbidden\")}\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(1)}\r\n                        >\r\n                            {t(\"back\")}\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            {t(\"next\")}\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 3 && (\r\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"limitFileSize\")}\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={\r\n                                            policy.MaxSize === \"0\"\r\n                                                ? \"false\"\r\n                                                : \"true\"\r\n                                        }\r\n                                        onChange={(e) => {\r\n                                            if (e.target.value === \"true\") {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    MaxSize: \"10485760\",\r\n                                                });\r\n                                            } else {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    MaxSize: \"0\",\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"limit\")}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"notLimit\")}\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.MaxSize !== \"0\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>2</div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    {t(\"enterSizeLimit\")}\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <SizeInput\r\n                                        value={policy.MaxSize}\r\n                                        onChange={handleChange(\"MaxSize\")}\r\n                                        min={0}\r\n                                        max={9223372036854775807}\r\n                                        label={t(\"maxSizeOfSingleFile\")}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"limitFileExt\")}\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={\r\n                                            policy.OptionsSerialized\r\n                                                .file_type === \"\"\r\n                                                ? \"false\"\r\n                                                : \"true\"\r\n                                        }\r\n                                        onChange={(e) => {\r\n                                            if (e.target.value === \"true\") {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    OptionsSerialized: {\r\n                                                        ...policy.OptionsSerialized,\r\n                                                        file_type:\r\n                                                            \"jpg,png,mp4,zip,rar\",\r\n                                                    },\r\n                                                });\r\n                                            } else {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    OptionsSerialized: {\r\n                                                        ...policy.OptionsSerialized,\r\n                                                        file_type: \"\",\r\n                                                    },\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"limit\")}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"notLimit\")}\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>\r\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    {t(\"enterFileExt\")}\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            {t(\"extList\")}\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .file_type\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"file_type\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {getNumber(3, [\r\n                                    policy.MaxSize !== \"0\",\r\n                                    policy.OptionsSerialized.file_type !== \"\",\r\n                                ])}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"chunkSizeLabelS3\")}\r\n                                <br />\r\n                                {t(\"chunkSizeDes\")}\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <SizeInput\r\n                                    value={policy.OptionsSerialized.chunk_size}\r\n                                    onChange={handleOptionChange(\"chunk_size\")}\r\n                                    min={5 << 20}\r\n                                    max={53687091200}\r\n                                    label={t(\"chunkSize\")}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {getNumber(4, [\r\n                                    policy.MaxSize !== \"0\",\r\n                                    policy.OptionsSerialized.file_type !== \"\",\r\n                                ])}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"createPlaceholderDes\")}\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        aria-label=\"gender\"\r\n                                        name=\"gender1\"\r\n                                        value={\r\n                                            policy.OptionsSerialized\r\n                                                .placeholder_with_size\r\n                                        }\r\n                                        onChange={handleOptionChange(\r\n                                            \"placeholder_with_size\"\r\n                                        )}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"createPlaceholder\")}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label={t(\"notCreatePlaceholder\")}\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(2)}\r\n                        >\r\n                            {t(\"back\")}\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            {t(\"next\")}\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 4 && (\r\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer} />\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                {t(\"ossCORSDes\")}\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <Button\r\n                                    disabled={loading}\r\n                                    color={\"secondary\"}\r\n                                    variant={\"contained\"}\r\n                                    className={classes.button}\r\n                                    onClick={() => createCORS()}\r\n                                    classes={{ label: classes.viewButtonLabel }}\r\n                                >\r\n                                    {t(\"letCloudreveHelpMe\")}\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => {\r\n                                setActiveStep(\r\n                                    (prevActiveStep) => prevActiveStep + 1\r\n                                );\r\n                                setSkipped((prevSkipped) => {\r\n                                    const newSkipped = new Set(\r\n                                        prevSkipped.values()\r\n                                    );\r\n                                    newSkipped.add(activeStep);\r\n                                    return newSkipped;\r\n                                });\r\n                            }}\r\n                        >\r\n                            {t(\"skip\")}\r\n                        </Button>{\" \"}\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 5 && (\r\n                <>\r\n                    <form className={classes.stepContent}>\r\n                        <Typography>\r\n                            {props.policy ? t(\"policySaved\") : t(\"policyAdded\")}\r\n                        </Typography>\r\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\r\n                            {t(\"furtherActions\")}\r\n                        </Typography>\r\n                    </form>\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"primary\"}\r\n                            className={classes.button}\r\n                            onClick={() => history.push(\"/admin/policy\")}\r\n                        >\r\n                            {t(\"backToList\")}\r\n                        </Button>\r\n                    </div>\r\n                </>\r\n            )}\r\n\r\n            <MagicVar\r\n                open={magicVar === \"file\"}\r\n                isFile\r\n                onClose={() => setMagicVar(\"\")}\r\n            />\r\n            <MagicVar\r\n                open={magicVar === \"path\"}\r\n                onClose={() => setMagicVar(\"\")}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport COSGuide from \"./Guid/COSGuide\";\r\nimport LocalGuide from \"./Guid/LocalGuide\";\r\nimport OneDriveGuide from \"./Guid/OneDriveGuide\";\r\nimport OSSGuide from \"./Guid/OSSGuide\";\r\nimport QiniuGuide from \"./Guid/QiniuGuide\";\r\nimport RemoteGuide from \"./Guid/RemoteGuide\";\r\nimport UpyunGuide from \"./Guid/UpyunGuide\";\r\nimport S3Guide from \"./Guid/S3Guide\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    content: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function AddPolicyParent() {\r\n    const classes = useStyles();\r\n\r\n    const { type } = useParams();\r\n\r\n    return (\r\n        <div>\r\n            <Paper square className={classes.content}>\r\n                {type === \"local\" && <LocalGuide />}\r\n                {type === \"remote\" && <RemoteGuide />}\r\n                {type === \"qiniu\" && <QiniuGuide />}\r\n                {type === \"oss\" && <OSSGuide />}\r\n                {type === \"upyun\" && <UpyunGuide />}\r\n                {type === \"cos\" && <COSGuide />}\r\n                {type === \"onedrive\" && <OneDriveGuide />}\r\n                {type === \"s3\" && <S3Guide />}\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../../redux/explorer\";\r\nimport API from \"../../../../middleware/Api\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nexport default function EditPro(props) {\r\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"policy\" });\r\n    const [, setLoading] = useState(false);\r\n    const [policy, setPolicy] = useState(props.policy);\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setPolicy({\r\n            ...policy,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const handleOptionChange = (name) => (event) => {\r\n        setPolicy({\r\n            ...policy,\r\n            OptionsSerialized: {\r\n                ...policy.OptionsSerialized,\r\n                [name]: event.target.value,\r\n            },\r\n        });\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const submitPolicy = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n\r\n        const policyCopy = { ...policy };\r\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\r\n\r\n        // 类型转换\r\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\r\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\r\n        policyCopy.IsOriginLinkEnable =\r\n            policyCopy.IsOriginLinkEnable === \"true\";\r\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\r\n        policyCopy.OptionsSerialized.chunk_size = parseInt(\r\n            policyCopy.OptionsSerialized.chunk_size\r\n        );\r\n        policyCopy.OptionsSerialized.tps_limit = parseFloat(\r\n            policyCopy.OptionsSerialized.tps_limit\r\n        );\r\n        policyCopy.OptionsSerialized.tps_limit_burst = parseInt(\r\n            policyCopy.OptionsSerialized.tps_limit_burst\r\n        );\r\n        policyCopy.OptionsSerialized.placeholder_with_size =\r\n            policyCopy.OptionsSerialized.placeholder_with_size === \"true\";\r\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\r\n            \",\"\r\n        );\r\n        if (\r\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\r\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\r\n        ) {\r\n            policyCopy.OptionsSerialized.file_type = [];\r\n        }\r\n\r\n        API.post(\"/admin/policy\", {\r\n            policy: policyCopy,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    props.policy ? t(\"policySaved\") : t(\"policyAdded\"),\r\n                    \"success\"\r\n                );\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n\r\n        setLoading(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant={\"h6\"}>{t(\"editPolicy\")}</Typography>\r\n            <TableContainer>\r\n                <form onSubmit={submitPolicy}>\r\n                    <Table aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>{t(\"setting\")}</TableCell>\r\n                                <TableCell>{t(\"value\")}</TableCell>\r\n                                <TableCell>{t(\"description\")}</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {t(\"id\")}\r\n                                </TableCell>\r\n                                <TableCell>{policy.ID}</TableCell>\r\n                                <TableCell>{t(\"policyID\")}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {t(\"type\")}\r\n                                </TableCell>\r\n                                <TableCell>{policy.Type}</TableCell>\r\n                                <TableCell>{t(\"policyType\")}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {t(\"name\")}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <Input\r\n                                            required\r\n                                            value={policy.Name}\r\n                                            onChange={handleChange(\"Name\")}\r\n                                        />\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>{t(\"policyName\")}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {t(\"server\")}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <Input\r\n                                            value={policy.Server}\r\n                                            onChange={handleChange(\"Server\")}\r\n                                        />\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>存储端 Endpoint</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {t(\"bucketName\")}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <Input\r\n                                            value={policy.BucketName}\r\n                                            onChange={handleChange(\r\n                                                \"BucketName\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>{t(\"bucketID\")}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {t(\"privateBucket\")}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <RadioGroup\r\n                                            required\r\n                                            value={policy.IsPrivate}\r\n                                            onChange={handleChange(\"IsPrivate\")}\r\n                                            row\r\n                                        >\r\n                                            <FormControlLabel\r\n                                                value={\"true\"}\r\n                                                control={\r\n                                                    <Radio color={\"primary\"} />\r\n                                                }\r\n                                                label={t(\"yes\")}\r\n                                            />\r\n                                            <FormControlLabel\r\n                                                value={\"false\"}\r\n                                                control={\r\n                                                    <Radio color={\"primary\"} />\r\n                                                }\r\n                                                label={t(\"no\")}\r\n                                            />\r\n                                        </RadioGroup>\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>{t(\"privateBucketDes\")}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {t(\"resourceRootURL\")}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <Input\r\n                                            value={policy.BaseURL}\r\n                                            onChange={handleChange(\"BaseURL\")}\r\n                                        />\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>{t(\"resourceRootURLDes\")}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {t(\"accessKey\")}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <Input\r\n                                            multiline\r\n                                            rowsMax={10}\r\n                                            value={policy.AccessKey}\r\n                                            onChange={handleChange(\"AccessKey\")}\r\n                                        />\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>{t(\"akDes\")}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {t(\"secretKey\")}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <Input\r\n                                            multiline\r\n                                            rowsMax={10}\r\n                                            value={policy.SecretKey}\r\n                                            onChange={handleChange(\"SecretKey\")}\r\n                                        />\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>{t(\"secretKey\")}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {t(\"maxSizeBytes\")}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <Input\r\n                                            type={\"number\"}\r\n                                            inputProps={{\r\n                                                min: 0,\r\n                                                step: 1,\r\n                                            }}\r\n                                            value={policy.MaxSize}\r\n                                            onChange={handleChange(\"MaxSize\")}\r\n                                        />\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>{t(\"maxSizeBytesDes\")}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {t(\"autoRename\")}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <RadioGroup\r\n                                            required\r\n                                            value={policy.AutoRename}\r\n                                            onChange={handleChange(\r\n                                                \"AutoRename\"\r\n                                            )}\r\n                                            row\r\n                                        >\r\n                                            <FormControlLabel\r\n                                                value={\"true\"}\r\n                                                control={\r\n                                                    <Radio color={\"primary\"} />\r\n                                                }\r\n                                                label={t(\"yes\")}\r\n                                            />\r\n                                            <FormControlLabel\r\n                                                value={\"false\"}\r\n                                                control={\r\n                                                    <Radio color={\"primary\"} />\r\n                                                }\r\n                                                label={t(\"no\")}\r\n                                            />\r\n                                        </RadioGroup>\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>{t(\"autoRenameDes\")}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {t(\"storagePath\")}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <Input\r\n                                            multiline\r\n                                            value={policy.DirNameRule}\r\n                                            onChange={handleChange(\r\n                                                \"DirNameRule\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>{t(\"storagePathDes\")}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {t(\"fileName\")}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <Input\r\n                                            multiline\r\n                                            value={policy.FileNameRule}\r\n                                            onChange={handleChange(\r\n                                                \"FileNameRule\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>{t(\"fileNameDes\")}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {t(\"allowGetSourceLink\")}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <RadioGroup\r\n                                            required\r\n                                            value={policy.IsOriginLinkEnable}\r\n                                            onChange={handleChange(\r\n                                                \"IsOriginLinkEnable\"\r\n                                            )}\r\n                                            row\r\n                                        >\r\n                                            <FormControlLabel\r\n                                                value={\"true\"}\r\n                                                control={\r\n                                                    <Radio color={\"primary\"} />\r\n                                                }\r\n                                                label={t(\"yes\")}\r\n                                            />\r\n                                            <FormControlLabel\r\n                                                value={\"false\"}\r\n                                                control={\r\n                                                    <Radio color={\"primary\"} />\r\n                                                }\r\n                                                label={t(\"no\")}\r\n                                            />\r\n                                        </RadioGroup>\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    {t(\"allowGetSourceLinkDes\")}\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {t(\"upyunToken\")}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <Input\r\n                                            multiline\r\n                                            value={\r\n                                                policy.OptionsSerialized.token\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"token\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>{t(\"upyunOnly\")}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {t(\"allowedFileExtension\")}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <Input\r\n                                            multiline\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .file_type\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"file_type\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>{t(\"emptyIsNoLimit\")}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {t(\"allowedMimetype\")}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <Input\r\n                                            multiline\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .mimetype\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"mimetype\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>{t(\"qiniuOnly\")}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {t(\"odRedirectURL\")}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <Input\r\n                                            multiline\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .od_redirect\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"od_redirect\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    {t(\"noModificationNeeded\")}\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {t(\"odReverseProxy\")}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <Input\r\n                                            multiline\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .od_proxy\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"od_proxy\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>{t(\"odOnly\")}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {t(\"odDriverID\")}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <Input\r\n                                            multiline\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .od_driver\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"od_driver\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>{t(\"odDriverIDDes\")}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {t(\"s3Region\")}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <Input\r\n                                            multiline\r\n                                            value={\r\n                                                policy.OptionsSerialized.region\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"region\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>{t(\"s3Only\")}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {t(\"lanEndpoint\")}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <Input\r\n                                            multiline\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .server_side_endpoint\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"server_side_endpoint\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>{t(\"ossOnly\")}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {t(\"chunkSizeBytes\")}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <Input\r\n                                            type={\"number\"}\r\n                                            inputProps={{\r\n                                                min: 0,\r\n                                                step: 1,\r\n                                            }}\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .chunk_size\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"chunk_size\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>{t(\"chunkSizeBytesDes\")}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {t(\"placeHolderWithSize\")}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <RadioGroup\r\n                                            required\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .placeholder_with_size\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"placeholder_with_size\"\r\n                                            )}\r\n                                            row\r\n                                        >\r\n                                            <FormControlLabel\r\n                                                value={\"true\"}\r\n                                                control={\r\n                                                    <Radio color={\"primary\"} />\r\n                                                }\r\n                                                label={t(\"yes\")}\r\n                                            />\r\n                                            <FormControlLabel\r\n                                                value={\"false\"}\r\n                                                control={\r\n                                                    <Radio color={\"primary\"} />\r\n                                                }\r\n                                                label={t(\"no\")}\r\n                                            />\r\n                                        </RadioGroup>\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    {t(\"placeHolderWithSizeDes\")}\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {t(\"tps\")}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <Input\r\n                                            type={\"number\"}\r\n                                            inputProps={{\r\n                                                step: 0.1,\r\n                                            }}\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .tps_limit\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"tps_limit\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>{t(\"odOnly\")}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {t(\"tpsBurst\")}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <Input\r\n                                            type={\"number\"}\r\n                                            inputProps={{\r\n                                                step: 1,\r\n                                            }}\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .tps_limit_burst\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"tps_limit_burst\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>{t(\"odOnly\")}</TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                    <Button\r\n                        type={\"submit\"}\r\n                        color={\"primary\"}\r\n                        variant={\"contained\"}\r\n                        style={{ margin: 8 }}\r\n                    >\r\n                        {t(\"saveChanges\")}\r\n                    </Button>\r\n                </form>\r\n            </TableContainer>\r\n        </div>\r\n    );\r\n}\r\n","import Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useParams } from \"react-router\";\r\nimport { toggleSnackbar } from \"../../../redux/explorer\";\r\nimport API from \"../../../middleware/Api\";\r\nimport COSGuide from \"./Guid/COSGuide\";\r\nimport EditPro from \"./Guid/EditPro\";\r\nimport LocalGuide from \"./Guid/LocalGuide\";\r\nimport OneDriveGuide from \"./Guid/OneDriveGuide\";\r\nimport OSSGuide from \"./Guid/OSSGuide\";\r\nimport QiniuGuide from \"./Guid/QiniuGuide\";\r\nimport RemoteGuide from \"./Guid/RemoteGuide\";\r\nimport UpyunGuide from \"./Guid/UpyunGuide\";\r\nimport S3Guide from \"./Guid/S3Guide\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    content: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function EditPolicyPreload() {\r\n    const classes = useStyles();\r\n    const [type, setType] = useState(\"\");\r\n    const [policy, setPolicy] = useState({});\r\n\r\n    const { mode, id } = useParams();\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        setType(\"\");\r\n        API.get(\"/admin/policy/\" + id)\r\n            .then((response) => {\r\n                response.data.IsOriginLinkEnable = response.data\r\n                    .IsOriginLinkEnable\r\n                    ? \"true\"\r\n                    : \"false\";\r\n                response.data.AutoRename = response.data.AutoRename\r\n                    ? \"true\"\r\n                    : \"false\";\r\n                response.data.MaxSize = response.data.MaxSize.toString();\r\n                response.data.OptionsSerialized.chunk_size = response.data\r\n                    .OptionsSerialized.chunk_size\r\n                    ? response.data.OptionsSerialized.chunk_size.toString()\r\n                    : 0;\r\n                response.data.IsPrivate = response.data.IsPrivate\r\n                    ? \"true\"\r\n                    : \"false\";\r\n\r\n                response.data.OptionsSerialized.placeholder_with_size = response\r\n                    .data.OptionsSerialized.placeholder_with_size\r\n                    ? \"true\"\r\n                    : \"false\";\r\n\r\n                response.data.OptionsSerialized.file_type = response.data\r\n                    .OptionsSerialized.file_type\r\n                    ? response.data.OptionsSerialized.file_type.join(\",\")\r\n                    : \"\";\r\n                response.data.OptionsSerialized.tps_limit = response.data\r\n                    .OptionsSerialized.tps_limit\r\n                    ? response.data.OptionsSerialized.tps_limit.toString()\r\n                    : 0;\r\n                response.data.OptionsSerialized.tps_limit_burst = response.data\r\n                    .OptionsSerialized.tps_limit_burst\r\n                    ? response.data.OptionsSerialized.tps_limit_burst.toString()\r\n                    : 0;\r\n                setPolicy(response.data);\r\n                setType(response.data.Type);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    }, [id]);\r\n\r\n    return (\r\n        <div>\r\n            <Paper square className={classes.content}>\r\n                {mode === \"guide\" && (\r\n                    <>\r\n                        {type === \"local\" && <LocalGuide policy={policy} />}\r\n                        {type === \"remote\" && <RemoteGuide policy={policy} />}\r\n                        {type === \"qiniu\" && <QiniuGuide policy={policy} />}\r\n                        {type === \"oss\" && <OSSGuide policy={policy} />}\r\n                        {type === \"upyun\" && <UpyunGuide policy={policy} />}\r\n                        {type === \"cos\" && <COSGuide policy={policy} />}\r\n                        {type === \"onedrive\" && (\r\n                            <OneDriveGuide policy={policy} />\r\n                        )}\r\n                        {type === \"s3\" && <S3Guide policy={policy} />}\r\n                    </>\r\n                )}\r\n\r\n                {mode === \"pro\" && type !== \"\" && <EditPro policy={policy} />}\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { Delete, Edit } from \"@material-ui/icons\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport { toggleSnackbar } from \"../../../redux/explorer\";\r\nimport API from \"../../../middleware/Api\";\r\nimport { sizeToString } from \"../../../utils\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    content: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    container: {\r\n        overflowX: \"auto\",\r\n    },\r\n    tableContainer: {\r\n        marginTop: 16,\r\n    },\r\n    header: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    headerRight: {},\r\n}));\r\n\r\nconst columns = [\r\n    { id: \"#\", minWidth: 50 },\r\n    { id: \"name\", minWidth: 170 },\r\n    { id: \"type\", label: \"存储策略\", minWidth: 170 },\r\n    {\r\n        id: \"count\",\r\n        minWidth: 50,\r\n        align: \"right\",\r\n    },\r\n    {\r\n        id: \"size\",\r\n        minWidth: 100,\r\n        align: \"right\",\r\n    },\r\n    {\r\n        id: \"action\",\r\n        minWidth: 170,\r\n        align: \"right\",\r\n    },\r\n];\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nexport default function Group() {\r\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"group\" });\r\n    const { t: tDashboard } = useTranslation(\"dashboard\");\r\n    const classes = useStyles();\r\n    const [groups, setGroups] = useState([]);\r\n    const [statics, setStatics] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [total, setTotal] = useState(0);\r\n    const [policies, setPolicies] = React.useState({});\r\n\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const query = useQuery();\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const loadList = () => {\r\n        API.post(\"/admin/group/list\", {\r\n            page: page,\r\n            page_size: pageSize,\r\n            order_by: \"id desc\",\r\n        })\r\n            .then((response) => {\r\n                setGroups(response.data.items);\r\n                setStatics(response.data.statics);\r\n                setTotal(response.data.total);\r\n                setPolicies(response.data.policies);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (query.get(\"code\") === \"0\") {\r\n            ToggleSnackbar(\"top\", \"right\", \"授权成功\", \"success\");\r\n        } else if (query.get(\"msg\") && query.get(\"msg\") !== \"\") {\r\n            ToggleSnackbar(\r\n                \"top\",\r\n                \"right\",\r\n                query.get(\"msg\") + \", \" + query.get(\"err\"),\r\n                \"warning\"\r\n            );\r\n        }\r\n    }, [location]);\r\n\r\n    useEffect(() => {\r\n        loadList();\r\n    }, [page, pageSize]);\r\n\r\n    const deletePolicy = (id) => {\r\n        API.delete(\"/admin/group/\" + id)\r\n            .then(() => {\r\n                loadList();\r\n                ToggleSnackbar(\"top\", \"right\", t(\"deleted\"), \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.header}>\r\n                <Button\r\n                    color={\"primary\"}\r\n                    onClick={() => history.push(\"/admin/group/add\")}\r\n                    variant={\"contained\"}\r\n                >\r\n                    {t(\"new\")}\r\n                </Button>\r\n                <div className={classes.headerRight}>\r\n                    <Button\r\n                        color={\"primary\"}\r\n                        onClick={() => loadList()}\r\n                        variant={\"outlined\"}\r\n                    >\r\n                        {tDashboard(\"policy.refresh\")}\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\r\n            <Paper square className={classes.tableContainer}>\r\n                <TableContainer className={classes.container}>\r\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\r\n                        <TableHead>\r\n                            <TableRow style={{ height: 52 }}>\r\n                                {columns.map((column) => (\r\n                                    <TableCell\r\n                                        key={column.id}\r\n                                        align={column.align}\r\n                                        style={{ minWidth: column.minWidth }}\r\n                                    >\r\n                                        {t(column.id)}\r\n                                    </TableCell>\r\n                                ))}\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {groups.map((row) => (\r\n                                <TableRow hover key={row.ID}>\r\n                                    <TableCell>{row.ID}</TableCell>\r\n                                    <TableCell>{row.Name}</TableCell>\r\n                                    <TableCell>\r\n                                        {row.PolicyList !== null &&\r\n                                            row.PolicyList.map((pid, key) => {\r\n                                                let res = \"\";\r\n                                                if (policies[pid]) {\r\n                                                    res += policies[pid].Name;\r\n                                                }\r\n                                                if (\r\n                                                    key !==\r\n                                                    row.PolicyList.length - 1\r\n                                                ) {\r\n                                                    res += \" / \";\r\n                                                }\r\n                                                return res;\r\n                                            })}\r\n                                    </TableCell>\r\n                                    <TableCell align={\"right\"}>\r\n                                        {statics[row.ID] !== undefined &&\r\n                                            statics[row.ID].toLocaleString()}\r\n                                    </TableCell>\r\n                                    <TableCell align={\"right\"}>\r\n                                        {statics[row.ID] !== undefined &&\r\n                                            sizeToString(row.MaxStorage)}\r\n                                    </TableCell>\r\n                                    <TableCell align={\"right\"}>\r\n                                        <Tooltip\r\n                                            title={tDashboard(\"policy.edit\")}\r\n                                        >\r\n                                            <IconButton\r\n                                                onClick={() =>\r\n                                                    history.push(\r\n                                                        \"/admin/group/edit/\" +\r\n                                                            row.ID\r\n                                                    )\r\n                                                }\r\n                                                size={\"small\"}\r\n                                            >\r\n                                                <Edit />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                        <Tooltip\r\n                                            title={tDashboard(\"policy.delete\")}\r\n                                        >\r\n                                            <IconButton\r\n                                                onClick={() =>\r\n                                                    deletePolicy(row.ID)\r\n                                                }\r\n                                                size={\"small\"}\r\n                                            >\r\n                                                <Delete />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 100]}\r\n                    component=\"div\"\r\n                    count={total}\r\n                    rowsPerPage={pageSize}\r\n                    page={page - 1}\r\n                    onChangePage={(e, p) => setPage(p + 1)}\r\n                    onChangeRowsPerPage={(e) => {\r\n                        setPageSize(e.target.value);\r\n                        setPage(1);\r\n                    }}\r\n                />\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { toggleSnackbar } from \"../../../redux/explorer\";\r\nimport API from \"../../../middleware/Api\";\r\nimport SizeInput from \"../Common/SizeInput\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n}));\r\n\r\n// function getStyles(name, personName, theme) {\r\n//     return {\r\n//         fontWeight:\r\n//             personName.indexOf(name) === -1\r\n//                 ? theme.typography.fontWeightRegular\r\n//                 : theme.typography.fontWeightMedium\r\n//     };\r\n// }\r\n\r\nexport default function GroupForm(props) {\r\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"group\" });\r\n    const { t: tDashboard } = useTranslation(\"dashboard\");\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false);\r\n    const [group, setGroup] = useState(\r\n        props.group\r\n            ? props.group\r\n            : {\r\n                  ID: 0,\r\n                  Name: \"\",\r\n                  MaxStorage: \"1073741824\", // 转换类型\r\n                  ShareEnabled: \"true\", // 转换类型\r\n                  WebDAVEnabled: \"true\", // 转换类型\r\n                  SpeedLimit: \"0\", // 转换类型\r\n                  PolicyList: 1, // 转换类型,至少选择一个\r\n                  OptionsSerialized: {\r\n                      // 批量转换类型\r\n                      share_download: \"true\",\r\n                      aria2_options: \"{}\", // json decode\r\n                      compress_size: \"0\",\r\n                      decompress_size: \"0\",\r\n                      source_batch: \"0\",\r\n                      aria2_batch: \"1\",\r\n                  },\r\n              }\r\n    );\r\n    const [policies, setPolicies] = useState({});\r\n\r\n    const history = useHistory();\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        API.post(\"/admin/policy/list\", {\r\n            page: 1,\r\n            page_size: 10000,\r\n            order_by: \"id asc\",\r\n            conditions: {},\r\n        })\r\n            .then((response) => {\r\n                const res = {};\r\n                response.data.items.forEach((v) => {\r\n                    res[v.ID] = v.Name;\r\n                });\r\n                setPolicies(res);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    }, []);\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setGroup({\r\n            ...group,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const handleCheckChange = (name) => (event) => {\r\n        const value = event.target.checked ? \"true\" : \"false\";\r\n        setGroup({\r\n            ...group,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    const handleOptionCheckChange = (name) => (event) => {\r\n        const value = event.target.checked ? \"true\" : \"false\";\r\n        setGroup({\r\n            ...group,\r\n            OptionsSerialized: {\r\n                ...group.OptionsSerialized,\r\n                [name]: value,\r\n            },\r\n        });\r\n    };\r\n\r\n    const handleOptionChange = (name) => (event) => {\r\n        setGroup({\r\n            ...group,\r\n            OptionsSerialized: {\r\n                ...group.OptionsSerialized,\r\n                [name]: event.target.value,\r\n            },\r\n        });\r\n    };\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        const groupCopy = {\r\n            ...group,\r\n            OptionsSerialized: { ...group.OptionsSerialized },\r\n        };\r\n\r\n        // 布尔值转换\r\n        [\"ShareEnabled\", \"WebDAVEnabled\"].forEach((v) => {\r\n            groupCopy[v] = groupCopy[v] === \"true\";\r\n        });\r\n        [\r\n            \"archive_download\",\r\n            \"archive_task\",\r\n            \"one_time_download\",\r\n            \"share_download\",\r\n            \"aria2\",\r\n        ].forEach((v) => {\r\n            if (groupCopy.OptionsSerialized[v] !== undefined) {\r\n                groupCopy.OptionsSerialized[v] =\r\n                    groupCopy.OptionsSerialized[v] === \"true\";\r\n            }\r\n        });\r\n\r\n        // 整型转换\r\n        [\"MaxStorage\", \"SpeedLimit\"].forEach((v) => {\r\n            groupCopy[v] = parseInt(groupCopy[v]);\r\n        });\r\n        [\r\n            \"compress_size\",\r\n            \"decompress_size\",\r\n            \"source_batch\",\r\n            \"aria2_batch\",\r\n        ].forEach((v) => {\r\n            if (groupCopy.OptionsSerialized[v] !== undefined) {\r\n                groupCopy.OptionsSerialized[v] = parseInt(\r\n                    groupCopy.OptionsSerialized[v]\r\n                );\r\n            }\r\n        });\r\n        groupCopy.PolicyList = [parseInt(groupCopy.PolicyList)];\r\n        // JSON转换\r\n        try {\r\n            groupCopy.OptionsSerialized.aria2_options = JSON.parse(\r\n                groupCopy.OptionsSerialized.aria2_options\r\n            );\r\n        } catch (e) {\r\n            ToggleSnackbar(\"top\", \"right\", t(\"aria2FormatError\"), \"warning\");\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        API.post(\"/admin/group\", {\r\n            group: groupCopy,\r\n        })\r\n            .then(() => {\r\n                history.push(\"/admin/group\");\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    props.group ? t(\"saved\") : t(\"added\"),\r\n                    \"success\"\r\n                );\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={submit}>\r\n                <div className={classes.root}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        {group.ID === 0 && t(\"new\")}\r\n                        {group.ID !== 0 && t(\"editGroup\", { name: group.Name })}\r\n                    </Typography>\r\n\r\n                    <div className={classes.formContainer}>\r\n                        {group.ID !== 3 && (\r\n                            <>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            {t(\"nameOfGroup\")}\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            value={group.Name}\r\n                                            onChange={handleChange(\"Name\")}\r\n                                            required\r\n                                        />\r\n                                        <FormHelperText id=\"component-helper-text\">\r\n                                            {t(\"nameOfGroupDes\")}\r\n                                        </FormHelperText>\r\n                                    </FormControl>\r\n                                </div>\r\n\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            {t(\"storagePolicy\")}\r\n                                        </InputLabel>\r\n                                        <Select\r\n                                            labelId=\"demo-mutiple-chip-label\"\r\n                                            id=\"demo-mutiple-chip\"\r\n                                            value={group.PolicyList}\r\n                                            onChange={handleChange(\r\n                                                \"PolicyList\"\r\n                                            )}\r\n                                            input={\r\n                                                <Input id=\"select-multiple-chip\" />\r\n                                            }\r\n                                        >\r\n                                            {Object.keys(policies).map(\r\n                                                (pid) => (\r\n                                                    <MenuItem\r\n                                                        key={pid}\r\n                                                        value={pid}\r\n                                                    >\r\n                                                        {policies[pid]}\r\n                                                    </MenuItem>\r\n                                                )\r\n                                            )}\r\n                                        </Select>\r\n                                        <FormHelperText id=\"component-helper-text\">\r\n                                            {t(\"storageDes\")}\r\n                                        </FormHelperText>\r\n                                    </FormControl>\r\n                                </div>\r\n\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <SizeInput\r\n                                            value={group.MaxStorage}\r\n                                            onChange={handleChange(\r\n                                                \"MaxStorage\"\r\n                                            )}\r\n                                            min={0}\r\n                                            max={9223372036854775807}\r\n                                            label={t(\"initialStorageQuota\")}\r\n                                            required\r\n                                        />\r\n                                    </FormControl>\r\n                                    <FormHelperText id=\"component-helper-text\">\r\n                                        {t(\"initialStorageQuotaDes\")}\r\n                                    </FormHelperText>\r\n                                </div>\r\n                            </>\r\n                        )}\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <SizeInput\r\n                                    value={group.SpeedLimit}\r\n                                    onChange={handleChange(\"SpeedLimit\")}\r\n                                    min={0}\r\n                                    max={9223372036854775807}\r\n                                    label={t(\"downloadSpeedLimit\")}\r\n                                    suffix={\"/s\"}\r\n                                    required\r\n                                />\r\n                            </FormControl>\r\n                            <FormHelperText id=\"component-helper-text\">\r\n                                {t(\"downloadSpeedLimitDes\")}\r\n                            </FormHelperText>\r\n                        </div>\r\n\r\n                        {group.ID !== 3 && (\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        {t(\"bathSourceLinkLimit\")}\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        multiline\r\n                                        type={\"number\"}\r\n                                        inputProps={{\r\n                                            min: 1,\r\n                                            step: 1,\r\n                                        }}\r\n                                        value={\r\n                                            group.OptionsSerialized.source_batch\r\n                                        }\r\n                                        onChange={handleOptionChange(\r\n                                            \"source_batch\"\r\n                                        )}\r\n                                    />\r\n                                    <FormHelperText id=\"component-helper-text\">\r\n                                        {t(\"bathSourceLinkLimitDes\")}\r\n                                    </FormHelperText>\r\n                                </FormControl>\r\n                            </div>\r\n                        )}\r\n\r\n                        {group.ID !== 3 && (\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <FormControlLabel\r\n                                        control={\r\n                                            <Switch\r\n                                                checked={\r\n                                                    group.ShareEnabled ===\r\n                                                    \"true\"\r\n                                                }\r\n                                                onChange={handleCheckChange(\r\n                                                    \"ShareEnabled\"\r\n                                                )}\r\n                                            />\r\n                                        }\r\n                                        label={t(\"allowCreateShareLink\")}\r\n                                    />\r\n                                    <FormHelperText id=\"component-helper-text\">\r\n                                        {t(\"allowCreateShareLinkDes\")}\r\n                                    </FormHelperText>\r\n                                </FormControl>\r\n                            </div>\r\n                        )}\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Switch\r\n                                            checked={\r\n                                                group.OptionsSerialized\r\n                                                    .share_download === \"true\"\r\n                                            }\r\n                                            onChange={handleOptionCheckChange(\r\n                                                \"share_download\"\r\n                                            )}\r\n                                        />\r\n                                    }\r\n                                    label={t(\"allowDownloadShare\")}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"allowDownloadShareDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        {group.ID !== 3 && (\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <FormControlLabel\r\n                                        control={\r\n                                            <Switch\r\n                                                checked={\r\n                                                    group.WebDAVEnabled ===\r\n                                                    \"true\"\r\n                                                }\r\n                                                onChange={handleCheckChange(\r\n                                                    \"WebDAVEnabled\"\r\n                                                )}\r\n                                            />\r\n                                        }\r\n                                        label={t(\"allowWabDAV\")}\r\n                                    />\r\n                                    <FormHelperText id=\"component-helper-text\">\r\n                                        {t(\"allowWabDAVDes\")}\r\n                                    </FormHelperText>\r\n                                </FormControl>\r\n                            </div>\r\n                        )}\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Switch\r\n                                            checked={\r\n                                                group.OptionsSerialized\r\n                                                    .one_time_download ===\r\n                                                \"true\"\r\n                                            }\r\n                                            onChange={handleOptionCheckChange(\r\n                                                \"one_time_download\"\r\n                                            )}\r\n                                        />\r\n                                    }\r\n                                    label={t(\"disableMultipleDownload\")}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"disableMultipleDownloadDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        {group.ID !== 3 && (\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <FormControlLabel\r\n                                        control={\r\n                                            <Switch\r\n                                                checked={\r\n                                                    group.OptionsSerialized\r\n                                                        .aria2 === \"true\"\r\n                                                }\r\n                                                onChange={handleOptionCheckChange(\r\n                                                    \"aria2\"\r\n                                                )}\r\n                                            />\r\n                                        }\r\n                                        label={t(\"allowRemoteDownload\")}\r\n                                    />\r\n                                    <FormHelperText id=\"component-helper-text\">\r\n                                        {t(\"allowRemoteDownloadDes\")}\r\n                                    </FormHelperText>\r\n                                </FormControl>\r\n                            </div>\r\n                        )}\r\n\r\n                        <Collapse in={group.OptionsSerialized.aria2 === \"true\"}>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        {t(\"aria2Options\")}\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        multiline\r\n                                        value={\r\n                                            group.OptionsSerialized\r\n                                                .aria2_options\r\n                                        }\r\n                                        onChange={handleOptionChange(\r\n                                            \"aria2_options\"\r\n                                        )}\r\n                                    />\r\n                                    <FormHelperText id=\"component-helper-text\">\r\n                                        {t(\"aria2OptionsDes\")}\r\n                                    </FormHelperText>\r\n                                </FormControl>\r\n                            </div>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        {t(\"aria2BatchSize\")}\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        multiline\r\n                                        type={\"number\"}\r\n                                        inputProps={{\r\n                                            min: 1,\r\n                                            step: 1,\r\n                                        }}\r\n                                        value={\r\n                                            group.OptionsSerialized.aria2_batch\r\n                                        }\r\n                                        onChange={handleOptionChange(\r\n                                            \"aria2_batch\"\r\n                                        )}\r\n                                    />\r\n                                    <FormHelperText id=\"component-helper-text\">\r\n                                        {t(\"aria2BatchSizeDes\")}\r\n                                    </FormHelperText>\r\n                                </FormControl>\r\n                            </div>\r\n                        </Collapse>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Switch\r\n                                            checked={\r\n                                                group.OptionsSerialized\r\n                                                    .archive_download === \"true\"\r\n                                            }\r\n                                            onChange={handleOptionCheckChange(\r\n                                                \"archive_download\"\r\n                                            )}\r\n                                        />\r\n                                    }\r\n                                    label={t(\"serverSideBatchDownload\")}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"serverSideBatchDownloadDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        {group.ID !== 3 && (\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <FormControlLabel\r\n                                        control={\r\n                                            <Switch\r\n                                                checked={\r\n                                                    group.OptionsSerialized\r\n                                                        .archive_task === \"true\"\r\n                                                }\r\n                                                onChange={handleOptionCheckChange(\r\n                                                    \"archive_task\"\r\n                                                )}\r\n                                            />\r\n                                        }\r\n                                        label={t(\"compressTask\")}\r\n                                    />\r\n                                    <FormHelperText id=\"component-helper-text\">\r\n                                        {t(\"compressTaskDes\")}\r\n                                    </FormHelperText>\r\n                                </FormControl>\r\n                            </div>\r\n                        )}\r\n\r\n                        <Collapse\r\n                            in={group.OptionsSerialized.archive_task === \"true\"}\r\n                        >\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <SizeInput\r\n                                        value={\r\n                                            group.OptionsSerialized\r\n                                                .compress_size\r\n                                        }\r\n                                        onChange={handleOptionChange(\r\n                                            \"compress_size\"\r\n                                        )}\r\n                                        min={0}\r\n                                        max={9223372036854775807}\r\n                                        label={t(\"compressSize\")}\r\n                                    />\r\n                                </FormControl>\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"compressSizeDes\")}\r\n                                </FormHelperText>\r\n                            </div>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <SizeInput\r\n                                        value={\r\n                                            group.OptionsSerialized\r\n                                                .decompress_size\r\n                                        }\r\n                                        onChange={handleOptionChange(\r\n                                            \"decompress_size\"\r\n                                        )}\r\n                                        min={0}\r\n                                        max={9223372036854775807}\r\n                                        label={t(\"decompressSize\")}\r\n                                    />\r\n                                </FormControl>\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"decompressSizeDes\")}\r\n                                </FormHelperText>\r\n                            </div>\r\n                        </Collapse>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.root}>\r\n                    <Button\r\n                        disabled={loading}\r\n                        type={\"submit\"}\r\n                        variant={\"contained\"}\r\n                        color={\"primary\"}\r\n                    >\r\n                        {tDashboard(\"settings.save\")}\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport API from \"../../../middleware/Api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport GroupForm from \"./GroupForm\";\r\nimport { toggleSnackbar } from \"../../../redux/explorer\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nexport default function EditGroupPreload() {\r\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"group\" });\r\n    const [group, setGroup] = useState({});\r\n\r\n    const { id } = useParams();\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        setGroup({});\r\n        API.get(\"/admin/group/\" + id)\r\n            .then((response) => {\r\n                // 布尔值转换\r\n                [\"ShareEnabled\", \"WebDAVEnabled\"].forEach((v) => {\r\n                    response.data[v] = response.data[v] ? \"true\" : \"false\";\r\n                });\r\n                [\r\n                    \"archive_download\",\r\n                    \"archive_task\",\r\n                    \"one_time_download\",\r\n                    \"share_download\",\r\n                    \"aria2\",\r\n                ].forEach((v) => {\r\n                    if (response.data.OptionsSerialized[v] !== undefined) {\r\n                        response.data.OptionsSerialized[v] = response.data\r\n                            .OptionsSerialized[v]\r\n                            ? \"true\"\r\n                            : \"false\";\r\n                    }\r\n                });\r\n\r\n                // 整型转换\r\n                [\"MaxStorage\", \"SpeedLimit\"].forEach((v) => {\r\n                    response.data[v] = response.data[v].toString();\r\n                });\r\n                [\r\n                    \"compress_size\",\r\n                    \"decompress_size\",\r\n                    \"source_batch\",\r\n                    \"aria2_batch\",\r\n                ].forEach((v) => {\r\n                    if (response.data.OptionsSerialized[v] !== undefined) {\r\n                        response.data.OptionsSerialized[\r\n                            v\r\n                        ] = response.data.OptionsSerialized[v].toString();\r\n                    }\r\n                });\r\n                response.data.PolicyList = response.data.PolicyList[0];\r\n\r\n                // JSON转换\r\n                if (\r\n                    response.data.OptionsSerialized.aria2_options === undefined\r\n                ) {\r\n                    response.data.OptionsSerialized.aria2_options = \"{}\";\r\n                } else {\r\n                    try {\r\n                        response.data.OptionsSerialized.aria2_options = JSON.stringify(\r\n                            response.data.OptionsSerialized.aria2_options\r\n                        );\r\n                    } catch (e) {\r\n                        ToggleSnackbar(\r\n                            \"top\",\r\n                            \"right\",\r\n                            t(\"aria2FormatError\"),\r\n                            \"warning\"\r\n                        );\r\n                        return;\r\n                    }\r\n                }\r\n                setGroup(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    }, [id]);\r\n\r\n    return <div>{group.ID !== undefined && <GroupForm group={group} />}</div>;\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../redux/explorer\";\r\nimport API from \"../../../middleware/Api\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nexport default function UserFilter({ setFilter, setSearch, open, onClose }) {\r\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"user\" });\r\n    const { t: tCommon } = useTranslation(\"common\");\r\n    const [input, setInput] = useState({\r\n        group_id: \"all\",\r\n        status: \"all\",\r\n    });\r\n    const [groups, setGroups] = useState([]);\r\n    const [keywords, setKeywords] = useState(\"\");\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setInput({ ...input, [name]: event.target.value });\r\n    };\r\n\r\n    useEffect(() => {\r\n        API.get(\"/admin/groups\")\r\n            .then((response) => {\r\n                setGroups(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    }, []);\r\n\r\n    const submit = () => {\r\n        const res = {};\r\n        Object.keys(input).forEach((v) => {\r\n            if (input[v] !== \"all\") {\r\n                res[v] = input[v];\r\n            }\r\n        });\r\n        setFilter(res);\r\n        if (keywords !== \"\") {\r\n            setSearch({\r\n                nick: keywords,\r\n                email: keywords,\r\n            });\r\n        } else {\r\n            setSearch({});\r\n        }\r\n        onClose();\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={onClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n            fullWidth\r\n            maxWidth={\"xs\"}\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">\r\n                {t(\"filterCondition\")}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <FormControl fullWidth>\r\n                    <InputLabel id=\"demo-simple-select-label\">\r\n                        {t(\"group\")}\r\n                    </InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        value={input.group_id}\r\n                        onChange={handleChange(\"group_id\")}\r\n                    >\r\n                        <MenuItem value={\"all\"}>{t(\"all\")}</MenuItem>\r\n                        {groups.map((v) => {\r\n                            if (v.ID === 3) {\r\n                                return null;\r\n                            }\r\n                            return (\r\n                                <MenuItem key={v.ID} value={v.ID.toString()}>\r\n                                    {v.Name}\r\n                                </MenuItem>\r\n                            );\r\n                        })}\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl fullWidth style={{ marginTop: 16 }}>\r\n                    <InputLabel id=\"demo-simple-select-label\">\r\n                        {t(\"userStatus\")}\r\n                    </InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        value={input.status}\r\n                        onChange={handleChange(\"status\")}\r\n                    >\r\n                        <MenuItem value={\"all\"}>{t(\"all\")}</MenuItem>\r\n                        <MenuItem value={\"0\"}>{t(\"active\")}</MenuItem>\r\n                        <MenuItem value={\"1\"}>{t(\"notActivated\")}</MenuItem>\r\n                        <MenuItem value={\"2\"}>{t(\"banned\")}</MenuItem>\r\n                        <MenuItem value={\"3\"}>{t(\"bannedBySys\")}</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl fullWidth style={{ marginTop: 16 }}>\r\n                    <TextField\r\n                        value={keywords}\r\n                        onChange={(e) => setKeywords(e.target.value)}\r\n                        id=\"standard-basic\"\r\n                        label={t(\"searchNickUserName\")}\r\n                    />\r\n                </FormControl>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={onClose} color=\"default\">\r\n                    {tCommon(\"cancel\")}\r\n                </Button>\r\n                <Button onClick={submit} color=\"primary\">\r\n                    {t(\"apply\")}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import { lighten } from \"@material-ui/core\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Block, Delete, Edit, FilterList } from \"@material-ui/icons\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { toggleSnackbar } from \"../../../redux/explorer\";\r\nimport API from \"../../../middleware/Api\";\r\nimport { sizeToString } from \"../../../utils\";\r\nimport UserFilter from \"../Dialogs/UserFilter\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    content: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    container: {\r\n        overflowX: \"auto\",\r\n    },\r\n    tableContainer: {\r\n        marginTop: 16,\r\n    },\r\n    header: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    headerRight: {},\r\n    highlight:\r\n        theme.palette.type === \"light\"\r\n            ? {\r\n                  color: theme.palette.secondary.main,\r\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n              }\r\n            : {\r\n                  color: theme.palette.text.primary,\r\n                  backgroundColor: theme.palette.secondary.dark,\r\n              },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: \"rect(0 0 0 0)\",\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: \"hidden\",\r\n        padding: 0,\r\n        position: \"absolute\",\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n}));\r\n\r\nexport default function Group() {\r\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"user\" });\r\n    const { t: tDashboard } = useTranslation(\"dashboard\");\r\n    const classes = useStyles();\r\n    const [users, setUsers] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [total, setTotal] = useState(0);\r\n    const [filter, setFilter] = useState({});\r\n    const [search, setSearch] = useState({});\r\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\r\n    const [filterDialog, setFilterDialog] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const history = useHistory();\r\n    const theme = useTheme();\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const loadList = () => {\r\n        API.post(\"/admin/user/list\", {\r\n            page: page,\r\n            page_size: pageSize,\r\n            order_by: orderBy.join(\" \"),\r\n            conditions: filter,\r\n            searches: search,\r\n        })\r\n            .then((response) => {\r\n                setUsers(response.data.items);\r\n                setTotal(response.data.total);\r\n                setSelected([]);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadList();\r\n    }, [page, pageSize, orderBy, filter, search]);\r\n\r\n    const deletePolicy = (id) => {\r\n        setLoading(true);\r\n        API.post(\"/admin/user/delete\", { id: [id] })\r\n            .then(() => {\r\n                loadList();\r\n                ToggleSnackbar(\"top\", \"right\", \"用户已删除\", \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const deleteBatch = () => {\r\n        setLoading(true);\r\n        API.post(\"/admin/user/delete\", { id: selected })\r\n            .then(() => {\r\n                loadList();\r\n                ToggleSnackbar(\"top\", \"right\", t(\"deleted\"), \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const block = (id) => {\r\n        setLoading(true);\r\n        API.patch(\"/admin/user/ban/\" + id)\r\n            .then((response) => {\r\n                setUsers(\r\n                    users.map((v) => {\r\n                        if (v.ID === id) {\r\n                            const newUser = { ...v, Status: response.data };\r\n                            return newUser;\r\n                        }\r\n                        return v;\r\n                    })\r\n                );\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        if (event.target.checked) {\r\n            const newSelecteds = users.map((n) => n.ID);\r\n            setSelected(newSelecteds);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleClick = (event, name) => {\r\n        const selectedIndex = selected.indexOf(name);\r\n        let newSelected = [];\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, name);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(\r\n                selected.slice(0, selectedIndex),\r\n                selected.slice(selectedIndex + 1)\r\n            );\r\n        }\r\n\r\n        setSelected(newSelected);\r\n    };\r\n\r\n    const isSelected = (id) => selected.indexOf(id) !== -1;\r\n\r\n    return (\r\n        <div>\r\n            <UserFilter\r\n                filter={filter}\r\n                open={filterDialog}\r\n                onClose={() => setFilterDialog(false)}\r\n                setSearch={setSearch}\r\n                setFilter={setFilter}\r\n            />\r\n            <div className={classes.header}>\r\n                <Button\r\n                    style={{ alignSelf: \"center\" }}\r\n                    color={\"primary\"}\r\n                    onClick={() => history.push(\"/admin/user/add\")}\r\n                    variant={\"contained\"}\r\n                >\r\n                    {t(\"new\")}\r\n                </Button>\r\n                <div className={classes.headerRight}>\r\n                    <Tooltip title={t(\"filter\")}>\r\n                        <IconButton\r\n                            style={{ marginRight: 8 }}\r\n                            onClick={() => setFilterDialog(true)}\r\n                        >\r\n                            <Badge\r\n                                color=\"secondary\"\r\n                                variant=\"dot\"\r\n                                invisible={\r\n                                    Object.keys(search).length === 0 &&\r\n                                    Object.keys(filter).length === 0\r\n                                }\r\n                            >\r\n                                <FilterList />\r\n                            </Badge>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    <Button\r\n                        color={\"primary\"}\r\n                        onClick={() => loadList()}\r\n                        variant={\"outlined\"}\r\n                    >\r\n                        {tDashboard(\"policy.refresh\")}\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\r\n            <Paper square className={classes.tableContainer}>\r\n                {selected.length > 0 && (\r\n                    <Toolbar className={classes.highlight}>\r\n                        <Typography\r\n                            style={{ flex: \"1 1 100%\" }}\r\n                            color=\"inherit\"\r\n                            variant=\"subtitle1\"\r\n                        >\r\n                            {t(\"selectedObject\", { num: selected.length })}\r\n                        </Typography>\r\n                        <Tooltip title={tDashboard(\"policy.delete\")}>\r\n                            <IconButton\r\n                                onClick={deleteBatch}\r\n                                disabled={loading}\r\n                                aria-label=\"delete\"\r\n                            >\r\n                                <Delete />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </Toolbar>\r\n                )}\r\n                <TableContainer className={classes.container}>\r\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\r\n                        <TableHead>\r\n                            <TableRow style={{ height: 52 }}>\r\n                                <TableCell padding=\"checkbox\">\r\n                                    <Checkbox\r\n                                        indeterminate={\r\n                                            selected.length > 0 &&\r\n                                            selected.length < users.length\r\n                                        }\r\n                                        checked={\r\n                                            users.length > 0 &&\r\n                                            selected.length === users.length\r\n                                        }\r\n                                        onChange={handleSelectAllClick}\r\n                                        inputProps={{\r\n                                            \"aria-label\": \"select all desserts\",\r\n                                        }}\r\n                                    />\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 59 }}>\r\n                                    <TableSortLabel\r\n                                        active={orderBy[0] === \"id\"}\r\n                                        direction={orderBy[1]}\r\n                                        onClick={() =>\r\n                                            setOrderBy([\r\n                                                \"id\",\r\n                                                orderBy[1] === \"asc\"\r\n                                                    ? \"desc\"\r\n                                                    : \"asc\",\r\n                                            ])\r\n                                        }\r\n                                    >\r\n                                        {tDashboard(\"node.#\")}\r\n                                        {orderBy[0] === \"id\" ? (\r\n                                            <span\r\n                                                className={\r\n                                                    classes.visuallyHidden\r\n                                                }\r\n                                            >\r\n                                                {orderBy[1] === \"desc\"\r\n                                                    ? \"sorted descending\"\r\n                                                    : \"sorted ascending\"}\r\n                                            </span>\r\n                                        ) : null}\r\n                                    </TableSortLabel>\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 120 }}>\r\n                                    <TableSortLabel\r\n                                        active={orderBy[0] === \"nick\"}\r\n                                        direction={orderBy[1]}\r\n                                        onClick={() =>\r\n                                            setOrderBy([\r\n                                                \"nick\",\r\n                                                orderBy[1] === \"asc\"\r\n                                                    ? \"desc\"\r\n                                                    : \"asc\",\r\n                                            ])\r\n                                        }\r\n                                    >\r\n                                        {t(\"nick\")}\r\n                                        {orderBy[0] === \"nick\" ? (\r\n                                            <span\r\n                                                className={\r\n                                                    classes.visuallyHidden\r\n                                                }\r\n                                            >\r\n                                                {orderBy[1] === \"desc\"\r\n                                                    ? \"sorted descending\"\r\n                                                    : \"sorted ascending\"}\r\n                                            </span>\r\n                                        ) : null}\r\n                                    </TableSortLabel>\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 170 }}>\r\n                                    <TableSortLabel\r\n                                        active={orderBy[0] === \"email\"}\r\n                                        direction={orderBy[1]}\r\n                                        onClick={() =>\r\n                                            setOrderBy([\r\n                                                \"email\",\r\n                                                orderBy[1] === \"asc\"\r\n                                                    ? \"desc\"\r\n                                                    : \"asc\",\r\n                                            ])\r\n                                        }\r\n                                    >\r\n                                        {t(\"email\")}\r\n                                        {orderBy[0] === \"email\" ? (\r\n                                            <span\r\n                                                className={\r\n                                                    classes.visuallyHidden\r\n                                                }\r\n                                            >\r\n                                                {orderBy[1] === \"desc\"\r\n                                                    ? \"sorted descending\"\r\n                                                    : \"sorted ascending\"}\r\n                                            </span>\r\n                                        ) : null}\r\n                                    </TableSortLabel>\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 70 }}>\r\n                                    {t(\"group\")}\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 50 }}>\r\n                                    {t(\"status\")}\r\n                                </TableCell>\r\n                                <TableCell\r\n                                    align={\"right\"}\r\n                                    style={{ minWidth: 80 }}\r\n                                >\r\n                                    <TableSortLabel\r\n                                        active={orderBy[0] === \"storage\"}\r\n                                        direction={orderBy[1]}\r\n                                        onClick={() =>\r\n                                            setOrderBy([\r\n                                                \"storage\",\r\n                                                orderBy[1] === \"asc\"\r\n                                                    ? \"desc\"\r\n                                                    : \"asc\",\r\n                                            ])\r\n                                        }\r\n                                    >\r\n                                        {t(\"usedStorage\")}\r\n                                        {orderBy[0] === \"storage\" ? (\r\n                                            <span\r\n                                                className={\r\n                                                    classes.visuallyHidden\r\n                                                }\r\n                                            >\r\n                                                {orderBy[1] === \"desc\"\r\n                                                    ? \"sorted descending\"\r\n                                                    : \"sorted ascending\"}\r\n                                            </span>\r\n                                        ) : null}\r\n                                    </TableSortLabel>\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 100 }}>\r\n                                    {tDashboard(\"policy.actions\")}\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {users.map((row) => (\r\n                                <TableRow\r\n                                    hover\r\n                                    key={row.ID}\r\n                                    role=\"checkbox\"\r\n                                    selected={isSelected(row.ID)}\r\n                                >\r\n                                    <TableCell padding=\"checkbox\">\r\n                                        <Checkbox\r\n                                            onClick={(event) =>\r\n                                                handleClick(event, row.ID)\r\n                                            }\r\n                                            checked={isSelected(row.ID)}\r\n                                        />\r\n                                    </TableCell>\r\n                                    <TableCell>{row.ID}</TableCell>\r\n                                    <TableCell>{row.Nick}</TableCell>\r\n                                    <TableCell>{row.Email}</TableCell>\r\n                                    <TableCell>\r\n                                        <Link\r\n                                            href={\r\n                                                \"/admin/group/edit/\" +\r\n                                                row.Group.ID\r\n                                            }\r\n                                        >\r\n                                            {row.Group.Name}\r\n                                        </Link>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {row.Status === 0 && (\r\n                                            <Typography\r\n                                                style={{\r\n                                                    color:\r\n                                                        theme.palette.success\r\n                                                            .main,\r\n                                                }}\r\n                                                variant={\"body2\"}\r\n                                            >\r\n                                                {t(\"active\")}\r\n                                            </Typography>\r\n                                        )}\r\n                                        {row.Status === 1 && (\r\n                                            <Typography\r\n                                                color={\"textSecondary\"}\r\n                                                variant={\"body2\"}\r\n                                            >\r\n                                                {t(\"notActivated\")}\r\n                                            </Typography>\r\n                                        )}\r\n                                        {row.Status === 2 && (\r\n                                            <Typography\r\n                                                color={\"error\"}\r\n                                                variant={\"body2\"}\r\n                                            >\r\n                                                {t(\"banned\")}\r\n                                            </Typography>\r\n                                        )}\r\n                                        {row.Status === 3 && (\r\n                                            <Typography\r\n                                                color={\"error\"}\r\n                                                variant={\"body2\"}\r\n                                            >\r\n                                                {t(\"bannedBySys\")}\r\n                                            </Typography>\r\n                                        )}\r\n                                    </TableCell>\r\n                                    <TableCell align={\"right\"}>\r\n                                        {sizeToString(row.Storage)}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Tooltip\r\n                                            title={tDashboard(\"node.edit\")}\r\n                                        >\r\n                                            <IconButton\r\n                                                onClick={() =>\r\n                                                    history.push(\r\n                                                        \"/admin/user/edit/\" +\r\n                                                            row.ID\r\n                                                    )\r\n                                                }\r\n                                                size={\"small\"}\r\n                                            >\r\n                                                <Edit />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                        <Tooltip title={t(\"toggleBan\")}>\r\n                                            <IconButton\r\n                                                disabled={loading}\r\n                                                onClick={() => block(row.ID)}\r\n                                                size={\"small\"}\r\n                                            >\r\n                                                <Block />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                        <Tooltip\r\n                                            title={tDashboard(\"node.delete\")}\r\n                                        >\r\n                                            <IconButton\r\n                                                disabled={loading}\r\n                                                onClick={() =>\r\n                                                    deletePolicy(row.ID)\r\n                                                }\r\n                                                size={\"small\"}\r\n                                            >\r\n                                                <Delete />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 100]}\r\n                    component=\"div\"\r\n                    count={total}\r\n                    rowsPerPage={pageSize}\r\n                    page={page - 1}\r\n                    onChangePage={(e, p) => setPage(p + 1)}\r\n                    onChangeRowsPerPage={(e) => {\r\n                        setPageSize(e.target.value);\r\n                        setPage(1);\r\n                    }}\r\n                />\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { toggleSnackbar } from \"../../../redux/explorer\";\r\nimport API from \"../../../middleware/Api\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n}));\r\nexport default function UserForm(props) {\r\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"user\" });\r\n    const { t: tDashboard } = useTranslation(\"dashboard\");\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false);\r\n    const [user, setUser] = useState(\r\n        props.user\r\n            ? props.user\r\n            : {\r\n                  ID: 0,\r\n                  Email: \"\",\r\n                  Nick: \"\",\r\n                  Password: \"\", // 为空时只读\r\n                  Status: \"0\", // 转换类型\r\n                  GroupID: \"2\", // 转换类型\r\n              }\r\n    );\r\n    const [groups, setGroups] = useState([]);\r\n\r\n    const history = useHistory();\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        API.get(\"/admin/groups\")\r\n            .then((response) => {\r\n                setGroups(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    }, []);\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setUser({\r\n            ...user,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        const userCopy = { ...user };\r\n\r\n        // 整型转换\r\n        [\"Status\", \"GroupID\", \"Score\"].forEach((v) => {\r\n            userCopy[v] = parseInt(userCopy[v]);\r\n        });\r\n\r\n        setLoading(true);\r\n        API.post(\"/admin/user\", {\r\n            user: userCopy,\r\n            password: userCopy.Password,\r\n        })\r\n            .then(() => {\r\n                history.push(\"/admin/user\");\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    props.user ? t(\"saved\") : t(\"added\"),\r\n                    \"success\"\r\n                );\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={submit}>\r\n                <div className={classes.root}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        {user.ID === 0 && t(\"new\")}\r\n                        {user.ID !== 0 && t(\"editUser\", { nick: user.Nick })}\r\n                    </Typography>\r\n\r\n                    <div className={classes.formContainer}>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    {t(\"email\")}\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={user.Email}\r\n                                    type={\"email\"}\r\n                                    onChange={handleChange(\"Email\")}\r\n                                    required\r\n                                />\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    {t(\"nick\")}\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={user.Nick}\r\n                                    onChange={handleChange(\"Nick\")}\r\n                                    required\r\n                                />\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    {t(\"password\")}\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"password\"}\r\n                                    value={user.Password}\r\n                                    onChange={handleChange(\"Password\")}\r\n                                    required={user.ID === 0}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {user.ID !== 0 && t(\"passwordDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    {t(\"group\")}\r\n                                </InputLabel>\r\n                                <Select\r\n                                    value={user.GroupID}\r\n                                    onChange={handleChange(\"GroupID\")}\r\n                                    required\r\n                                >\r\n                                    {groups.map((v) => {\r\n                                        if (v.ID === 3) {\r\n                                            return null;\r\n                                        }\r\n                                        return (\r\n                                            <MenuItem\r\n                                                key={v.ID}\r\n                                                value={v.ID.toString()}\r\n                                            >\r\n                                                {v.Name}\r\n                                            </MenuItem>\r\n                                        );\r\n                                    })}\r\n                                </Select>\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"groupDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    {t(\"status\")}\r\n                                </InputLabel>\r\n                                <Select\r\n                                    value={user.Status}\r\n                                    onChange={handleChange(\"Status\")}\r\n                                    required\r\n                                >\r\n                                    <MenuItem value={\"0\"}>\r\n                                        {t(\"active\")}\r\n                                    </MenuItem>\r\n                                    <MenuItem value={\"1\"}>\r\n                                        {t(\"notActivated\")}\r\n                                    </MenuItem>\r\n                                    <MenuItem value={\"2\"}>\r\n                                        {t(\"banned\")}\r\n                                    </MenuItem>\r\n                                    <MenuItem value={\"3\"}>\r\n                                        {t(\"bannedBySys\")}\r\n                                    </MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.root}>\r\n                    <Button\r\n                        disabled={loading}\r\n                        type={\"submit\"}\r\n                        variant={\"contained\"}\r\n                        color={\"primary\"}\r\n                    >\r\n                        {tDashboard(\"settings.save\")}\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport API from \"../../../middleware/Api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport UserForm from \"./UserForm\";\r\nimport { toggleSnackbar } from \"../../../redux/explorer\";\r\n\r\nexport default function EditUserPreload() {\r\n    const [user, setUser] = useState({});\r\n\r\n    const { id } = useParams();\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        setUser({});\r\n        API.get(\"/admin/user/\" + id)\r\n            .then((response) => {\r\n                // 整型转换\r\n                [\"Status\", \"GroupID\"].forEach((v) => {\r\n                    response.data[v] = response.data[v].toString();\r\n                });\r\n                setUser(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    }, [id]);\r\n\r\n    return <div>{user.ID !== undefined && <UserForm user={user} />}</div>;\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../redux/explorer\";\r\nimport API from \"../../../middleware/Api\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nexport default function FileFilter({ setFilter, setSearch, open, onClose }) {\r\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"file\" });\r\n    const { t: tDashboard } = useTranslation(\"dashboard\");\r\n    const { t: tCommon } = useTranslation(\"common\");\r\n    const [input, setInput] = useState({\r\n        policy_id: \"all\",\r\n        user_id: \"\",\r\n    });\r\n    const [policies, setPolicies] = useState([]);\r\n    const [keywords, setKeywords] = useState(\"\");\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setInput({ ...input, [name]: event.target.value });\r\n    };\r\n\r\n    useEffect(() => {\r\n        API.post(\"/admin/policy/list\", {\r\n            page: 1,\r\n            page_size: 10000,\r\n            order_by: \"id asc\",\r\n            conditions: {},\r\n        })\r\n            .then((response) => {\r\n                setPolicies(response.data.items);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    }, []);\r\n\r\n    const submit = () => {\r\n        const res = {};\r\n        Object.keys(input).forEach((v) => {\r\n            if (input[v] !== \"all\" && input[v] !== \"\") {\r\n                res[v] = input[v];\r\n            }\r\n        });\r\n        setFilter(res);\r\n        if (keywords !== \"\") {\r\n            setSearch({\r\n                name: keywords,\r\n            });\r\n        } else {\r\n            setSearch({});\r\n        }\r\n        onClose();\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={onClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n            fullWidth\r\n            maxWidth={\"xs\"}\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">\r\n                {tDashboard(\"user.filterCondition\")}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <FormControl fullWidth>\r\n                    <InputLabel id=\"demo-simple-select-label\">\r\n                        {t(\"storagePolicy\")}\r\n                    </InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        value={input.policy_id}\r\n                        onChange={handleChange(\"policy_id\")}\r\n                    >\r\n                        <MenuItem value={\"all\"}>\r\n                            {tDashboard(\"user.all\")}\r\n                        </MenuItem>\r\n                        {policies.map((v) => {\r\n                            return (\r\n                                <MenuItem key={v.ID} value={v.ID.toString()}>\r\n                                    {v.Name}\r\n                                </MenuItem>\r\n                            );\r\n                        })}\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl fullWidth style={{ marginTop: 16 }}>\r\n                    <TextField\r\n                        value={input.user_id}\r\n                        onChange={handleChange(\"user_id\")}\r\n                        id=\"standard-basic\"\r\n                        label={t(\"uploaderID\")}\r\n                    />\r\n                </FormControl>\r\n                <FormControl fullWidth style={{ marginTop: 16 }}>\r\n                    <TextField\r\n                        value={keywords}\r\n                        onChange={(e) => setKeywords(e.target.value)}\r\n                        id=\"standard-basic\"\r\n                        label={t(\"searchFileName\")}\r\n                    />\r\n                </FormControl>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={onClose} color=\"default\">\r\n                    {tCommon(\"cancel\")}\r\n                </Button>\r\n                <Button onClick={submit} color=\"primary\">\r\n                    {tDashboard(\"user.apply\")}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import { lighten } from \"@material-ui/core\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Delete, DeleteForever, FilterList } from \"@material-ui/icons\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { toggleSnackbar } from \"../../../redux/explorer\";\r\nimport API from \"../../../middleware/Api\";\r\nimport { sizeToString } from \"../../../utils\";\r\nimport FileFilter from \"../Dialogs/FileFilter\";\r\nimport { formatLocalTime } from \"../../../utils/datetime\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    content: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    container: {\r\n        overflowX: \"auto\",\r\n    },\r\n    tableContainer: {\r\n        marginTop: 16,\r\n    },\r\n    header: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"flex-start\",\r\n    },\r\n    headerRight: {},\r\n    highlight:\r\n        theme.palette.type === \"light\"\r\n            ? {\r\n                  color: theme.palette.secondary.main,\r\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n              }\r\n            : {\r\n                  color: theme.palette.text.primary,\r\n                  backgroundColor: theme.palette.secondary.dark,\r\n              },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: \"rect(0 0 0 0)\",\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: \"hidden\",\r\n        padding: 0,\r\n        position: \"absolute\",\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n    disabledBadge: {\r\n        marginLeft: theme.spacing(1),\r\n        height: 18,\r\n    },\r\n}));\r\n\r\nexport default function File() {\r\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"file\" });\r\n    const { t: tDashboard } = useTranslation(\"dashboard\");\r\n    const classes = useStyles();\r\n    const [files, setFiles] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [total, setTotal] = useState(0);\r\n    const [filter, setFilter] = useState({});\r\n    const [users, setUsers] = useState({});\r\n    const [search, setSearch] = useState({});\r\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\r\n    const [filterDialog, setFilterDialog] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const loadList = () => {\r\n        API.post(\"/admin/file/list\", {\r\n            page: page,\r\n            page_size: pageSize,\r\n            order_by: orderBy.join(\" \"),\r\n            conditions: filter,\r\n            searches: search,\r\n        })\r\n            .then((response) => {\r\n                setFiles(response.data.items);\r\n                setTotal(response.data.total);\r\n                setSelected([]);\r\n                setUsers(response.data.users);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadList();\r\n    }, [page, pageSize, orderBy, filter, search]);\r\n\r\n    const deletePolicy = (id) => {\r\n        setLoading(true);\r\n        API.post(\"/admin/file/delete\", { id: [id] })\r\n            .then(() => {\r\n                loadList();\r\n                ToggleSnackbar(\"top\", \"right\", t(\"deleteAsync\"), \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const deleteBatch = (force) => () => {\r\n        setLoading(true);\r\n        API.post(\"/admin/file/delete\", { id: selected, force: force })\r\n            .then(() => {\r\n                loadList();\r\n                ToggleSnackbar(\"top\", \"right\", t(\"deleteAsync\"), \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        if (event.target.checked) {\r\n            const newSelecteds = files.map((n) => n.ID);\r\n            setSelected(newSelecteds);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleClick = (event, name) => {\r\n        const selectedIndex = selected.indexOf(name);\r\n        let newSelected = [];\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, name);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(\r\n                selected.slice(0, selectedIndex),\r\n                selected.slice(selectedIndex + 1)\r\n            );\r\n        }\r\n\r\n        setSelected(newSelected);\r\n    };\r\n\r\n    const isSelected = (id) => selected.indexOf(id) !== -1;\r\n\r\n    return (\r\n        <div>\r\n            <FileFilter\r\n                filter={filter}\r\n                open={filterDialog}\r\n                onClose={() => setFilterDialog(false)}\r\n                setSearch={setSearch}\r\n                setFilter={setFilter}\r\n            />\r\n            <div className={classes.header}>\r\n                <Button\r\n                    color={\"primary\"}\r\n                    onClick={() => history.push(\"/admin/file/import\")}\r\n                    variant={\"contained\"}\r\n                    style={{\r\n                        alignSelf: \"center\",\r\n                    }}\r\n                >\r\n                    {t(\"import\")}\r\n                </Button>\r\n                <div className={classes.headerRight}>\r\n                    <Tooltip title={tDashboard(\"user.filter\")}>\r\n                        <IconButton\r\n                            style={{ marginRight: 8 }}\r\n                            onClick={() => setFilterDialog(true)}\r\n                        >\r\n                            <Badge\r\n                                color=\"secondary\"\r\n                                variant=\"dot\"\r\n                                invisible={\r\n                                    Object.keys(search).length === 0 &&\r\n                                    Object.keys(filter).length === 0\r\n                                }\r\n                            >\r\n                                <FilterList />\r\n                            </Badge>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    <Button\r\n                        color={\"primary\"}\r\n                        onClick={() => loadList()}\r\n                        variant={\"outlined\"}\r\n                    >\r\n                        {tDashboard(\"policy.refresh\")}\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\r\n            <Paper square className={classes.tableContainer}>\r\n                {selected.length > 0 && (\r\n                    <Toolbar className={classes.highlight}>\r\n                        <Typography\r\n                            style={{ flex: \"1 1 100%\" }}\r\n                            color=\"inherit\"\r\n                            variant=\"subtitle1\"\r\n                        >\r\n                            {tDashboard(\"user.selectedObjects\", {\r\n                                num: selected.length,\r\n                            })}\r\n                        </Typography>\r\n                        <Tooltip title={tDashboard(\"policy.delete\")}>\r\n                            <IconButton\r\n                                onClick={deleteBatch(false)}\r\n                                disabled={loading}\r\n                                aria-label=\"delete\"\r\n                            >\r\n                                <Delete />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title={t(\"forceDelete\")}>\r\n                            <IconButton\r\n                                onClick={deleteBatch(true)}\r\n                                disabled={loading}\r\n                                aria-label=\"delete\"\r\n                            >\r\n                                <DeleteForever />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </Toolbar>\r\n                )}\r\n                <TableContainer className={classes.container}>\r\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\r\n                        <TableHead>\r\n                            <TableRow style={{ height: 52 }}>\r\n                                <TableCell padding=\"checkbox\">\r\n                                    <Checkbox\r\n                                        indeterminate={\r\n                                            selected.length > 0 &&\r\n                                            selected.length < files.length\r\n                                        }\r\n                                        checked={\r\n                                            files.length > 0 &&\r\n                                            selected.length === files.length\r\n                                        }\r\n                                        onChange={handleSelectAllClick}\r\n                                        inputProps={{\r\n                                            \"aria-label\": \"select all desserts\",\r\n                                        }}\r\n                                    />\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 59 }}>\r\n                                    <TableSortLabel\r\n                                        active={orderBy[0] === \"id\"}\r\n                                        direction={orderBy[1]}\r\n                                        onClick={() =>\r\n                                            setOrderBy([\r\n                                                \"id\",\r\n                                                orderBy[1] === \"asc\"\r\n                                                    ? \"desc\"\r\n                                                    : \"asc\",\r\n                                            ])\r\n                                        }\r\n                                    >\r\n                                        #\r\n                                        {orderBy[0] === \"id\" ? (\r\n                                            <span\r\n                                                className={\r\n                                                    classes.visuallyHidden\r\n                                                }\r\n                                            >\r\n                                                {orderBy[1] === \"desc\"\r\n                                                    ? \"sorted descending\"\r\n                                                    : \"sorted ascending\"}\r\n                                            </span>\r\n                                        ) : null}\r\n                                    </TableSortLabel>\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 250 }}>\r\n                                    <TableSortLabel\r\n                                        active={orderBy[0] === \"name\"}\r\n                                        direction={orderBy[1]}\r\n                                        onClick={() =>\r\n                                            setOrderBy([\r\n                                                \"name\",\r\n                                                orderBy[1] === \"asc\"\r\n                                                    ? \"desc\"\r\n                                                    : \"asc\",\r\n                                            ])\r\n                                        }\r\n                                    >\r\n                                        {t(\"name\")}\r\n                                        {orderBy[0] === \"name\" ? (\r\n                                            <span\r\n                                                className={\r\n                                                    classes.visuallyHidden\r\n                                                }\r\n                                            >\r\n                                                {orderBy[1] === \"desc\"\r\n                                                    ? \"sorted descending\"\r\n                                                    : \"sorted ascending\"}\r\n                                            </span>\r\n                                        ) : null}\r\n                                    </TableSortLabel>\r\n                                </TableCell>\r\n                                <TableCell\r\n                                    align={\"right\"}\r\n                                    style={{ minWidth: 70 }}\r\n                                >\r\n                                    <TableSortLabel\r\n                                        active={orderBy[0] === \"size\"}\r\n                                        direction={orderBy[1]}\r\n                                        onClick={() =>\r\n                                            setOrderBy([\r\n                                                \"size\",\r\n                                                orderBy[1] === \"asc\"\r\n                                                    ? \"desc\"\r\n                                                    : \"asc\",\r\n                                            ])\r\n                                        }\r\n                                    >\r\n                                        {t(\"size\")}\r\n                                        {orderBy[0] === \"size\" ? (\r\n                                            <span\r\n                                                className={\r\n                                                    classes.visuallyHidden\r\n                                                }\r\n                                            >\r\n                                                {orderBy[1] === \"desc\"\r\n                                                    ? \"sorted descending\"\r\n                                                    : \"sorted ascending\"}\r\n                                            </span>\r\n                                        ) : null}\r\n                                    </TableSortLabel>\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 120 }}>\r\n                                    {t(\"uploader\")}\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 150 }}>\r\n                                    {t(\"createdAt\")}\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 100 }}>\r\n                                    {tDashboard(\"policy.actions\")}\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {files.map((row) => (\r\n                                <TableRow\r\n                                    hover\r\n                                    key={row.ID}\r\n                                    role=\"checkbox\"\r\n                                    selected={isSelected(row.ID)}\r\n                                >\r\n                                    <TableCell padding=\"checkbox\">\r\n                                        <Checkbox\r\n                                            onClick={(event) =>\r\n                                                handleClick(event, row.ID)\r\n                                            }\r\n                                            checked={isSelected(row.ID)}\r\n                                        />\r\n                                    </TableCell>\r\n                                    <TableCell>{row.ID}</TableCell>\r\n                                    <TableCell>\r\n                                        <Link\r\n                                            target={\"_blank\"}\r\n                                            color=\"inherit\"\r\n                                            href={\r\n                                                \"/api/v3/admin/file/preview/\" +\r\n                                                row.ID\r\n                                            }\r\n                                        >\r\n                                            {row.Name}\r\n                                            {row.UploadSessionID && (\r\n                                                <Chip\r\n                                                    className={\r\n                                                        classes.disabledBadge\r\n                                                    }\r\n                                                    size=\"small\"\r\n                                                    label={t(\"uploading\")}\r\n                                                />\r\n                                            )}\r\n                                        </Link>\r\n                                    </TableCell>\r\n                                    <TableCell align={\"right\"}>\r\n                                        {sizeToString(row.Size)}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Link\r\n                                            href={\r\n                                                \"/admin/user/edit/\" + row.UserID\r\n                                            }\r\n                                        >\r\n                                            {users[row.UserID]\r\n                                                ? users[row.UserID].Nick\r\n                                                : t(\"unknownUploader\")}\r\n                                        </Link>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {formatLocalTime(\r\n                                            row.CreatedAt,\r\n                                            \"YYYY-MM-DD H:mm:ss\"\r\n                                        )}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Tooltip\r\n                                            title={tDashboard(\"policy.delete\")}\r\n                                        >\r\n                                            <IconButton\r\n                                                disabled={loading}\r\n                                                onClick={() =>\r\n                                                    deletePolicy(row.ID)\r\n                                                }\r\n                                                size={\"small\"}\r\n                                            >\r\n                                                <Delete />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 50, 100]}\r\n                    component=\"div\"\r\n                    count={total}\r\n                    rowsPerPage={pageSize}\r\n                    page={page - 1}\r\n                    onChangePage={(e, p) => setPage(p + 1)}\r\n                    onChangeRowsPerPage={(e) => {\r\n                        setPageSize(e.target.value);\r\n                        setPage(1);\r\n                    }}\r\n                />\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport React, { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nexport default function ShareFilter({ setFilter, setSearch, open, onClose }) {\r\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"share\" });\r\n    const { t: tDashboard } = useTranslation(\"dashboard\");\r\n    const { t: tCommon } = useTranslation(\"common\");\r\n    const [input, setInput] = useState({\r\n        is_dir: \"all\",\r\n        user_id: \"\",\r\n    });\r\n    const [keywords, setKeywords] = useState(\"\");\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setInput({ ...input, [name]: event.target.value });\r\n    };\r\n\r\n    const submit = () => {\r\n        const res = {};\r\n        Object.keys(input).forEach((v) => {\r\n            if (input[v] !== \"all\" && input[v] !== \"\") {\r\n                res[v] = input[v];\r\n            }\r\n        });\r\n        setFilter(res);\r\n        if (keywords !== \"\") {\r\n            setSearch({\r\n                source_name: keywords,\r\n            });\r\n        } else {\r\n            setSearch({});\r\n        }\r\n        onClose();\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={onClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n            fullWidth\r\n            maxWidth={\"xs\"}\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">\r\n                {tDashboard(\"user.filterCondition\")}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <FormControl fullWidth>\r\n                    <InputLabel id=\"demo-simple-select-label\">\r\n                        {t(\"srcType\")}\r\n                    </InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        value={input.is_dir}\r\n                        onChange={handleChange(\"is_dir\")}\r\n                    >\r\n                        <MenuItem value={\"all\"}>\r\n                            {tDashboard(\"user.all\")}\r\n                        </MenuItem>\r\n                        <MenuItem value={\"1\"}>{t(\"folder\")}</MenuItem>\r\n                        <MenuItem value={\"0\"}>{t(\"file\")}</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl fullWidth style={{ marginTop: 16 }}>\r\n                    <TextField\r\n                        value={input.user_id}\r\n                        onChange={handleChange(\"user_id\")}\r\n                        id=\"standard-basic\"\r\n                        label={tDashboard(\"file.uploaderID\")}\r\n                    />\r\n                </FormControl>\r\n                <FormControl fullWidth style={{ marginTop: 16 }}>\r\n                    <TextField\r\n                        value={keywords}\r\n                        onChange={(e) => setKeywords(e.target.value)}\r\n                        id=\"standard-basic\"\r\n                        label={tDashboard(\"file.searchFileName\")}\r\n                    />\r\n                </FormControl>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={onClose} color=\"default\">\r\n                    {tCommon(\"cancel\")}\r\n                </Button>\r\n                <Button onClick={submit} color=\"primary\">\r\n                    {tCommon(\"ok\")}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import { lighten } from \"@material-ui/core\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Delete, FilterList } from \"@material-ui/icons\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../redux/explorer\";\r\nimport API from \"../../../middleware/Api\";\r\nimport ShareFilter from \"../Dialogs/ShareFilter\";\r\nimport { formatLocalTime } from \"../../../utils/datetime\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    content: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    container: {\r\n        overflowX: \"auto\",\r\n    },\r\n    tableContainer: {\r\n        marginTop: 16,\r\n    },\r\n    header: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    headerRight: {},\r\n    highlight:\r\n        theme.palette.type === \"light\"\r\n            ? {\r\n                  color: theme.palette.secondary.main,\r\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n              }\r\n            : {\r\n                  color: theme.palette.text.primary,\r\n                  backgroundColor: theme.palette.secondary.dark,\r\n              },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: \"rect(0 0 0 0)\",\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: \"hidden\",\r\n        padding: 0,\r\n        position: \"absolute\",\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n}));\r\n\r\nexport default function Share() {\r\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"share\" });\r\n    const { t: tDashboard } = useTranslation(\"dashboard\");\r\n    const classes = useStyles();\r\n    const [shares, setShares] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [total, setTotal] = useState(0);\r\n    const [filter, setFilter] = useState({});\r\n    const [users, setUsers] = useState({});\r\n    const [ids, setIds] = useState({});\r\n    const [search, setSearch] = useState({});\r\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\r\n    const [filterDialog, setFilterDialog] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n    const loadList = () => {\r\n        API.post(\"/admin/share/list\", {\r\n            page: page,\r\n            page_size: pageSize,\r\n            order_by: orderBy.join(\" \"),\r\n            conditions: filter,\r\n            searches: search,\r\n        })\r\n            .then((response) => {\r\n                setUsers(response.data.users);\r\n                setIds(response.data.ids);\r\n                setShares(response.data.items);\r\n                setTotal(response.data.total);\r\n                setSelected([]);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadList();\r\n    }, [page, pageSize, orderBy, filter, search]);\r\n\r\n    const deletePolicy = (id) => {\r\n        setLoading(true);\r\n        API.post(\"/admin/share/delete\", { id: [id] })\r\n            .then(() => {\r\n                loadList();\r\n                ToggleSnackbar(\"top\", \"right\", t(\"deleted\"), \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const deleteBatch = () => {\r\n        setLoading(true);\r\n        API.post(\"/admin/share/delete\", { id: selected })\r\n            .then(() => {\r\n                loadList();\r\n                ToggleSnackbar(\"top\", \"right\", t(\"deleted\"), \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        if (event.target.checked) {\r\n            const newSelecteds = shares.map((n) => n.ID);\r\n            setSelected(newSelecteds);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleClick = (event, name) => {\r\n        const selectedIndex = selected.indexOf(name);\r\n        let newSelected = [];\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, name);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(\r\n                selected.slice(0, selectedIndex),\r\n                selected.slice(selectedIndex + 1)\r\n            );\r\n        }\r\n\r\n        setSelected(newSelected);\r\n    };\r\n\r\n    const isSelected = (id) => selected.indexOf(id) !== -1;\r\n\r\n    return (\r\n        <div>\r\n            <ShareFilter\r\n                filter={filter}\r\n                open={filterDialog}\r\n                onClose={() => setFilterDialog(false)}\r\n                setSearch={setSearch}\r\n                setFilter={setFilter}\r\n            />\r\n            <div className={classes.header}>\r\n                <div className={classes.headerRight}>\r\n                    <Tooltip title={tDashboard(\"user.filter\")}>\r\n                        <IconButton\r\n                            style={{ marginRight: 8 }}\r\n                            onClick={() => setFilterDialog(true)}\r\n                        >\r\n                            <Badge\r\n                                color=\"secondary\"\r\n                                variant=\"dot\"\r\n                                invisible={\r\n                                    Object.keys(search).length === 0 &&\r\n                                    Object.keys(filter).length === 0\r\n                                }\r\n                            >\r\n                                <FilterList />\r\n                            </Badge>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    <Button\r\n                        color={\"primary\"}\r\n                        onClick={() => loadList()}\r\n                        variant={\"outlined\"}\r\n                    >\r\n                        {tDashboard(\"policy.refresh\")}\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\r\n            <Paper square className={classes.tableContainer}>\r\n                {selected.length > 0 && (\r\n                    <Toolbar className={classes.highlight}>\r\n                        <Typography\r\n                            style={{ flex: \"1 1 100%\" }}\r\n                            color=\"inherit\"\r\n                            variant=\"subtitle1\"\r\n                        >\r\n                            {tDashboard(\"user.selectedObjects\", {\r\n                                num: selected.length,\r\n                            })}\r\n                        </Typography>\r\n                        <Tooltip title={tDashboard(\"node.delete\")}>\r\n                            <IconButton\r\n                                onClick={deleteBatch}\r\n                                disabled={loading}\r\n                                aria-label=\"delete\"\r\n                            >\r\n                                <Delete />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </Toolbar>\r\n                )}\r\n                <TableContainer className={classes.container}>\r\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\r\n                        <TableHead>\r\n                            <TableRow style={{ height: 52 }}>\r\n                                <TableCell padding=\"checkbox\">\r\n                                    <Checkbox\r\n                                        indeterminate={\r\n                                            selected.length > 0 &&\r\n                                            selected.length < shares.length\r\n                                        }\r\n                                        checked={\r\n                                            shares.length > 0 &&\r\n                                            selected.length === shares.length\r\n                                        }\r\n                                        onChange={handleSelectAllClick}\r\n                                        inputProps={{\r\n                                            \"aria-label\": \"select all desserts\",\r\n                                        }}\r\n                                    />\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 10 }}>\r\n                                    <TableSortLabel\r\n                                        active={orderBy[0] === \"id\"}\r\n                                        direction={orderBy[1]}\r\n                                        onClick={() =>\r\n                                            setOrderBy([\r\n                                                \"id\",\r\n                                                orderBy[1] === \"asc\"\r\n                                                    ? \"desc\"\r\n                                                    : \"asc\",\r\n                                            ])\r\n                                        }\r\n                                    >\r\n                                        #\r\n                                        {orderBy[0] === \"id\" ? (\r\n                                            <span\r\n                                                className={\r\n                                                    classes.visuallyHidden\r\n                                                }\r\n                                            >\r\n                                                {orderBy[1] === \"desc\"\r\n                                                    ? \"sorted descending\"\r\n                                                    : \"sorted ascending\"}\r\n                                            </span>\r\n                                        ) : null}\r\n                                    </TableSortLabel>\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 200 }}>\r\n                                    <TableSortLabel\r\n                                        active={orderBy[0] === \"source_name\"}\r\n                                        direction={orderBy[1]}\r\n                                        onClick={() =>\r\n                                            setOrderBy([\r\n                                                \"source_name\",\r\n                                                orderBy[1] === \"asc\"\r\n                                                    ? \"desc\"\r\n                                                    : \"asc\",\r\n                                            ])\r\n                                        }\r\n                                    >\r\n                                        {t(\"objectName\")}\r\n                                        {orderBy[0] === \"source_name\" ? (\r\n                                            <span\r\n                                                className={\r\n                                                    classes.visuallyHidden\r\n                                                }\r\n                                            >\r\n                                                {orderBy[1] === \"desc\"\r\n                                                    ? \"sorted descending\"\r\n                                                    : \"sorted ascending\"}\r\n                                            </span>\r\n                                        ) : null}\r\n                                    </TableSortLabel>\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 70 }}>\r\n                                    {tDashboard(\"policy.type\")}\r\n                                </TableCell>\r\n                                <TableCell\r\n                                    style={{ minWidth: 100 }}\r\n                                    align={\"right\"}\r\n                                >\r\n                                    <TableSortLabel\r\n                                        active={orderBy[0] === \"views\"}\r\n                                        direction={orderBy[1]}\r\n                                        onClick={() =>\r\n                                            setOrderBy([\r\n                                                \"views\",\r\n                                                orderBy[1] === \"asc\"\r\n                                                    ? \"desc\"\r\n                                                    : \"asc\",\r\n                                            ])\r\n                                        }\r\n                                    >\r\n                                        {t(\"views\")}\r\n                                        {orderBy[0] === \"views\" ? (\r\n                                            <span\r\n                                                className={\r\n                                                    classes.visuallyHidden\r\n                                                }\r\n                                            >\r\n                                                {orderBy[1] === \"desc\"\r\n                                                    ? \"sorted descending\"\r\n                                                    : \"sorted ascending\"}\r\n                                            </span>\r\n                                        ) : null}\r\n                                    </TableSortLabel>\r\n                                </TableCell>\r\n                                <TableCell\r\n                                    style={{ minWidth: 100 }}\r\n                                    align={\"right\"}\r\n                                >\r\n                                    <TableSortLabel\r\n                                        active={orderBy[0] === \"downloads\"}\r\n                                        direction={orderBy[1]}\r\n                                        onClick={() =>\r\n                                            setOrderBy([\r\n                                                \"downloads\",\r\n                                                orderBy[1] === \"asc\"\r\n                                                    ? \"desc\"\r\n                                                    : \"asc\",\r\n                                            ])\r\n                                        }\r\n                                    >\r\n                                        {t(\"downloads\")}\r\n                                        {orderBy[0] === \"downloads\" ? (\r\n                                            <span\r\n                                                className={\r\n                                                    classes.visuallyHidden\r\n                                                }\r\n                                            >\r\n                                                {orderBy[1] === \"desc\"\r\n                                                    ? \"sorted descending\"\r\n                                                    : \"sorted ascending\"}\r\n                                            </span>\r\n                                        ) : null}\r\n                                    </TableSortLabel>\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 120 }}>\r\n                                    {t(\"autoExpire\")}\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 120 }}>\r\n                                    {t(\"owner\")}\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 150 }}>\r\n                                    {t(\"createdAt\")}\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 100 }}>\r\n                                    {tDashboard(\"policy.actions\")}\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {shares.map((row) => (\r\n                                <TableRow\r\n                                    hover\r\n                                    key={row.ID}\r\n                                    role=\"checkbox\"\r\n                                    selected={isSelected(row.ID)}\r\n                                >\r\n                                    <TableCell padding=\"checkbox\">\r\n                                        <Checkbox\r\n                                            onClick={(event) =>\r\n                                                handleClick(event, row.ID)\r\n                                            }\r\n                                            checked={isSelected(row.ID)}\r\n                                        />\r\n                                    </TableCell>\r\n                                    <TableCell>{row.ID}</TableCell>\r\n                                    <TableCell\r\n                                        style={{ wordBreak: \"break-all\" }}\r\n                                    >\r\n                                        <Link\r\n                                            target={\"_blank\"}\r\n                                            color=\"inherit\"\r\n                                            href={\r\n                                                \"/s/\" +\r\n                                                ids[row.ID] +\r\n                                                (row.Password === \"\"\r\n                                                    ? \"\"\r\n                                                    : \"?password=\" +\r\n                                                      row.Password)\r\n                                            }\r\n                                        >\r\n                                            {row.SourceName}\r\n                                        </Link>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {row.Password === \"\"\r\n                                            ? t(\"public\")\r\n                                            : t(\"private\")}\r\n                                    </TableCell>\r\n                                    <TableCell align={\"right\"}>\r\n                                        {row.Views}\r\n                                    </TableCell>\r\n                                    <TableCell align={\"right\"}>\r\n                                        {row.Downloads}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {row.RemainDownloads > -1 &&\r\n                                            t(\"afterNDownloads\", {\r\n                                                num: row.RemainDownloads,\r\n                                            })}\r\n                                        {row.RemainDownloads === -1 &&\r\n                                            t(\"none\")}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Link\r\n                                            href={\r\n                                                \"/admin/user/edit/\" + row.UserID\r\n                                            }\r\n                                        >\r\n                                            {users[row.UserID]\r\n                                                ? users[row.UserID].Nick\r\n                                                : tDashboard(\r\n                                                      \"file.unknownUploader\"\r\n                                                  )}\r\n                                        </Link>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {formatLocalTime(row.CreatedAt)}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Tooltip\r\n                                            title={tDashboard(\"node.delete\")}\r\n                                        >\r\n                                            <IconButton\r\n                                                disabled={loading}\r\n                                                onClick={() =>\r\n                                                    deletePolicy(row.ID)\r\n                                                }\r\n                                                size={\"small\"}\r\n                                            >\r\n                                                <Delete />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 50, 100]}\r\n                    component=\"div\"\r\n                    count={total}\r\n                    rowsPerPage={pageSize}\r\n                    page={page - 1}\r\n                    onChangePage={(e, p) => setPage(p + 1)}\r\n                    onChangeRowsPerPage={(e) => {\r\n                        setPageSize(e.target.value);\r\n                        setPage(1);\r\n                    }}\r\n                />\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    Link,\r\n} from \"@material-ui/core\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({}));\r\n\r\nexport default function Aria2Helper(props) {\r\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"task\" });\r\n    const { t: tCommon } = useTranslation(\"common\");\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            onClose={props.onClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">\r\n                {t(\"howToConfigAria2\")}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    {t(\"aria2Des\")}\r\n                    <ul>\r\n                        <li>\r\n                            <Trans\r\n                                ns={\"dashboard\"}\r\n                                i18nKey={\"task.masterAria2Des\"}\r\n                                components={[\r\n                                    <Link\r\n                                        component={RouterLink}\r\n                                        to={\"/admin/node/edit/1\"}\r\n                                        key={0}\r\n                                    />,\r\n                                ]}\r\n                            />\r\n                        </li>\r\n                        <li>\r\n                            <Trans\r\n                                ns={\"dashboard\"}\r\n                                i18nKey={\"task.slaveAria2Des\"}\r\n                                components={[\r\n                                    <Link\r\n                                        component={RouterLink}\r\n                                        to={\"/admin/node/add\"}\r\n                                        key={0}\r\n                                    />,\r\n                                ]}\r\n                            />\r\n                        </li>\r\n                    </ul>\r\n                    <Trans\r\n                        ns={\"dashboard\"}\r\n                        i18nKey={\"task.editGroupDes\"}\r\n                        components={[\r\n                            <Link\r\n                                component={RouterLink}\r\n                                to={\"/admin/group\"}\r\n                                key={0}\r\n                            />,\r\n                        ]}\r\n                    />\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={props.onClose} color=\"primary\" autoFocus>\r\n                    {tCommon(\"close\")}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import { lighten } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Delete } from \"@material-ui/icons\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../redux/explorer\";\r\nimport API from \"../../../middleware/Api\";\r\nimport { sizeToString } from \"../../../utils\";\r\nimport ShareFilter from \"../Dialogs/ShareFilter\";\r\nimport { formatLocalTime } from \"../../../utils/datetime\";\r\nimport Aria2Helper from \"./Aria2Helper\";\r\nimport HelpIcon from \"@material-ui/icons/Help\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    content: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    container: {\r\n        overflowX: \"auto\",\r\n    },\r\n    tableContainer: {\r\n        marginTop: 16,\r\n    },\r\n    header: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    headerRight: {},\r\n    highlight:\r\n        theme.palette.type === \"light\"\r\n            ? {\r\n                  color: theme.palette.secondary.main,\r\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n              }\r\n            : {\r\n                  color: theme.palette.text.primary,\r\n                  backgroundColor: theme.palette.secondary.dark,\r\n              },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: \"rect(0 0 0 0)\",\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: \"hidden\",\r\n        padding: 0,\r\n        position: \"absolute\",\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n}));\r\n\r\nexport default function Download() {\r\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"task\" });\r\n    const { t: tDashboard } = useTranslation(\"dashboard\");\r\n    const classes = useStyles();\r\n    const [downloads, setDownloads] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [total, setTotal] = useState(0);\r\n    const [filter, setFilter] = useState({});\r\n    const [users, setUsers] = useState({});\r\n    const [search, setSearch] = useState({});\r\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\r\n    const [filterDialog, setFilterDialog] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [helperOpen, setHelperOpen] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const loadList = () => {\r\n        API.post(\"/admin/download/list\", {\r\n            page: page,\r\n            page_size: pageSize,\r\n            order_by: orderBy.join(\" \"),\r\n            conditions: filter,\r\n            searches: search,\r\n        })\r\n            .then((response) => {\r\n                setUsers(response.data.users);\r\n                setDownloads(response.data.items);\r\n                setTotal(response.data.total);\r\n                setSelected([]);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadList();\r\n    }, [page, pageSize, orderBy, filter, search]);\r\n\r\n    const deletePolicy = (id) => {\r\n        setLoading(true);\r\n        API.post(\"/admin/download/delete\", { id: [id] })\r\n            .then(() => {\r\n                loadList();\r\n                ToggleSnackbar(\"top\", \"right\", t(\"taskDeleted\"), \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const deleteBatch = () => {\r\n        setLoading(true);\r\n        API.post(\"/admin/download/delete\", { id: selected })\r\n            .then(() => {\r\n                loadList();\r\n                ToggleSnackbar(\"top\", \"right\", t(\"taskDeleted\"), \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        if (event.target.checked) {\r\n            const newSelecteds = downloads.map((n) => n.ID);\r\n            setSelected(newSelecteds);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleClick = (event, name) => {\r\n        const selectedIndex = selected.indexOf(name);\r\n        let newSelected = [];\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, name);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(\r\n                selected.slice(0, selectedIndex),\r\n                selected.slice(selectedIndex + 1)\r\n            );\r\n        }\r\n\r\n        setSelected(newSelected);\r\n    };\r\n\r\n    const isSelected = (id) => selected.indexOf(id) !== -1;\r\n\r\n    return (\r\n        <div>\r\n            <Aria2Helper\r\n                open={helperOpen}\r\n                onClose={() => setHelperOpen(false)}\r\n            />\r\n            <ShareFilter\r\n                filter={filter}\r\n                open={filterDialog}\r\n                onClose={() => setFilterDialog(false)}\r\n                setSearch={setSearch}\r\n                setFilter={setFilter}\r\n            />\r\n            <div className={classes.header}>\r\n                <Button\r\n                    color={\"primary\"}\r\n                    onClick={() => loadList()}\r\n                    variant={\"outlined\"}\r\n                >\r\n                    {tDashboard(\"policy.refresh\")}\r\n                </Button>\r\n                <div className={classes.headerRight}>\r\n                    <Button\r\n                        color={\"primary\"}\r\n                        onClick={() => setHelperOpen(true)}\r\n                    >\r\n                        <HelpIcon /> {\"  \"}\r\n                        {t(\"howToConfigAria2\")}\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\r\n            <Paper square className={classes.tableContainer}>\r\n                {selected.length > 0 && (\r\n                    <Toolbar className={classes.highlight}>\r\n                        <Typography\r\n                            style={{ flex: \"1 1 100%\" }}\r\n                            color=\"inherit\"\r\n                            variant=\"subtitle1\"\r\n                        >\r\n                            {tDashboard(\"user.selectedObjects\", {\r\n                                num: selected.length,\r\n                            })}\r\n                        </Typography>\r\n                        <Tooltip title={tDashboard(\"policy.delete\")}>\r\n                            <IconButton\r\n                                onClick={deleteBatch}\r\n                                disabled={loading}\r\n                                aria-label=\"delete\"\r\n                            >\r\n                                <Delete />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </Toolbar>\r\n                )}\r\n                <TableContainer className={classes.container}>\r\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\r\n                        <TableHead>\r\n                            <TableRow style={{ height: 52 }}>\r\n                                <TableCell padding=\"checkbox\">\r\n                                    <Checkbox\r\n                                        indeterminate={\r\n                                            selected.length > 0 &&\r\n                                            selected.length < downloads.length\r\n                                        }\r\n                                        checked={\r\n                                            downloads.length > 0 &&\r\n                                            selected.length === downloads.length\r\n                                        }\r\n                                        onChange={handleSelectAllClick}\r\n                                        inputProps={{\r\n                                            \"aria-label\": \"select all desserts\",\r\n                                        }}\r\n                                    />\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 10 }}>\r\n                                    <TableSortLabel\r\n                                        active={orderBy[0] === \"id\"}\r\n                                        direction={orderBy[1]}\r\n                                        onClick={() =>\r\n                                            setOrderBy([\r\n                                                \"id\",\r\n                                                orderBy[1] === \"asc\"\r\n                                                    ? \"desc\"\r\n                                                    : \"asc\",\r\n                                            ])\r\n                                        }\r\n                                    >\r\n                                        #\r\n                                        {orderBy[0] === \"id\" ? (\r\n                                            <span\r\n                                                className={\r\n                                                    classes.visuallyHidden\r\n                                                }\r\n                                            >\r\n                                                {orderBy[1] === \"desc\"\r\n                                                    ? \"sorted descending\"\r\n                                                    : \"sorted ascending\"}\r\n                                            </span>\r\n                                        ) : null}\r\n                                    </TableSortLabel>\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 130 }}>\r\n                                    {t(\"srcURL\")}\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 90 }}>\r\n                                    {tDashboard(\"user.status\")}\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 90 }}>\r\n                                    {t(\"node\")}\r\n                                </TableCell>\r\n                                <TableCell\r\n                                    style={{ minWidth: 150 }}\r\n                                    align={\"right\"}\r\n                                >\r\n                                    <TableSortLabel\r\n                                        active={orderBy[0] === \"total_size\"}\r\n                                        direction={orderBy[1]}\r\n                                        onClick={() =>\r\n                                            setOrderBy([\r\n                                                \"total_size\",\r\n                                                orderBy[1] === \"asc\"\r\n                                                    ? \"desc\"\r\n                                                    : \"asc\",\r\n                                            ])\r\n                                        }\r\n                                    >\r\n                                        {tDashboard(\"file.size\")}\r\n                                        {orderBy[0] === \"total_size\" ? (\r\n                                            <span\r\n                                                className={\r\n                                                    classes.visuallyHidden\r\n                                                }\r\n                                            >\r\n                                                {orderBy[1] === \"desc\"\r\n                                                    ? \"sorted descending\"\r\n                                                    : \"sorted ascending\"}\r\n                                            </span>\r\n                                        ) : null}\r\n                                    </TableSortLabel>\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 100 }}>\r\n                                    {t(\"createdBy\")}\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 150 }}>\r\n                                    {tDashboard(\"file.createdAt\")}\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 80 }}>\r\n                                    {tDashboard(\"policy.actions\")}\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {downloads.map((row) => (\r\n                                <TableRow\r\n                                    hover\r\n                                    key={row.ID}\r\n                                    role=\"checkbox\"\r\n                                    selected={isSelected(row.ID)}\r\n                                >\r\n                                    <TableCell padding=\"checkbox\">\r\n                                        <Checkbox\r\n                                            onClick={(event) =>\r\n                                                handleClick(event, row.ID)\r\n                                            }\r\n                                            checked={isSelected(row.ID)}\r\n                                        />\r\n                                    </TableCell>\r\n                                    <TableCell>{row.ID}</TableCell>\r\n                                    <TableCell\r\n                                        style={{ wordBreak: \"break-all\" }}\r\n                                    >\r\n                                        {row.Source}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {row.Status === 0 && t(\"ready\")}\r\n                                        {row.Status === 1 && t(\"downloading\")}\r\n                                        {row.Status === 2 && t(\"paused\")}\r\n                                        {row.Status === 3 && t(\"error\")}\r\n                                        {row.Status === 4 && t(\"finished\")}\r\n                                        {row.Status === 5 && t(\"canceled\")}\r\n                                        {row.Status === 6 && t(\"unknown\")}\r\n                                        {row.Status === 7 && t(\"seeding\")}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {row.NodeID <= 1 && (\r\n                                            <Link\r\n                                                component={RouterLink}\r\n                                                to={\"/admin/node/edit/1\"}\r\n                                            >\r\n                                                {tDashboard(\"node.master\")}\r\n                                            </Link>\r\n                                        )}\r\n                                        {row.NodeID > 1 && (\r\n                                            <Link\r\n                                                component={RouterLink}\r\n                                                to={\r\n                                                    \"/admin/node/edit/\" +\r\n                                                    row.NodeID\r\n                                                }\r\n                                            >\r\n                                                {tDashboard(\"node.slave\")}#\r\n                                                {row.NodeID}\r\n                                            </Link>\r\n                                        )}\r\n                                    </TableCell>\r\n                                    <TableCell align={\"right\"}>\r\n                                        {sizeToString(row.TotalSize)}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Link\r\n                                            href={\r\n                                                \"/admin/user/edit/\" + row.UserID\r\n                                            }\r\n                                        >\r\n                                            {users[row.UserID]\r\n                                                ? users[row.UserID].Nick\r\n                                                : tDashboard(\r\n                                                      \"file.unknownUploader\"\r\n                                                  )}\r\n                                        </Link>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {formatLocalTime(row.CreatedAt)}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Tooltip\r\n                                            title={tDashboard(\"policy.delete\")}\r\n                                        >\r\n                                            <IconButton\r\n                                                disabled={loading}\r\n                                                onClick={() =>\r\n                                                    deletePolicy(row.ID)\r\n                                                }\r\n                                                size={\"small\"}\r\n                                            >\r\n                                                <Delete />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 50, 100]}\r\n                    component=\"div\"\r\n                    count={total}\r\n                    rowsPerPage={pageSize}\r\n                    page={page - 1}\r\n                    onChangePage={(e, p) => setPage(p + 1)}\r\n                    onChangeRowsPerPage={(e) => {\r\n                        setPageSize(e.target.value);\r\n                        setPage(1);\r\n                    }}\r\n                />\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n","import { lighten } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Delete } from \"@material-ui/icons\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../redux/explorer\";\r\nimport { getTaskProgress, getTaskStatus, getTaskType } from \"../../../config\";\r\nimport API from \"../../../middleware/Api\";\r\nimport ShareFilter from \"../Dialogs/ShareFilter\";\r\nimport { formatLocalTime } from \"../../../utils/datetime\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    content: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    container: {\r\n        overflowX: \"auto\",\r\n    },\r\n    tableContainer: {\r\n        marginTop: 16,\r\n    },\r\n    header: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    headerRight: {},\r\n    highlight:\r\n        theme.palette.type === \"light\"\r\n            ? {\r\n                  color: theme.palette.secondary.main,\r\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n              }\r\n            : {\r\n                  color: theme.palette.text.primary,\r\n                  backgroundColor: theme.palette.secondary.dark,\r\n              },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: \"rect(0 0 0 0)\",\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: \"hidden\",\r\n        padding: 0,\r\n        position: \"absolute\",\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n}));\r\n\r\nexport default function Task() {\r\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"task\" });\r\n    const { t: tDashboard } = useTranslation(\"dashboard\");\r\n    const classes = useStyles();\r\n    const [tasks, setTasks] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [total, setTotal] = useState(0);\r\n    const [filter, setFilter] = useState({});\r\n    const [users, setUsers] = useState({});\r\n    const [search, setSearch] = useState({});\r\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\r\n    const [filterDialog, setFilterDialog] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const loadList = () => {\r\n        API.post(\"/admin/task/list\", {\r\n            page: page,\r\n            page_size: pageSize,\r\n            order_by: orderBy.join(\" \"),\r\n            conditions: filter,\r\n            searches: search,\r\n        })\r\n            .then((response) => {\r\n                setUsers(response.data.users);\r\n                setTasks(response.data.items);\r\n                setTotal(response.data.total);\r\n                setSelected([]);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadList();\r\n    }, [page, pageSize, orderBy, filter, search]);\r\n\r\n    const deletePolicy = (id) => {\r\n        setLoading(true);\r\n        API.post(\"/admin/task/delete\", { id: [id] })\r\n            .then(() => {\r\n                loadList();\r\n                ToggleSnackbar(\"top\", \"right\", t(\"taskDeleted\"), \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const deleteBatch = () => {\r\n        setLoading(true);\r\n        API.post(\"/admin/task/delete\", { id: selected })\r\n            .then(() => {\r\n                loadList();\r\n                ToggleSnackbar(\"top\", \"right\", t(\"taskDeleted\"), \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        if (event.target.checked) {\r\n            const newSelecteds = tasks.map((n) => n.ID);\r\n            setSelected(newSelecteds);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleClick = (event, name) => {\r\n        const selectedIndex = selected.indexOf(name);\r\n        let newSelected = [];\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, name);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(\r\n                selected.slice(0, selectedIndex),\r\n                selected.slice(selectedIndex + 1)\r\n            );\r\n        }\r\n\r\n        setSelected(newSelected);\r\n    };\r\n\r\n    const getError = (error) => {\r\n        if (error === \"\") {\r\n            return \"-\";\r\n        }\r\n        try {\r\n            const res = JSON.parse(error);\r\n            return res.msg;\r\n        } catch (e) {\r\n            return t(\"unknown\");\r\n        }\r\n    };\r\n\r\n    const isSelected = (id) => selected.indexOf(id) !== -1;\r\n\r\n    return (\r\n        <div>\r\n            <ShareFilter\r\n                filter={filter}\r\n                open={filterDialog}\r\n                onClose={() => setFilterDialog(false)}\r\n                setSearch={setSearch}\r\n                setFilter={setFilter}\r\n            />\r\n            <div className={classes.header}>\r\n                <div className={classes.headerRight}>\r\n                    <Button\r\n                        color={\"primary\"}\r\n                        onClick={() => loadList()}\r\n                        variant={\"outlined\"}\r\n                    >\r\n                        {tDashboard(\"policy.refresh\")}\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\r\n            <Paper square className={classes.tableContainer}>\r\n                {selected.length > 0 && (\r\n                    <Toolbar className={classes.highlight}>\r\n                        <Typography\r\n                            style={{ flex: \"1 1 100%\" }}\r\n                            color=\"inherit\"\r\n                            variant=\"subtitle1\"\r\n                        >\r\n                            {tDashboard(\"user.selectedObjects\", {\r\n                                num: selected.length,\r\n                            })}\r\n                        </Typography>\r\n                        <Tooltip title={tDashboard(\"policy.delete\")}>\r\n                            <IconButton\r\n                                onClick={deleteBatch}\r\n                                disabled={loading}\r\n                                aria-label=\"delete\"\r\n                            >\r\n                                <Delete />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </Toolbar>\r\n                )}\r\n                <TableContainer className={classes.container}>\r\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\r\n                        <TableHead>\r\n                            <TableRow style={{ height: 52 }}>\r\n                                <TableCell padding=\"checkbox\">\r\n                                    <Checkbox\r\n                                        indeterminate={\r\n                                            selected.length > 0 &&\r\n                                            selected.length < tasks.length\r\n                                        }\r\n                                        checked={\r\n                                            tasks.length > 0 &&\r\n                                            selected.length === tasks.length\r\n                                        }\r\n                                        onChange={handleSelectAllClick}\r\n                                        inputProps={{\r\n                                            \"aria-label\": \"select all desserts\",\r\n                                        }}\r\n                                    />\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 10 }}>\r\n                                    <TableSortLabel\r\n                                        active={orderBy[0] === \"id\"}\r\n                                        direction={orderBy[1]}\r\n                                        onClick={() =>\r\n                                            setOrderBy([\r\n                                                \"id\",\r\n                                                orderBy[1] === \"asc\"\r\n                                                    ? \"desc\"\r\n                                                    : \"asc\",\r\n                                            ])\r\n                                        }\r\n                                    >\r\n                                        #\r\n                                        {orderBy[0] === \"id\" ? (\r\n                                            <span\r\n                                                className={\r\n                                                    classes.visuallyHidden\r\n                                                }\r\n                                            >\r\n                                                {orderBy[1] === \"desc\"\r\n                                                    ? \"sorted descending\"\r\n                                                    : \"sorted ascending\"}\r\n                                            </span>\r\n                                        ) : null}\r\n                                    </TableSortLabel>\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 130 }}>\r\n                                    {tDashboard(\"policy.type\")}\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 90 }}>\r\n                                    {tDashboard(\"user.status\")}\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 90 }}>\r\n                                    {t(\"lastProgress\")}\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 150 }}>\r\n                                    {t(\"errorMsg\")}\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 100 }}>\r\n                                    {t(\"createdBy\")}\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 150 }}>\r\n                                    {tDashboard(\"file.createdAt\")}\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 80 }}>\r\n                                    {tDashboard(\"policy.actions\")}\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {tasks.map((row) => (\r\n                                <TableRow\r\n                                    hover\r\n                                    key={row.ID}\r\n                                    role=\"checkbox\"\r\n                                    selected={isSelected(row.ID)}\r\n                                >\r\n                                    <TableCell padding=\"checkbox\">\r\n                                        <Checkbox\r\n                                            onClick={(event) =>\r\n                                                handleClick(event, row.ID)\r\n                                            }\r\n                                            checked={isSelected(row.ID)}\r\n                                        />\r\n                                    </TableCell>\r\n                                    <TableCell>{row.ID}</TableCell>\r\n                                    <TableCell\r\n                                        style={{ wordBreak: \"break-all\" }}\r\n                                    >\r\n                                        {getTaskType(row.Type)}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {getTaskStatus(row.Status)}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {getTaskProgress(\r\n                                            row.Type,\r\n                                            row.Progress\r\n                                        )}\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.noWrap}>\r\n                                        {getError(row.Error)}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Link\r\n                                            href={\r\n                                                \"/admin/user/edit/\" + row.UserID\r\n                                            }\r\n                                        >\r\n                                            {users[row.UserID]\r\n                                                ? users[row.UserID].Nick\r\n                                                : t(\"unknown\")}\r\n                                        </Link>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {formatLocalTime(row.CreatedAt)}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Tooltip\r\n                                            title={tDashboard(\"policy.delete\")}\r\n                                        >\r\n                                            <IconButton\r\n                                                disabled={loading}\r\n                                                onClick={() =>\r\n                                                    deletePolicy(row.ID)\r\n                                                }\r\n                                                size={\"small\"}\r\n                                            >\r\n                                                <Delete />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 50, 100]}\r\n                    component=\"div\"\r\n                    count={total}\r\n                    rowsPerPage={pageSize}\r\n                    page={page - 1}\r\n                    onChangePage={(e, p) => setPage(p + 1)}\r\n                    onChangeRowsPerPage={(e) => {\r\n                        setPageSize(e.target.value);\r\n                        setPage(1);\r\n                    }}\r\n                />\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n","import { Dialog } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { toggleSnackbar } from \"../../../redux/explorer\";\r\nimport API from \"../../../middleware/Api\";\r\nimport PathSelector from \"../../FileManager/PathSelector\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n    userSelect: {\r\n        width: 400,\r\n        borderRadius: 0,\r\n    },\r\n}));\r\n\r\nfunction useDebounce(value, delay) {\r\n    const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n    useEffect(() => {\r\n        const handler = setTimeout(() => {\r\n            setDebouncedValue(value);\r\n        }, delay);\r\n        return () => {\r\n            clearTimeout(handler);\r\n        };\r\n    }, [value]);\r\n\r\n    return debouncedValue;\r\n}\r\n\r\nexport default function Import() {\r\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"file\" });\r\n    const { t: tCommon } = useTranslation(\"common\");\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false);\r\n    const [options, setOptions] = useState({\r\n        policy: 1,\r\n        userInput: \"\",\r\n        src: \"\",\r\n        dst: \"\",\r\n        recursive: true,\r\n    });\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [policies, setPolicies] = useState({});\r\n    const [users, setUsers] = useState([]);\r\n    const [user, setUser] = useState(null);\r\n    const [selectRemote, setSelectRemote] = useState(false);\r\n    const [selectLocal, setSelectLocal] = useState(false);\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setOptions({\r\n            ...options,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const handleCheckChange = (name) => (event) => {\r\n        setOptions({\r\n            ...options,\r\n            [name]: event.target.checked,\r\n        });\r\n    };\r\n\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        if (user === null) {\r\n            ToggleSnackbar(\"top\", \"right\", t(\"selectTargetUser\"), \"warning\");\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        API.post(\"/admin/task/import\", {\r\n            uid: user.ID,\r\n            policy_id: parseInt(options.policy),\r\n            src: options.src,\r\n            dst: options.dst,\r\n            recursive: options.recursive,\r\n        })\r\n            .then(() => {\r\n                setLoading(false);\r\n                history.push(\"/admin/file\");\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    t(\"importTaskCreated\"),\r\n                    \"success\"\r\n                );\r\n            })\r\n            .catch((error) => {\r\n                setLoading(false);\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    const debouncedSearchTerm = useDebounce(options.userInput, 500);\r\n\r\n    useEffect(() => {\r\n        if (debouncedSearchTerm !== \"\") {\r\n            API.post(\"/admin/user/list\", {\r\n                page: 1,\r\n                page_size: 10000,\r\n                order_by: \"id asc\",\r\n                searches: {\r\n                    nick: debouncedSearchTerm,\r\n                    email: debouncedSearchTerm,\r\n                },\r\n            })\r\n                .then((response) => {\r\n                    setUsers(response.data.items);\r\n                })\r\n                .catch((error) => {\r\n                    ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n                });\r\n        }\r\n    }, [debouncedSearchTerm]);\r\n\r\n    useEffect(() => {\r\n        API.post(\"/admin/policy/list\", {\r\n            page: 1,\r\n            page_size: 10000,\r\n            order_by: \"id asc\",\r\n            conditions: {},\r\n        })\r\n            .then((response) => {\r\n                const res = {};\r\n                response.data.items.forEach((v) => {\r\n                    res[v.ID] = v;\r\n                });\r\n                setPolicies(res);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const selectUser = (u) => {\r\n        setOptions({\r\n            ...options,\r\n            userInput: \"\",\r\n        });\r\n        setUser(u);\r\n    };\r\n\r\n    const setMoveTarget = (setter) => (folder) => {\r\n        const path =\r\n            folder.path === \"/\"\r\n                ? folder.path + folder.name\r\n                : folder.path + \"/\" + folder.name;\r\n        setter(path === \"//\" ? \"/\" : path);\r\n    };\r\n\r\n    const openPathSelector = (isSrcSelect) => {\r\n        if (isSrcSelect) {\r\n            if (\r\n                !policies[options.policy] ||\r\n                policies[options.policy].Type === \"local\" ||\r\n                policies[options.policy].Type === \"remote\"\r\n            ) {\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    t(\"manuallyPathOnly\"),\r\n                    \"warning\"\r\n                );\r\n                return;\r\n            }\r\n            setSelectRemote(true);\r\n        } else {\r\n            if (user === null) {\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    t(\"selectTargetUser\"),\r\n                    \"warning\"\r\n                );\r\n                return;\r\n            }\r\n            setSelectLocal(true);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={selectRemote}\r\n                onClose={() => setSelectRemote(false)}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">\r\n                    {t(\"selectFolder\")}\r\n                </DialogTitle>\r\n                <PathSelector\r\n                    presentPath=\"/\"\r\n                    api={\"/admin/file/folders/policy/\" + options.policy}\r\n                    selected={[]}\r\n                    onSelect={setMoveTarget((p) =>\r\n                        setOptions({\r\n                            ...options,\r\n                            src: p,\r\n                        })\r\n                    )}\r\n                />\r\n\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={() => setSelectRemote(false)}\r\n                        color=\"primary\"\r\n                    >\r\n                        {tCommon(\"ok\")}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog\r\n                open={selectLocal}\r\n                onClose={() => setSelectLocal(false)}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">\r\n                    {t(\"selectFolder\")}\r\n                </DialogTitle>\r\n                <PathSelector\r\n                    presentPath=\"/\"\r\n                    api={\r\n                        \"/admin/file/folders/user/\" +\r\n                        (user === null ? 0 : user.ID)\r\n                    }\r\n                    selected={[]}\r\n                    onSelect={setMoveTarget((p) =>\r\n                        setOptions({\r\n                            ...options,\r\n                            dst: p,\r\n                        })\r\n                    )}\r\n                />\r\n\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={() => setSelectLocal(false)}\r\n                        color=\"primary\"\r\n                    >\r\n                        {tCommon(\"ok\")}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <form onSubmit={submit}>\r\n                <div className={classes.root}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        {t(\"importExternalFolder\")}\r\n                    </Typography>\r\n                    <div className={classes.formContainer}>\r\n                        <div className={classes.form}>\r\n                            <Alert severity=\"info\">\r\n                                {t(\"importExternalFolderDes\")}\r\n                            </Alert>\r\n                        </div>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    {t(\"storagePolicy\")}\r\n                                </InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-mutiple-chip-label\"\r\n                                    id=\"demo-mutiple-chip\"\r\n                                    value={options.policy}\r\n                                    onChange={handleChange(\"policy\")}\r\n                                    input={<Input id=\"select-multiple-chip\" />}\r\n                                >\r\n                                    {Object.keys(policies).map((pid) => (\r\n                                        <MenuItem key={pid} value={pid}>\r\n                                            {policies[pid].Name}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </Select>\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"storagePolicyDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    {t(\"targetUser\")}\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.userInput}\r\n                                    onChange={(e) => {\r\n                                        handleChange(\"userInput\")(e);\r\n                                        setAnchorEl(e.currentTarget);\r\n                                    }}\r\n                                    startAdornment={\r\n                                        user !== null && (\r\n                                            <InputAdornment position=\"start\">\r\n                                                <Chip\r\n                                                    size=\"small\"\r\n                                                    onDelete={() => {\r\n                                                        setUser(null);\r\n                                                    }}\r\n                                                    label={user.Nick}\r\n                                                />\r\n                                            </InputAdornment>\r\n                                        )\r\n                                    }\r\n                                    disabled={user !== null}\r\n                                />\r\n                                <Popper\r\n                                    open={\r\n                                        options.userInput !== \"\" &&\r\n                                        users.length > 0\r\n                                    }\r\n                                    anchorEl={anchorEl}\r\n                                    placement={\"bottom\"}\r\n                                    transition\r\n                                >\r\n                                    {({ TransitionProps }) => (\r\n                                        <Fade\r\n                                            {...TransitionProps}\r\n                                            timeout={350}\r\n                                        >\r\n                                            <Paper\r\n                                                className={classes.userSelect}\r\n                                            >\r\n                                                {users.map((u) => (\r\n                                                    <MenuItem\r\n                                                        key={u.Email}\r\n                                                        onClick={() =>\r\n                                                            selectUser(u)\r\n                                                        }\r\n                                                    >\r\n                                                        {u.Nick}{\" \"}\r\n                                                        {\"<\" + u.Email + \">\"}\r\n                                                    </MenuItem>\r\n                                                ))}\r\n                                            </Paper>\r\n                                        </Fade>\r\n                                    )}\r\n                                </Popper>\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"targetUserDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    {t(\"srcFolderPath\")}\r\n                                </InputLabel>\r\n\r\n                                <Input\r\n                                    value={options.src}\r\n                                    onChange={(e) => {\r\n                                        handleChange(\"src\")(e);\r\n                                        setAnchorEl(e.currentTarget);\r\n                                    }}\r\n                                    required\r\n                                    endAdornment={\r\n                                        <Button\r\n                                            onClick={() =>\r\n                                                openPathSelector(true)\r\n                                            }\r\n                                        >\r\n                                            {t(\"select\")}\r\n                                        </Button>\r\n                                    }\r\n                                />\r\n\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"selectSrcDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    {t(\"dstFolderPath\")}\r\n                                </InputLabel>\r\n\r\n                                <Input\r\n                                    value={options.dst}\r\n                                    onChange={(e) => {\r\n                                        handleChange(\"dst\")(e);\r\n                                        setAnchorEl(e.currentTarget);\r\n                                    }}\r\n                                    required\r\n                                    endAdornment={\r\n                                        <Button\r\n                                            onClick={() =>\r\n                                                openPathSelector(false)\r\n                                            }\r\n                                        >\r\n                                            {t(\"select\")}\r\n                                        </Button>\r\n                                    }\r\n                                />\r\n\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"dstFolderPathDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Switch\r\n                                            checked={options.recursive}\r\n                                            onChange={handleCheckChange(\r\n                                                \"recursive\"\r\n                                            )}\r\n                                        />\r\n                                    }\r\n                                    label={t(\"recursivelyImport\")}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"recursivelyImportDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.root}>\r\n                    <Button\r\n                        disabled={loading}\r\n                        type={\"submit\"}\r\n                        variant={\"contained\"}\r\n                        color={\"primary\"}\r\n                    >\r\n                        {t(\"createImportTask\")}\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport API from \"../../../middleware/Api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { toggleSnackbar } from \"../../../redux/explorer\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function Captcha() {\r\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"settings\" });\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false);\r\n    const [options, setOptions] = useState({\r\n        captcha_type: \"normal\",\r\n        captcha_height: \"1\",\r\n        captcha_width: \"1\",\r\n        captcha_mode: \"3\",\r\n        captcha_CaptchaLen: \"6\",\r\n        captcha_ComplexOfNoiseText: \"0\",\r\n        captcha_ComplexOfNoiseDot: \"0\",\r\n        captcha_IsShowHollowLine: \"0\",\r\n        captcha_IsShowNoiseDot: \"0\",\r\n        captcha_IsShowNoiseText: \"0\",\r\n        captcha_IsShowSlimeLine: \"0\",\r\n        captcha_IsShowSineLine: \"0\",\r\n        captcha_ReCaptchaKey: \"\",\r\n        captcha_ReCaptchaSecret: \"\",\r\n        captcha_TCaptcha_CaptchaAppId: \"\",\r\n        captcha_TCaptcha_AppSecretKey: \"\",\r\n        captcha_TCaptcha_SecretId: \"\",\r\n        captcha_TCaptcha_SecretKey: \"\",\r\n    });\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setOptions({\r\n            ...options,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        API.post(\"/admin/setting\", {\r\n            keys: Object.keys(options),\r\n        })\r\n            .then((response) => {\r\n                setOptions(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const option = [];\r\n        Object.keys(options).forEach((k) => {\r\n            option.push({\r\n                key: k,\r\n                value: options[k],\r\n            });\r\n        });\r\n        API.patch(\"/admin/setting\", {\r\n            options: option,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\"top\", \"right\", t(\"saved\"), \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const handleCheckChange = (name) => (event) => {\r\n        const value = event.target.checked ? \"1\" : \"0\";\r\n        setOptions({\r\n            ...options,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={submit}>\r\n                <div className={classes.root}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        {t(\"captcha\")}\r\n                    </Typography>\r\n                    <div className={classes.formContainer}>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    {t(\"captchaType\")}\r\n                                </InputLabel>\r\n                                <Select\r\n                                    value={options.captcha_type}\r\n                                    onChange={handleChange(\"captcha_type\")}\r\n                                    required\r\n                                >\r\n                                    <MenuItem value={\"normal\"}>\r\n                                        {t(\"plainCaptcha\")}\r\n                                    </MenuItem>\r\n                                    <MenuItem value={\"recaptcha\"}>\r\n                                        {t(\"reCaptchaV2\")}\r\n                                    </MenuItem>\r\n                                    <MenuItem value={\"tcaptcha\"}>\r\n                                        {t(\"tencentCloudCaptcha\")}\r\n                                    </MenuItem>\r\n                                </Select>\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"captchaProvider\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {options.captcha_type === \"normal\" && (\r\n                    <div className={classes.root}>\r\n                        <Typography variant=\"h6\" gutterBottom>\r\n                            {t(\"plainCaptchaTitle\")}\r\n                        </Typography>\r\n                        <div className={classes.formContainer}>\r\n                            <div className={classes.form}>\r\n                                <FormControl>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        {t(\"captchaWidth\")}\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        type={\"number\"}\r\n                                        inputProps={{\r\n                                            min: 1,\r\n                                            step: 1,\r\n                                        }}\r\n                                        value={options.captcha_width}\r\n                                        onChange={handleChange(\"captcha_width\")}\r\n                                        required\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        {t(\"captchaHeight\")}\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        type={\"number\"}\r\n                                        inputProps={{\r\n                                            min: 1,\r\n                                            step: 1,\r\n                                        }}\r\n                                        value={options.captcha_height}\r\n                                        onChange={handleChange(\r\n                                            \"captcha_height\"\r\n                                        )}\r\n                                        required\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        {t(\"captchaLength\")}\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        type={\"number\"}\r\n                                        inputProps={{\r\n                                            min: 1,\r\n                                            step: 1,\r\n                                        }}\r\n                                        value={options.captcha_CaptchaLen}\r\n                                        onChange={handleChange(\r\n                                            \"captcha_CaptchaLen\"\r\n                                        )}\r\n                                        required\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                            <div className={classes.form}>\r\n                                <FormControl>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        {t(\"captchaMode\")}\r\n                                    </InputLabel>\r\n                                    <Select\r\n                                        value={options.captcha_mode}\r\n                                        onChange={handleChange(\"captcha_mode\")}\r\n                                        required\r\n                                    >\r\n                                        <MenuItem value={\"0\"}>\r\n                                            {t(\"captchaModeNumber\")}\r\n                                        </MenuItem>\r\n                                        <MenuItem value={\"1\"}>\r\n                                            {t(\"captchaModeLetter\")}\r\n                                        </MenuItem>\r\n                                        <MenuItem value={\"2\"}>\r\n                                            {t(\"captchaModeMath\")}\r\n                                        </MenuItem>\r\n                                        <MenuItem value={\"3\"}>\r\n                                            {t(\"captchaModeNumberLetter\")}\r\n                                        </MenuItem>\r\n                                    </Select>\r\n                                    <FormHelperText id=\"component-helper-text\">\r\n                                        {t(\"captchaElement\")}\r\n                                    </FormHelperText>\r\n                                </FormControl>\r\n                            </div>\r\n                            {[\r\n                                {\r\n                                    name: \"complexOfNoiseText\",\r\n                                    field: \"captcha_ComplexOfNoiseText\",\r\n                                },\r\n                                {\r\n                                    name: \"complexOfNoiseDot\",\r\n                                    field: \"captcha_ComplexOfNoiseDot\",\r\n                                },\r\n                                {\r\n                                    name: \"showHollowLine\",\r\n                                    field: \"captcha_IsShowHollowLine\",\r\n                                },\r\n                                {\r\n                                    name: \"showNoiseDot\",\r\n                                    field: \"captcha_IsShowNoiseDot\",\r\n                                },\r\n                                {\r\n                                    name: \"showNoiseText\",\r\n                                    field: \"captcha_IsShowNoiseText\",\r\n                                },\r\n                                {\r\n                                    name: \"showSlimeLine\",\r\n                                    field: \"captcha_IsShowSlimeLine\",\r\n                                },\r\n                                {\r\n                                    name: \"showSineLine\",\r\n                                    field: \"captcha_IsShowSineLine\",\r\n                                },\r\n                            ].map((input) => (\r\n                                <div key={input.name} className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <FormControlLabel\r\n                                            control={\r\n                                                <Switch\r\n                                                    checked={\r\n                                                        options[input.field] ===\r\n                                                        \"1\"\r\n                                                    }\r\n                                                    onChange={handleCheckChange(\r\n                                                        input.field\r\n                                                    )}\r\n                                                />\r\n                                            }\r\n                                            label={t(input.name)}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {options.captcha_type === \"recaptcha\" && (\r\n                    <div className={classes.root}>\r\n                        <Typography variant=\"h6\" gutterBottom>\r\n                            {t(\"reCaptchaV2\")}\r\n                        </Typography>\r\n                        <div className={classes.formContainer}>\r\n                            <div className={classes.form}>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            {t(\"siteKey\")}\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            required\r\n                                            value={options.captcha_ReCaptchaKey}\r\n                                            onChange={handleChange(\r\n                                                \"captcha_ReCaptchaKey\"\r\n                                            )}\r\n                                        />\r\n                                        <FormHelperText id=\"component-helper-text\">\r\n                                            <Trans\r\n                                                ns={\"dashboard\"}\r\n                                                i18nKey={\"settings.siteKeyDes\"}\r\n                                                components={[\r\n                                                    <Link\r\n                                                        key={0}\r\n                                                        href={\r\n                                                            \"https://www.google.com/recaptcha/admin/create\"\r\n                                                        }\r\n                                                        target={\"_blank\"}\r\n                                                    />,\r\n                                                ]}\r\n                                            />\r\n                                        </FormHelperText>\r\n                                    </FormControl>\r\n                                </div>\r\n\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            {t(\"siteSecret\")}\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            required\r\n                                            value={\r\n                                                options.captcha_ReCaptchaSecret\r\n                                            }\r\n                                            onChange={handleChange(\r\n                                                \"captcha_ReCaptchaSecret\"\r\n                                            )}\r\n                                        />\r\n                                        <FormHelperText id=\"component-helper-text\">\r\n                                            <Trans\r\n                                                ns={\"dashboard\"}\r\n                                                i18nKey={\r\n                                                    \"settings.siteSecretDes\"\r\n                                                }\r\n                                                components={[\r\n                                                    <Link\r\n                                                        key={0}\r\n                                                        href={\r\n                                                            \"https://www.google.com/recaptcha/admin/create\"\r\n                                                        }\r\n                                                        target={\"_blank\"}\r\n                                                    />,\r\n                                                ]}\r\n                                            />\r\n                                        </FormHelperText>\r\n                                    </FormControl>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {options.captcha_type === \"tcaptcha\" && (\r\n                    <div className={classes.root}>\r\n                        <Typography variant=\"h6\" gutterBottom>\r\n                            {t(\"tencentCloudCaptcha\")}\r\n                        </Typography>\r\n                        <div className={classes.formContainer}>\r\n                            <div className={classes.form}>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            {t(\"secretID\")}\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            required\r\n                                            value={\r\n                                                options.captcha_TCaptcha_SecretId\r\n                                            }\r\n                                            onChange={handleChange(\r\n                                                \"captcha_TCaptcha_SecretId\"\r\n                                            )}\r\n                                        />\r\n                                        <FormHelperText id=\"component-helper-text\">\r\n                                            <Trans\r\n                                                ns={\"dashboard\"}\r\n                                                i18nKey={\r\n                                                    \"settings.siteSecretDes\"\r\n                                                }\r\n                                                components={[\r\n                                                    <Link\r\n                                                        key={0}\r\n                                                        href={\r\n                                                            \"https://console.cloud.tencent.com/capi\"\r\n                                                        }\r\n                                                        target={\"_blank\"}\r\n                                                    />,\r\n                                                ]}\r\n                                            />\r\n                                        </FormHelperText>\r\n                                    </FormControl>\r\n                                </div>\r\n\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            {t(\"secretKey\")}\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            required\r\n                                            value={\r\n                                                options.captcha_TCaptcha_SecretKey\r\n                                            }\r\n                                            onChange={handleChange(\r\n                                                \"captcha_TCaptcha_SecretKey\"\r\n                                            )}\r\n                                        />\r\n                                        <FormHelperText id=\"component-helper-text\">\r\n                                            <Trans\r\n                                                ns={\"dashboard\"}\r\n                                                i18nKey={\r\n                                                    \"settings.secretKeyDes\"\r\n                                                }\r\n                                                components={[\r\n                                                    <Link\r\n                                                        key={0}\r\n                                                        href={\r\n                                                            \"https://console.cloud.tencent.com/capi\"\r\n                                                        }\r\n                                                        target={\"_blank\"}\r\n                                                    />,\r\n                                                ]}\r\n                                            />\r\n                                        </FormHelperText>\r\n                                    </FormControl>\r\n                                </div>\r\n\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            {t(\"tCaptchaAppID\")}\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            required\r\n                                            value={\r\n                                                options.captcha_TCaptcha_CaptchaAppId\r\n                                            }\r\n                                            onChange={handleChange(\r\n                                                \"captcha_TCaptcha_CaptchaAppId\"\r\n                                            )}\r\n                                        />\r\n                                        <FormHelperText id=\"component-helper-text\">\r\n                                            <Trans\r\n                                                ns={\"dashboard\"}\r\n                                                i18nKey={\r\n                                                    \"settings.tCaptchaAppIDDes\"\r\n                                                }\r\n                                                components={[\r\n                                                    <Link\r\n                                                        key={0}\r\n                                                        href={\r\n                                                            \"https://console.cloud.tencent.com/captcha/graphical\"\r\n                                                        }\r\n                                                        target={\"_blank\"}\r\n                                                    />,\r\n                                                ]}\r\n                                            />\r\n                                        </FormHelperText>\r\n                                    </FormControl>\r\n                                </div>\r\n\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            {t(\"tCaptchaSecretKey\")}\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            required\r\n                                            value={\r\n                                                options.captcha_TCaptcha_AppSecretKey\r\n                                            }\r\n                                            onChange={handleChange(\r\n                                                \"captcha_TCaptcha_AppSecretKey\"\r\n                                            )}\r\n                                        />\r\n                                        <FormHelperText id=\"component-helper-text\">\r\n                                            <Trans\r\n                                                ns={\"dashboard\"}\r\n                                                i18nKey={\r\n                                                    \"settings.tCaptchaSecretKeyDes\"\r\n                                                }\r\n                                                components={[\r\n                                                    <Link\r\n                                                        key={0}\r\n                                                        href={\r\n                                                            \"https://console.cloud.tencent.com/captcha/graphical\"\r\n                                                        }\r\n                                                        target={\"_blank\"}\r\n                                                    />,\r\n                                                ]}\r\n                                            />\r\n                                        </FormHelperText>\r\n                                    </FormControl>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                <div className={classes.root}>\r\n                    <Button\r\n                        disabled={loading}\r\n                        type={\"submit\"}\r\n                        variant={\"contained\"}\r\n                        color={\"primary\"}\r\n                    >\r\n                        {t(\"save\")}\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport API from \"../../../middleware/Api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport { useHistory } from \"react-router\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {\r\n    Cancel,\r\n    CheckCircle,\r\n    Delete,\r\n    Edit,\r\n    Pause,\r\n    PlayArrow,\r\n} from \"@material-ui/icons\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport classNames from \"classnames\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { toggleSnackbar } from \"../../../redux/explorer\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    content: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    container: {\r\n        overflowX: \"auto\",\r\n    },\r\n    tableContainer: {\r\n        marginTop: 16,\r\n    },\r\n    header: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    disabledBadge: {\r\n        marginLeft: theme.spacing(1),\r\n        height: 18,\r\n    },\r\n    disabledCell: {\r\n        color: theme.palette.text.disabled,\r\n    },\r\n    verticalAlign: {\r\n        verticalAlign: \"middle\",\r\n        display: \"inline-block\",\r\n    },\r\n}));\r\n\r\nconst columns = [\r\n    { id: \"#\", minWidth: 50 },\r\n    { id: \"name\", minWidth: 170 },\r\n    {\r\n        id: \"status\",\r\n        minWidth: 50,\r\n    },\r\n    {\r\n        id: \"features\",\r\n        minWidth: 170,\r\n    },\r\n    {\r\n        id: \"action\",\r\n        minWidth: 170,\r\n    },\r\n];\r\n\r\nconst features = [\r\n    {\r\n        field: \"Aria2Enabled\",\r\n        name: \"remoteDownload\",\r\n    },\r\n];\r\n\r\nexport default function Node() {\r\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"node\" });\r\n    const classes = useStyles();\r\n    const [nodes, setNodes] = useState([]);\r\n    const [isActive, setIsActive] = useState({});\r\n    const [loading, setLoading] = useState(false);\r\n    const [page, setPage] = useState(1);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [total, setTotal] = useState(0);\r\n\r\n    const history = useHistory();\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const loadList = () => {\r\n        API.post(\"/admin/node/list\", {\r\n            page: page,\r\n            page_size: pageSize,\r\n            order_by: \"id desc\",\r\n        })\r\n            .then((response) => {\r\n                setNodes(response.data.items);\r\n                setTotal(response.data.total);\r\n                setIsActive(response.data.active);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    const toggleNode = (id, desired) => {\r\n        setLoading(true);\r\n        API.patch(\"/admin/node/enable/\" + id + \"/\" + desired)\r\n            .then((response) => {\r\n                loadList();\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    desired === 1 ? t(\"nodeDisabled\") : t(\"nodeEnabled\"),\r\n                    \"success\"\r\n                );\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const deleteNode = (id) => {\r\n        setLoading(true);\r\n        API.delete(\"/admin/node/\" + id)\r\n            .then(() => {\r\n                loadList();\r\n                ToggleSnackbar(\"top\", \"right\", t(\"nodeDeleted\"), \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadList();\r\n    }, [page, pageSize]);\r\n\r\n    const getStatusBadge = (status) => {\r\n        if (status === 1) {\r\n            return (\r\n                <Chip\r\n                    className={classes.disabledBadge}\r\n                    size=\"small\"\r\n                    label={t(\"disabled\")}\r\n                />\r\n            );\r\n        }\r\n    };\r\n\r\n    const getFeatureBadge = (node) =>\r\n        features.map((feature) => {\r\n            if (node[feature.field]) {\r\n                return (\r\n                    <Chip\r\n                        className={classes.disabledBadge}\r\n                        size=\"small\"\r\n                        color=\"primary\"\r\n                        label={t(feature.name)}\r\n                    />\r\n                );\r\n            }\r\n        });\r\n\r\n    const getRealStatusBadge = (status) =>\r\n        status ? (\r\n            <Box color=\"success.main\" fontSize=\"small\">\r\n                <CheckCircle\r\n                    className={classes.verticalAlign}\r\n                    fontSize=\"small\"\r\n                />{\" \"}\r\n                <span className={classes.verticalAlign}>{t(\"online\")}</span>\r\n            </Box>\r\n        ) : (\r\n            <Box color=\"error.main\" fontSize=\"small\">\r\n                <Cancel className={classes.verticalAlign} fontSize=\"small\" />{\" \"}\r\n                <span className={classes.verticalAlign}>{t(\"offline\")}</span>\r\n            </Box>\r\n        );\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.header}>\r\n                <Button\r\n                    color={\"primary\"}\r\n                    onClick={() => history.push(\"/admin/node/add\")}\r\n                    variant={\"contained\"}\r\n                >\r\n                    {t(\"addNewNode\")}\r\n                </Button>\r\n                <div className={classes.headerRight}>\r\n                    <Button\r\n                        color={\"primary\"}\r\n                        onClick={() => loadList()}\r\n                        variant={\"outlined\"}\r\n                    >\r\n                        {t(\"refresh\")}\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\r\n            <Paper square className={classes.tableContainer}>\r\n                <TableContainer className={classes.container}>\r\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\r\n                        <TableHead>\r\n                            <TableRow style={{ height: 52 }}>\r\n                                {columns.map((column) => (\r\n                                    <TableCell\r\n                                        key={column.id}\r\n                                        align={column.align}\r\n                                        style={{\r\n                                            minWidth: column.minWidthclassNames,\r\n                                        }}\r\n                                    >\r\n                                        {t(column.id)}\r\n                                    </TableCell>\r\n                                ))}\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {nodes.map((row) => (\r\n                                <TableRow hover key={row.ID}>\r\n                                    <TableCell>{row.ID}</TableCell>\r\n                                    <TableCell\r\n                                        className={classNames({\r\n                                            [classes.disabledCell]:\r\n                                                row.Status === 1,\r\n                                        })}\r\n                                    >\r\n                                        {row.Name}\r\n                                        {getStatusBadge(row.Status)}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {getRealStatusBadge(isActive[row.ID])}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {getFeatureBadge(row)}\r\n                                    </TableCell>\r\n\r\n                                    <TableCell align={\"right\"}>\r\n                                        <Tooltip\r\n                                            title={\r\n                                                row.Status === 1\r\n                                                    ? t(\"enableNode\")\r\n                                                    : t(\"disableNode\")\r\n                                            }\r\n                                        >\r\n                                            <IconButton\r\n                                                disabled={loading}\r\n                                                onClick={() =>\r\n                                                    toggleNode(\r\n                                                        row.ID,\r\n                                                        1 - row.Status\r\n                                                    )\r\n                                                }\r\n                                                size={\"small\"}\r\n                                            >\r\n                                                {row.Status === 1 && (\r\n                                                    <PlayArrow />\r\n                                                )}\r\n                                                {row.Status !== 1 && <Pause />}\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                        <Tooltip title={t(\"edit\")}>\r\n                                            <IconButton\r\n                                                disabled={loading}\r\n                                                onClick={() =>\r\n                                                    history.push(\r\n                                                        \"/admin/node/edit/\" +\r\n                                                            row.ID\r\n                                                    )\r\n                                                }\r\n                                                size={\"small\"}\r\n                                            >\r\n                                                <Edit />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                        <Tooltip title={t(\"delete\")}>\r\n                                            <IconButton\r\n                                                onClick={() =>\r\n                                                    deleteNode(row.ID)\r\n                                                }\r\n                                                disabled={loading}\r\n                                                size={\"small\"}\r\n                                            >\r\n                                                <Delete />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 100]}\r\n                    component=\"div\"\r\n                    count={total}\r\n                    rowsPerPage={pageSize}\r\n                    page={page - 1}\r\n                    onChangePage={(e, p) => setPage(p + 1)}\r\n                    onChangeRowsPerPage={(e) => {\r\n                        setPageSize(e.target.value);\r\n                        setPage(1);\r\n                    }}\r\n                />\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n","import { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport API from \"../../../../middleware/Api\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { toggleSnackbar } from \"../../../../redux/explorer\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    stepContent: {\r\n        padding: \"16px 32px 16px 32px\",\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n    subStepContainer: {\r\n        display: \"flex\",\r\n        marginBottom: 20,\r\n        padding: 10,\r\n        transition: theme.transitions.create(\"background-color\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        \"&:focus-within\": {\r\n            backgroundColor: theme.palette.background.default,\r\n        },\r\n    },\r\n    stepNumber: {\r\n        width: 20,\r\n        height: 20,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\r\n        color: theme.palette.secondary.contrastText,\r\n        textAlign: \"center\",\r\n        borderRadius: \" 50%\",\r\n    },\r\n    stepNumberContainer: {\r\n        marginRight: 10,\r\n    },\r\n    stepFooter: {\r\n        marginTop: 32,\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    viewButtonLabel: { textTransform: \"none\" },\r\n    \"@global\": {\r\n        code: {\r\n            color: \"rgba(0, 0, 0, 0.87)\",\r\n            display: \"inline-block\",\r\n            padding: \"2px 6px\",\r\n            fontFamily:\r\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\r\n            borderRadius: \"2px\",\r\n            backgroundColor: \"rgba(255,229,100,0.1)\",\r\n        },\r\n        pre: {\r\n            margin: \"24px 0\",\r\n            padding: \"12px 18px\",\r\n            overflow: \"auto\",\r\n            direction: \"ltr\",\r\n            borderRadius: \"4px\",\r\n            backgroundColor: \"#272c34\",\r\n            color: \"#fff\",\r\n            fontFamily:\r\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function Communication(props) {\r\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"node\" });\r\n    const { t: tDashboard } = useTranslation(\"dashboard\");\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const [loading, setLoading] = useState(false);\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const testSlave = () => {\r\n        setLoading(true);\r\n\r\n        // 测试路径是否可用\r\n        API.post(\"/admin/policy/test/slave\", {\r\n            server: props.node.Server,\r\n            secret: props.node.SlaveKey,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    tDashboard(\"policy.communicationOK\"),\r\n                    \"success\"\r\n                );\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <form\r\n            className={classes.stepContent}\r\n            onSubmit={(e) => {\r\n                e.preventDefault();\r\n                props.onSubmit(e);\r\n            }}\r\n        >\r\n            <Alert severity=\"info\" style={{ marginBottom: 10 }}>\r\n                <Trans\r\n                    ns={\"dashboard\"}\r\n                    i18nKey={\"node.slaveNodeDes\"}\r\n                    components={[<Box key={0} fontWeight=\"fontWeightBold\" />]}\r\n                />\r\n            </Alert>\r\n\r\n            <div className={classes.subStepContainer}>\r\n                <div className={classes.stepNumberContainer}>\r\n                    <div className={classes.stepNumber}>1</div>\r\n                </div>\r\n                <div className={classes.subStepContent}>\r\n                    <Typography variant={\"body2\"}>\r\n                        {tDashboard(\"policy.remoteCopyBinaryDescription\")}\r\n                    </Typography>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={classes.subStepContainer}>\r\n                <div className={classes.stepNumberContainer}>\r\n                    <div className={classes.stepNumber}>2</div>\r\n                </div>\r\n                <div className={classes.subStepContent}>\r\n                    <Typography variant={\"body2\"}>\r\n                        {tDashboard(\"policy.remoteSecretDescription\")}\r\n                    </Typography>\r\n                    <div className={classes.form}>\r\n                        <FormControl fullWidth>\r\n                            <InputLabel htmlFor=\"component-helper\">\r\n                                {tDashboard(\"policy.remoteSecret\")}\r\n                            </InputLabel>\r\n                            <Input\r\n                                required\r\n                                inputProps={{\r\n                                    minlength: 64,\r\n                                }}\r\n                                value={props.node.SlaveKey}\r\n                                onChange={props.handleTextChange(\"SlaveKey\")}\r\n                            />\r\n                        </FormControl>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={classes.subStepContainer}>\r\n                <div className={classes.stepNumberContainer}>\r\n                    <div className={classes.stepNumber}>3</div>\r\n                </div>\r\n                <div className={classes.subStepContent}>\r\n                    <Typography variant={\"body2\"}>\r\n                        {tDashboard(\"policy.modifyRemoteConfig\")}\r\n                        <br />\r\n                        <Trans\r\n                            ns={\"dashboard\"}\r\n                            i18nKey={\"policy.addRemoteConfigDes\"}\r\n                            components={[<code key={0} />]}\r\n                        />\r\n                    </Typography>\r\n                    <pre>\r\n                        [System]\r\n                        <br />\r\n                        Mode = slave\r\n                        <br />\r\n                        Listen = :5212\r\n                        <br />\r\n                        <br />\r\n                        [Slave]\r\n                        <br />\r\n                        Secret = {props.node.SlaveKey}\r\n                        <br />\r\n                        <br />\r\n                        <Trans\r\n                            ns={\"dashboard\"}\r\n                            i18nKey={\"node.overwriteDes\"}\r\n                            components={[<br key={0} />, <br key={1} />]}\r\n                        />\r\n                        <br />\r\n                        [OptionOverwrite]\r\n                        <br />; {t(\"workerNumDes\")}\r\n                        <br />\r\n                        max_worker_num = 50\r\n                        <br />; {t(\"parallelTransferDes\")}\r\n                        <br />\r\n                        max_parallel_transfer = 10\r\n                        <br />; {t(\"chunkRetriesDes\")}\r\n                        <br />\r\n                        chunk_retries = 10\r\n                    </pre>\r\n                    <Typography variant={\"body2\"}>\r\n                        {tDashboard(\"policy.remoteConfigDifference\")}\r\n                        <ul>\r\n                            <li>\r\n                                <Trans\r\n                                    ns={\"dashboard\"}\r\n                                    i18nKey={\"policy.remoteConfigDifference1\"}\r\n                                    components={[\r\n                                        <code key={0} />,\r\n                                        <code key={1} />,\r\n                                        <code key={2} />,\r\n                                    ]}\r\n                                />\r\n                            </li>\r\n                            <li>\r\n                                <Trans\r\n                                    ns={\"dashboard\"}\r\n                                    i18nKey={\"policy.remoteConfigDifference2\"}\r\n                                    components={[\r\n                                        <code key={0} />,\r\n                                        <code key={1} />,\r\n                                    ]}\r\n                                />\r\n                            </li>\r\n                        </ul>\r\n                        {t(\"multipleMasterDes\")}\r\n                    </Typography>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={classes.subStepContainer}>\r\n                <div className={classes.stepNumberContainer}>\r\n                    <div className={classes.stepNumber}>4</div>\r\n                </div>\r\n                <div className={classes.subStepContent}>\r\n                    <Typography variant={\"body2\"}>\r\n                        {tDashboard(\"policy.inputRemoteAddress\")}\r\n                        <br />\r\n                        {tDashboard(\"policy.inputRemoteAddressDes\")}\r\n                    </Typography>\r\n                    <div className={classes.form}>\r\n                        <FormControl fullWidth>\r\n                            <InputLabel htmlFor=\"component-helper\">\r\n                                {tDashboard(\"policy.remoteAddress\")}\r\n                            </InputLabel>\r\n                            <Input\r\n                                fullWidth\r\n                                required\r\n                                type={\"url\"}\r\n                                value={props.node.Server}\r\n                                onChange={props.handleTextChange(\"Server\")}\r\n                            />\r\n                        </FormControl>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={classes.subStepContainer}>\r\n                <div className={classes.stepNumberContainer}>\r\n                    <div className={classes.stepNumber}>5</div>\r\n                </div>\r\n                <div className={classes.subStepContent}>\r\n                    <Typography variant={\"body2\"}>\r\n                        {tDashboard(\"policy.testCommunicationDes\")}\r\n                    </Typography>\r\n                    <div className={classes.form}>\r\n                        <Button\r\n                            disabled={loading}\r\n                            variant={\"outlined\"}\r\n                            onClick={() => testSlave()}\r\n                            color={\"primary\"}\r\n                        >\r\n                            {tDashboard(\"policy.testCommunication\")}\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={classes.stepFooter}>\r\n                <Button\r\n                    disabled={loading || props.loading}\r\n                    type={\"submit\"}\r\n                    variant={\"contained\"}\r\n                    color={\"primary\"}\r\n                >\r\n                    {tDashboard(\"policy.next\")}\r\n                </Button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n","import { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport API from \"../../../../middleware/Api\";\r\nimport { toggleSnackbar } from \"../../../../redux/explorer\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    stepContent: {\r\n        padding: \"16px 32px 16px 32px\",\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n    subStepContainer: {\r\n        display: \"flex\",\r\n        marginBottom: 20,\r\n        padding: 10,\r\n        transition: theme.transitions.create(\"background-color\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        \"&:focus-within\": {\r\n            backgroundColor: theme.palette.background.default,\r\n        },\r\n    },\r\n    stepNumber: {\r\n        width: 20,\r\n        height: 20,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\r\n        color: theme.palette.secondary.contrastText,\r\n        textAlign: \"center\",\r\n        borderRadius: \" 50%\",\r\n    },\r\n    stepNumberContainer: {\r\n        marginRight: 10,\r\n    },\r\n    stepFooter: {\r\n        marginTop: 32,\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    viewButtonLabel: { textTransform: \"none\" },\r\n    \"@global\": {\r\n        code: {\r\n            color: \"rgba(0, 0, 0, 0.87)\",\r\n            display: \"inline-block\",\r\n            padding: \"2px 6px\",\r\n            fontFamily:\r\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\r\n            borderRadius: \"2px\",\r\n            backgroundColor: \"rgba(255,229,100,0.1)\",\r\n        },\r\n        pre: {\r\n            margin: \"24px 0\",\r\n            padding: \"12px 18px\",\r\n            overflow: \"auto\",\r\n            direction: \"ltr\",\r\n            borderRadius: \"4px\",\r\n            backgroundColor: \"#272c34\",\r\n            color: \"#fff\",\r\n            fontFamily:\r\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function Aria2RPC(props) {\r\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"node\" });\r\n    const { t: tDashboard } = useTranslation(\"dashboard\");\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const [loading, setLoading] = useState(false);\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const testAria2 = () => {\r\n        setLoading(true);\r\n        API.post(\"/admin/node/aria2/test\", {\r\n            type: props.node.Type,\r\n            server: props.node.Server,\r\n            secret: props.node.SlaveKey,\r\n            rpc: props.node.Aria2OptionsSerialized.server,\r\n            token: props.node.Aria2OptionsSerialized.token,\r\n        })\r\n            .then((response) => {\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    t(\"ariaSuccess\", { version: response.data }),\r\n                    \"success\"\r\n                );\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const mode = props.node.Type === 0 ? t(\"slave\") : t(\"master\");\r\n\r\n    return (\r\n        <form\r\n            className={classes.stepContent}\r\n            onSubmit={(e) => {\r\n                e.preventDefault();\r\n                props.onSubmit(e);\r\n            }}\r\n        >\r\n            <Alert severity=\"info\" style={{ marginBottom: 10 }}>\r\n                <Typography variant=\"body2\">\r\n                    <Trans\r\n                        ns={\"dashboard\"}\r\n                        i18nKey={\"node.aria2Des\"}\r\n                        values={{\r\n                            mode: mode,\r\n                        }}\r\n                        components={[\r\n                            <Link\r\n                                href={\"https://aria2.github.io/\"}\r\n                                target={\"_blank\"}\r\n                                key={0}\r\n                            />,\r\n                            <Box\r\n                                component=\"span\"\r\n                                fontWeight=\"fontWeightBold\"\r\n                                key={1}\r\n                            />,\r\n                            <Link\r\n                                href={t(\"aria2DocURL\")}\r\n                                target={\"_blank\"}\r\n                                key={2}\r\n                            />,\r\n                        ]}\r\n                    />\r\n                </Typography>\r\n            </Alert>\r\n\r\n            <div className={classes.subStepContainer}>\r\n                <div className={classes.stepNumberContainer}>\r\n                    <div className={classes.stepNumber}>1</div>\r\n                </div>\r\n                <div className={classes.subStepContent}>\r\n                    <Typography variant={\"body2\"}>\r\n                        {props.node.Type === 0\r\n                            ? t(\"slaveTakeOverRemoteDownload\")\r\n                            : t(\"masterTakeOverRemoteDownload\")}\r\n                        <br />\r\n                        {props.node.Type === 0\r\n                            ? t(\"routeTaskSlave\")\r\n                            : t(\"routeTaskMaster\")}\r\n                    </Typography>\r\n\r\n                    <div className={classes.form}>\r\n                        <FormControl required component=\"fieldset\">\r\n                            <RadioGroup\r\n                                required\r\n                                value={props.node.Aria2Enabled}\r\n                                onChange={props.handleTextChange(\r\n                                    \"Aria2Enabled\"\r\n                                )}\r\n                                row\r\n                            >\r\n                                <FormControlLabel\r\n                                    value={\"true\"}\r\n                                    control={<Radio color={\"primary\"} />}\r\n                                    label={t(\"enable\")}\r\n                                />\r\n                                <FormControlLabel\r\n                                    value={\"false\"}\r\n                                    control={<Radio color={\"primary\"} />}\r\n                                    label={t(\"disable\")}\r\n                                />\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <Collapse in={props.node.Aria2Enabled === \"true\"}>\r\n                <div className={classes.subStepContainer}>\r\n                    <div className={classes.stepNumberContainer}>\r\n                        <div className={classes.stepNumber}>2</div>\r\n                    </div>\r\n                    <div className={classes.subStepContent}>\r\n                        <Typography variant={\"body2\"}>\r\n                            {t(\"aria2ConfigDes\", {\r\n                                target:\r\n                                    props.node.Type === 0\r\n                                        ? t(\"slaveNodeTarget\")\r\n                                        : t(\"masterNodeTarget\"),\r\n                            })}\r\n                        </Typography>\r\n                        <pre>\r\n                            # {t(\"enableRPCComment\")}\r\n                            <br />\r\n                            enable-rpc=true\r\n                            <br /># {t(\"rpcPortComment\")}\r\n                            <br />\r\n                            rpc-listen-port=6800\r\n                            <br /># {t(\"rpcSecretComment\")}\r\n                            <br />\r\n                            rpc-secret=\r\n                            {props.node.Aria2OptionsSerialized.token}\r\n                            <br />\r\n                        </pre>\r\n                        <Alert severity=\"info\" style={{ marginBottom: 10 }}>\r\n                            <Typography variant=\"body2\">\r\n                                {t(\"rpcConfigDes\")}\r\n                            </Typography>\r\n                        </Alert>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.subStepContainer}>\r\n                    <div className={classes.stepNumberContainer}>\r\n                        <div className={classes.stepNumber}>3</div>\r\n                    </div>\r\n                    <div className={classes.subStepContent}>\r\n                        <Typography variant={\"body2\"}>\r\n                            <Trans\r\n                                ns={\"dashboard\"}\r\n                                i18nKey={\"node.rpcServerDes\"}\r\n                                values={{\r\n                                    mode: mode,\r\n                                }}\r\n                                components={[\r\n                                    <code key={0} />,\r\n                                    <code key={1} />,\r\n                                    <code key={2} />,\r\n                                ]}\r\n                            />\r\n                        </Typography>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    {t(\"rpcServer\")}\r\n                                </InputLabel>\r\n                                <Input\r\n                                    required\r\n                                    type={\"url\"}\r\n                                    value={\r\n                                        props.node.Aria2OptionsSerialized.server\r\n                                    }\r\n                                    onChange={props.handleOptionChange(\r\n                                        \"server\"\r\n                                    )}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"rpcServerHelpDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.subStepContainer}>\r\n                    <div className={classes.stepNumberContainer}>\r\n                        <div className={classes.stepNumber}>4</div>\r\n                    </div>\r\n                    <div className={classes.subStepContent}>\r\n                        <Typography variant={\"body2\"}>\r\n                            <Trans\r\n                                ns={\"dashboard\"}\r\n                                i18nKey={\"node.rpcTokenDes\"}\r\n                                components={[<code key={0} />]}\r\n                            />\r\n                        </Typography>\r\n                        <div className={classes.form}>\r\n                            <Input\r\n                                value={props.node.Aria2OptionsSerialized.token}\r\n                                onChange={props.handleOptionChange(\"token\")}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.subStepContainer}>\r\n                    <div className={classes.stepNumberContainer}>\r\n                        <div className={classes.stepNumber}>5</div>\r\n                    </div>\r\n                    <div className={classes.subStepContent}>\r\n                        <Typography variant={\"body2\"}>\r\n                            <Trans\r\n                                ns={\"dashboard\"}\r\n                                i18nKey={\"node.aria2PathDes\"}\r\n                                components={[<strong key={0} />]}\r\n                            />\r\n                        </Typography>\r\n                        <div className={classes.form}>\r\n                            <Input\r\n                                value={\r\n                                    props.node.Aria2OptionsSerialized.temp_path\r\n                                }\r\n                                onChange={props.handleOptionChange(\"temp_path\")}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.subStepContainer}>\r\n                    <div className={classes.stepNumberContainer}>\r\n                        <div className={classes.stepNumber}>5</div>\r\n                    </div>\r\n                    <div className={classes.subStepContent}>\r\n                        <Typography variant={\"body2\"}>\r\n                            {t(\"aria2SettingDes\")}\r\n                        </Typography>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    {t(\"refreshInterval\")}\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"number\"}\r\n                                    inputProps={{\r\n                                        step: 1,\r\n                                        min: 1,\r\n                                    }}\r\n                                    required\r\n                                    value={\r\n                                        props.node.Aria2OptionsSerialized\r\n                                            .interval\r\n                                    }\r\n                                    onChange={props.handleOptionChange(\r\n                                        \"interval\"\r\n                                    )}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"refreshIntervalDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    {t(\"rpcTimeout\")}\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"number\"}\r\n                                    inputProps={{\r\n                                        step: 1,\r\n                                        min: 1,\r\n                                    }}\r\n                                    required\r\n                                    value={\r\n                                        props.node.Aria2OptionsSerialized\r\n                                            .timeout\r\n                                    }\r\n                                    onChange={props.handleOptionChange(\r\n                                        \"timeout\"\r\n                                    )}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"rpcTimeoutDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    {t(\"globalOptions\")}\r\n                                </InputLabel>\r\n                                <Input\r\n                                    multiline\r\n                                    required\r\n                                    value={\r\n                                        props.node.Aria2OptionsSerialized\r\n                                            .options\r\n                                    }\r\n                                    onChange={props.handleOptionChange(\r\n                                        \"options\"\r\n                                    )}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {t(\"globalOptionsDes\")}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.subStepContainer}>\r\n                    <div className={classes.stepNumberContainer}>\r\n                        <div className={classes.stepNumber}>6</div>\r\n                    </div>\r\n                    <div className={classes.subStepContent}>\r\n                        <Typography variant={\"body2\"}>\r\n                            {t(\"testAria2Des\", { mode })}\r\n                            {props.node.Type === 0 &&\r\n                                t(\"testAria2DesSlaveAddition\")}\r\n                        </Typography>\r\n                        <div className={classes.form}>\r\n                            <Button\r\n                                disabled={loading}\r\n                                variant={\"outlined\"}\r\n                                onClick={() => testAria2()}\r\n                                color={\"primary\"}\r\n                            >\r\n                                {t(\"testAria2\")}\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Collapse>\r\n\r\n            <div className={classes.stepFooter}>\r\n                {props.activeStep !== 0 && (\r\n                    <Button\r\n                        color={\"default\"}\r\n                        className={classes.button}\r\n                        onClick={props.onBack}\r\n                    >\r\n                        {tDashboard(\"policy.back\")}\r\n                    </Button>\r\n                )}\r\n                <Button\r\n                    disabled={loading || props.loading}\r\n                    type={\"submit\"}\r\n                    variant={\"contained\"}\r\n                    color={\"primary\"}\r\n                    onClick={props.onSubmit}\r\n                >\r\n                    {tDashboard(\"policy.next\")}\r\n                </Button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n","import { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { toggleSnackbar } from \"../../../../redux/explorer\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    stepContent: {\r\n        padding: \"16px 32px 16px 32px\",\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n    subStepContainer: {\r\n        display: \"flex\",\r\n        marginBottom: 20,\r\n        padding: 10,\r\n        transition: theme.transitions.create(\"background-color\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        \"&:focus-within\": {\r\n            backgroundColor: theme.palette.background.default,\r\n        },\r\n    },\r\n    stepNumber: {\r\n        width: 20,\r\n        height: 20,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\r\n        color: theme.palette.secondary.contrastText,\r\n        textAlign: \"center\",\r\n        borderRadius: \" 50%\",\r\n    },\r\n    stepNumberContainer: {\r\n        marginRight: 10,\r\n    },\r\n    stepFooter: {\r\n        marginTop: 32,\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    viewButtonLabel: { textTransform: \"none\" },\r\n    \"@global\": {\r\n        code: {\r\n            color: \"rgba(0, 0, 0, 0.87)\",\r\n            display: \"inline-block\",\r\n            padding: \"2px 6px\",\r\n            fontFamily:\r\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\r\n            borderRadius: \"2px\",\r\n            backgroundColor: \"rgba(255,229,100,0.1)\",\r\n        },\r\n        pre: {\r\n            margin: \"24px 0\",\r\n            padding: \"12px 18px\",\r\n            overflow: \"auto\",\r\n            direction: \"ltr\",\r\n            borderRadius: \"4px\",\r\n            backgroundColor: \"#272c34\",\r\n            color: \"#fff\",\r\n            fontFamily:\r\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function Metainfo(props) {\r\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"node\" });\r\n    const { t: tDashboard } = useTranslation(\"dashboard\");\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const [loading, setLoading] = useState(false);\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    return (\r\n        <form\r\n            className={classes.stepContent}\r\n            onSubmit={(e) => {\r\n                e.preventDefault();\r\n                props.onSubmit(e);\r\n            }}\r\n        >\r\n            <div className={classes.subStepContainer}>\r\n                <div className={classes.stepNumberContainer}>\r\n                    <div className={classes.stepNumber}>1</div>\r\n                </div>\r\n                <div className={classes.subStepContent}>\r\n                    <Typography variant={\"body2\"}>{t(\"nameNode\")}</Typography>\r\n                    <div className={classes.form}>\r\n                        <FormControl fullWidth>\r\n                            <Input\r\n                                required\r\n                                value={props.node.Name}\r\n                                onChange={props.handleTextChange(\"Name\")}\r\n                            />\r\n                        </FormControl>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={classes.subStepContainer}>\r\n                <div className={classes.stepNumberContainer}>\r\n                    <div className={classes.stepNumber}>2</div>\r\n                </div>\r\n                <div className={classes.subStepContent}>\r\n                    <Typography variant={\"body2\"}>\r\n                        {t(\"loadBalancerRankDes\")}\r\n                    </Typography>\r\n                    <div className={classes.form}>\r\n                        <FormControl fullWidth>\r\n                            <InputLabel htmlFor=\"component-helper\">\r\n                                {t(\"loadBalancerRank\")}\r\n                            </InputLabel>\r\n                            <Input\r\n                                type={\"number\"}\r\n                                required\r\n                                inputProps={{\r\n                                    step: 1,\r\n                                    min: 0,\r\n                                }}\r\n                                value={props.node.Rank}\r\n                                onChange={props.handleTextChange(\"Rank\")}\r\n                            />\r\n                        </FormControl>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={classes.stepFooter}>\r\n                <Button\r\n                    disabled={loading || props.loading}\r\n                    type={\"submit\"}\r\n                    variant={\"contained\"}\r\n                    color={\"primary\"}\r\n                >\r\n                    {tDashboard(\"policy.next\")}\r\n                </Button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n","import { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    stepContent: {\r\n        padding: \"16px 32px 16px 32px\",\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n    subStepContainer: {\r\n        display: \"flex\",\r\n        marginBottom: 20,\r\n        padding: 10,\r\n        transition: theme.transitions.create(\"background-color\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        \"&:focus-within\": {\r\n            backgroundColor: theme.palette.background.default,\r\n        },\r\n    },\r\n    stepNumber: {\r\n        width: 20,\r\n        height: 20,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\r\n        color: theme.palette.secondary.contrastText,\r\n        textAlign: \"center\",\r\n        borderRadius: \" 50%\",\r\n    },\r\n    stepNumberContainer: {\r\n        marginRight: 10,\r\n    },\r\n    stepFooter: {\r\n        marginTop: 32,\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    viewButtonLabel: { textTransform: \"none\" },\r\n    \"@global\": {\r\n        code: {\r\n            color: \"rgba(0, 0, 0, 0.87)\",\r\n            display: \"inline-block\",\r\n            padding: \"2px 6px\",\r\n            fontFamily:\r\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\r\n            borderRadius: \"2px\",\r\n            backgroundColor: \"rgba(255,229,100,0.1)\",\r\n        },\r\n        pre: {\r\n            margin: \"24px 0\",\r\n            padding: \"12px 18px\",\r\n            overflow: \"auto\",\r\n            direction: \"ltr\",\r\n            borderRadius: \"4px\",\r\n            backgroundColor: \"#272c34\",\r\n            color: \"#fff\",\r\n            fontFamily:\r\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function Completed(props) {\r\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"node\" });\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <form className={classes.stepContent}>\r\n            <Typography>{t(\"nodeSaved\")}</Typography>\r\n            <Typography variant={\"body2\"} color={\"textSecondary\"}>\r\n                {t(\"nodeSavedFutureAction\")}\r\n            </Typography>\r\n\r\n            <div className={classes.stepFooter}>\r\n                <Button\r\n                    color={\"primary\"}\r\n                    className={classes.button}\r\n                    onClick={() => history.push(\"/admin/node\")}\r\n                >\r\n                    {t(\"backToNodeList\")}\r\n                </Button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n","import React, { useCallback, useMemo, useState } from \"react\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { randomStr } from \"../../../../utils\";\r\nimport Communication from \"./Communication\";\r\nimport Aria2RPC from \"./Aria2RPC\";\r\nimport API from \"../../../../middleware/Api\";\r\nimport Metainfo from \"./Metainfo\";\r\nimport Completed from \"./Completed\";\r\nimport { toggleSnackbar } from \"../../../../redux/explorer\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst steps = [\r\n    {\r\n        slaveOnly: true,\r\n        title: \"communication\",\r\n        optional: false,\r\n        component: function show(p) {\r\n            return <Communication {...p} />;\r\n        },\r\n    },\r\n    {\r\n        slaveOnly: false,\r\n        title: \"remoteDownload\",\r\n        optional: false,\r\n        component: function show(p) {\r\n            return <Aria2RPC {...p} />;\r\n        },\r\n    },\r\n    {\r\n        slaveOnly: false,\r\n        title: \"otherSettings\",\r\n        optional: false,\r\n        component: function show(p) {\r\n            return <Metainfo {...p} />;\r\n        },\r\n    },\r\n    {\r\n        slaveOnly: false,\r\n        title: \"finish\",\r\n        optional: false,\r\n        component: function show(p) {\r\n            return <Completed {...p} />;\r\n        },\r\n    },\r\n];\r\n\r\nexport default function NodeGuide(props) {\r\n    const { t } = useTranslation(\"dashboard\", { keyPrefix: \"node\" });\r\n    const { t: tDashboard } = useTranslation(\"dashboard\");\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [skipped, setSkipped] = React.useState(new Set());\r\n    const [loading, setLoading] = useState(false);\r\n    const [node, setNode] = useState(\r\n        props.node\r\n            ? props.node\r\n            : {\r\n                  Status: 1,\r\n                  Type: 0,\r\n                  Aria2Enabled: \"false\",\r\n                  Server: \"https://example.com:5212\",\r\n                  SlaveKey: randomStr(64),\r\n                  MasterKey: randomStr(64),\r\n                  Rank: \"0\",\r\n                  Aria2OptionsSerialized: {\r\n                      token: randomStr(32),\r\n                      options: \"{}\",\r\n                      interval: \"10\",\r\n                      timeout: \"10\",\r\n                  },\r\n              }\r\n    );\r\n\r\n    const usedSteps = useMemo(() => {\r\n        return steps.filter((step) => !(step.slaveOnly && node.Type === 1));\r\n    }, [node.Type]);\r\n\r\n    const isStepSkipped = (step) => {\r\n        return skipped.has(step);\r\n    };\r\n\r\n    const handleTextChange = (name) => (event) => {\r\n        setNode({\r\n            ...node,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const handleOptionChange = (name) => (event) => {\r\n        setNode({\r\n            ...node,\r\n            Aria2OptionsSerialized: {\r\n                ...node.Aria2OptionsSerialized,\r\n                [name]: event.target.value,\r\n            },\r\n        });\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const nextStep = () => {\r\n        if (props.node || activeStep + 1 === steps.length - 1) {\r\n            setLoading(true);\r\n\r\n            const nodeCopy = { ...node };\r\n            nodeCopy.Aria2OptionsSerialized = {\r\n                ...node.Aria2OptionsSerialized,\r\n            };\r\n            nodeCopy.Rank = parseInt(nodeCopy.Rank);\r\n            nodeCopy.Aria2OptionsSerialized.interval = parseInt(\r\n                nodeCopy.Aria2OptionsSerialized.interval\r\n            );\r\n            nodeCopy.Aria2OptionsSerialized.timeout = parseInt(\r\n                nodeCopy.Aria2OptionsSerialized.timeout\r\n            );\r\n            nodeCopy.Aria2Enabled = nodeCopy.Aria2Enabled === \"true\";\r\n            API.post(\"/admin/node\", {\r\n                node: nodeCopy,\r\n            })\r\n                .then(() => {\r\n                    ToggleSnackbar(\r\n                        \"top\",\r\n                        \"right\",\r\n                        props.node ? t(\"nodeSavedNow\") : t(\"nodeAdded\"),\r\n                        \"success\"\r\n                    );\r\n                    setActiveStep(activeStep + 1);\r\n                    setLoading(false);\r\n                })\r\n                .catch((error) => {\r\n                    ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n                })\r\n                .then(() => {\r\n                    setLoading(false);\r\n                });\r\n        } else {\r\n            setActiveStep(activeStep + 1);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant={\"h6\"}>\r\n                {props.node ? t(\"editNode\") : t(\"addNode\")}\r\n            </Typography>\r\n            <Stepper activeStep={activeStep}>\r\n                {usedSteps.map((label, index) => {\r\n                    const stepProps = {};\r\n                    const labelProps = {};\r\n                    if (label.optional) {\r\n                        labelProps.optional = (\r\n                            <Typography variant=\"caption\">\r\n                                {tDashboard(\"policy.optional\")}\r\n                            </Typography>\r\n                        );\r\n                    }\r\n                    if (isStepSkipped(index)) {\r\n                        stepProps.completed = false;\r\n                    }\r\n                    if (!(label.slaveOnly && node.Type === 1)) {\r\n                        return (\r\n                            <Step key={label.title} {...stepProps}>\r\n                                <StepLabel {...labelProps}>\r\n                                    {t(label.title)}\r\n                                </StepLabel>\r\n                            </Step>\r\n                        );\r\n                    }\r\n                })}\r\n            </Stepper>\r\n\r\n            {usedSteps[activeStep].component({\r\n                onSubmit: (e) => nextStep(),\r\n                node: node,\r\n                loading: loading,\r\n                onBack: (e) => setActiveStep(activeStep - 1),\r\n                handleTextChange: handleTextChange,\r\n                activeStep: activeStep,\r\n                handleOptionChange: handleOptionChange,\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport NodeGuide from \"./Guide/NodeGuide\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    content: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function AddNode() {\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <Paper square className={classes.content}>\r\n                <NodeGuide />\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport NodeGuide from \"./Guide/NodeGuide\";\r\nimport { useParams } from \"react-router\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport API from \"../../../middleware/Api\";\r\nimport { toggleSnackbar } from \"../../../redux/explorer\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    content: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function EditNode() {\r\n    const classes = useStyles();\r\n    const { id } = useParams();\r\n    const [node, setNode] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        API.get(\"/admin/node/\" + id)\r\n            .then((response) => {\r\n                response.data.Rank = response.data.Rank.toString();\r\n                response.data.Aria2OptionsSerialized.interval = response.data.Aria2OptionsSerialized.interval.toString();\r\n                response.data.Aria2OptionsSerialized.timeout = response.data.Aria2OptionsSerialized.timeout.toString();\r\n                response.data.Aria2Enabled = response.data.Aria2Enabled\r\n                    ? \"true\"\r\n                    : \"false\";\r\n                setNode(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    }, [id]);\r\n\r\n    return (\r\n        <div>\r\n            <Paper square className={classes.content}>\r\n                {node && <NodeGuide node={node} />}\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { CssBaseline, makeStyles } from \"@material-ui/core\";\r\nimport AlertBar from \"./component/Common/Snackbar\";\r\nimport Dashboard from \"./component/Admin/Dashboard\";\r\nimport { useHistory } from \"react-router\";\r\nimport Auth from \"./middleware/Auth\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport createTheme from \"@material-ui/core/styles/createMuiTheme\";\r\nimport { zhCN } from \"@material-ui/core/locale\";\r\n\r\nimport Index from \"./component/Admin/Index\";\r\nimport SiteInformation from \"./component/Admin/Setting/SiteInformation\";\r\nimport Access from \"./component/Admin/Setting/Access\";\r\nimport Mail from \"./component/Admin/Setting/Mail\";\r\nimport UploadDownload from \"./component/Admin/Setting/UploadDownload\";\r\nimport Theme from \"./component/Admin/Setting/Theme\";\r\nimport ImageSetting from \"./component/Admin/Setting/Image\";\r\nimport Policy from \"./component/Admin/Policy/Policy\";\r\nimport AddPolicy from \"./component/Admin/Policy/AddPolicy\";\r\nimport EditPolicyPreload from \"./component/Admin/Policy/EditPolicy\";\r\nimport Group from \"./component/Admin/Group/Group\";\r\nimport GroupForm from \"./component/Admin/Group/GroupForm\";\r\nimport EditGroupPreload from \"./component/Admin/Group/EditGroup\";\r\nimport User from \"./component/Admin/User/User\";\r\nimport UserForm from \"./component/Admin/User/UserForm\";\r\nimport EditUserPreload from \"./component/Admin/User/EditUser\";\r\nimport File from \"./component/Admin/File/File\";\r\nimport Share from \"./component/Admin/Share/Share\";\r\nimport Download from \"./component/Admin/Task/Download\";\r\nimport Task from \"./component/Admin/Task/Task\";\r\nimport Import from \"./component/Admin/File/Import\";\r\nimport Captcha from \"./component/Admin/Setting/Captcha\";\r\nimport Node from \"./component/Admin/Node/Node\";\r\nimport AddNode from \"./component/Admin/Node/AddNode\";\r\nimport EditNode from \"./component/Admin/Node/EditNode\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: 0,\r\n        minWidth: 0,\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n}));\r\n\r\nconst theme = createTheme(\r\n    {\r\n        palette: {\r\n            background: {},\r\n        },\r\n        overrides: {\r\n            MuiButton: {\r\n                root: {\r\n                    textTransform: \"none\",\r\n                },\r\n            },\r\n            MuiTab: {\r\n                root: {\r\n                    textTransform: \"none\",\r\n                },\r\n            },\r\n        },\r\n    },\r\n    zhCN\r\n);\r\n\r\nexport default function Admin() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [show, setShow] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const user = Auth.GetUser();\r\n        if (user && user.group) {\r\n            if (user.group.id !== 1) {\r\n                history.push(\"/home\");\r\n                return;\r\n            }\r\n            setShow(true);\r\n            return;\r\n        }\r\n        history.push(\"/login\");\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ThemeProvider theme={theme}>\r\n                <div className={classes.root}>\r\n                    <CssBaseline />\r\n                    <AlertBar />\r\n                    {show && (\r\n                        <Dashboard\r\n                            content={(path) => (\r\n                                <Switch>\r\n                                    <Route path={`${path}/home`} exact>\r\n                                        <Index />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/basic`}>\r\n                                        <SiteInformation />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/access`}>\r\n                                        <Access />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/mail`}>\r\n                                        <Mail />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/upload`}>\r\n                                        <UploadDownload />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/theme`}>\r\n                                        <Theme />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/image`}>\r\n                                        <ImageSetting />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/captcha`}>\r\n                                        <Captcha />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/policy`} exact>\r\n                                        <Policy />\r\n                                    </Route>\r\n\r\n                                    <Route\r\n                                        path={`${path}/policy/add/:type`}\r\n                                        exact\r\n                                    >\r\n                                        <AddPolicy />\r\n                                    </Route>\r\n\r\n                                    <Route\r\n                                        path={`${path}/policy/edit/:mode/:id`}\r\n                                        exact\r\n                                    >\r\n                                        <EditPolicyPreload />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/group`} exact>\r\n                                        <Group />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/group/add`} exact>\r\n                                        <GroupForm />\r\n                                    </Route>\r\n\r\n                                    <Route\r\n                                        path={`${path}/group/edit/:id`}\r\n                                        exact\r\n                                    >\r\n                                        <EditGroupPreload />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/user`} exact>\r\n                                        <User />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/user/add`} exact>\r\n                                        <UserForm />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/user/edit/:id`} exact>\r\n                                        <EditUserPreload />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/file`} exact>\r\n                                        <File />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/file/import`} exact>\r\n                                        <Import />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/share`} exact>\r\n                                        <Share />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/download`} exact>\r\n                                        <Download />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/task`} exact>\r\n                                        <Task />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/node`} exact>\r\n                                        <Node />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/node/add`} exact>\r\n                                        <AddNode />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/node/edit/:id`} exact>\r\n                                        <EditNode />\r\n                                    </Route>\r\n                                </Switch>\r\n                            )}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </ThemeProvider>\r\n        </React.Fragment>\r\n    );\r\n}\r\n"],"sourceRoot":""}