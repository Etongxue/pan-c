{"version":3,"sources":["hooks/fileSubtitle.js","component/Placeholder/TextLoading.js","middleware/Api.ts","component/Dial/AutoHidden.js","redux/explorer/reducer.ts","services/navigate.ts","services/file.ts","redux/explorer/async.ts","utils/page.ts","redux/explorer/index.ts","middleware/Auth.ts","component/Uploader/core/utils/pool.ts","component/Uploader/core/utils/validator.ts","component/Uploader/core/utils/request.ts","i18n.ts","component/Navbar/DarkModeSwitcher.js","component/FileManager/Navigator/SubActions.js","component/Modals/OptionSelector.js","component/Dial/Save.js","component/Modals/Loading.js","component/Modals/Copy.js","component/Modals/DirectoryDownload.js","component/Modals/CreateShare.js","component/Modals/Decompress.js","component/Modals/Compress.js","component/FileManager/Modals.js","component/Viewer/Text.js","component/Viewer/Code.js","utils/index.js","component/Uploader/core/errors/index.ts","component/Common/Snackbar.js","component/Navbar/UserAvatarPopover.js","component/Navbar/UserAvatar.js","component/Navbar/Navbar.js","component/Navbar/SearchBar.js","component/Uploader/core/utils/helper.ts","component/Uploader/core/utils/index.ts","component/Navbar/StorageBar.js","component/Navbar/UserInfo.js","component/Navbar/FileTags.js","utils/zip.js","utils/api.ts","utils/filesystem.ts","redux/explorer/action.ts","component/FileManager/ImgPreview.js","component/Uploader/core/types.ts","component/Uploader/core/uploader/base.ts","component/Uploader/core/logger.ts","component/Uploader/core/api/index.ts","component/Uploader/core/index.ts","component/Uploader/core/uploader/chunk.ts","component/Uploader/core/uploader/local.ts","component/Uploader/core/uploader/remote.ts","component/Uploader/core/uploader/onedrive.ts","component/Uploader/core/uploader/oss.ts","component/Uploader/core/uploader/qiniu.ts","component/Uploader/core/uploader/cos.ts","component/Uploader/core/uploader/upyun.ts","component/Uploader/core/uploader/s3.ts","component/Uploader/core/uploader/placeholder.ts","component/Dial/Create.js","component/Uploader/Popup/TaskDetail.js","component/Uploader/Popup/UploadTask.js","component/Uploader/UseUpload.js","component/Modals/ConcurrentOption.js","component/Uploader/Popup/MoreActions.js","component/Uploader/Popup/TaskList.js","component/Placeholder/DropFile.js","component/Uploader/Uploader.js","config.ts","redux/viewUpdate/action.ts","utils/datetime.js","component/FileManager/TypeIcon.js","serviceWorker.js","middleware/AuthRoute.js","middleware/NoAuthRoute.js","component/Share/NotFound.js","component/Placeholder/Captcha.js","hooks/normal.js","component/Login/ReCaptchaWrapper.js","component/Login/ReCaptcha.js","hooks/recaptcha.js","hooks/tcaptcha.js","hooks/useCaptcha.js","component/Login/LoginForm.js","component/FileManager/FileName.js","component/FileManager/SmallIcon.js","component/FileManager/FileIcon.js","component/FileManager/Folder.js","component/FileManager/DnD/Preview.js","component/FileManager/DnD/DragLayer.js","component/FileManager/ContextMenu.js","component/FileManager/TableRow.js","component/FileManager/DnD/DropWarpper.js","component/FileManager/DnD/Scrolling.js","component/FileManager/ObjectIcon.js","component/FileManager/Explorer.js","hooks/pagination.js","component/FileManager/Navigator/PathButton.js","component/FileManager/Navigator/DropDownItem.js","component/FileManager/Navigator/DropDown.js","component/FileManager/Navigator/Navigator.js","component/Placeholder/ListLoading.js","component/FileManager/Sidebar/SideDrawer.js","component/FileManager/PaginationItem.js","component/FileManager/Pagination.js","component/FileManager/FileManager.js","component/Viewer/SelectMenu.js","component/Viewer/Video.js","component/Share/SearchResult.js","component/Share/MyShare.js","component/Modals/SelectFile.js","component/Download/DownloadingCard.js","component/Download/FinishedCard.js","component/Dial/Aria2.js","component/Download/Download.js","component/Placeholder/PageLoading.js","component/Share/LockedFile.js","component/Share/Creator.js","component/Share/SharedFile.js","component/Share/SharedFolder.js","component/Share/SharePreload.js","component/Viewer/Doc.js","component/Modals/CreateWebDAVAccount.js","component/Setting/WebDAV.js","component/Setting/Tasks.js","component/Setting/Profile.js","component/Setting/Authn.js","component/Modals/TimeZone.js","component/Setting/UserSetting.js","component/Login/Register.js","component/Login/Activication.js","component/Login/ResetForm.js","component/Login/Reset.js","component/FileManager/MusicPlayer.js","component/Viewer/Epub.js","App.js","middleware/Init.js","redux/viewUpdate/reducer.ts","reducers/index.js","component/Placeholder/ErrorBoundary.js","index.js","redux/combineReducers.ts","component/Placeholder/Nothing.js","component/FileManager/PathSelector.js"],"names":["UseFileSubTitle","query","math","location","dispatch","useDispatch","useState","title","setTitle","path","setPath","SetSubTitle","useCallback","changeSubTitle","useEffect","pathHelper","isSharePage","pathname","get","split","length","params","useStyles","makeStyles","theme","loader","width","padding","breakpoints","down","MyLoader","props","backgroundColor","dark","foregroundColor","className","TextLoading","useTheme","classes","palette","type","baseURL","getBaseURL","getPreviewURL","isShare","shareID","fileID","encodeURIComponent","instance","axios","create","withCredentials","AppError","message","code","error","i18next","exists","ns","t","includes","stack","Error","interceptors","response","use","rawData","data","undefined","Auth","signout","window","href","msg","Promise","reject","AutoHidden","children","enable","hide","element","hidden","setHidden","prev","scrollY","lastUpdate","addEventListener","e","currentTarget","current","scrollTop","handleNavigation","in","initState","dndSignal","dndTarget","dndSource","fileList","dirList","selected","selectProps","isMultiple","withFolder","withFile","withSourceEnabled","lastSelect","file","id","name","size","date","create_date","index","shiftSelectedIds","imgPreview","first","other","audioPreview","playingName","paused","isOpen","fileSave","sideBarOpen","checkSelectedProps","forEach","value","source_enabled","explorer","state","action","Object","assign","target","source","list","addedSelected","targets","newSelected","fileIds","filteredSelected","filter","search","keywords","searchPath","open","currentPolicy","policy","share","a","apiURL","key","API","getDownloadURL","reqURL","downloadPath","put","askForOption","options","getState","resolve","dialog","setOptionModal","onClose","callback","option","statusHelper","isHomePage","startsWith","isAdminPage","isLoginPage","isMobile","innerWidth","actions","reducers","setNavigator","navigatorLoading","navigateTo","navigator","setPagination","viewUpdate","pagination","page","navigateUp","pathSplit","pop","newPath","join","drawerToggleAction","dragAndDrop","changeViewMethod","method","toggleDaylightMode","changeContextMenu","menuType","setNavigatorLoadingStatus","status","setNavigatorError","openCreateFolderDialog","openCreateFileDialog","setUserPopover","anchor","setShareUserPopover","openRenameDialog","openResaveDialog","openMoveDialog","openRemoveDialog","openShareDialog","applyThemes","setSessionStatus","openMusicDialog","openRemoteDownloadDialog","openTorrentDownloadDialog","openDecompressDialog","openCompressDialog","openGetSourceDialog","openCopyDialog","openLoadingDialog","text","closeAllModals","toggleSnackbar","vertical","horizontal","color","setModalsLoading","refreshFileList","searchMyFile","showImgPreivew","showAudioPreview","audioPreviewSetIsOpen","audioPreviewSetPlaying","refreshStorage","saveFile","setSiteConfig","config","openDirectoryDownloadDialog","downloading","log","done","getValueWithDefault","defaultValue","JSON","parse","localStorage","getItem","isAuthenticated","_user","anonymous","group","tags","_preference","authenticate","cb","SetUser","GetUser","newUser","setItem","stringify","Check","oldUser","SetPreference","GetPreference","GetPreferenceWithDefault","defaultVal","Pool","limit","queue","processing","uploader","push","check","item","this","v","findIndex","task","dst","ProcessingTaskDuplicatedError","release","run","then","err","processingNum","availableNum","Math","max","slice","checkers","allowedSuffix","ext","FileValidateError","maxSize","validate","c","CancelToken","baseConfig","transformResponse","TransformResponseError","cdBackendConfig","request","url","catch","isCancel","RequestCanceledError","HTTPError","requestAPI","i18n","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","load","defaultNS","interpolation","escapeValue","on","lng","document","documentElement","setAttribute","languages","displayName","icon","opacity","DarkModeSwitcher","position","useTranslation","ThemeType","useSelector","siteConfig","ToggleThemeMode","isDayLight","isDark","placement","classNames","onClick","sideButton","marginRight","sortOptions","paginationOption","SubActions","isSmall","inherit","keyPrefix","viewMethod","explorerViewMethod","shareInfo","pageSize","OpenLoadingDialog","ChangeSortMethod","changeSortMethod","SetShareUserPopover","ChangePageSize","changePageSize","anchorSort","setAnchorSort","anchorPagination","setAnchorPagination","selectedIndex","setSelectedIndex","handlePaginationChange","s","toggleViewMethod","newMethod","fontSize","anchorEl","Boolean","map","toString","parseInt","event","0","1","2","3","4","5","6","7","handleMenuItemClick","nick","creator","style","height","src","content","minWidth","OptionSelector","modals","aria-labelledby","dividers","component","aria-label","o","button","primary","secondary","description","fab","margin","top","right","bottom","left","zIndex","badge","fabProgress","green","wrapper","spacing","buttonSuccess","SaveButton","buttonClassname","clsx","disabled","avatar","blue","loadingContainer","display","loading","marginTop","marginLeft","LoadingDialog","loadingText","Dialog","DialogContent","DialogContentText","CircularProgress","contentFix","buttonProgress","light","CopyDialog","selectedPath","setSelectedPath","selectedPathName","setSelectedPathName","ToggleSnackbar","SetModalsLoading","RefreshFileList","DialogTitle","PathSelector","presentPath","onSelect","folder","Trans","i18nKey","values","components","DialogActions","Button","preventDefault","dirs","items","post","src_dir","modalsLoading","background","default","DirectoryDownloadDialog","logRef","useRef","autoScroll","setAutoScroll","previousLog","usePrevious","next","timer","setTimer","useInterval","scrollIntoView","behavior","block","fullWidth","TextField","ref","multiline","FormControlLabel","control","Checkbox","checked","onChange","previous","label","cancelDirectoryDownload","widthAnimation","shareUrl","flexCenter","alignItems","noFlex","scoreCalc","ExpansionPanel","withStyles","root","border","boxShadow","borderBottom","expanded","MuiExpansionPanel","ExpansionPanelSummary","MuiExpansionPanelSummary","ExpansionPanelDetails","MuiExpansionPanelDetails","CreatShare","lastSubmit","React","setExpanded","shareURL","setShareURL","password","downloads","expires","showPassword","setValues","expire","preview","shareOption","setShareOption","handleChange","prop","handleExpand","panel","isExpanded","handleCheck","setTimeout","maxWidth","Divider","List","aria-controls","ListItem","ListItemIcon","ListItemText","ListItemSecondaryAction","FormControl","variant","InputLabel","htmlFor","OutlinedInput","endAdornment","InputAdornment","Tooltip","IconButton","random","substr","edge","onMouseDown","onIcon","Visibility","offIcon","VisibilityOff","labelWidth","Select","labelId","MenuItem","num","Typography","onFocus","select","autoFocus","inputProps","readonly","link","clipboard","writeText","submitFormBody","is_dir","DecompressDialog","SubmitDecompressTask","submitDecompressTask","CompressDialog","fileName","setFileName","SubmitCompressTask","submitCompressTask","ModalsCompoment","newFolderName","newFileName","newName","secretShare","sharePwd","downloadURL","remoteDownloadPathSelect","purchaseCallback","handleInputChange","setState","newNameSuffix","UNSAFE_componentWillReceiveProps","nextProps","dndSignale","modalsStatus","rename","dragMove","scoreHandler","Download","downloaded","submitRemove","delete","submitMove","patch","DragSelectedPath","doMove","submitRename","new_name","submitCreateNewFolder","submitCreateNewFile","submitTorrentDownload","submitDownload","failed","r","details","setMoveTarget","remoteDownloadNext","copySource","getSource","createNewFolder","onSubmit","createNewFile","copy","move","remove","remoteDownload","placeholder","torrentDownload","decompress","compress","directoryDownloading","directoryDownloadDone","directoryDownloadLog","Component","Modals","connect","withRouter","withTranslation","layout","up","player","borderRadius","overflowX","TextViewer","setContent","setStatus","setLoading","useRouteMatch","$vm","createRef","useLocation","URLSearchParams","useParams","requestURL","responseType","textdata","Buffer","toBase64","reader","FileReader","readAsDataURL","onload","result","onerror","save","addImg","$file","$img2Url","console","elevation","language","onSave","toolbar","h1","h2","h3","h4","img","expand","undo","redo","subfield","MonacoEditor","lazy","editor","formControl","toobar","textAlign","CodeViewer","suffix","setSuffix","wordWrap","setWordWrap","extension","codePreviewSuffix","Array","from","Set","keys","k","fallback","readOnly","extraEditorClassName","sizeToString","bytes","i","floor","pow","toFixed","fixUrlHash","setGetParameter","paramName","paramValue","indexOf","prefix","substring","history","pushState","changeThemeColor","querySelector","bufferDecode","Uint8Array","atob","charCodeAt","bufferEncode","btoa","String","fromCharCode","apply","replace","pathBack","folders","filePath","hex2bin","hex","padStart","basename","pathList","filename","fileNameNoExt","lastIndexOf","randomStr","characters","charactersLength","charAt","getNumber","base","conditions","isMac","platform","toUpperCase","isMobileSafari","ua","userAgent","iOS","match","webkit","vhCheck","vh","innerHeight","setProperty","UploaderErrorName","RETRY_ERROR_LIST","FailedCreateUploadSession","HTTPRequestFailed","LocalChunkUploadFailed","SlaveChunkUploadFailed","RequestCanceled","ProcessingTaskDuplicated","FailedTransformResponse","RETRY_CODE_LIST","UploaderError","field","InvalidFile","supported","UnknownPolicyError","UnknownPolicyType","APIError","appError","CreateUploadSessionError","DeleteUploadSessionError","FailedDeleteUploadSession","axiosErr","LocalChunkUploadError","chunkIndex","SlaveChunkUploadError","OneDriveChunkError","OneDriveChunkUploadFailed","retryAfterSeconds","retryAfter","OneDriveEmptyFileSelected","OneDriveEmptyFile","OneDriveFinishUploadError","FailedFinishOneDriveUpload","S3LikeChunkError","S3LikeChunkUploadFailed","getElementsByTagName","innerHTML","S3LikeFinishUploadError","QiniuChunkError","QiniuChunkUploadFailed","QiniuFinishUploadError","FailedFinishQiniuUpload","COSUploadError","COSPostUploadFailed","COSUploadCallbackError","COSUploadCallbackFailed","UpyunUploadError","UpyunPostUploadFailed","S3LikeUploadCallbackError","S3LikeUploadCallbackFailed","parseError","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","MySnackbarContentWrapper","main","iconVariant","Icon","aria-describedby","close","SnackbarCompoment","snackbar","toggle","handleClose","anchorOrigin","autoHideDuration","AlertBar","UserAvatarPopoverCompoment","openURL","sigOut","reload","user","Popover","transformOrigin","visitorMenu","registerEnabled","header","largeAvatarContainer","Avatar","largeAvatar","noWrap","nickname","user_name","Chip","UserAvatarPopover","userPopoverAnchorEl","UserAvatarCompoment","showUserInfo","returnHome","loginCheck","isLogin","mobileHidden","Grow","Home","UserAvatar","NavbarCompoment","handleDrawerToggle","mobileOpen","openDownload","startDownload","openDirectoryDownload","startDirectoryDownload","archiveDownload","startBatchDownload","signOut","finally","UploaderRef","unlisten","listen","drawer","upDrawer","minStickDrawer","iconFix","allowRemoteDownload","webdav","process","browser","test","appBar","menuButton","handleDesktopToggle","desktopOpen","menuButtonDesktop","menuIcon","setSelectedTarget","subTitle","grow","sectionForFile","isPreviewable","openPreview","showDirectoryPicker","isSecureContext","disableClickAway","audioPreviewPlayingName","audioPreviewOpen","smUp","implementation","container","paper","drawerPaper","onOpen","disableDiscovery","ModalProps","keepMounted","xsDown","drawerPaperDesktop","drawerOpen","drawerClose","Navbar","loadUploader","audioPreviewIsOpen","withTheme","flexShrink","drawerDesktop","mixins","flexDirection","justifyContent","transition","transitions","easing","sharp","duration","enteringScreen","leavingScreen","flexGrow","nested","paddingLeft","extendedIcon","addButton","marginBottom","fabButton","badgeFix","dividerFix","folderShareIcon","verticalAlign","shareInfoContainer","textDecoration","shareAvatar","stickFooter","ownerInfo","overflowY","configure","ignoreTags","keyMap","SEARCH","SearchBarCompoment","handlers","searchShare","blur","input","cancelSuggest","searchIcon","inputRoot","inputInput","onBlur","suggestBox","TransitionProps","timeout","square","SearchBar","shape","fade","common","white","pointerEvents","paddingTop","paddingRight","paddingBottom","getChunks","chunkByteSize","chunks","count","ceil","chunk","sumChunk","reduce","loaded","getResumeCtxKey","setResumeCtx","logger","ctxKey","warn","WriteCtxFailed","removeResumeCtx","removeItem","RemoveCtxFailed","cleanupResumeCtx","getResumeCtx","localInfoString","ReadCtxFailed","localInfo","InvalidCtxData","session","Date","now","CtxExpired","listResumeCtx","res","len","OBJtoXML","obj","xml","isArray","array","getFileInput","isFolder","createElement","multiple","body","appendChild","pathJoin","parts","sep","part","RegExp","trimPrefix","getDirectoryUploadDst","relPath","webkitRelativePath","fsPath","readEntriesPromise","directoryReader","readEntries","readFilePromise","fileReader","readAllDirectoryEntries","entries","getAllFileEntries","dataTransferItemList","fileEntries","webkitGetAsEntry","getAsFile","entry","shift","isFile","fullPath","isDirectory","createReader","isFileDrop","dataTransfer","types","StorageBarCompoment","percent","used","total","showExpand","firstLoad","componentDidMount","updateStatus","refresh","onMouseEnter","onMouseLeave","storageContainer","detail","bar","StorageBar","storageRefresh","textFix","overflow","textOverflow","UserInfoCompoment","userNav","flexAvatar","avatarImg","storageCircle","nickName","groupName","UserInfo","backgroundImage","backgroundSize","minHeight","transform","hiddenButton","subMenu","overFlow","whiteSpace","icons","Circle","CircleOutline","Heart","HeartOutline","Hexagon","HexagonOutline","Hexagram","HexagramOutline","Rhombus","RhombusOutline","Square","SquareOutline","Triangle","TriangleOutline","FolderHeartOutline","AddTag","FileTag","useHistory","tagOpen","setTagOpen","addTagModal","setAddTagModal","tagHover","setTagHover","setTags","SearchMyFile","p","NavigateTo","onSuccess","tag","newTags","iconVideo","iconImg","iconAudio","iconDoc","expression","IconComponent","getIcon","Crc32","crc","table","offset","prototype","j","getDataHelper","byteLength","uint8","view","DataView","buffer","ZIP","underlyingSource","ctrl","activeZipObject","closed","files","filenames","encoder","TextEncoder","activeZipIndex","processNextChunk","closeZip","zipWriter","enqueue","fileLike","TypeError","trim","lastModified","directory","endsWith","nameBuf","encode","zipObject","level","comment","compressedLength","uncompressedLength","writeHeader","setUint16","setUint32","getHours","getMinutes","getSeconds","getFullYear","getMonth","getDate","set","writeFooter","footer","indexFilename","setUint8","zipObj","read","outputData","append","stream","getReader","ReadableStream","start","pull","getPreviewPath","walk","f","objects","subs","getFileSystemDirectoryPaths","handle","parent","paths","fileSystemHandle","FileSystemFileHandle","createFileSystemDirectory","cur","getDirectoryHandle","saveFileToFileSystemDirectory","dir","getFileHandle","createWritable","writable","write","verifyFileSystemRWPermission","fileHandle","opts","mode","queryPermission","requestPermission","directoryDownloadAbortController","setFileList","setDirList","setSortMethod","setSideBar","setCurrentPolicy","removeSelectedTargets","addSelectedTargets","setLastSelect","setShiftSelectedIds","sortMethodFuncs","sizePos","b","sizeRes","namePos","localeCompare","numeric","ignorePunctuation","nameRev","timePos","timeRev","modifyTimePos","modifyTimeRev","selectAll","updateFileList","sortMethod","x","sortFunc","sort","toggleObjectInfoSidebar","closeContextMenu","serverSideBatchDownload","router","postBody","shareDownload","allowArchiveDownload","fileStream","streamSaver","createWriteStream","readableZipStream","previewPath","fetch","cache","WritableStream","pipeTo","abort","AbortController","startIn","fsPaths","duplicates","updateLog","signal","blob","getViewerURL","viewer","openViewer","selectFile","fileIndex","ctrlKey","metaKey","shiftKey","isMacbook","all","begin","min","end","newShiftSelected","encodings","encoding","encodingRequired","allOptions","batchGetSource","sourceBatch","ImagPreviewComponent","photoIndex","firstOne","newImg","intro","fileType","toLowerCase","imgPreviewSuffix","images","visible","onIndexChange","n","ImgPreivew","PolicyType","TaskType","Status","Logger","allowLevel","args","getPrintPrefix","createUploadSession","req","cancel","cancelToken","localUploadChunk","sessionID","onProgress","headers","onUploadProgress","progressEvent","slaveUploadChunk","credential","Authorization","oneDriveUploadChunk","range","finishOneDriveUpload","s3LikeUploadChunk","etag","s3LikeFinishUpload","isOss","PartNumber","ETag","validateStatus","qiniuDriveUploadChunk","upToken","authorization","qiniuFinishUpload","partNumber","cosFormUploadChunk","keyTime","ak","bodyFormData","FormData","cosUploadCallback","upyunFormUploadChunk","s3LikeUploadCallback","resumePolicy","local","remote","qiniu","oss","onedrive","s3","Base","manager","child","added","subscriber","progress","lastTime","startTime","subscribe","transit","initialized","setError","queued","pool","preparing","cachedInfo","utils","policy_id","last_modified","token","resumed","chunkProgress","upload","afterUpload","finished","cancelUploadSession","canceled","reset","deleteUploadSession","onTransition","newStatus","onError","onMsg","Retryable","fromCache","SelectType","Chunk","initBeforeUploadChunks","updateLocalCache","uploadChunk","chunkSize","notifyResumeProgress","getProgressInfoItem","Local","chunkInfo","updateChunkProgress","Remote","uploadURLs","OneDrive","rangeEnd","sendRange","innererror","alignChunkOffset","chunkOffset","rangeStatus","expectedStart","nextExpectedRanges","newChunkOffset","finishing","OSS","completeURL","Qiniu","chunkRes","COS","Upyun","ResumeHint","resumable","UploadManager","fileInput","directoryInput","currentPath","changeConcurrentLimit","newLimit","File","NoPolicySelected","onchange","ev","fileSelectCallback","click","resumeTasks","tasks","dispatchUploader","resumeHint","cleanupSessions","Event","onFileDroppedIn","onDropLeave","uploaders","onDropFileAdded","logLevel","concurrentLimit","dropZone","onDropOver","cos","upyun","S3","acceptVal","removeAttribute","UploadButton","setOpen","setQueued","OpenNewFolderDialog","OpenNewFileDialog","Queued","uploadClicked","openFileList","circularProgress","useMemo","totalSize","processedSize","taskListOpen","Badge","badgeContent","invisible","Backdrop","SpeedDial","tooltipTitle","SpeedDialIcon","openIcon","FabProps","ariaLabel","SpeedDialAction","tooltipOpen","Directory","infoTitle","fontWeight","infoValue","wordBreak","TaskDetail","navigateToDst","Link","datetime","locale","Grid","xs","progressContent","progressContainer","listAction","successStatus","errorStatus","disabledBadge","dstLink","fileNameContainer","getSpeedText","speed","speedAvg","useSpeedAvg","displayedSpeed","getErrMsg","errMsg","Message","UploadTask","useAvgSpeed","onCancel","onRefresh","taskHover","setTaskHover","startLoadedRef","setProgress","durationTotal","resAvg","retry","useUpload","fullScreen","useMediaQuery","statusText","uploaded","percentage","resumeLabel","continueLabel","progressBar","lighten","darken","taskDetail","u","stopRipple","stopPropagation","secondaryAction","show","onTouchStart","fileIcon","TypeIcon","isUpload","newExpanded","onMouseOver","ConcurrentOptionDialog","setCount","Input","step","MoreActions","uploadManager","deleteTask","setUseAvgSpeed","setFilter","sorter","setSorter","cleanFinished","concurrentDialog","setConcurrentDialog","RefreshStorage","listItems","tooltip","divider","ClearAll","Menu","enterNextDelay","dense","val","Transition","forwardRef","Slide","direction","rootOverwrite","flex","popup","inset","paddingZero","dialogContent","maxHeight","virtualList","expandIcon","shortest","expandIconExpanded","sorters","reverse","filters","ongoing","TaskList","taskList","setUploaders","setAnchorEl","refreshList","setRefreshList","reason","Fade","currentList","Nothing","increaseViewportBy","itemContent","classnames","TransitionComponent","disableEnforceFocus","hideBackdrop","disableBackdropClick","disableScrollLock","Accordion","AppBar","Toolbar","disableGutters","MoreHoriz","AccordionDetails","createStyles","backdrop","DropFileBackground","totalProgressCollector","lastProgressStart","Uploader","setTaskListOpen","dropBgOpen","setDropBgOpen","processed","totalProgress","setTotalProgress","fileSelectCounter","openFileSelector","folderSelectCounter","openFolderSelector","enableUploader","taskAdded","original","onToast","setPolicy","unfinished","setInterval","msDocPreviewSuffix","subtitleSuffix","audioPreviewSuffix","videoPreviewSuffix","pdfPreviewSuffix","editSuffix","epubSuffix","json","php","py","bat","cpp","h","cs","css","dockerfile","go","html","ini","java","js","jsx","less","lua","sh","sql","yaml","mediaType","audio","video","image","pdf","word","ppt","excel","torrent","zip","excute","android","python","epub","isTorrent","isCompressFile","taskStatus","taskType","taskProgress","getTaskStatus","getTaskType","getTaskProgress","setSubtitle","setShareInfo","selectLanguage","changeLanguage","dayjs","extend","utc","timezone","userTimezone","Intl","DateTimeFormat","resolvedOptions","timeZone","preferTimeZone","refreshTimeZone","formatLocalTime","time","tz","toDate","formatParams","year","month","day","hour","minute","second","validateTimeZone","format","AudioIcon","VideoIcon","ImageIcon","PdfIcon","FileWordBox","FilePowerpointBox","FileExcelBox","ScriptText","MagnetOn","ZipBox","WindowRestore","Android","FileShowIcon","LanguagePhp","LanguageGo","LanguagePython","LanguageC","LanguageCpp","LanguageJavascript","MenuBook","fileSuffix","getColor","getColorValue","iconClassName","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","isLocalhost","hostname","AuthRoute","rest","render","to","NoAuthRoute","emptyContainer","emptyInfoBig","Notice","primaryColor","secondaryColor","y","rx","ry","captchaPlacholder","NormalCaptcha","captchaRef","useStyle","captcha","setCaptcha","captchaData","setCaptchaData","refreshCaptcha","captchaCode","captchaContainer","required","autoComplete","captchaImageContainer","captchaImage","alt","ReCAPTCHA","handleExpired","bind","handleErrored","handleRecaptchaRef","grecaptcha","_widgetId","getResponse","execute","_executeRequested","onExpired","onErrored","sitekey","tabindex","stoken","hl","explicitRender","delayOfCaptchaIframeRemoving","temporaryNode","firstChild","removeChild","elem","childProps","defaultProps","makeAsyncScriptLoader","callbackName","globalName","Recaptcha","reCaptchaKey","captcha_ReCaptchaKey","ReCaptcha","TCaptcha","isValidateRef","submitRef","appid","tcaptcha_captcha_app_id","onLoad","TencentCaptcha","ret","ticket","randstr","isValidate","submit","cursor","defaultValidate","useCaptcha","captchaType","captcha_type","captchaLoading","setCaptchaLoading","captchaRefreshRef","normal","captchaParamsRef","CaptchaRender","useNormalCaptcha","recaptcha","useRecaptcha","tcaptcha","useTCaptcha","form","buttonContainer","authnLink","LoginForm","email","setEmail","pwd","setPwd","useAuthn","setUseAuthn","twoFA","setTwoFA","faCode","setFACode","loginCaptcha","authn","ApplyThemes","SetSessionStatus","afterLogin","Paper","login","userName","Password","credentials","credentialRequestOptions","publicKey","challenge","allowCredentials","listItem","assertion","authData","authenticatorData","clientDataJSON","rawId","sig","signature","userHandle","RouterLink","Fingerprint","VpnKey","highlight","FileName","highlightClassName","searchWords","autoEscape","textToHighlight","SmallIconCompoment","nextState","nextContext","isSelectedCurrent","isSelectedNext","isSelected","ButtonBase","focusRipple","notSelected","onIconClick","iconSelected","iconNotSelected","Folder","checkIcon","folderName","folderNameSelected","folderNameNotSelected","SmallIcon","boxSizing","FileIconCompoment","showPicIcon","pic","picPreview","noDrag","afterLoad","beforeLoad","loadingAnimation","previewIcon","iconBig","fileInfo","shareFix","FileIcon","objectFit","userDrag","active","isActive","dragging","cardDragged","diliverIcon","object","Preview","card","layerStyles","getItemStyles","initialOffset","currentOffset","pointerOffset","WebkitTransform","CustomDragLayer","useDragLayer","monitor","itemType","getItemType","getInitialSourceClientOffset","getSourceClientOffset","getInitialClientOffset","isDragging","StyledListItemIcon","ContextMenuCompoment","X","Y","setPoint","clientY","clientX","openArchiveDownload","enterFolder","renderMenuItems","visibleCount","condition","menuOpen","anchorReference","anchorPosition","Unarchive","Archive","InfoOutlined","propover","ContextMenu","contextType","contextOpen","TableRowCompoment","tableIcon","pref","onContextMenu","contextMenu","handleClick","onDoubleClick","handleDoubleClick","selectedShared","TableCell","dref","scope","tableRow","hideAuto","TableItem","hover","userSelect","FolderDropWarpper","isListView","useDrop","accept","drop","collect","isOver","canDrop","useDragScrolling","isScrolling","goDown","isScrollEnd","offsetHeight","scrollHeight","requestAnimationFrame","goUp","throttleOnDragOver","throttle","isMouseOnTop","isMouseOnDown","addEventListenerForWindow","removeEventListenerForWindow","removeEventListener","fixFlex","ObjectIcon","navigatorPath","SetSelectedTarget","NavitateTo","DragAndDrop","OpenPreview","StartDownload","SelectFile","handleIconClick","useDrag","dropResult","getDropResult","canDrag","drag","getEmptyImage","captureDraggingState","rootTable","typeHeader","errorBox","errorMsg","flexFix","upButton","clickAway","rootShare","visuallyHidden","clip","gridContainer","gridTemplateColumns","gridItem","DELETE_FILE","SELECT_ALL_SHOWED","SELECT_ALL","DESELECT_ALL","Explorer","navigatorErrorMsg","navigatorError","OpenRemoveDialog","ChangeContextMenu","SelectAll","page_size","page_number","startIndex","usePagination","showView","listView","TableHead","TableSortLabel","TableBody","normalView","data-clickAway","dataset","clickaway","allowChanges","expandMore","textTransform","PathButton","inputRef","more","last","DropDownItem","setActiveStatus","DropDown","clearTimeout","shouldClose","NavigatorComponent","currentID","hiddenFolders","hiddenMode","anchorHidden","URL","searchParams","renderPath","onpopstate","navigateToPath","max_size","file_type","checkOverFlow","redresh","componentDidUpdate","prevProps","prevStates","ms","drawerDesktopOpen","force","overflowInitLock","hasOverflowingChildren","offsetWidth","scrollWidth","showHiddenPath","performAction","newTarget","presentFolderMenu","disableAutoFocusItem","roundBorder","navigatorContainer","nav","rightIcon","optionContainer","Navigator","ListLoading","drawerContainer","placeContent","fileIconSVG","folderIcon","closeIcon","placeSelf","propsContainer","propsLabel","propsTime","propsValue","SideDrawer","SetSideBar","setTarget","setDetails","propsItem","d","toLocaleString","child_folder_num","child_file_num","updated_at","created_at","query_date","Hidden","Clear","Drawer","gutterBottom","CustomPaginationItem","PaginationItem","PaginationFooter","SetPagination","Pagination","renderItem","FileManager","DndProvider","backend","HTML5Backend","DragLayer","SelectMenu","showIcon","Artplayer","externalPlayers","actionButton","VideoViewer","art","setArt","setFiles","subtitles","setSubtitles","playlist","setPlaylist","subtitleOpen","setSubtitleOpen","subtitleSelected","setSubtitleSelected","playlistOpen","setPlaylistOpen","externalPlayerOpen","setExternalPlayerOpen","autoHeight","pictureInPictureEnabled","playing","pip","pause","newURL","subtitle","switchUrl","switchSubtitle","switch","fileNameMatch","flip","setting","playbackRate","aspectRatio","hotkey","fullscreen","fullscreenWeb","whitelist","moreVideoAttr","playsInline","lang","getInstance","startIcon","Subtitles","PlaylistPlay","Launch","sub","cardContainer","shareTitle","avatarFile","avatarFolder","gird","loadMore","orderSelect","cardAction","SearchResult","tGlobal","setPage","setTotal","shareList","setShareList","orderBy","setOrderBy","order","sm","Card","CardHeader","subheader","MyShareCompoment","showPwd","loadList","removeShare","oldList","changePermission","newPwd","shareIndex","changePreviewOption","handlePageChange","handleOrderChange","isExpired","remain_downloads","md","CardActions","disableActionSpacing","MyShare","scroll","SelectFileDialog","filesCopy","FormGroup","row","iconContainer","borderInlineStart","contentSide","iconMultiple","subFile","subFileName","subFileIcon","subFileSize","subFilePercent","bitmap","DownloadingCard","canvasRef","setTask","selectDialogOpen","setSelectDialogOpen","selectFileOption","setSelectFileOption","bitfield","str","canvas","context","getContext","clearRect","strokeStyle","bit","round","numPieces","beginPath","moveTo","lineTo","stroke","getPercent","completed","activeFiles","getDownloadName","bittorrent","subFileList","processStyle","completedLength","subFileCell","newIndex","newFiles","gid","indexes","deleteFile","HighlightOff","Table","TableRow","CardContent","LinearProgress","update","uploadLength","uploadSpeed","infoHash","numSeeders","seeder","pieceLength","FinishedCard","task_status","getTaskError","task_error","RemoteDownloadButton","OpenRemoteDownloadDialog","Fab","Add","DownloadComponent","interval","previousDownloading","finishedList","continue","loadDownloading","PageLoading","LockedFileCompoment","setPassowrd","LockedFile","marginRottom","boxHeader","shareDes","Creator","userProfile","views","ImgPreview","SharedFileCompoment","scoreHandle","download","box","boxContent","fileSize","boxFooter","actionLeft","downloadButton","SharedFile","openResave","fileCotainer","buttonCotainer","ReadMe","SharedFolderComponent","handleClickAway","ignore","readmeShowed","ClickAwayListener","onClickAway","managerContainer","SharedFolder","shareUserPopoverAnchorEl","SharePreload","setShare","setPassword","locked","withPassword","DocViewer","setURL","formGroup","formIcon","CreateWebDAVAccount","setValue","pathSelectDialog","setPathSelectDialog","formContainer","LabelOutlined","FolderOpenOutlined","cardContent","tableContainer","WebDAV","tab","setTab","setCreate","accounts","setAccounts","account","ID","CreatedAt","Name","Root","Tabs","indicatorColor","textColor","newValue","Tab","Alert","severity","origin","TableContainer","align","accountCopy","deleteAccount","Tasks","setTasks","nowrap","getError","ProfileCompoment","listType","loadNext","loadPrev","avatarContainer","centered","infoContainer","infoItem","mobileHide","th","tableLink","Profile","backgroundPosition","borderRaidus","pageInfo","sectionTitle","desenList","flexContainer","Authn","setSelected","confirm","setConfirm","deleteCredential","fingerprint","credentialCreationOptions","excludeCredentials","attestationObject","add","TimeZoneDialog","timeZoneValue","setTimeZoneValue","UserSettingCompoment","avatarModal","nickModal","changePassword","oldPwd","webdavPwd","newPwdRepeat","twoFactor","authCode","changeTheme","chosenTheme","showWebDavUrl","showWebDavUserName","changeWebDavPwd","groupBackModal","changePolicy","changeTimeZone","settings","uid","group_expires","qq","homepage","two_factor","two_fa_secret","prefer_theme","themes","changeView","loadSetting","useGravatar","changeNick","uploadAvatar","formData","handleToggle","changhePwd","old","new","changheWebdavPwd","init2FA","handleAlignment","toggleThemeMode","newMode","ListItemAvatar","infoTextWithIcon","rightIconWithText","infoText","Switch","firstColor","secondColor","Brightness3","ListAlt","Schedule","GitHub","Translate","uploadFromFile","userGravatar","paddingText","textField","flexContainerResponse","qrcode","desText","ToggleButtonGroup","exclusive","ToggleButton","themeBlock","UserSetting","yellow","policySelected","avatarSuccess","Register","password_repeat","setInput","emailActive","setEmailActive","regCaptcha","Activation","setSuccess","ResetForm","secret","Reset","forgetCaptcha","MusicPlayerComponent","currentIndex","currentTime","progressText","looptype","myAudioRef","newItem","handleItemClick","backgroundPlay","bindEvents","ele","readyPlay","loopnext","timeUpdate","unbindEvents","play","formatTime","isNaN","playOrPaues","isPlay","changeLoopType","lt","handleProgress","idx","Slider","slider_root","justify","Repeat","RepeatOne","Shuffle","MusicPlayer","ReactReader","m","EpubViewer","currentLocation","setLocation","fileUrl","locationChanged","epubcifi","epubInitOptions","openAs","showToc","PDFViewer","App","themeConfig","prefersDarkMode","prefer","createMuiTheme","overrides","MuiButton","MuiTab","Fragment","ThemeProvider","CssBaseline","exact","Text","Code","initUserConfig","store","defaultTheme","preferListMethod","share_view_method","home_view_method","music","resave","doNavigate","currntPath","defaultStatus","rawStore","configCache","InitSiteConfig","siteICPId","QQLogin","black","contrastText","hint","bgSelected","emptyIcon","ErrorBoundary","hasError","errorInfo","componentStack","Admin","hash","contentType","ready","unregister","checkValidServiceWorker","alert","waiting","postMessage","createBrowserHistory","reduxEnhance","applyMiddleware","routerMiddleware","thunk","createStore","viewUpdateState","explorerState","appState","cloudreveApp","combinedState","combinedReducer","combine","namespace","reducer","invariant","combineReducers","connectRouter","UpdateSiteConfig","ReactDOM","getElementById","emptyInfoSmall","PathSelectorCompoment","selectedTarget","toBeLoad","back","api","unshift","handleSelect","selector","primaryTypographyProps","buttonIcon","iconWhite"],"mappings":"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","file":"static/js/main.24429cec.chunk.js","sourcesContent":["import { useDispatch } from \"react-redux\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { changeSubTitle } from \"../redux/viewUpdate/action\";\r\nimport pathHelper from \"../utils/page\";\r\n\r\nexport default function UseFileSubTitle(query, math, location) {\r\n    const dispatch = useDispatch();\r\n    const [title, setTitle] = useState(\"\");\r\n    const [path, setPath] = useState(\"\");\r\n    const SetSubTitle = useCallback(\r\n        (title) => dispatch(changeSubTitle(title)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (!pathHelper.isSharePage(location.pathname)) {\r\n            const path = query.get(\"p\").split(\"/\");\r\n            setPath(query.get(\"p\"));\r\n            SetSubTitle(path[path.length - 1]);\r\n            setTitle(path[path.length - 1]);\r\n        } else {\r\n            SetSubTitle(query.get(\"name\"));\r\n            setTitle(query.get(\"name\"));\r\n            setPath(query.get(\"share_path\"));\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [math.params[0], location]);\r\n\r\n    return { title, path };\r\n}\r\n","import React from \"react\";\r\nimport { Code } from \"react-content-loader\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    loader: {\r\n        width: \"70%\",\r\n        padding: 40,\r\n        [theme.breakpoints.down(\"md\")]: {\r\n            width: \"100%\",\r\n            padding: 10,\r\n        },\r\n    },\r\n}));\r\n\r\nconst MyLoader = (props) => (\r\n    <Code\r\n        backgroundColor={props.dark ? \"#333\" : \"#f5f6f7\"}\r\n        foregroundColor={props.dark ? \"#636363\" : \"#eee\"}\r\n        className={props.className}\r\n    />\r\n);\r\n\r\nfunction TextLoading() {\r\n    const theme = useTheme();\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <MyLoader\r\n                dark={theme.palette.type === \"dark\"}\r\n                className={classes.loader}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TextLoading;\r\n","import axios from \"axios\";\r\nimport Auth from \"./Auth\";\r\nimport i18next from \"../i18n\";\r\n\r\nexport const baseURL = \"/api/v3\";\r\n\r\nexport const getBaseURL = () => {\r\n    return baseURL;\r\n};\r\n\r\nexport const getPreviewURL = (\r\n    isShare: boolean,\r\n    shareID: any,\r\n    fileID: any,\r\n    path: any\r\n): string => {\r\n    return (\r\n        getBaseURL() +\r\n        (isShare\r\n            ? \"/share/preview/\" +\r\n              shareID +\r\n              (path !== \"\" ? \"?path=\" + encodeURIComponent(path) : \"\")\r\n            : \"/file/preview/\" + fileID)\r\n    );\r\n};\r\n\r\n// eslint-disable-next-line @typescript-eslint/ban-ts-ignore\r\n// @ts-ignore\r\nconst instance = axios.create({\r\n    baseURL: getBaseURL(),\r\n    withCredentials: true,\r\n});\r\n\r\nexport class AppError extends Error {\r\n    constructor(message: string | undefined, public code: any, error: any) {\r\n        super(message);\r\n        this.code = code;\r\n        if (i18next.exists(`errors.${code}`, { ns: \"common\" })) {\r\n            this.message = i18next.t(`errors.${code}`, {\r\n                ns: \"common\",\r\n                message,\r\n            });\r\n        } else if (i18next.exists(`errors.${code}`, { ns: \"dashboard\" })) {\r\n            this.message = i18next.t(`errors.${code}`, {\r\n                ns: \"dashboard\",\r\n                message,\r\n            });\r\n        } else {\r\n            this.message =\r\n                message || i18next.t(\"unknownError\", { ns: \"common\" });\r\n        }\r\n\r\n        this.message +=\r\n            error && !this.message.includes(error) ? ` (${error})` : \"\";\r\n        this.stack = new Error().stack;\r\n    }\r\n}\r\n\r\ninstance.interceptors.response.use(\r\n    function (response: any) {\r\n        response.rawData = response.data;\r\n        response.data = response.data.data;\r\n        if (\r\n            response.rawData.code !== undefined &&\r\n            response.rawData.code !== 0 &&\r\n            response.rawData.code !== 203\r\n        ) {\r\n            // Login expired\r\n            if (response.rawData.code === 401) {\r\n                Auth.signout();\r\n                window.location.href = \"/login\";\r\n            }\r\n\r\n            // Non-admin\r\n            if (response.rawData.code === 40008) {\r\n                window.location.href = \"/home\";\r\n            }\r\n            throw new AppError(\r\n                response.rawData.msg,\r\n                response.rawData.code,\r\n                response.rawData.error\r\n            );\r\n        }\r\n        return response;\r\n    },\r\n    function (error) {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default instance;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Zoom from \"@material-ui/core/Zoom\";\r\n\r\nfunction AutoHidden({ children, enable, hide = false, element = null }) {\r\n    const [hidden, setHidden] = useState(false);\r\n    let prev = window.scrollY;\r\n    let lastUpdate = window.scrollY;\r\n    const show = 50;\r\n\r\n    useEffect(() => {\r\n        const handleNavigation = (e) => {\r\n            const window = e.currentTarget;\r\n            const current = element ? element.scrollTop : window.scrollY;\r\n\r\n            if (prev > current) {\r\n                if (lastUpdate - current > show) {\r\n                    lastUpdate = current;\r\n                    setHidden(false);\r\n                }\r\n            } else if (prev < current) {\r\n                if (current - lastUpdate > show) {\r\n                    lastUpdate = current;\r\n                    setHidden(true);\r\n                }\r\n            }\r\n            prev = current;\r\n        };\r\n        if (enable) {\r\n            const target = element ? element : window;\r\n            target.addEventListener(\"scroll\", (e) => handleNavigation(e));\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [enable]);\r\n\r\n    return <Zoom in={!hidden && !hide}>{children}</Zoom>;\r\n}\r\n\r\nexport default AutoHidden;\r\n","/* eslint-disable no-case-declarations */\r\nimport { AnyAction } from \"redux\";\r\nimport { CloudreveFile } from \"../../types\";\r\nimport { Policy } from \"../../component/Uploader/core/types\";\r\n\r\ninterface SelectProps {\r\n    isMultiple: boolean;\r\n    withFolder: boolean;\r\n    withFile: boolean;\r\n    withSourceEnabled: boolean;\r\n}\r\n\r\nexport interface ExplorerState {\r\n    dndSignal: boolean;\r\n    dndTarget: any;\r\n    dndSource: any;\r\n    fileList: CloudreveFile[];\r\n    dirList: CloudreveFile[];\r\n    selected: CloudreveFile[];\r\n    selectProps: SelectProps;\r\n    lastSelect: {\r\n        file: CloudreveFile;\r\n        index: number;\r\n    };\r\n    shiftSelectedIds: string[];\r\n    imgPreview: {\r\n        first: CloudreveFile;\r\n        other: [];\r\n    };\r\n    audioPreview: {\r\n        first: CloudreveFile;\r\n        other: [];\r\n        playingName: any;\r\n        paused: boolean;\r\n        isOpen: boolean;\r\n    };\r\n    search?: {\r\n        keywords: string;\r\n        searchPath: string;\r\n    };\r\n    fileSave: boolean;\r\n    sideBarOpen: boolean;\r\n    currentPolicy?: Policy;\r\n}\r\n\r\nexport const initState: ExplorerState = {\r\n    dndSignal: false,\r\n    dndTarget: null,\r\n    dndSource: null,\r\n    fileList: [],\r\n    dirList: [],\r\n    selected: [],\r\n    selectProps: {\r\n        isMultiple: false,\r\n        withFolder: false,\r\n        withFile: false,\r\n        withSourceEnabled: false,\r\n    },\r\n    lastSelect: {\r\n        file: {\r\n            id: \"\",\r\n            name: \"\",\r\n            size: 0,\r\n            type: \"file\",\r\n            date: \"\",\r\n            path: \"\",\r\n            create_date: \"\",\r\n        },\r\n        index: -1,\r\n    },\r\n    shiftSelectedIds: [],\r\n    imgPreview: {\r\n        first: {\r\n            id: \"\",\r\n            name: \"\",\r\n            size: 0,\r\n            type: \"file\",\r\n            date: \"\",\r\n            path: \"\",\r\n            create_date: \"\",\r\n        },\r\n        other: [],\r\n    },\r\n    audioPreview: {\r\n        first: {\r\n            id: \"\",\r\n            name: \"\",\r\n            size: 0,\r\n            type: \"file\",\r\n            date: \"\",\r\n            path: \"\",\r\n            create_date: \"\",\r\n        },\r\n        other: [],\r\n        playingName: null,\r\n        paused: false,\r\n        isOpen: false,\r\n    },\r\n    fileSave: false,\r\n    sideBarOpen: false,\r\n};\r\n\r\nconst checkSelectedProps = (selected: CloudreveFile[]): SelectProps => {\r\n    const isMultiple = selected.length > 1;\r\n    let withFolder = false;\r\n    let withFile = false;\r\n    let withSourceEnabled = false;\r\n    selected.forEach((value) => {\r\n        if (value.type === \"dir\") {\r\n            withFolder = true;\r\n            withSourceEnabled = true;\r\n        } else if (value.type === \"file\") {\r\n            withFile = true;\r\n            if (value.source_enabled) {\r\n                withSourceEnabled = true;\r\n            }\r\n        }\r\n    });\r\n    return {\r\n        isMultiple,\r\n        withFolder,\r\n        withFile,\r\n        withSourceEnabled,\r\n    };\r\n};\r\n\r\nconst explorer = (\r\n    state: ExplorerState = initState,\r\n    action: AnyAction\r\n): ExplorerState => {\r\n    switch (action.type) {\r\n        case \"DRAG_AND_DROP\":\r\n            return Object.assign({}, state, {\r\n                dndSignal: !state.dndSignal,\r\n                dndTarget: action.target,\r\n                dndSource: action.source,\r\n            });\r\n        case \"SET_FILE_LIST\":\r\n            return Object.assign({}, state, {\r\n                fileList: action.list,\r\n            });\r\n        case \"SET_DIR_LIST\":\r\n            return Object.assign({}, state, {\r\n                dirList: action.list,\r\n            });\r\n        case \"ADD_SELECTED_TARGETS\":\r\n            const addedSelected = [...state.selected, ...action.targets];\r\n            return Object.assign({}, state, {\r\n                selected: addedSelected,\r\n                selectProps: checkSelectedProps(addedSelected),\r\n            });\r\n        case \"SET_SELECTED_TARGET\":\r\n            const newSelected = action.targets;\r\n            return Object.assign({}, state, {\r\n                selected: newSelected,\r\n                selectProps: checkSelectedProps(newSelected),\r\n            });\r\n        case \"RMOVE_SELECTED_TARGETS\":\r\n            const { fileIds } = action;\r\n            const filteredSelected = state.selected.filter((file) => {\r\n                return !fileIds.includes(file.id);\r\n            });\r\n            return Object.assign({}, state, {\r\n                selected: filteredSelected,\r\n                selectProps: checkSelectedProps(filteredSelected),\r\n            });\r\n        case \"REFRESH_FILE_LIST\":\r\n            return Object.assign({}, state, {\r\n                selected: [],\r\n                selectProps: {\r\n                    isMultiple: false,\r\n                    withFolder: false,\r\n                    withFile: false,\r\n                    withSourceEnabled: false,\r\n                },\r\n            });\r\n        case \"SEARCH_MY_FILE\":\r\n            return Object.assign({}, state, {\r\n                selected: [],\r\n                selectProps: {\r\n                    isMultiple: false,\r\n                    withFolder: false,\r\n                    withFile: false,\r\n                    withSourceEnabled: false,\r\n                },\r\n                search: {\r\n                    keywords: action.keywords,\r\n                    searchPath: action.path,\r\n                },\r\n            });\r\n        case \"SHOW_IMG_PREIVEW\":\r\n            return Object.assign({}, state, {\r\n                imgPreview: {\r\n                    first: action.first,\r\n                    other: state.fileList,\r\n                },\r\n            });\r\n        case \"SHOW_AUDIO_PREVIEW\":\r\n            return Object.assign({}, state, {\r\n                audioPreview: {\r\n                    ...state.audioPreview,\r\n                    first: action.first,\r\n                    other: state.fileList,\r\n                },\r\n            });\r\n        case \"AUDIO_PREVIEW_SET_IS_OPEN\":\r\n            return Object.assign({}, state, {\r\n                audioPreview: {\r\n                    ...state.audioPreview,\r\n                    isOpen: action.isOpen,\r\n                },\r\n            });\r\n        case \"AUDIO_PREVIEW_SET_PLAYING\":\r\n            return Object.assign({}, state, {\r\n                audioPreview: {\r\n                    ...state.audioPreview,\r\n                    playingName: action.playingName,\r\n                    paused: action.paused,\r\n                },\r\n            });\r\n        case \"SAVE_FILE\":\r\n            return {\r\n                ...state,\r\n                fileSave: !state.fileSave,\r\n            };\r\n        case \"SET_LAST_SELECT\":\r\n            const { file, index } = action;\r\n            return {\r\n                ...state,\r\n                lastSelect: {\r\n                    file,\r\n                    index,\r\n                },\r\n            };\r\n        case \"SET_SHIFT_SELECTED_IDS\":\r\n            const { shiftSelectedIds } = action;\r\n            return {\r\n                ...state,\r\n                shiftSelectedIds,\r\n            };\r\n        case \"SET_NAVIGATOR\":\r\n            return {\r\n                ...state,\r\n                selected: [],\r\n                selectProps: {\r\n                    isMultiple: false,\r\n                    withFolder: false,\r\n                    withFile: false,\r\n                    withSourceEnabled: false,\r\n                },\r\n                search: undefined,\r\n            };\r\n        case \"SET_SIDE_BAR\":\r\n            return {\r\n                ...state,\r\n                sideBarOpen: action.open,\r\n            };\r\n        case \"SET_CURRENT_POLICY\":\r\n            return {\r\n                ...state,\r\n                currentPolicy: action.policy,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default explorer;\r\n","import API from \"../middleware/Api\";\r\n\r\nexport async function list(\r\n    path: string,\r\n    share: any,\r\n    keywords: string,\r\n    searchPath: string\r\n): Promise<any> {\r\n    let apiURL = \"\";\r\n    if (share) {\r\n        if (keywords === \"\") {\r\n            apiURL = \"/share/list/\" + share.key;\r\n        } else {\r\n            apiURL = `/share/search/${share.key}/`;\r\n        }\r\n    } else {\r\n        if (keywords === \"\") {\r\n            apiURL = \"/directory\";\r\n        } else {\r\n            apiURL = \"/file/search/\";\r\n        }\r\n    }\r\n\r\n    path = keywords === \"\" ? path : keywords;\r\n    apiURL = apiURL + encodeURIComponent(path);\r\n    if (searchPath) {\r\n        apiURL = `${apiURL}?path=${encodeURIComponent(searchPath)}`;\r\n    }\r\n    return API.get(apiURL);\r\n}\r\n","import API from \"../middleware/Api\";\r\n\r\nexport async function getDownloadURL(file: any): Promise<any> {\r\n    let reqURL = \"\";\r\n    if (file.key) {\r\n        const downloadPath =\r\n            file.path === \"/\"\r\n                ? file.path + file.name\r\n                : file.path + \"/\" + file.name;\r\n        reqURL =\r\n            \"/share/download/\" +\r\n            file.key +\r\n            \"?path=\" +\r\n            encodeURIComponent(downloadPath);\r\n    } else {\r\n        reqURL = \"/file/download/\" + file.id;\r\n    }\r\n\r\n    return API.put(reqURL);\r\n}\r\n","import { ThunkAction } from \"redux-thunk\";\r\nimport { setOptionModal } from \"../viewUpdate/action\";\r\nimport i18next from \"../../i18n\";\r\n\r\nexport const askForOption = (\r\n    options: any,\r\n    title: string\r\n): ThunkAction<any, any, any, any> => {\r\n    return async (dispatch, getState): Promise<any> => {\r\n        return new Promise<void>((resolve, reject) => {\r\n            const dialog = {\r\n                open: true,\r\n                title: title,\r\n                options: options,\r\n            };\r\n            dispatch(\r\n                setOptionModal({\r\n                    ...dialog,\r\n                    onClose: () => {\r\n                        dispatch(setOptionModal({ ...dialog, open: false }));\r\n                        reject(i18next.t(\"fileManager.userDenied\"));\r\n                    },\r\n                    callback: (option: any) => {\r\n                        resolve(option);\r\n                        dispatch(setOptionModal({ ...dialog, open: false }));\r\n                    },\r\n                })\r\n            );\r\n        });\r\n    };\r\n};\r\n","const statusHelper = {\r\n    isHomePage(path: string) {\r\n        return path === \"/home\";\r\n    },\r\n    isSharePage(path: string) {\r\n        return path && path.startsWith(\"/s/\");\r\n    },\r\n    isAdminPage(path: string) {\r\n        return path && path.startsWith(\"/admin\");\r\n    },\r\n    isLoginPage(path: string) {\r\n        return path && path.startsWith(\"/login\");\r\n    },\r\n    isMobile() {\r\n        return window.innerWidth < 600;\r\n    },\r\n};\r\nexport default statusHelper;\r\n","import * as actions from \"./action\";\r\nimport * as reducers from \"./reducer\";\r\nimport { setPagination } from \"../viewUpdate/action\";\r\n\r\nexport default {\r\n    actions,\r\n    reducers,\r\n};\r\nexport { selectFile } from \"./action\";\r\nexport { openPreview } from \"./action\";\r\nexport { setShiftSelectedIds } from \"./action\";\r\nexport { setLastSelect } from \"./action\";\r\nexport { setSelectedTarget } from \"./action\";\r\nexport { addSelectedTargets } from \"./action\";\r\nexport { removeSelectedTargets } from \"./action\";\r\nexport const setNavigator = (path: any, navigatorLoading: any) => {\r\n    return {\r\n        type: \"SET_NAVIGATOR\",\r\n        path,\r\n        navigatorLoading,\r\n    };\r\n};\r\nexport const navigateTo = (path: any) => {\r\n    return (dispatch: any, getState: any) => {\r\n        const state = getState();\r\n        const navigatorLoading = path !== state.navigator.path;\r\n        if (navigatorLoading) {\r\n            dispatch(\r\n                setPagination({\r\n                    ...state.viewUpdate.pagination,\r\n                    page: 1,\r\n                })\r\n            );\r\n        }\r\n        dispatch(setNavigator(path, navigatorLoading));\r\n    };\r\n};\r\nexport const navigateUp = () => {\r\n    return (dispatch, getState) => {\r\n        const state = getState();\r\n        const pathSplit = state.navigator.path.split(\"/\");\r\n        pathSplit.pop();\r\n        const newPath = pathSplit.length === 1 ? \"/\" : pathSplit.join(\"/\");\r\n        const navigatorLoading = newPath !== state.navigator.path;\r\n        if (navigatorLoading) {\r\n            dispatch(\r\n                setPagination({\r\n                    ...state.viewUpdate.pagination,\r\n                    page: 1,\r\n                })\r\n            );\r\n        }\r\n        dispatch(setNavigator(newPath, navigatorLoading));\r\n    };\r\n};\r\nexport const drawerToggleAction = (open) => {\r\n    return {\r\n        type: \"DRAWER_TOGGLE\",\r\n        open: open,\r\n    };\r\n};\r\nexport const dragAndDrop = (source, target) => {\r\n    return {\r\n        type: \"DRAG_AND_DROP\",\r\n        source: source,\r\n        target: target,\r\n    };\r\n};\r\nexport const changeViewMethod = (method) => {\r\n    return {\r\n        type: \"CHANGE_VIEW_METHOD\",\r\n        method: method,\r\n    };\r\n};\r\nexport const toggleDaylightMode = () => {\r\n    return {\r\n        type: \"TOGGLE_DAYLIGHT_MODE\",\r\n    };\r\n};\r\n// Deprecated\r\nexport const changeContextMenu = (type, open) => {\r\n    return {\r\n        type: \"CHANGE_CONTEXT_MENU\",\r\n        menuType: type,\r\n        open: open,\r\n    };\r\n};\r\nexport const setNavigatorLoadingStatus = (status) => {\r\n    return {\r\n        type: \"SET_NAVIGATOR_LOADING_STATUE\",\r\n        status: status,\r\n    };\r\n};\r\nexport const setNavigatorError = (status, msg) => {\r\n    return {\r\n        type: \"SET_NAVIGATOR_ERROR\",\r\n        status: status,\r\n        msg: msg,\r\n    };\r\n};\r\nexport const openCreateFolderDialog = () => {\r\n    return {\r\n        type: \"OPEN_CREATE_FOLDER_DIALOG\",\r\n    };\r\n};\r\nexport const openCreateFileDialog = () => {\r\n    return {\r\n        type: \"OPEN_CREATE_FILE_DIALOG\",\r\n    };\r\n};\r\nexport const setUserPopover = (anchor) => {\r\n    return {\r\n        type: \"SET_USER_POPOVER\",\r\n        anchor: anchor,\r\n    };\r\n};\r\nexport const setShareUserPopover = (anchor) => {\r\n    return {\r\n        type: \"SET_SHARE_USER_POPOVER\",\r\n        anchor: anchor,\r\n    };\r\n};\r\nexport const openRenameDialog = () => {\r\n    return {\r\n        type: \"OPEN_RENAME_DIALOG\",\r\n    };\r\n};\r\nexport const openResaveDialog = (key) => {\r\n    return {\r\n        type: \"OPEN_RESAVE_DIALOG\",\r\n        key: key,\r\n    };\r\n};\r\nexport const openMoveDialog = () => {\r\n    return {\r\n        type: \"OPEN_MOVE_DIALOG\",\r\n    };\r\n};\r\nexport const openRemoveDialog = () => {\r\n    return {\r\n        type: \"OPEN_REMOVE_DIALOG\",\r\n    };\r\n};\r\nexport const openShareDialog = () => {\r\n    return {\r\n        type: \"OPEN_SHARE_DIALOG\",\r\n    };\r\n};\r\nexport const applyThemes = (theme) => {\r\n    return {\r\n        type: \"APPLY_THEME\",\r\n        theme: theme,\r\n    };\r\n};\r\nexport const setSessionStatus = (status) => {\r\n    return {\r\n        type: \"SET_SESSION_STATUS\",\r\n        status: status,\r\n    };\r\n};\r\nexport const openMusicDialog = () => {\r\n    return {\r\n        type: \"OPEN_MUSIC_DIALOG\",\r\n    };\r\n};\r\nexport const openRemoteDownloadDialog = () => {\r\n    return {\r\n        type: \"OPEN_REMOTE_DOWNLOAD_DIALOG\",\r\n    };\r\n};\r\nexport const openTorrentDownloadDialog = () => {\r\n    return {\r\n        type: \"OPEN_TORRENT_DOWNLOAD_DIALOG\",\r\n    };\r\n};\r\nexport const openDecompressDialog = () => {\r\n    return {\r\n        type: \"OPEN_DECOMPRESS_DIALOG\",\r\n    };\r\n};\r\nexport const openCompressDialog = () => {\r\n    return {\r\n        type: \"OPEN_COMPRESS_DIALOG\",\r\n    };\r\n};\r\nexport const openRelocateDialog = () => {\r\n    return {\r\n        type: \"OPEN_RELOCATE_DIALOG\",\r\n    };\r\n};\r\nexport const openGetSourceDialog = (source) => {\r\n    return {\r\n        type: \"OPEN_GET_SOURCE_DIALOG\",\r\n        source,\r\n    };\r\n};\r\nexport const openCopyDialog = () => {\r\n    return {\r\n        type: \"OPEN_COPY_DIALOG\",\r\n    };\r\n};\r\n// Deprecated\r\nexport const openLoadingDialog = (text) => {\r\n    return {\r\n        type: \"OPEN_LOADING_DIALOG\",\r\n        text: text,\r\n    };\r\n};\r\n// Deprecated\r\nexport const closeAllModals = () => {\r\n    return {\r\n        type: \"CLOSE_ALL_MODALS\",\r\n    };\r\n};\r\nexport const toggleSnackbar = (vertical, horizontal, msg, color) => {\r\n    return {\r\n        type: \"TOGGLE_SNACKBAR\",\r\n        vertical: vertical,\r\n        horizontal: horizontal,\r\n        msg: msg,\r\n        color: color,\r\n    };\r\n};\r\nexport const setModalsLoading = (status) => {\r\n    return {\r\n        type: \"SET_MODALS_LOADING\",\r\n        status: status,\r\n    };\r\n};\r\nexport const refreshFileList = () => {\r\n    return {\r\n        type: \"REFRESH_FILE_LIST\",\r\n    };\r\n};\r\nexport const searchMyFile = (keywords, path) => {\r\n    return {\r\n        type: \"SEARCH_MY_FILE\",\r\n        keywords: keywords,\r\n        path: path,\r\n    };\r\n};\r\nexport const showImgPreivew = (first) => {\r\n    return {\r\n        type: \"SHOW_IMG_PREIVEW\",\r\n        first: first,\r\n    };\r\n};\r\nexport const showAudioPreview = (first) => {\r\n    return {\r\n        type: \"SHOW_AUDIO_PREVIEW\",\r\n        first: first,\r\n    };\r\n};\r\nexport const audioPreviewSetIsOpen = (isOpen) => {\r\n    return {\r\n        type: \"AUDIO_PREVIEW_SET_IS_OPEN\",\r\n        isOpen,\r\n    };\r\n};\r\nexport const audioPreviewSetPlaying = (playingName, paused) => {\r\n    return {\r\n        type: \"AUDIO_PREVIEW_SET_PLAYING\",\r\n        playingName, //the playing content name\r\n        paused,\r\n    };\r\n};\r\nexport const refreshStorage = () => {\r\n    return {\r\n        type: \"REFRESH_STORAGE\",\r\n    };\r\n};\r\nexport const saveFile = () => {\r\n    return {\r\n        type: \"SAVE_FILE\",\r\n    };\r\n};\r\n\r\nexport const setSiteConfig = (config) => {\r\n    return {\r\n        type: \"SET_SITE_CONFIG\",\r\n        config: config,\r\n    };\r\n};\r\n\r\nexport const openDirectoryDownloadDialog = (downloading, log, done) => {\r\n    return {\r\n        type: \"OPEN_DIRECTORY_DOWNLOAD_DIALOG\",\r\n        downloading,\r\n        log,\r\n        done,\r\n    };\r\n};\r\n","function getValueWithDefault(key, defaultValue) {\r\n    try {\r\n        return JSON.parse(localStorage.getItem(key) as string) || defaultValue;\r\n    } catch (e) {\r\n        return defaultValue;\r\n    }\r\n}\r\nconst Auth = {\r\n    isAuthenticated: false,\r\n    _user: getValueWithDefault(\"user\", { anonymous: true, group: {}, tags: [] }),\r\n    _preference: getValueWithDefault(\"preference\", {}),\r\n    authenticate(cb: any) {\r\n        Auth.SetUser(cb);\r\n        Auth.isAuthenticated = true;\r\n    },\r\n    GetUser() {\r\n        return Auth._user;\r\n    },\r\n    SetUser(newUser: any) {\r\n        Auth._user = newUser;\r\n        localStorage.setItem(\"user\", JSON.stringify(newUser));\r\n    },\r\n    Check(): boolean {\r\n        return Auth.isAuthenticated || !Auth.GetUser().anonymous;\r\n    },\r\n    signout() {\r\n        Auth.isAuthenticated = false;\r\n        const oldUser = Auth.GetUser();\r\n        oldUser.id = 0;\r\n        Auth.SetUser(oldUser);\r\n    },\r\n    SetPreference(key: string, value: any) {\r\n        Auth._preference[key] = value;\r\n        localStorage.setItem(\"user_preference\", JSON.stringify(Auth._preference));\r\n    },\r\n    GetPreference(key: string): any | null {\r\n        return Auth._preference[key] ?? null;\r\n    },\r\n    GetPreferenceWithDefault(key: string, defaultVal: any): any {\r\n        return Auth.GetPreference(key) ?? defaultVal;\r\n    },\r\n};\r\n\r\nexport default Auth;\r\n","import Base from \"../uploader/base\";\r\nimport { ProcessingTaskDuplicatedError } from \"../errors\";\r\n\r\nexport interface QueueContent {\r\n    uploader: Base;\r\n    resolve: () => void;\r\n    reject: (err?: any) => void;\r\n}\r\n\r\nexport class Pool {\r\n    queue: Array<QueueContent> = [];\r\n    processing: Array<QueueContent> = [];\r\n\r\n    constructor(public limit: number) {}\r\n\r\n    enqueue(uploader: Base) {\r\n        return new Promise<void>((resolve, reject) => {\r\n            this.queue.push({\r\n                uploader,\r\n                resolve,\r\n                reject,\r\n            });\r\n            this.check();\r\n        });\r\n    }\r\n\r\n    release(item: QueueContent) {\r\n        this.processing = this.processing.filter((v) => v !== item);\r\n        this.check();\r\n    }\r\n\r\n    run(item: QueueContent) {\r\n        this.queue = this.queue.filter((v) => v !== item);\r\n        if (\r\n            this.processing.findIndex(\r\n                (v) =>\r\n                    v.uploader.task.dst == item.uploader.task.dst &&\r\n                    v.uploader.task.file.name == item.uploader.task.name\r\n            ) > -1\r\n        ) {\r\n            // 找到重名任务\r\n            item.reject(new ProcessingTaskDuplicatedError());\r\n            this.release(item);\r\n            return;\r\n        }\r\n\r\n        this.processing.push(item);\r\n        item.uploader.run().then(\r\n            () => {\r\n                item.resolve();\r\n                this.release(item);\r\n            },\r\n            (err) => {\r\n                item.reject(err);\r\n                this.release(item);\r\n            }\r\n        );\r\n    }\r\n\r\n    check() {\r\n        const processingNum = this.processing.length;\r\n        const availableNum = Math.max(0, this.limit - processingNum);\r\n        this.queue.slice(0, availableNum).forEach((item) => {\r\n            this.run(item);\r\n        });\r\n    }\r\n}\r\n","import { Policy } from \"../types\";\r\nimport { FileValidateError } from \"../errors\";\r\n\r\ninterface Validator {\r\n    (file: File, policy: Policy): void;\r\n}\r\n\r\n// validators\r\nconst checkers: Array<Validator> = [\r\n    function checkExt(file: File, policy: Policy) {\r\n        if (\r\n            policy.allowedSuffix != undefined &&\r\n            policy.allowedSuffix.length > 0\r\n        ) {\r\n            const ext = file?.name.split(\".\").pop();\r\n            if (ext === null || !ext || !policy.allowedSuffix.includes(ext))\r\n                throw new FileValidateError(\r\n                    \"File suffix not allowed in policy.\",\r\n                    \"suffix\",\r\n                    policy\r\n                );\r\n        }\r\n    },\r\n\r\n    function checkSize(file: File, policy: Policy) {\r\n        if (policy.maxSize > 0) {\r\n            if (file.size > policy.maxSize) {\r\n                throw new FileValidateError(\r\n                    \"File size exceeds maximum limit.\",\r\n                    \"size\",\r\n                    policy\r\n                );\r\n            }\r\n        }\r\n    },\r\n];\r\n\r\n/* 将每个 Validator 执行\r\n   失败返回 Error\r\n */\r\nexport function validate(file: File, policy: Policy) {\r\n    checkers.forEach((c) => c(file, policy));\r\n}\r\n","import axios, { AxiosRequestConfig } from \"axios\";\r\nimport { Response } from \"../types\";\r\nimport {\r\n    HTTPError,\r\n    RequestCanceledError,\r\n    TransformResponseError,\r\n} from \"../errors\";\r\n\r\nexport const { CancelToken } = axios;\r\nexport { CancelTokenSource } from \"axios\";\r\n\r\nconst baseConfig = {\r\n    transformResponse: [\r\n        (response: any) => {\r\n            try {\r\n                return JSON.parse(response);\r\n            } catch (e) {\r\n                throw new TransformResponseError(response, e);\r\n            }\r\n        },\r\n    ],\r\n};\r\n\r\nconst cdBackendConfig = {\r\n    ...baseConfig,\r\n    baseURL: \"/api/v3\",\r\n    withCredentials: true,\r\n};\r\n\r\nexport function request<T = any>(url: string, config?: AxiosRequestConfig) {\r\n    return axios\r\n        .request<T>({ ...baseConfig, ...config, url })\r\n        .catch((err) => {\r\n            if (axios.isCancel(err)) {\r\n                throw new RequestCanceledError();\r\n            }\r\n\r\n            if (err instanceof TransformResponseError) {\r\n                throw err;\r\n            }\r\n\r\n            throw new HTTPError(err, url);\r\n        });\r\n}\r\n\r\nexport function requestAPI<T = any>(url: string, config?: AxiosRequestConfig) {\r\n    return request<Response<T>>(url, { ...cdBackendConfig, ...config });\r\n}\r\n","import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\n\r\nimport Backend from \"i18next-http-backend\";\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\n\r\ni18n.use(Backend)\r\n    .use(LanguageDetector)\r\n    .use(initReactI18next)\r\n    .init({\r\n        fallbackLng: \"zh-CN\",\r\n        debug: true,\r\n        ns: [\"common\", \"application\"],\r\n        load: \"currentOnly\",\r\n        defaultNS: \"application\",\r\n        interpolation: {\r\n            escapeValue: false,\r\n        },\r\n    });\r\n\r\ni18n.on(\"languageChanged\", (lng) => {\r\n    document.documentElement.setAttribute(\"lang\", lng);\r\n});\r\n\r\nexport const languages = [\r\n    {\r\n        code: \"en-US\",\r\n        displayName: \"English\",\r\n    },\r\n    {\r\n        code: \"zh-CN\",\r\n        displayName: \"简体中文\",\r\n    },\r\n];\r\n\r\nexport default i18n;\r\n","import React, { useCallback } from \"react\";\r\nimport { IconButton, makeStyles } from \"@material-ui/core\";\r\nimport DayIcon from \"@material-ui/icons/Brightness7\";\r\nimport NightIcon from \"@material-ui/icons/Brightness4\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Auth from \"../../middleware/Auth\";\r\nimport classNames from \"classnames\";\r\nimport { toggleDaylightMode } from \"../../redux/explorer\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    icon: {\r\n        color: \"rgb(255, 255, 255)\",\r\n        opacity: \"0.54\",\r\n    },\r\n}));\r\n\r\nconst DarkModeSwitcher = ({ position }) => {\r\n    const { t } = useTranslation();\r\n    const ThemeType = useSelector(\r\n        (state) => state.siteConfig.theme.palette.type\r\n    );\r\n    const dispatch = useDispatch();\r\n    const ToggleThemeMode = useCallback(() => dispatch(toggleDaylightMode()), [\r\n        dispatch,\r\n    ]);\r\n    const isDayLight = (ThemeType && ThemeType === \"light\") || !ThemeType;\r\n    const isDark = ThemeType && ThemeType === \"dark\";\r\n    const toggleMode = () => {\r\n        Auth.SetPreference(\"theme_mode\", isDayLight ? \"dark\" : \"light\");\r\n        ToggleThemeMode();\r\n    };\r\n    const classes = useStyles();\r\n    return (\r\n        <Tooltip\r\n            title={\r\n                isDayLight ? t(\"navbar.toDarkMode\") : t(\"navbar.toLightMode\")\r\n            }\r\n            placement=\"bottom\"\r\n        >\r\n            <IconButton\r\n                className={classNames({\r\n                    [classes.icon]: \"left\" === position,\r\n                })}\r\n                onClick={toggleMode}\r\n                color=\"inherit\"\r\n            >\r\n                {isDayLight && <NightIcon />}\r\n                {isDark && <DayIcon />}\r\n            </IconButton>\r\n        </Tooltip>\r\n    );\r\n};\r\n\r\nexport default DarkModeSwitcher;\r\n","import React, { useCallback, useState } from \"react\";\r\nimport { IconButton, makeStyles, Menu, MenuItem } from \"@material-ui/core\";\r\nimport ViewListIcon from \"@material-ui/icons/ViewList\";\r\nimport ViewSmallIcon from \"@material-ui/icons/ViewComfy\";\r\nimport ViewModuleIcon from \"@material-ui/icons/ViewModule\";\r\nimport TextTotateVerticalIcon from \"@material-ui/icons/TextRotateVertical\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Auth from \"../../../middleware/Auth\";\r\nimport { changeViewMethod, setShareUserPopover } from \"../../../redux/explorer\";\r\nimport { changeSortMethod } from \"../../../redux/explorer/action\";\r\nimport { FormatPageBreak } from \"mdi-material-ui\";\r\nimport pathHelper from \"../../../utils/page\";\r\nimport { changePageSize } from \"../../../redux/viewUpdate/action\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    sideButton: {\r\n        padding: \"8px\",\r\n        marginRight: \"5px\",\r\n    },\r\n}));\r\n\r\nconst sortOptions = [\r\n    \"A-Z\",\r\n    \"Z-A\",\r\n    \"oldestUploaded\",\r\n    \"newestUploaded\",\r\n    \"oldestModified\",\r\n    \"newestModified\",\r\n    \"smallest\",\r\n    \"largest\",\r\n];\r\n\r\nconst paginationOption = [\"50\", \"100\", \"200\", \"500\", \"1000\"];\r\n\r\nexport default function SubActions({ isSmall, inherit }) {\r\n    const { t } = useTranslation(\"application\", { keyPrefix: \"fileManager\" });\r\n    const { t: vasT } = useTranslation(\"application\", { keyPrefix: \"vas\" });\r\n    const dispatch = useDispatch();\r\n    const viewMethod = useSelector(\r\n        (state) => state.viewUpdate.explorerViewMethod\r\n    );\r\n    const share = useSelector((state) => state.viewUpdate.shareInfo);\r\n    const pageSize = useSelector((state) => state.viewUpdate.pagination.size);\r\n    const OpenLoadingDialog = useCallback(\r\n        (method) => dispatch(changeViewMethod(method)),\r\n        [dispatch]\r\n    );\r\n    const ChangeSortMethod = useCallback(\r\n        (method) => dispatch(changeSortMethod(method)),\r\n        [dispatch]\r\n    );\r\n    const SetShareUserPopover = useCallback(\r\n        (e) => dispatch(setShareUserPopover(e)),\r\n        [dispatch]\r\n    );\r\n    const ChangePageSize = useCallback((e) => dispatch(changePageSize(e)), [\r\n        dispatch,\r\n    ]);\r\n    const [anchorSort, setAnchorSort] = useState(null);\r\n    const [anchorPagination, setAnchorPagination] = useState(null);\r\n    const [selectedIndex, setSelectedIndex] = useState(0);\r\n    const showSortOptions = (e) => {\r\n        setAnchorSort(e.currentTarget);\r\n    };\r\n    const showPaginationOptions = (e) => {\r\n        setAnchorPagination(e.currentTarget);\r\n    };\r\n    const handleMenuItemClick = (e, index) => {\r\n        setSelectedIndex(index);\r\n        const optionsTable = {\r\n            0: \"namePos\",\r\n            1: \"nameRev\",\r\n            2: \"timePos\",\r\n            3: \"timeRev\",\r\n            4: \"modifyTimePos\",\r\n            5: \"modifyTimeRev\",\r\n            6: \"sizePos\",\r\n            7: \"sizeRes\",\r\n        };\r\n        ChangeSortMethod(optionsTable[index]);\r\n        setAnchorSort(null);\r\n    };\r\n    const handlePaginationChange = (s) => {\r\n        ChangePageSize(s);\r\n        setAnchorPagination(null);\r\n    };\r\n\r\n    const toggleViewMethod = () => {\r\n        const newMethod =\r\n            viewMethod === \"icon\"\r\n                ? \"list\"\r\n                : viewMethod === \"list\"\r\n                ? \"smallIcon\"\r\n                : \"icon\";\r\n        Auth.SetPreference(\"view_method\", newMethod);\r\n        OpenLoadingDialog(newMethod);\r\n    };\r\n    const isMobile = pathHelper.isMobile();\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n            {viewMethod === \"icon\" && (\r\n                <IconButton\r\n                    title={t(\"listView\")}\r\n                    className={classes.sideButton}\r\n                    onClick={toggleViewMethod}\r\n                    color={inherit ? \"inherit\" : \"default\"}\r\n                >\r\n                    <ViewListIcon fontSize={isSmall ? \"small\" : \"default\"} />\r\n                </IconButton>\r\n            )}\r\n            {viewMethod === \"list\" && (\r\n                <IconButton\r\n                    title={t(\"gridViewSmall\")}\r\n                    className={classes.sideButton}\r\n                    onClick={toggleViewMethod}\r\n                    color={inherit ? \"inherit\" : \"default\"}\r\n                >\r\n                    <ViewSmallIcon fontSize={isSmall ? \"small\" : \"default\"} />\r\n                </IconButton>\r\n            )}\r\n\r\n            {viewMethod === \"smallIcon\" && (\r\n                <IconButton\r\n                    title={t(\"gridViewLarge\")}\r\n                    className={classes.sideButton}\r\n                    onClick={toggleViewMethod}\r\n                    color={inherit ? \"inherit\" : \"default\"}\r\n                >\r\n                    <ViewModuleIcon fontSize={isSmall ? \"small\" : \"default\"} />\r\n                </IconButton>\r\n            )}\r\n\r\n            {!isMobile && (\r\n                <IconButton\r\n                    title={t(\"paginationSize\")}\r\n                    className={classes.sideButton}\r\n                    onClick={showPaginationOptions}\r\n                    color={inherit ? \"inherit\" : \"default\"}\r\n                >\r\n                    <FormatPageBreak fontSize={isSmall ? \"small\" : \"default\"} />\r\n                </IconButton>\r\n            )}\r\n            <Menu\r\n                id=\"sort-menu\"\r\n                anchorEl={anchorPagination}\r\n                open={Boolean(anchorPagination)}\r\n                onClose={() => setAnchorPagination(null)}\r\n            >\r\n                {paginationOption.map((option, index) => (\r\n                    <MenuItem\r\n                        key={option}\r\n                        selected={option === pageSize.toString()}\r\n                        onClick={() => handlePaginationChange(parseInt(option))}\r\n                    >\r\n                        {t(\"paginationOption\", { option })}\r\n                    </MenuItem>\r\n                ))}\r\n                <MenuItem\r\n                    selected={pageSize === -1}\r\n                    onClick={() => handlePaginationChange(-1)}\r\n                >\r\n                    {t(\"noPagination\")}\r\n                </MenuItem>\r\n            </Menu>\r\n\r\n            <IconButton\r\n                title={t(\"sortMethod\")}\r\n                className={classes.sideButton}\r\n                onClick={showSortOptions}\r\n                color={inherit ? \"inherit\" : \"default\"}\r\n            >\r\n                <TextTotateVerticalIcon\r\n                    fontSize={isSmall ? \"small\" : \"default\"}\r\n                />\r\n            </IconButton>\r\n            <Menu\r\n                id=\"sort-menu\"\r\n                anchorEl={anchorSort}\r\n                open={Boolean(anchorSort)}\r\n                onClose={() => setAnchorSort(null)}\r\n            >\r\n                {sortOptions.map((option, index) => (\r\n                    <MenuItem\r\n                        key={option}\r\n                        selected={index === selectedIndex}\r\n                        onClick={(event) => handleMenuItemClick(event, index)}\r\n                    >\r\n                        {t(\"sortMethods.\" + option)}\r\n                    </MenuItem>\r\n                ))}\r\n            </Menu>\r\n            {share && (\r\n                <IconButton\r\n                    title={t(\"shareCreateBy\", { nick: share.creator.nick })}\r\n                    className={classes.sideButton}\r\n                    onClick={(e) => SetShareUserPopover(e.currentTarget)}\r\n                    style={{ padding: 5 }}\r\n                >\r\n                    <Avatar\r\n                        style={{ height: 23, width: 23 }}\r\n                        src={\"/api/v3/user/avatar/\" + share.creator.key + \"/s\"}\r\n                    />\r\n                </IconButton>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    List,\r\n    ListItem,\r\n    ListItemText,\r\n    makeStyles,\r\n} from \"@material-ui/core\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    content: {\r\n        minWidth: 250,\r\n    },\r\n}));\r\n\r\nexport default function OptionSelector() {\r\n    const { t } = useTranslation(\"common\");\r\n    const classes = useStyles();\r\n    const option = useSelector((state) => state.viewUpdate.modals.option);\r\n\r\n    return (\r\n        <Dialog\r\n            open={option && option.open}\r\n            onClose={option && option.onClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\">\r\n                {option && option.title}\r\n            </DialogTitle>\r\n            <DialogContent dividers={\"paper\"} className={classes.content}>\r\n                <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n                    {option &&\r\n                        option.options.map((o) => (\r\n                            <ListItem\r\n                                key={o.key}\r\n                                onClick={() => option && option.callback(o)}\r\n                                button\r\n                            >\r\n                                <ListItemText\r\n                                    primary={o.name}\r\n                                    secondary={o.description}\r\n                                />\r\n                            </ListItem>\r\n                        ))}\r\n                </List>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={option && option.onClose}>\r\n                    {t(\"cancel\")}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport AutoHidden from \"./AutoHidden\";\r\nimport statusHelper from \"../../utils/page\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { green } from \"@material-ui/core/colors\";\r\nimport clsx from \"clsx\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    fab: {\r\n        margin: 0,\r\n        top: \"auto\",\r\n        right: 20,\r\n        bottom: 20,\r\n        left: \"auto\",\r\n        zIndex: 5,\r\n        position: \"fixed\",\r\n    },\r\n    badge: {\r\n        position: \"absolute\",\r\n        bottom: 26,\r\n        top: \"auto\",\r\n        zIndex: 9999,\r\n        right: 7,\r\n    },\r\n    fabProgress: {\r\n        color: green[500],\r\n        position: \"absolute\",\r\n        top: -6,\r\n        left: -6,\r\n        zIndex: 1,\r\n    },\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        position: \"relative\",\r\n    },\r\n    buttonSuccess: {\r\n        backgroundColor: green[500],\r\n        \"&:hover\": {\r\n            backgroundColor: green[700],\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function SaveButton(props) {\r\n    const classes = useStyles();\r\n    const buttonClassname = clsx({\r\n        [classes.buttonSuccess]: props.status === \"success\",\r\n    });\r\n\r\n    return (\r\n        <AutoHidden enable={statusHelper.isMobile()}>\r\n            <div className={classes.fab}>\r\n                <div className={classes.wrapper}>\r\n                    <Tooltip title={\"保存\"} placement={\"left\"}>\r\n                        <Fab\r\n                            onClick={props.onClick}\r\n                            color=\"primary\"\r\n                            className={buttonClassname}\r\n                            disabled={props.status === \"loading\"}\r\n                            aria-label=\"add\"\r\n                        >\r\n                            {props.status === \"success\" ? (\r\n                                <CheckIcon />\r\n                            ) : (\r\n                                <SaveIcon />\r\n                            )}\r\n                        </Fab>\r\n                    </Tooltip>\r\n                    {props.status === \"loading\" && (\r\n                        <CircularProgress\r\n                            size={68}\r\n                            className={classes.fabProgress}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </AutoHidden>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport { blue } from \"@material-ui/core/colors\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles({\r\n    avatar: {\r\n        backgroundColor: blue[100],\r\n        color: blue[600],\r\n    },\r\n    loadingContainer: {\r\n        display: \"flex\",\r\n    },\r\n    loading: {\r\n        marginTop: 10,\r\n        marginLeft: 20,\r\n    },\r\n});\r\n\r\nexport default function LoadingDialog() {\r\n    const classes = useStyles();\r\n    const open = useSelector((state) => state.viewUpdate.modals.loading);\r\n    const text = useSelector((state) => state.viewUpdate.modals.loadingText);\r\n\r\n    return (\r\n        <Dialog aria-labelledby=\"simple-dialog-title\" open={open}>\r\n            <DialogContent>\r\n                <DialogContentText className={classes.loadingContainer}>\r\n                    <CircularProgress color=\"secondary\" />\r\n                    <div className={classes.loading}>{text}</div>\r\n                </DialogContentText>\r\n            </DialogContent>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, { useCallback, useState } from \"react\";\r\nimport {\r\n    Button,\r\n    CircularProgress,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    makeStyles,\r\n} from \"@material-ui/core\";\r\nimport PathSelector from \"../FileManager/PathSelector\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport API from \"../../middleware/Api\";\r\nimport {\r\n    refreshFileList,\r\n    setModalsLoading,\r\n    toggleSnackbar,\r\n} from \"../../redux/explorer\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    contentFix: {\r\n        padding: \"10px 24px 0px 24px\",\r\n    },\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        position: \"relative\",\r\n    },\r\n    buttonProgress: {\r\n        color: theme.palette.secondary.light,\r\n        position: \"absolute\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    },\r\n}));\r\n\r\nexport default function CopyDialog(props) {\r\n    const { t } = useTranslation();\r\n    const [selectedPath, setSelectedPath] = useState(\"\");\r\n    const [selectedPathName, setSelectedPathName] = useState(\"\");\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n    const SetModalsLoading = useCallback(\r\n        (status) => {\r\n            dispatch(setModalsLoading(status));\r\n        },\r\n        [dispatch]\r\n    );\r\n    const RefreshFileList = useCallback(() => {\r\n        dispatch(refreshFileList());\r\n    }, [dispatch]);\r\n\r\n    const setMoveTarget = (folder) => {\r\n        const path =\r\n            folder.path === \"/\"\r\n                ? folder.path + folder.name\r\n                : folder.path + \"/\" + folder.name;\r\n        setSelectedPath(path);\r\n        setSelectedPathName(folder.name);\r\n    };\r\n\r\n    const submitMove = (e) => {\r\n        if (e != null) {\r\n            e.preventDefault();\r\n        }\r\n        SetModalsLoading(true);\r\n        const dirs = [],\r\n            items = [];\r\n        // eslint-disable-next-line\r\n\r\n        if (props.selected[0].type === \"dir\") {\r\n            dirs.push(props.selected[0].id);\r\n        } else {\r\n            items.push(props.selected[0].id);\r\n        }\r\n\r\n        API.post(\"/object/copy\", {\r\n            src_dir: props.selected[0].path,\r\n            src: {\r\n                dirs: dirs,\r\n                items: items,\r\n            },\r\n            dst: selectedPath === \"//\" ? \"/\" : selectedPath,\r\n        })\r\n            .then(() => {\r\n                props.onClose();\r\n                RefreshFileList();\r\n                SetModalsLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n                SetModalsLoading(false);\r\n            });\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            onClose={props.onClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\">\r\n                {t(\"fileManager.copyTo\")}\r\n            </DialogTitle>\r\n            <PathSelector\r\n                presentPath={props.presentPath}\r\n                selected={props.selected}\r\n                onSelect={setMoveTarget}\r\n            />\r\n\r\n            {selectedPath !== \"\" && (\r\n                <DialogContent className={classes.contentFix}>\r\n                    <DialogContentText>\r\n                        <Trans\r\n                            i18nKey={\"fileManager.copyToDst\"}\r\n                            values={{\r\n                                dst: selectedPathName,\r\n                            }}\r\n                            components={[<strong key={0} />]}\r\n                        />\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n            )}\r\n            <DialogActions>\r\n                <Button onClick={props.onClose}>\r\n                    {t(\"cancel\", { ns: \"common\" })}\r\n                </Button>\r\n                <div className={classes.wrapper}>\r\n                    <Button\r\n                        onClick={submitMove}\r\n                        color=\"primary\"\r\n                        disabled={selectedPath === \"\" || props.modalsLoading}\r\n                    >\r\n                        {t(\"ok\", { ns: \"common\" })}\r\n                        {props.modalsLoading && (\r\n                            <CircularProgress\r\n                                size={24}\r\n                                className={classes.buttonProgress}\r\n                            />\r\n                        )}\r\n                    </Button>\r\n                </div>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n    Button,\r\n    CircularProgress,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    makeStyles,\r\n    FormControlLabel,\r\n    Checkbox,\r\n} from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useInterval, usePrevious, useGetState } from \"ahooks\";\r\nimport { cancelDirectoryDownload } from \"../../redux/explorer/action\";\r\nimport Auth from \"../../middleware/Auth\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    contentFix: {\r\n        padding: \"10px 24px 0px 24px\",\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    buttonProgress: {\r\n        color: theme.palette.secondary.light,\r\n        position: \"absolute\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    },\r\n}));\r\n\r\nexport default function DirectoryDownloadDialog(props) {\r\n    const { t } = useTranslation();\r\n\r\n    const classes = useStyles();\r\n\r\n    const logRef = useRef();\r\n    const [autoScroll, setAutoScroll] = useState(\r\n        Auth.GetPreferenceWithDefault(\"autoScroll\", true)\r\n    );\r\n    const previousLog = usePrevious(props.log, (prev, next) => true);\r\n    const [timer, setTimer] = useState(-1);\r\n\r\n    useInterval(() => {\r\n        if (autoScroll && logRef.current && previousLog !== props.log) {\r\n            logRef.current.scrollIntoView({ behavior: \"smooth\", block: \"end\" });\r\n        }\r\n    }, timer);\r\n\r\n    useEffect(() => {\r\n        if (props.done) {\r\n            setTimer(-1);\r\n        } else if (props.open) {\r\n            setTimer(1000);\r\n        }\r\n    }, [props.done, props.open]);\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            // open\r\n            onClose={props.onClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n            fullWidth\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\">\r\n                {t(\"modals.directoryDownloadTitle\")}\r\n            </DialogTitle>\r\n\r\n            <DialogContent className={classes.contentFix}>\r\n                <TextField\r\n                    value={props.log}\r\n                    ref={logRef}\r\n                    multiline\r\n                    fullWidth\r\n                    id=\"standard-basic\"\r\n                />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <FormControlLabel\r\n                    control={<Checkbox />}\r\n                    checked={autoScroll}\r\n                    onChange={() =>\r\n                        setAutoScroll((previous) => {\r\n                            Auth.SetPreference(\"autoScroll\", !previous);\r\n                            return !previous;\r\n                        })\r\n                    }\r\n                    label={t(\"modals.directoryDownloadAutoscroll\")}\r\n                />\r\n                <Button\r\n                    onClick={\r\n                        props.done ? props.onClose : cancelDirectoryDownload\r\n                    }\r\n                >\r\n                    {t(\"cancel\", { ns: \"common\" })}\r\n                </Button>\r\n                <div className={classes.wrapper}>\r\n                    <Button\r\n                        color=\"primary\"\r\n                        disabled={!props.done}\r\n                        onClick={props.onClose}\r\n                    >\r\n                        {t(\"ok\", { ns: \"common\" })}\r\n                        {!props.done && (\r\n                            <CircularProgress\r\n                                size={24}\r\n                                className={classes.buttonProgress}\r\n                            />\r\n                        )}\r\n                    </Button>\r\n                </div>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, { useCallback, useRef } from \"react\";\r\nimport {\r\n    Button,\r\n    Checkbox,\r\n    CircularProgress,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    FormControl,\r\n    makeStyles,\r\n    TextField,\r\n} from \"@material-ui/core\";\r\nimport { toggleSnackbar } from \"../../redux/explorer\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport API from \"../../middleware/Api\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport TimerIcon from \"@material-ui/icons/Timer\";\r\nimport CasinoIcon from \"@material-ui/icons/Casino\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport ToggleIcon from \"material-ui-toggle-icon\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    widthAnimation: {},\r\n    shareUrl: {\r\n        minWidth: \"400px\",\r\n    },\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        position: \"relative\",\r\n    },\r\n    buttonProgress: {\r\n        color: theme.palette.secondary.light,\r\n        position: \"absolute\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n    },\r\n    flexCenter: {\r\n        alignItems: \"center\",\r\n    },\r\n    noFlex: {\r\n        display: \"block\",\r\n    },\r\n    scoreCalc: {\r\n        marginTop: 10,\r\n    },\r\n}));\r\n\r\nconst ExpansionPanel = withStyles({\r\n    root: {\r\n        border: \"0px solid rgba(0, 0, 0, .125)\",\r\n        boxShadow: \"none\",\r\n        \"&:not(:last-child)\": {\r\n            borderBottom: 0,\r\n        },\r\n        \"&:before\": {\r\n            display: \"none\",\r\n        },\r\n        \"&$expanded\": {\r\n            margin: \"auto\",\r\n        },\r\n    },\r\n    expanded: {},\r\n})(MuiExpansionPanel);\r\n\r\nconst ExpansionPanelSummary = withStyles({\r\n    root: {\r\n        padding: 0,\r\n        \"&$expanded\": {},\r\n    },\r\n    content: {\r\n        margin: 0,\r\n        display: \"initial\",\r\n        \"&$expanded\": {\r\n            margin: \"0 0\",\r\n        },\r\n    },\r\n    expanded: {},\r\n})(MuiExpansionPanelSummary);\r\n\r\nconst ExpansionPanelDetails = withStyles((theme) => ({\r\n    root: {\r\n        padding: 24,\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n}))(MuiExpansionPanelDetails);\r\n\r\nexport default function CreatShare(props) {\r\n    const { t } = useTranslation();\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const lastSubmit = useRef(null);\r\n    const [expanded, setExpanded] = React.useState(false);\r\n    const [shareURL, setShareURL] = React.useState(\"\");\r\n    const [values, setValues] = React.useState({\r\n        password: \"\",\r\n        downloads: 1,\r\n        expires: 24 * 3600,\r\n        showPassword: false,\r\n    });\r\n    const [shareOption, setShareOption] = React.useState({\r\n        password: false,\r\n        expire: false,\r\n        preview: true,\r\n    });\r\n\r\n    const handleChange = (prop) => (event) => {\r\n        // 输入密码\r\n        if (prop === \"password\") {\r\n            if (event.target.value === \"\") {\r\n                setShareOption({ ...shareOption, password: false });\r\n            } else {\r\n                setShareOption({ ...shareOption, password: true });\r\n            }\r\n        }\r\n\r\n        setValues({ ...values, [prop]: event.target.value });\r\n    };\r\n\r\n    const handleClickShowPassword = () => {\r\n        setValues({ ...values, showPassword: !values.showPassword });\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const randomPassword = () => {\r\n        setShareOption({ ...shareOption, password: true });\r\n        setValues({\r\n            ...values,\r\n            password: Math.random().toString(36).substr(2).slice(2, 8),\r\n            showPassword: true,\r\n        });\r\n    };\r\n\r\n    const handleExpand = (panel) => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n\r\n    const handleCheck = (prop) => () => {\r\n        if (!shareOption[prop]) {\r\n            handleExpand(prop)(null, true);\r\n        }\r\n        if (prop === \"password\" && shareOption[prop]) {\r\n            setValues({\r\n                ...values,\r\n                password: \"\",\r\n            });\r\n        }\r\n        setShareOption({ ...shareOption, [prop]: !shareOption[prop] });\r\n    };\r\n\r\n    const onClose = () => {\r\n        props.onClose();\r\n        setTimeout(() => {\r\n            setShareURL(\"\");\r\n        }, 500);\r\n    };\r\n\r\n    const senLink = () => {\r\n        if (navigator.share) {\r\n            let text = t(\"modals.shareLinkShareContent\", {\r\n                name: props.selected[0].name,\r\n                link: shareURL,\r\n            });\r\n            if (lastSubmit.current && lastSubmit.current.password) {\r\n                text += t(\"modals.shareLinkPasswordInfo\", {\r\n                    password: lastSubmit.current.password,\r\n                });\r\n            }\r\n            navigator.share({ text });\r\n        } else if (navigator.clipboard) {\r\n            navigator.clipboard.writeText(shareURL);\r\n            ToggleSnackbar(\"top\", \"right\", t(\"modals.linkCopied\"), \"info\");\r\n        }\r\n    };\r\n\r\n    const submitShare = (e) => {\r\n        e.preventDefault();\r\n        props.setModalsLoading(true);\r\n        const submitFormBody = {\r\n            id: props.selected[0].id,\r\n            is_dir: props.selected[0].type === \"dir\",\r\n            password: values.password,\r\n            downloads: shareOption.expire ? values.downloads : -1,\r\n            expire: values.expires,\r\n            preview: shareOption.preview,\r\n        };\r\n        lastSubmit.current = submitFormBody;\r\n\r\n        API.post(\"/share\", submitFormBody)\r\n            .then((response) => {\r\n                setShareURL(response.data);\r\n                setValues({\r\n                    password: \"\",\r\n                    downloads: 1,\r\n                    expires: 24 * 3600,\r\n                    showPassword: false,\r\n                });\r\n                setShareOption({\r\n                    password: false,\r\n                    expire: false,\r\n                });\r\n                props.setModalsLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n                props.setModalsLoading(false);\r\n            });\r\n    };\r\n\r\n    const handleFocus = (event) => event.target.select();\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            onClose={onClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n            className={classes.widthAnimation}\r\n            maxWidth=\"xs\"\r\n            fullWidth\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\">\r\n                {t(\"modals.createShareLink\")}\r\n            </DialogTitle>\r\n\r\n            {shareURL === \"\" && (\r\n                <>\r\n                    <Divider />\r\n                    <List>\r\n                        <ExpansionPanel\r\n                            expanded={expanded === \"password\"}\r\n                            onChange={handleExpand(\"password\")}\r\n                        >\r\n                            <ExpansionPanelSummary\r\n                                aria-controls=\"panel1a-content\"\r\n                                id=\"panel1a-header\"\r\n                            >\r\n                                <ListItem button>\r\n                                    <ListItemIcon>\r\n                                        <LockIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText\r\n                                        primary={t(\r\n                                            \"modals.usePasswordProtection\"\r\n                                        )}\r\n                                    />\r\n                                    <ListItemSecondaryAction>\r\n                                        <Checkbox\r\n                                            checked={shareOption.password}\r\n                                            onChange={handleCheck(\"password\")}\r\n                                        />\r\n                                    </ListItemSecondaryAction>\r\n                                </ListItem>\r\n                            </ExpansionPanelSummary>\r\n                            <ExpansionPanelDetails>\r\n                                <FormControl\r\n                                    variant=\"outlined\"\r\n                                    color=\"secondary\"\r\n                                    fullWidth\r\n                                >\r\n                                    <InputLabel htmlFor=\"filled-adornment-password\">\r\n                                        {t(\"modals.sharePassword\")}\r\n                                    </InputLabel>\r\n                                    <OutlinedInput\r\n                                        fullWidth\r\n                                        id=\"outlined-adornment-password\"\r\n                                        type={\r\n                                            values.showPassword\r\n                                                ? \"text\"\r\n                                                : \"password\"\r\n                                        }\r\n                                        value={values.password}\r\n                                        onChange={handleChange(\"password\")}\r\n                                        endAdornment={\r\n                                            <InputAdornment position=\"end\">\r\n                                                <Tooltip\r\n                                                    title={t(\r\n                                                        \"modals.randomlyGenerate\"\r\n                                                    )}\r\n                                                >\r\n                                                    <IconButton\r\n                                                        aria-label=\"toggle password visibility\"\r\n                                                        onClick={randomPassword}\r\n                                                        edge=\"end\"\r\n                                                    >\r\n                                                        <CasinoIcon />\r\n                                                    </IconButton>\r\n                                                </Tooltip>\r\n                                                <IconButton\r\n                                                    aria-label=\"toggle password visibility\"\r\n                                                    onClick={\r\n                                                        handleClickShowPassword\r\n                                                    }\r\n                                                    onMouseDown={\r\n                                                        handleMouseDownPassword\r\n                                                    }\r\n                                                    edge=\"end\"\r\n                                                >\r\n                                                    <ToggleIcon\r\n                                                        on={values.showPassword}\r\n                                                        onIcon={<Visibility />}\r\n                                                        offIcon={\r\n                                                            <VisibilityOff />\r\n                                                        }\r\n                                                    />\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        }\r\n                                        labelWidth={70}\r\n                                    />\r\n                                </FormControl>\r\n                            </ExpansionPanelDetails>\r\n                        </ExpansionPanel>\r\n                        <ExpansionPanel\r\n                            expanded={expanded === \"expire\"}\r\n                            onChange={handleExpand(\"expire\")}\r\n                        >\r\n                            <ExpansionPanelSummary\r\n                                aria-controls=\"panel1a-content\"\r\n                                id=\"panel1a-header\"\r\n                            >\r\n                                <ListItem button>\r\n                                    <ListItemIcon>\r\n                                        <TimerIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText\r\n                                        primary={t(\r\n                                            \"modals.expireAutomatically\"\r\n                                        )}\r\n                                    />\r\n                                    <ListItemSecondaryAction>\r\n                                        <Checkbox\r\n                                            checked={shareOption.expire}\r\n                                            onChange={handleCheck(\"expire\")}\r\n                                        />\r\n                                    </ListItemSecondaryAction>\r\n                                </ListItem>\r\n                            </ExpansionPanelSummary>\r\n                            <ExpansionPanelDetails\r\n                                className={classes.flexCenter}\r\n                            >\r\n                                <FormControl\r\n                                    style={{\r\n                                        marginRight: 10,\r\n                                    }}\r\n                                >\r\n                                    <Select\r\n                                        labelId=\"demo-simple-select-label\"\r\n                                        id=\"demo-simple-select\"\r\n                                        value={values.downloads}\r\n                                        onChange={handleChange(\"downloads\")}\r\n                                    >\r\n                                        {[1, 2, 3, 4, 5, 20, 50, 100].map(\r\n                                            (v) => (\r\n                                                <MenuItem value={v} key={v}>\r\n                                                    {t(\r\n                                                        \"modals.downloadLimitOptions\",\r\n                                                        { num: v }\r\n                                                    )}\r\n                                                </MenuItem>\r\n                                            )\r\n                                        )}\r\n                                    </Select>\r\n                                </FormControl>\r\n                                <Typography>{t(\"modals.or\")}</Typography>\r\n                                <FormControl\r\n                                    style={{\r\n                                        marginRight: 10,\r\n                                        marginLeft: 10,\r\n                                    }}\r\n                                >\r\n                                    <Select\r\n                                        labelId=\"demo-simple-select-label\"\r\n                                        id=\"demo-simple-select\"\r\n                                        value={values.expires}\r\n                                        onChange={handleChange(\"expires\")}\r\n                                    >\r\n                                        <MenuItem value={300}>\r\n                                            {t(\"modals.5minutes\")}\r\n                                        </MenuItem>\r\n                                        <MenuItem value={3600}>\r\n                                            {t(\"modals.1hour\")}\r\n                                        </MenuItem>\r\n                                        <MenuItem value={24 * 3600}>\r\n                                            {t(\"modals.1day\")}\r\n                                        </MenuItem>\r\n                                        <MenuItem value={7 * 24 * 3600}>\r\n                                            {t(\"modals.7days\")}\r\n                                        </MenuItem>\r\n                                        <MenuItem value={30 * 24 * 3600}>\r\n                                            {t(\"modals.30days\")}\r\n                                        </MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                                <Typography>\r\n                                    {t(\"modals.downloadSuffix\")}\r\n                                </Typography>\r\n                            </ExpansionPanelDetails>\r\n                        </ExpansionPanel>\r\n                        <ExpansionPanel\r\n                            expanded={expanded === \"preview\"}\r\n                            onChange={handleExpand(\"preview\")}\r\n                        >\r\n                            <ExpansionPanelSummary\r\n                                aria-controls=\"panel1a-content\"\r\n                                id=\"panel1a-header\"\r\n                            >\r\n                                <ListItem button>\r\n                                    <ListItemIcon>\r\n                                        <LockIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText\r\n                                        primary={t(\"modals.allowPreview\")}\r\n                                    />\r\n                                    <ListItemSecondaryAction>\r\n                                        <Checkbox\r\n                                            checked={shareOption.preview}\r\n                                            onChange={handleCheck(\"preview\")}\r\n                                        />\r\n                                    </ListItemSecondaryAction>\r\n                                </ListItem>\r\n                            </ExpansionPanelSummary>\r\n                            <ExpansionPanelDetails>\r\n                                <Typography>\r\n                                    {t(\"modals.allowPreviewDescription\")}\r\n                                </Typography>\r\n                            </ExpansionPanelDetails>\r\n                        </ExpansionPanel>\r\n                    </List>\r\n                    <Divider />\r\n                </>\r\n            )}\r\n            {shareURL !== \"\" && (\r\n                <DialogContent>\r\n                    <TextField\r\n                        onFocus={handleFocus}\r\n                        autoFocus\r\n                        inputProps={{ readonly: true }}\r\n                        label={t(\"modals.shareLink\")}\r\n                        value={shareURL}\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                    />\r\n                </DialogContent>\r\n            )}\r\n\r\n            <DialogActions>\r\n                {shareURL !== \"\" && (\r\n                    <div className={classes.wrapper}>\r\n                        <Button onClick={senLink} color=\"secondary\">\r\n                            {t(\"modals.sendLink\")}\r\n                        </Button>\r\n                    </div>\r\n                )}\r\n                <Button onClick={onClose}>\r\n                    {t(\"close\", { ns: \"common\" })}\r\n                </Button>\r\n\r\n                {shareURL === \"\" && (\r\n                    <div className={classes.wrapper}>\r\n                        <Button\r\n                            onClick={submitShare}\r\n                            color=\"secondary\"\r\n                            disabled={props.modalsLoading}\r\n                        >\r\n                            {t(\"modals.createShareLink\")}\r\n                            {props.modalsLoading && (\r\n                                <CircularProgress\r\n                                    size={24}\r\n                                    className={classes.buttonProgress}\r\n                                />\r\n                            )}\r\n                        </Button>\r\n                    </div>\r\n                )}\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, { useCallback, useState } from \"react\";\r\nimport {\r\n    Button,\r\n    CircularProgress,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    makeStyles,\r\n} from \"@material-ui/core\";\r\nimport PathSelector from \"../FileManager/PathSelector\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setModalsLoading, toggleSnackbar } from \"../../redux/explorer\";\r\nimport { submitDecompressTask } from \"../../redux/explorer/action\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    contentFix: {\r\n        padding: \"10px 24px 0px 24px\",\r\n    },\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        position: \"relative\",\r\n    },\r\n    buttonProgress: {\r\n        color: theme.palette.secondary.light,\r\n        position: \"absolute\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    },\r\n}));\r\n\r\nexport default function DecompressDialog(props) {\r\n    const { t } = useTranslation();\r\n    const [selectedPath, setSelectedPath] = useState(\"\");\r\n    const [selectedPathName, setSelectedPathName] = useState(\"\");\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n    const SetModalsLoading = useCallback(\r\n        (status) => {\r\n            dispatch(setModalsLoading(status));\r\n        },\r\n        [dispatch]\r\n    );\r\n    const SubmitDecompressTask = useCallback(\r\n        (path) => dispatch(submitDecompressTask(path)),\r\n        [dispatch]\r\n    );\r\n\r\n    const setMoveTarget = (folder) => {\r\n        const path =\r\n            folder.path === \"/\"\r\n                ? folder.path + folder.name\r\n                : folder.path + \"/\" + folder.name;\r\n        setSelectedPath(path);\r\n        setSelectedPathName(folder.name);\r\n    };\r\n\r\n    const submitMove = (e) => {\r\n        if (e != null) {\r\n            e.preventDefault();\r\n        }\r\n        SetModalsLoading(true);\r\n        SubmitDecompressTask(selectedPath)\r\n            .then(() => {\r\n                props.onClose();\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    t(\"modals.taskCreated\"),\r\n                    \"success\"\r\n                );\r\n                SetModalsLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n                SetModalsLoading(false);\r\n            });\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            onClose={props.onClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\">\r\n                {t(\"modals.decompressTo\")}\r\n            </DialogTitle>\r\n            <PathSelector\r\n                presentPath={props.presentPath}\r\n                selected={props.selected}\r\n                onSelect={setMoveTarget}\r\n            />\r\n\r\n            {selectedPath !== \"\" && (\r\n                <DialogContent className={classes.contentFix}>\r\n                    <DialogContentText>\r\n                        <Trans\r\n                            i18nKey=\"modals.decompressToDst\"\r\n                            values={{\r\n                                name: selectedPathName,\r\n                            }}\r\n                            components={[<strong key={0} />]}\r\n                        />\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n            )}\r\n            <DialogActions>\r\n                <Button onClick={props.onClose}>\r\n                    {t(\"cancel\", { ns: \"common\" })}\r\n                </Button>\r\n                <div className={classes.wrapper}>\r\n                    <Button\r\n                        onClick={submitMove}\r\n                        color=\"primary\"\r\n                        disabled={selectedPath === \"\" || props.modalsLoading}\r\n                    >\r\n                        {t(\"ok\", { ns: \"common\" })}\r\n                        {props.modalsLoading && (\r\n                            <CircularProgress\r\n                                size={24}\r\n                                className={classes.buttonProgress}\r\n                            />\r\n                        )}\r\n                    </Button>\r\n                </div>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, { useCallback, useState } from \"react\";\r\nimport {\r\n    Button,\r\n    CircularProgress,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    makeStyles,\r\n} from \"@material-ui/core\";\r\nimport PathSelector from \"../FileManager/PathSelector\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { setModalsLoading, toggleSnackbar } from \"../../redux/explorer\";\r\nimport { submitCompressTask } from \"../../redux/explorer/action\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    contentFix: {\r\n        padding: \"10px 24px 0px 24px\",\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        position: \"relative\",\r\n    },\r\n    buttonProgress: {\r\n        color: theme.palette.secondary.light,\r\n        position: \"absolute\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    },\r\n}));\r\n\r\nexport default function CompressDialog(props) {\r\n    const { t } = useTranslation();\r\n    const [selectedPath, setSelectedPath] = useState(\"\");\r\n    const [fileName, setFileName] = useState(\"\");\r\n    // eslint-disable-next-line\r\n    const [selectedPathName, setSelectedPathName] = useState(\"\");\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const SetModalsLoading = useCallback(\r\n        (status) => {\r\n            dispatch(setModalsLoading(status));\r\n        },\r\n        [dispatch]\r\n    );\r\n\r\n    const SubmitCompressTask = useCallback(\r\n        (name, path) => dispatch(submitCompressTask(name, path)),\r\n        [dispatch]\r\n    );\r\n\r\n    const setMoveTarget = (folder) => {\r\n        const path =\r\n            folder.path === \"/\"\r\n                ? folder.path + folder.name\r\n                : folder.path + \"/\" + folder.name;\r\n        setSelectedPath(path);\r\n        setSelectedPathName(folder.name);\r\n    };\r\n\r\n    const submitMove = (e) => {\r\n        if (e != null) {\r\n            e.preventDefault();\r\n        }\r\n        SetModalsLoading(true);\r\n\r\n        SubmitCompressTask(fileName, selectedPath)\r\n            .then(() => {\r\n                props.onClose();\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    t(\"modals.taskCreated\"),\r\n                    \"success\"\r\n                );\r\n                SetModalsLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n                SetModalsLoading(false);\r\n            });\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            onClose={props.onClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\">\r\n                {t(\"modals.saveToTitle\")}\r\n            </DialogTitle>\r\n            <PathSelector\r\n                presentPath={props.presentPath}\r\n                selected={props.selected}\r\n                onSelect={setMoveTarget}\r\n            />\r\n\r\n            {selectedPath !== \"\" && (\r\n                <DialogContent className={classes.contentFix}>\r\n                    <DialogContentText>\r\n                        <TextField\r\n                            onChange={(e) => setFileName(e.target.value)}\r\n                            value={fileName}\r\n                            fullWidth\r\n                            autoFocus\r\n                            id=\"standard-basic\"\r\n                            label={t(\"modals.zipFileName\")}\r\n                        />\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n            )}\r\n            <DialogActions>\r\n                <Button onClick={props.onClose}>\r\n                    {t(\"cancel\", { ns: \"common\" })}\r\n                </Button>\r\n                <div className={classes.wrapper}>\r\n                    <Button\r\n                        onClick={submitMove}\r\n                        color=\"primary\"\r\n                        disabled={\r\n                            selectedPath === \"\" ||\r\n                            fileName === \"\" ||\r\n                            props.modalsLoading\r\n                        }\r\n                    >\r\n                        {t(\"ok\", { ns: \"common\" })}\r\n                        {props.modalsLoading && (\r\n                            <CircularProgress\r\n                                size={24}\r\n                                className={classes.buttonProgress}\r\n                            />\r\n                        )}\r\n                    </Button>\r\n                </div>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport PathSelector from \"./PathSelector\";\r\nimport API, { AppError } from \"../../middleware/Api\";\r\nimport {\r\n    Button,\r\n    CircularProgress,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    TextField,\r\n    withStyles,\r\n} from \"@material-ui/core\";\r\nimport Loading from \"../Modals/Loading\";\r\nimport CopyDialog from \"../Modals/Copy\";\r\nimport DirectoryDownloadDialog from \"../Modals/DirectoryDownload\";\r\nimport CreatShare from \"../Modals/CreateShare\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport DecompressDialog from \"../Modals/Decompress\";\r\nimport CompressDialog from \"../Modals/Compress\";\r\nimport {\r\n    closeAllModals,\r\n    openLoadingDialog,\r\n    refreshFileList,\r\n    refreshStorage,\r\n    setModalsLoading,\r\n    toggleSnackbar,\r\n} from \"../../redux/explorer\";\r\nimport OptionSelector from \"../Modals/OptionSelector\";\r\nimport { getDownloadURL } from \"../../services/file\";\r\nimport { Trans, withTranslation } from \"react-i18next\";\r\n\r\nconst styles = (theme) => ({\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        position: \"relative\",\r\n    },\r\n    buttonProgress: {\r\n        color: theme.palette.secondary.light,\r\n        position: \"absolute\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    },\r\n    contentFix: {\r\n        padding: \"10px 24px 0px 24px\",\r\n    },\r\n});\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        path: state.navigator.path,\r\n        selected: state.explorer.selected,\r\n        modalsStatus: state.viewUpdate.modals,\r\n        modalsLoading: state.viewUpdate.modalsLoading,\r\n        dirList: state.explorer.dirList,\r\n        fileList: state.explorer.fileList,\r\n        dndSignale: state.explorer.dndSignal,\r\n        dndTarget: state.explorer.dndTarget,\r\n        dndSource: state.explorer.dndSource,\r\n        loading: state.viewUpdate.modals.loading,\r\n        loadingText: state.viewUpdate.modals.loadingText,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        closeAllModals: () => {\r\n            dispatch(closeAllModals());\r\n        },\r\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\r\n        },\r\n        setModalsLoading: (status) => {\r\n            dispatch(setModalsLoading(status));\r\n        },\r\n        refreshFileList: () => {\r\n            dispatch(refreshFileList());\r\n        },\r\n        refreshStorage: () => {\r\n            dispatch(refreshStorage());\r\n        },\r\n        openLoadingDialog: (text) => {\r\n            dispatch(openLoadingDialog(text));\r\n        },\r\n    };\r\n};\r\n\r\nclass ModalsCompoment extends Component {\r\n    state = {\r\n        newFolderName: \"\",\r\n        newFileName: \"\",\r\n        newName: \"\",\r\n        selectedPath: \"\",\r\n        selectedPathName: \"\",\r\n        secretShare: false,\r\n        sharePwd: \"\",\r\n        shareUrl: \"\",\r\n        downloadURL: \"\",\r\n        remoteDownloadPathSelect: false,\r\n        purchaseCallback: null,\r\n    };\r\n\r\n    handleInputChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value,\r\n        });\r\n    };\r\n\r\n    newNameSuffix = \"\";\r\n\r\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\r\n        if (this.props.dndSignale !== nextProps.dndSignale) {\r\n            this.dragMove(nextProps.dndSource, nextProps.dndTarget);\r\n            return;\r\n        }\r\n\r\n        if (this.props.modalsStatus.rename !== nextProps.modalsStatus.rename) {\r\n            const name = nextProps.selected[0].name;\r\n            this.setState({\r\n                newName: name,\r\n            });\r\n            return;\r\n        }\r\n    };\r\n\r\n    scoreHandler = (callback) => {\r\n        callback();\r\n    };\r\n\r\n    Download = () => {\r\n        getDownloadURL(this.props.selected[0])\r\n            .then((response) => {\r\n                window.location.assign(response.data);\r\n                this.onClose();\r\n                this.downloaded = true;\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n                this.onClose();\r\n            });\r\n    };\r\n\r\n    submitRemove = (e) => {\r\n        e.preventDefault();\r\n        this.props.setModalsLoading(true);\r\n        const dirs = [],\r\n            items = [];\r\n        // eslint-disable-next-line\r\n        this.props.selected.map((value) => {\r\n            if (value.type === \"dir\") {\r\n                dirs.push(value.id);\r\n            } else {\r\n                items.push(value.id);\r\n            }\r\n        });\r\n        API.delete(\"/object\", {\r\n            data: {\r\n                items: items,\r\n                dirs: dirs,\r\n            },\r\n        })\r\n            .then((response) => {\r\n                if (response.rawData.code === 0) {\r\n                    this.onClose();\r\n                    setTimeout(this.props.refreshFileList, 500);\r\n                } else {\r\n                    this.props.toggleSnackbar(\r\n                        \"top\",\r\n                        \"right\",\r\n                        response.rawData.msg,\r\n                        \"warning\"\r\n                    );\r\n                }\r\n                this.props.setModalsLoading(false);\r\n                this.props.refreshStorage();\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n                this.props.setModalsLoading(false);\r\n            });\r\n    };\r\n\r\n    submitMove = (e) => {\r\n        if (e != null) {\r\n            e.preventDefault();\r\n        }\r\n        this.props.setModalsLoading(true);\r\n        const dirs = [],\r\n            items = [];\r\n        // eslint-disable-next-line\r\n        this.props.selected.map((value) => {\r\n            if (value.type === \"dir\") {\r\n                dirs.push(value.id);\r\n            } else {\r\n                items.push(value.id);\r\n            }\r\n        });\r\n        API.patch(\"/object\", {\r\n            action: \"move\",\r\n            src_dir: this.props.selected[0].path,\r\n            src: {\r\n                dirs: dirs,\r\n                items: items,\r\n            },\r\n            dst: this.DragSelectedPath\r\n                ? this.DragSelectedPath\r\n                : this.state.selectedPath === \"//\"\r\n                ? \"/\"\r\n                : this.state.selectedPath,\r\n        })\r\n            .then(() => {\r\n                this.onClose();\r\n                this.props.refreshFileList();\r\n                this.props.setModalsLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n                this.props.setModalsLoading(false);\r\n            })\r\n            .then(() => {\r\n                this.props.closeAllModals();\r\n            });\r\n    };\r\n\r\n    dragMove = (source, target) => {\r\n        if (this.props.selected.length === 0) {\r\n            this.props.selected[0] = source;\r\n        }\r\n        let doMove = true;\r\n\r\n        // eslint-disable-next-line\r\n        this.props.selected.map((value) => {\r\n            // 根据ID过滤\r\n            if (value.id === target.id && value.type === target.type) {\r\n                doMove = false;\r\n                // eslint-disable-next-line\r\n                return;\r\n            }\r\n            // 根据路径过滤\r\n            if (\r\n                value.path ===\r\n                target.path + (target.path === \"/\" ? \"\" : \"/\") + target.name\r\n            ) {\r\n                doMove = false;\r\n                // eslint-disable-next-line\r\n                return;\r\n            }\r\n        });\r\n        if (doMove) {\r\n            this.DragSelectedPath =\r\n                target.path === \"/\"\r\n                    ? target.path + target.name\r\n                    : target.path + \"/\" + target.name;\r\n            this.props.openLoadingDialog(this.props.t(\"modals.processing\"));\r\n            this.submitMove();\r\n        }\r\n    };\r\n\r\n    submitRename = (e) => {\r\n        e.preventDefault();\r\n        this.props.setModalsLoading(true);\r\n        const newName = this.state.newName;\r\n\r\n        const src = {\r\n            dirs: [],\r\n            items: [],\r\n        };\r\n\r\n        if (this.props.selected[0].type === \"dir\") {\r\n            src.dirs[0] = this.props.selected[0].id;\r\n        } else {\r\n            src.items[0] = this.props.selected[0].id;\r\n        }\r\n\r\n        // 检查重名\r\n        if (\r\n            this.props.dirList.findIndex((value) => {\r\n                return value.name === newName;\r\n            }) !== -1 ||\r\n            this.props.fileList.findIndex((value) => {\r\n                return value.name === newName;\r\n            }) !== -1\r\n        ) {\r\n            this.props.toggleSnackbar(\r\n                \"top\",\r\n                \"right\",\r\n                this.props.t(\"modals.duplicatedObjectName\"),\r\n                \"warning\"\r\n            );\r\n            this.props.setModalsLoading(false);\r\n        } else {\r\n            API.post(\"/object/rename\", {\r\n                action: \"rename\",\r\n                src: src,\r\n                new_name: newName,\r\n            })\r\n                .then(() => {\r\n                    this.onClose();\r\n                    this.props.refreshFileList();\r\n                    this.props.setModalsLoading(false);\r\n                })\r\n                .catch((error) => {\r\n                    this.props.toggleSnackbar(\r\n                        \"top\",\r\n                        \"right\",\r\n                        error.message,\r\n                        \"error\"\r\n                    );\r\n                    this.props.setModalsLoading(false);\r\n                });\r\n        }\r\n    };\r\n\r\n    submitCreateNewFolder = (e) => {\r\n        e.preventDefault();\r\n        this.props.setModalsLoading(true);\r\n        if (\r\n            this.props.dirList.findIndex((value) => {\r\n                return value.name === this.state.newFolderName;\r\n            }) !== -1\r\n        ) {\r\n            this.props.toggleSnackbar(\r\n                \"top\",\r\n                \"right\",\r\n                this.props.t(\"modals.duplicatedFolderName\"),\r\n                \"warning\"\r\n            );\r\n            this.props.setModalsLoading(false);\r\n        } else {\r\n            API.put(\"/directory\", {\r\n                path:\r\n                    (this.props.path === \"/\" ? \"\" : this.props.path) +\r\n                    \"/\" +\r\n                    this.state.newFolderName,\r\n            })\r\n                .then(() => {\r\n                    this.onClose();\r\n                    this.props.refreshFileList();\r\n                    this.props.setModalsLoading(false);\r\n                })\r\n                .catch((error) => {\r\n                    this.props.setModalsLoading(false);\r\n\r\n                    this.props.toggleSnackbar(\r\n                        \"top\",\r\n                        \"right\",\r\n                        error.message,\r\n                        \"error\"\r\n                    );\r\n                });\r\n        }\r\n        //this.props.toggleSnackbar();\r\n    };\r\n\r\n    submitCreateNewFile = (e) => {\r\n        e.preventDefault();\r\n        this.props.setModalsLoading(true);\r\n        if (\r\n            this.props.dirList.findIndex((value) => {\r\n                return value.name === this.state.newFileName;\r\n            }) !== -1\r\n        ) {\r\n            this.props.toggleSnackbar(\r\n                \"top\",\r\n                \"right\",\r\n                this.props.t(\"modals.duplicatedFolderName\"),\r\n                \"warning\"\r\n            );\r\n            this.props.setModalsLoading(false);\r\n        } else {\r\n            API.post(\"/file/create\", {\r\n                path:\r\n                    (this.props.path === \"/\" ? \"\" : this.props.path) +\r\n                    \"/\" +\r\n                    this.state.newFileName,\r\n            })\r\n                .then(() => {\r\n                    this.onClose();\r\n                    this.props.refreshFileList();\r\n                    this.props.setModalsLoading(false);\r\n                })\r\n                .catch((error) => {\r\n                    this.props.setModalsLoading(false);\r\n\r\n                    this.props.toggleSnackbar(\r\n                        \"top\",\r\n                        \"right\",\r\n                        error.message,\r\n                        \"error\"\r\n                    );\r\n                });\r\n        }\r\n        //this.props.toggleSnackbar();\r\n    };\r\n\r\n    submitTorrentDownload = (e) => {\r\n        e.preventDefault();\r\n        this.props.setModalsLoading(true);\r\n        API.post(\"/aria2/torrent/\" + this.props.selected[0].id, {\r\n            dst:\r\n                this.state.selectedPath === \"//\"\r\n                    ? \"/\"\r\n                    : this.state.selectedPath,\r\n        })\r\n            .then(() => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    this.props.t(\"modals.taskCreated\"),\r\n                    \"success\"\r\n                );\r\n                this.onClose();\r\n                this.props.setModalsLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n                this.props.setModalsLoading(false);\r\n            });\r\n    };\r\n\r\n    submitDownload = (e) => {\r\n        e.preventDefault();\r\n        this.props.setModalsLoading(true);\r\n        API.post(\"/aria2/url\", {\r\n            url: this.state.downloadURL.split(\"\\n\"),\r\n            dst:\r\n                this.state.selectedPath === \"//\"\r\n                    ? \"/\"\r\n                    : this.state.selectedPath,\r\n        })\r\n            .then((response) => {\r\n                const failed = response.data\r\n                    .filter((r) => r.code !== 0)\r\n                    .map((r) => new AppError(r.msg, r.code, r.error).message);\r\n                if (failed.length > 0) {\r\n                    this.props.toggleSnackbar(\r\n                        \"top\",\r\n                        \"right\",\r\n                        this.props.t(\"modals.taskCreateFailed\", {\r\n                            failed: failed.length,\r\n                            details: failed.join(\",\"),\r\n                        }),\r\n                        \"warning\"\r\n                    );\r\n                } else {\r\n                    this.props.toggleSnackbar(\r\n                        \"top\",\r\n                        \"right\",\r\n                        this.props.t(\"modals.taskCreated\"),\r\n                        \"success\"\r\n                    );\r\n                }\r\n\r\n                this.onClose();\r\n                this.props.setModalsLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n                this.props.setModalsLoading(false);\r\n            });\r\n    };\r\n\r\n    setMoveTarget = (folder) => {\r\n        const path =\r\n            folder.path === \"/\"\r\n                ? folder.path + folder.name\r\n                : folder.path + \"/\" + folder.name;\r\n        this.setState({\r\n            selectedPath: path,\r\n            selectedPathName: folder.name,\r\n        });\r\n    };\r\n\r\n    remoteDownloadNext = () => {\r\n        this.props.closeAllModals();\r\n        this.setState({\r\n            remoteDownloadPathSelect: true,\r\n        });\r\n    };\r\n\r\n    onClose = () => {\r\n        this.setState({\r\n            newFolderName: \"\",\r\n            newFileName: \"\",\r\n            newName: \"\",\r\n            selectedPath: \"\",\r\n            selectedPathName: \"\",\r\n            secretShare: false,\r\n            sharePwd: \"\",\r\n            downloadURL: \"\",\r\n            shareUrl: \"\",\r\n            remoteDownloadPathSelect: false,\r\n        });\r\n        this.newNameSuffix = \"\";\r\n        this.props.closeAllModals();\r\n    };\r\n\r\n    handleChange = (name) => (event) => {\r\n        this.setState({ [name]: event.target.checked });\r\n    };\r\n\r\n    copySource = () => {\r\n        if (navigator.clipboard) {\r\n            navigator.clipboard.writeText(this.props.modalsStatus.getSource);\r\n            this.props.toggleSnackbar(\r\n                \"top\",\r\n                \"right\",\r\n                this.props.t(\"modals.linkCopied\"),\r\n                \"info\"\r\n            );\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { classes, t } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <Loading />\r\n                <OptionSelector />\r\n                <Dialog\r\n                    open={this.props.modalsStatus.getSource}\r\n                    onClose={this.onClose}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                    fullWidth\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">\r\n                        {t(\"modals.getSourceLinkTitle\")}\r\n                    </DialogTitle>\r\n\r\n                    <DialogContent>\r\n                        <TextField\r\n                            autoFocus\r\n                            inputProps={{ readonly: true }}\r\n                            label={t(\"modals.sourceLink\")}\r\n                            multiline\r\n                            value={this.props.modalsStatus.getSource}\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.copySource} color=\"secondary\">\r\n                            {t(\"copyToClipboard\", { ns: \"common\" })}\r\n                        </Button>\r\n                        <Button onClick={this.onClose}>\r\n                            {t(\"close\", { ns: \"common\" })}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog\r\n                    open={this.props.modalsStatus.createNewFolder}\r\n                    onClose={this.onClose}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">\r\n                        {t(\"fileManager.newFolder\")}\r\n                    </DialogTitle>\r\n\r\n                    <DialogContent>\r\n                        <form onSubmit={this.submitCreateNewFolder}>\r\n                            <TextField\r\n                                autoFocus\r\n                                margin=\"dense\"\r\n                                id=\"newFolderName\"\r\n                                label={t(\"modals.folderName\")}\r\n                                type=\"text\"\r\n                                value={this.state.newFolderName}\r\n                                onChange={(e) => this.handleInputChange(e)}\r\n                                fullWidth\r\n                            />\r\n                        </form>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.onClose}>\r\n                            {t(\"cancel\", { ns: \"common\" })}\r\n                        </Button>\r\n                        <div className={classes.wrapper}>\r\n                            <Button\r\n                                onClick={this.submitCreateNewFolder}\r\n                                color=\"primary\"\r\n                                disabled={\r\n                                    this.state.newFolderName === \"\" ||\r\n                                    this.props.modalsLoading\r\n                                }\r\n                            >\r\n                                {t(\"modals.create\")}\r\n                                {this.props.modalsLoading && (\r\n                                    <CircularProgress\r\n                                        size={24}\r\n                                        className={classes.buttonProgress}\r\n                                    />\r\n                                )}\r\n                            </Button>\r\n                        </div>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n                <Dialog\r\n                    open={this.props.modalsStatus.createNewFile}\r\n                    onClose={this.onClose}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">\r\n                        {t(\"fileManager.newFile\")}\r\n                    </DialogTitle>\r\n\r\n                    <DialogContent>\r\n                        <form onSubmit={this.submitCreateNewFile}>\r\n                            <TextField\r\n                                autoFocus\r\n                                margin=\"dense\"\r\n                                id=\"newFileName\"\r\n                                label={t(\"modals.fileName\")}\r\n                                type=\"text\"\r\n                                value={this.state.newFileName}\r\n                                onChange={(e) => this.handleInputChange(e)}\r\n                                fullWidth\r\n                            />\r\n                        </form>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.onClose}>\r\n                            {t(\"cancel\", { ns: \"common\" })}\r\n                        </Button>\r\n                        <div className={classes.wrapper}>\r\n                            <Button\r\n                                onClick={this.submitCreateNewFile}\r\n                                color=\"primary\"\r\n                                disabled={\r\n                                    this.state.newFileName === \"\" ||\r\n                                    this.props.modalsLoading\r\n                                }\r\n                            >\r\n                                {t(\"modals.create\")}\r\n                                {this.props.modalsLoading && (\r\n                                    <CircularProgress\r\n                                        size={24}\r\n                                        className={classes.buttonProgress}\r\n                                    />\r\n                                )}\r\n                            </Button>\r\n                        </div>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n                <Dialog\r\n                    open={this.props.modalsStatus.rename}\r\n                    onClose={this.onClose}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                    maxWidth=\"sm\"\r\n                    fullWidth={true}\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">\r\n                        {t(\"fileManager.rename\")}\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            <Trans\r\n                                i18nKey=\"modals.renameDescription\"\r\n                                values={{\r\n                                    name:\r\n                                        this.props.selected.length === 1\r\n                                            ? this.props.selected[0].name\r\n                                            : \"\",\r\n                                }}\r\n                                components={[<strong key={0} />]}\r\n                            />\r\n                        </DialogContentText>\r\n                        <form onSubmit={this.submitRename}>\r\n                            <TextField\r\n                                autoFocus\r\n                                margin=\"dense\"\r\n                                id=\"newName\"\r\n                                label={t(\"modals.newName\")}\r\n                                type=\"text\"\r\n                                value={this.state.newName}\r\n                                onChange={(e) => this.handleInputChange(e)}\r\n                                fullWidth\r\n                            />\r\n                        </form>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.onClose}>\r\n                            {t(\"cancel\", { ns: \"common\" })}\r\n                        </Button>\r\n                        <div className={classes.wrapper}>\r\n                            <Button\r\n                                onClick={this.submitRename}\r\n                                color=\"primary\"\r\n                                disabled={\r\n                                    this.state.newName === \"\" ||\r\n                                    this.props.modalsLoading\r\n                                }\r\n                            >\r\n                                {t(\"ok\", { ns: \"common\" })}\r\n                                {this.props.modalsLoading && (\r\n                                    <CircularProgress\r\n                                        size={24}\r\n                                        className={classes.buttonProgress}\r\n                                    />\r\n                                )}\r\n                            </Button>\r\n                        </div>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <CopyDialog\r\n                    open={this.props.modalsStatus.copy}\r\n                    onClose={this.onClose}\r\n                    presentPath={this.props.path}\r\n                    selected={this.props.selected}\r\n                    modalsLoading={this.props.modalsLoading}\r\n                />\r\n\r\n                <Dialog\r\n                    open={this.props.modalsStatus.move}\r\n                    onClose={this.onClose}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">\r\n                        {t(\"modals.moveToTitle\")}\r\n                    </DialogTitle>\r\n                    <PathSelector\r\n                        presentPath={this.props.path}\r\n                        selected={this.props.selected}\r\n                        onSelect={this.setMoveTarget}\r\n                    />\r\n\r\n                    {this.state.selectedPath !== \"\" && (\r\n                        <DialogContent className={classes.contentFix}>\r\n                            <DialogContentText>\r\n                                <Trans\r\n                                    i18nKey=\"modals.moveToDescription\"\r\n                                    values={{\r\n                                        name: this.state.selectedPathName,\r\n                                    }}\r\n                                    components={[<strong key={0} />]}\r\n                                />\r\n                            </DialogContentText>\r\n                        </DialogContent>\r\n                    )}\r\n                    <DialogActions>\r\n                        <Button onClick={this.onClose}>\r\n                            {t(\"cancel\", { ns: \"common\" })}\r\n                        </Button>\r\n                        <div className={classes.wrapper}>\r\n                            <Button\r\n                                onClick={this.submitMove}\r\n                                color=\"primary\"\r\n                                disabled={\r\n                                    this.state.selectedPath === \"\" ||\r\n                                    this.props.modalsLoading\r\n                                }\r\n                            >\r\n                                {t(\"ok\", { ns: \"common\" })}\r\n                                {this.props.modalsLoading && (\r\n                                    <CircularProgress\r\n                                        size={24}\r\n                                        className={classes.buttonProgress}\r\n                                    />\r\n                                )}\r\n                            </Button>\r\n                        </div>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog\r\n                    open={this.props.modalsStatus.remove}\r\n                    onClose={this.onClose}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">\r\n                        {t(\"modals.deleteTitle\")}\r\n                    </DialogTitle>\r\n\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            {this.props.selected.length === 1 && (\r\n                                <Trans\r\n                                    i18nKey=\"modals.deleteOneDescription\"\r\n                                    values={{\r\n                                        name: this.props.selected[0].name,\r\n                                    }}\r\n                                    components={[<strong key={0} />]}\r\n                                />\r\n                            )}\r\n                            {this.props.selected.length > 1 &&\r\n                                t(\"modals.deleteMultipleDescription\", {\r\n                                    num: this.props.selected.length,\r\n                                })}\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.onClose}>\r\n                            {t(\"cancel\", { ns: \"common\" })}\r\n                        </Button>\r\n                        <div className={classes.wrapper}>\r\n                            <Button\r\n                                onClick={this.submitRemove}\r\n                                color=\"primary\"\r\n                                disabled={this.props.modalsLoading}\r\n                            >\r\n                                {t(\"ok\", { ns: \"common\" })}\r\n                                {this.props.modalsLoading && (\r\n                                    <CircularProgress\r\n                                        size={24}\r\n                                        className={classes.buttonProgress}\r\n                                    />\r\n                                )}\r\n                            </Button>\r\n                        </div>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n                <CreatShare\r\n                    open={this.props.modalsStatus.share}\r\n                    onClose={this.onClose}\r\n                    modalsLoading={this.props.modalsLoading}\r\n                    setModalsLoading={this.props.setModalsLoading}\r\n                    selected={this.props.selected}\r\n                />\r\n                <Dialog\r\n                    open={this.props.modalsStatus.remoteDownload}\r\n                    onClose={this.onClose}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                    fullWidth\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">\r\n                        {t(\"modals.newRemoteDownloadTitle\")}\r\n                    </DialogTitle>\r\n\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            <TextField\r\n                                label={t(\"modals.remoteDownloadURL\")}\r\n                                autoFocus\r\n                                fullWidth\r\n                                multiline\r\n                                id=\"downloadURL\"\r\n                                onChange={this.handleInputChange}\r\n                                placeholder={t(\r\n                                    \"modals.remoteDownloadURLDescription\"\r\n                                )}\r\n                            />\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.onClose}>\r\n                            {t(\"cancel\", { ns: \"common\" })}\r\n                        </Button>\r\n                        <Button\r\n                            onClick={this.remoteDownloadNext}\r\n                            color=\"primary\"\r\n                            disabled={\r\n                                this.props.modalsLoading ||\r\n                                this.state.downloadURL === \"\"\r\n                            }\r\n                        >\r\n                            {t(\"ok\", { ns: \"common\" })}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog\r\n                    open={this.state.remoteDownloadPathSelect}\r\n                    onClose={this.onClose}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">\r\n                        {t(\"modals.remoteDownloadDst\")}\r\n                    </DialogTitle>\r\n                    <PathSelector\r\n                        presentPath={this.props.path}\r\n                        selected={this.props.selected}\r\n                        onSelect={this.setMoveTarget}\r\n                    />\r\n\r\n                    {this.state.selectedPath !== \"\" && (\r\n                        <DialogContent className={classes.contentFix}>\r\n                            <DialogContentText>\r\n                                <Trans\r\n                                    i18nKey=\"modals.downloadTo\"\r\n                                    values={{\r\n                                        name: this.state.selectedPathName,\r\n                                    }}\r\n                                    components={[<strong key={0} />]}\r\n                                />\r\n                            </DialogContentText>\r\n                        </DialogContent>\r\n                    )}\r\n                    <DialogActions>\r\n                        <Button onClick={this.onClose}>\r\n                            {t(\"cancel\", { ns: \"common\" })}\r\n                        </Button>\r\n                        <div className={classes.wrapper}>\r\n                            <Button\r\n                                onClick={this.submitDownload}\r\n                                color=\"primary\"\r\n                                disabled={\r\n                                    this.state.selectedPath === \"\" ||\r\n                                    this.props.modalsLoading\r\n                                }\r\n                            >\r\n                                {t(\"modals.createTask\")}\r\n                                {this.props.modalsLoading && (\r\n                                    <CircularProgress\r\n                                        size={24}\r\n                                        className={classes.buttonProgress}\r\n                                    />\r\n                                )}\r\n                            </Button>\r\n                        </div>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog\r\n                    open={this.props.modalsStatus.torrentDownload}\r\n                    onClose={this.onClose}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">\r\n                        {t(\"modals.remoteDownloadDst\")}\r\n                    </DialogTitle>\r\n                    <PathSelector\r\n                        presentPath={this.props.path}\r\n                        selected={this.props.selected}\r\n                        onSelect={this.setMoveTarget}\r\n                    />\r\n\r\n                    {this.state.selectedPath !== \"\" && (\r\n                        <DialogContent className={classes.contentFix}>\r\n                            <DialogContentText>\r\n                                <Trans\r\n                                    i18nKey=\"modals.downloadTo\"\r\n                                    values={{\r\n                                        name: this.state.selectedPathName,\r\n                                    }}\r\n                                    components={[<strong key={0} />]}\r\n                                />\r\n                            </DialogContentText>\r\n                        </DialogContent>\r\n                    )}\r\n                    <DialogActions>\r\n                        <Button onClick={this.onClose}>\r\n                            {t(\"cancel\", { ns: \"common\" })}\r\n                        </Button>\r\n                        <div className={classes.wrapper}>\r\n                            <Button\r\n                                onClick={this.submitTorrentDownload}\r\n                                color=\"primary\"\r\n                                disabled={\r\n                                    this.state.selectedPath === \"\" ||\r\n                                    this.props.modalsLoading\r\n                                }\r\n                            >\r\n                                {t(\"modals.createTask\")}\r\n                                {this.props.modalsLoading && (\r\n                                    <CircularProgress\r\n                                        size={24}\r\n                                        className={classes.buttonProgress}\r\n                                    />\r\n                                )}\r\n                            </Button>\r\n                        </div>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n                <DecompressDialog\r\n                    open={this.props.modalsStatus.decompress}\r\n                    onClose={this.onClose}\r\n                    presentPath={this.props.path}\r\n                    selected={this.props.selected}\r\n                    modalsLoading={this.props.modalsLoading}\r\n                />\r\n                <CompressDialog\r\n                    open={this.props.modalsStatus.compress}\r\n                    onClose={this.onClose}\r\n                    presentPath={this.props.path}\r\n                    selected={this.props.selected}\r\n                    modalsLoading={this.props.modalsLoading}\r\n                />\r\n                <DirectoryDownloadDialog\r\n                    open={this.props.modalsStatus.directoryDownloading}\r\n                    onClose={this.onClose}\r\n                    done={this.props.modalsStatus.directoryDownloadDone}\r\n                    log={this.props.modalsStatus.directoryDownloadLog}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nModalsCompoment.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst Modals = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withRouter(withTranslation()(ModalsCompoment))));\r\n\r\nexport default Modals;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useLocation, useParams, useRouteMatch } from \"react-router\";\r\nimport API from \"../../middleware/Api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Editor from \"for-editor\";\r\nimport SaveButton from \"../Dial/Save\";\r\nimport pathHelper from \"../../utils/page\";\r\nimport TextLoading from \"../Placeholder/TextLoading\";\r\nimport { toggleSnackbar } from \"../../redux/explorer\";\r\nimport UseFileSubTitle from \"../../hooks/fileSubtitle\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    layout: {\r\n        width: \"auto\",\r\n        marginTop: \"30px\",\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\r\n            marginLeft: theme.spacing(12),\r\n            marginRight: theme.spacing(12),\r\n        },\r\n        marginBottom: 50,\r\n    },\r\n    player: {\r\n        borderRadius: \"4px\",\r\n    },\r\n    root: {\r\n        backgroundColor: \"white\",\r\n        borderRadius: \"8px\",\r\n    },\r\n    \"@global\": {\r\n        \".for-toolbar\": {\r\n            overflowX: \"auto!important\",\r\n        },\r\n    },\r\n}));\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nexport default function TextViewer() {\r\n    const { t } = useTranslation();\r\n    const [content, setContent] = useState(\"\");\r\n    const [status, setStatus] = useState(\"\");\r\n    const [loading, setLoading] = useState(true);\r\n    const math = useRouteMatch();\r\n    const $vm = React.createRef();\r\n    const location = useLocation();\r\n    const query = useQuery();\r\n    const { id } = useParams();\r\n    UseFileSubTitle(query, math, location);\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        let requestURL = \"/file/content/\" + query.get(\"id\");\r\n        if (pathHelper.isSharePage(location.pathname)) {\r\n            requestURL = \"/share/content/\" + id;\r\n            if (query.get(\"share_path\") !== \"\") {\r\n                requestURL +=\r\n                    \"?path=\" + encodeURIComponent(query.get(\"share_path\"));\r\n            }\r\n        }\r\n\r\n        setLoading(true);\r\n        API.get(requestURL, { responseType: \"arraybuffer\" })\r\n            .then((response) => {\r\n                const buffer = new Buffer(response.rawData, \"binary\");\r\n                const textdata = buffer.toString(); // for string\r\n                setContent(textdata);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    t(\"fileManager.errorReadFileContent\", {\r\n                        msg: error.message,\r\n                    }),\r\n                    \"error\"\r\n                );\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n        // eslint-disable-next-line\r\n    }, [math.params[0]]);\r\n\r\n    const toBase64 = (file) =>\r\n        new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = (error) => reject(error);\r\n        });\r\n\r\n    const save = () => {\r\n        setStatus(\"loading\");\r\n        API.put(\"/file/update/\" + query.get(\"id\"), content)\r\n            .then(() => {\r\n                setStatus(\"success\");\r\n                setTimeout(() => setStatus(\"\"), 2000);\r\n            })\r\n            .catch((error) => {\r\n                setStatus(\"\");\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    const addImg = async ($file) => {\r\n        $vm.current.$img2Url($file.name, await toBase64($file));\r\n        console.log($file);\r\n    };\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.layout}>\r\n            <Paper className={classes.root} elevation={1}>\r\n                {loading && <TextLoading />}\r\n                {!loading && (\r\n                    <Editor\r\n                        language={t(\"forEditorLocaleCode\", { ns: \"common\" })}\r\n                        ref={$vm}\r\n                        value={content}\r\n                        onSave={() => save()}\r\n                        addImg={($file) => addImg($file)}\r\n                        onChange={(value) => setContent(value)}\r\n                        toolbar={{\r\n                            h1: true, // h1\r\n                            h2: true, // h2\r\n                            h3: true, // h3\r\n                            h4: true, // h4\r\n                            img: true, // 图片\r\n                            link: true, // 链接\r\n                            code: true, // 代码块\r\n                            preview: true, // 预览\r\n                            expand: true, // 全屏\r\n                            /* v0.0.9 */\r\n                            undo: true, // 撤销\r\n                            redo: true, // 重做\r\n                            save: false, // 保存\r\n                            /* v0.2.3 */\r\n                            subfield: true, // 单双栏模式\r\n                        }}\r\n                    />\r\n                )}\r\n            </Paper>\r\n            {!pathHelper.isSharePage(location.pathname) && (\r\n                <SaveButton onClick={save} status={status} />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","import React, { Suspense, useCallback, useEffect, useState } from \"react\";\r\nimport { Paper, useTheme } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useLocation, useParams, useRouteMatch } from \"react-router\";\r\nimport API from \"../../middleware/Api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport pathHelper from \"../../utils/page\";\r\nimport SaveButton from \"../Dial/Save\";\r\nimport { codePreviewSuffix } from \"../../config\";\r\nimport TextLoading from \"../Placeholder/TextLoading\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { toggleSnackbar } from \"../../redux/explorer\";\r\nimport UseFileSubTitle from \"../../hooks/fileSubtitle\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst MonacoEditor = React.lazy(() =>\r\n    import(/* webpackChunkName: \"codeEditor\" */ \"react-monaco-editor\")\r\n);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    layout: {\r\n        width: \"auto\",\r\n        marginTop: \"30px\",\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\r\n            width: 1100,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    editor: {\r\n        borderRadius: \"4px\",\r\n    },\r\n    \"@global\": {\r\n        \".overflow-guard\": {\r\n            borderRadius: \"4px!important\",\r\n        },\r\n    },\r\n    formControl: {\r\n        margin: \"8px 16px 8px 16px\",\r\n    },\r\n    toobar: {\r\n        textAlign: \"right\",\r\n    },\r\n}));\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nexport default function CodeViewer() {\r\n    const { t } = useTranslation();\r\n    const [content, setContent] = useState(\"\");\r\n    const [status, setStatus] = useState(\"\");\r\n    const [loading, setLoading] = useState(true);\r\n    const [suffix, setSuffix] = useState(\"javascript\");\r\n    const [wordWrap, setWordWrap] = useState(\"off\");\r\n\r\n    const math = useRouteMatch();\r\n    const location = useLocation();\r\n    const query = useQuery();\r\n    const { id } = useParams();\r\n    const theme = useTheme();\r\n    const { title } = UseFileSubTitle(query, math, location);\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        const extension = title.split(\".\");\r\n        setSuffix(codePreviewSuffix[extension.pop()]);\r\n        // eslint-disable-next-line\r\n    }, [title]);\r\n\r\n    useEffect(() => {\r\n        let requestURL = \"/file/content/\" + query.get(\"id\");\r\n        if (pathHelper.isSharePage(location.pathname)) {\r\n            requestURL = \"/share/content/\" + id;\r\n            if (query.get(\"share_path\") !== \"\") {\r\n                requestURL +=\r\n                    \"?path=\" + encodeURIComponent(query.get(\"share_path\"));\r\n            }\r\n        }\r\n\r\n        setLoading(true);\r\n        API.get(requestURL, { responseType: \"arraybuffer\" })\r\n            .then((response) => {\r\n                const buffer = new Buffer(response.rawData, \"binary\");\r\n                const textdata = buffer.toString(); // for string\r\n                setContent(textdata);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    t(\"fileManager.errorReadFileContent\", {\r\n                        msg: error.message,\r\n                    }),\r\n                    \"error\"\r\n                );\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n        // eslint-disable-next-line\r\n    }, [math.params[0]]);\r\n\r\n    const save = () => {\r\n        setStatus(\"loading\");\r\n        API.put(\"/file/update/\" + query.get(\"id\"), content)\r\n            .then(() => {\r\n                setStatus(\"success\");\r\n                setTimeout(() => setStatus(\"\"), 2000);\r\n            })\r\n            .catch((error) => {\r\n                setStatus(\"\");\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    const classes = useStyles();\r\n    const isSharePage = pathHelper.isSharePage(location.pathname);\r\n    return (\r\n        <div className={classes.layout}>\r\n            <Paper className={classes.root} elevation={1}>\r\n                <div className={classes.toobar}>\r\n                    <FormControl className={classes.formControl}>\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Switch\r\n                                    onChange={(e) =>\r\n                                        setWordWrap(\r\n                                            e.target.checked ? \"on\" : \"off\"\r\n                                        )\r\n                                    }\r\n                                />\r\n                            }\r\n                            label={t(\"fileManager.wordWrap\")}\r\n                        />\r\n                    </FormControl>\r\n                    <FormControl className={classes.formControl}>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-select\"\r\n                            value={suffix}\r\n                            onChange={(e) => setSuffix(e.target.value)}\r\n                        >\r\n                            {Array.from(\r\n                                new Set(\r\n                                    Object.keys(codePreviewSuffix).map((k) => {\r\n                                        return codePreviewSuffix[k];\r\n                                    })\r\n                                )\r\n                            ).map((extension, index) => (\r\n                                <MenuItem value={extension} key={index}>\r\n                                    {extension}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                </div>\r\n                <Divider />\r\n                {loading && <TextLoading />}\r\n                {!loading && (\r\n                    <Suspense fallback={<TextLoading />}>\r\n                        <MonacoEditor\r\n                            height=\"calc(100vh - 198px)\"\r\n                            language={suffix}\r\n                            theme={\r\n                                theme.palette.type === \"dark\" ? \"vs-dark\" : \"vs\"\r\n                            }\r\n                            value={content}\r\n                            options={{\r\n                                readOnly: isSharePage,\r\n                                extraEditorClassName: classes.editor,\r\n                                wordWrap: wordWrap,\r\n                            }}\r\n                            onChange={(value) => setContent(value)}\r\n                        />\r\n                    </Suspense>\r\n                )}\r\n            </Paper>\r\n            {!isSharePage && <SaveButton onClick={save} status={status} />}\r\n        </div>\r\n    );\r\n}\r\n","export const sizeToString = (bytes) => {\r\n    if (bytes === 0 || bytes === \"0\") return \"0 B\";\r\n    const k = 1024;\r\n    const sizes = [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return (bytes / Math.pow(k, i)).toFixed(1) + \" \" + sizes[i];\r\n};\r\n\r\nexport const fixUrlHash = (path) => {\r\n    return path;\r\n};\r\n\r\nexport const setCookie = (name, value, days) => {\r\n    if (days) {\r\n        const date = new Date();\r\n        date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\r\n    }\r\n    document.cookie = name + \"=\" + (value || \"\") + \"; path=/\";\r\n};\r\n\r\nexport const setGetParameter = (paramName, paramValue) => {\r\n    let url = window.location.href;\r\n\r\n    if (url.indexOf(paramName + \"=\") >= 0) {\r\n        const prefix = url.substring(0, url.indexOf(paramName));\r\n        let suffix = url.substring(url.indexOf(paramName));\r\n        suffix = suffix.substring(suffix.indexOf(\"=\") + 1);\r\n        suffix =\r\n            suffix.indexOf(\"&\") >= 0\r\n                ? suffix.substring(suffix.indexOf(\"&\"))\r\n                : \"\";\r\n        url = prefix + paramName + \"=\" + paramValue + suffix;\r\n    } else {\r\n        if (url.indexOf(\"?\") < 0) url += \"?\" + paramName + \"=\" + paramValue;\r\n        else url += \"&\" + paramName + \"=\" + paramValue;\r\n    }\r\n    if (url === window.location.href) {\r\n        return;\r\n    }\r\n    window.history.pushState(null, null, url);\r\n};\r\n\r\nexport const checkGetParameters = (field) => {\r\n    const url = window.location.href;\r\n    if (url.indexOf(\"?\" + field + \"=\") !== -1) return true;\r\n    else if (url.indexOf(\"&\" + field + \"=\") !== -1) return true;\r\n    return false;\r\n};\r\n\r\nexport const changeThemeColor = (color) => {\r\n    const metaThemeColor = window.document.querySelector(\r\n        \"meta[name=theme-color]\"\r\n    );\r\n    metaThemeColor.setAttribute(\"content\", color);\r\n};\r\n\r\nexport function bufferDecode(value) {\r\n    return Uint8Array.from(atob(value), (c) => c.charCodeAt(0));\r\n}\r\n\r\n// ArrayBuffer to URLBase64\r\nexport function bufferEncode(value) {\r\n    return btoa(String.fromCharCode.apply(null, new Uint8Array(value)))\r\n        .replace(/\\+/g, \"-\")\r\n        .replace(/\\//g, \"_\")\r\n        .replace(/=/g, \"\");\r\n}\r\n\r\nexport function pathBack(path) {\r\n    const folders =\r\n        path !== null\r\n            ? path.substr(1).split(\"/\")\r\n            : this.props.path.substr(1).split(\"/\");\r\n    return \"/\" + folders.slice(0, folders.length - 1).join(\"/\");\r\n}\r\n\r\nexport function filePath(file) {\r\n    return file.path === \"/\"\r\n        ? file.path + file.name\r\n        : file.path + \"/\" + file.name;\r\n}\r\n\r\nexport function hex2bin(hex) {\r\n    return parseInt(hex, 16).toString(2).padStart(8, \"0\");\r\n}\r\n\r\nexport function pathJoin(parts, sep) {\r\n    const separator = sep || \"/\";\r\n    parts = parts.map((part, index) => {\r\n        if (index) {\r\n            part = part.replace(new RegExp(\"^\" + separator), \"\");\r\n        }\r\n        if (index !== parts.length - 1) {\r\n            part = part.replace(new RegExp(separator + \"$\"), \"\");\r\n        }\r\n        return part;\r\n    });\r\n    return parts.join(separator);\r\n}\r\n\r\nexport function basename(path) {\r\n    if (!path) {\r\n        return \"\";\r\n    }\r\n    const pathList = path.split(\"/\");\r\n    pathList.pop();\r\n    return pathList.join(\"/\") === \"\" ? \"/\" : pathList.join(\"/\");\r\n}\r\n\r\nexport function filename(path) {\r\n    const pathList = path.split(\"/\");\r\n    return pathList.pop();\r\n}\r\n\r\nexport function fileNameNoExt(filename) {\r\n    return filename.substring(0, filename.lastIndexOf(\".\")) || filename;\r\n}\r\n\r\nexport function randomStr(length) {\r\n    let result = \"\";\r\n    const characters =\r\n        \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    const charactersLength = characters.length;\r\n    for (let i = 0; i < length; i++) {\r\n        result += characters.charAt(\r\n            Math.floor(Math.random() * charactersLength)\r\n        );\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function getNumber(base, conditions) {\r\n    conditions.forEach((v) => {\r\n        if (v) {\r\n            base++;\r\n        }\r\n    });\r\n    return base;\r\n}\r\n\r\nexport const isMac = () => {\r\n    return navigator.platform.toUpperCase().indexOf(\"MAC\") >= 0;\r\n};\r\n\r\nexport const isMobileSafari = () => {\r\n    const ua = window.navigator.userAgent;\r\n    const iOS = !!ua.match(/iPad/i) || !!ua.match(/iPhone/i);\r\n    const webkit = !!ua.match(/WebKit/i);\r\n    return iOS && webkit && !ua.match(/CriOS/i);\r\n};\r\n\r\nexport function vhCheck() {\r\n    const vh = window.innerHeight;\r\n    document.documentElement.style.setProperty(\"--vh\", `${vh}px`);\r\n}\r\n","import {\r\n    OneDriveError,\r\n    Policy,\r\n    QiniuError,\r\n    Response,\r\n    UpyunError,\r\n} from \"../types\";\r\nimport { sizeToString } from \"../utils\";\r\nimport i18next from \"../../../../i18n\";\r\nimport { AppError } from \"../../../../middleware/Api\";\r\n\r\nexport enum UploaderErrorName {\r\n    InvalidFile = \"InvalidFile\",\r\n    NoPolicySelected = \"NoPolicySelected\",\r\n    UnknownPolicyType = \"UnknownPolicyType\",\r\n    FailedCreateUploadSession = \"FailedCreateUploadSession\",\r\n    FailedDeleteUploadSession = \"FailedDeleteUploadSession\",\r\n    HTTPRequestFailed = \"HTTPRequestFailed\",\r\n    LocalChunkUploadFailed = \"LocalChunkUploadFailed\",\r\n    SlaveChunkUploadFailed = \"SlaveChunkUploadFailed\",\r\n    WriteCtxFailed = \"WriteCtxFailed\",\r\n    RemoveCtxFailed = \"RemoveCtxFailed\",\r\n    ReadCtxFailed = \"ReadCtxFailed\",\r\n    InvalidCtxData = \"InvalidCtxData\",\r\n    CtxExpired = \"CtxExpired\",\r\n    RequestCanceled = \"RequestCanceled\",\r\n    ProcessingTaskDuplicated = \"ProcessingTaskDuplicated\",\r\n    OneDriveChunkUploadFailed = \"OneDriveChunkUploadFailed\",\r\n    OneDriveEmptyFile = \"OneDriveEmptyFile\",\r\n    FailedFinishOneDriveUpload = \"FailedFinishOneDriveUpload\",\r\n    S3LikeChunkUploadFailed = \"S3LikeChunkUploadFailed\",\r\n    S3LikeUploadCallbackFailed = \"S3LikeUploadCallbackFailed\",\r\n    COSUploadCallbackFailed = \"COSUploadCallbackFailed\",\r\n    COSPostUploadFailed = \"COSPostUploadFailed\",\r\n    UpyunPostUploadFailed = \"UpyunPostUploadFailed\",\r\n    QiniuChunkUploadFailed = \"QiniuChunkUploadFailed\",\r\n    FailedFinishOSSUpload = \"FailedFinishOSSUpload\",\r\n    FailedFinishQiniuUpload = \"FailedFinishQiniuUpload\",\r\n    FailedTransformResponse = \"FailedTransformResponse\",\r\n}\r\n\r\nconst RETRY_ERROR_LIST = [\r\n    UploaderErrorName.FailedCreateUploadSession,\r\n    UploaderErrorName.HTTPRequestFailed,\r\n    UploaderErrorName.LocalChunkUploadFailed,\r\n    UploaderErrorName.SlaveChunkUploadFailed,\r\n    UploaderErrorName.RequestCanceled,\r\n    UploaderErrorName.ProcessingTaskDuplicated,\r\n    UploaderErrorName.FailedTransformResponse,\r\n];\r\n\r\nconst RETRY_CODE_LIST = [-1];\r\n\r\nexport class UploaderError implements Error {\r\n    public stack: string | undefined;\r\n    constructor(public name: UploaderErrorName, public message: string) {\r\n        this.stack = new Error().stack;\r\n    }\r\n\r\n    public Message(): string {\r\n        return this.message;\r\n    }\r\n\r\n    public Retryable(): boolean {\r\n        return RETRY_ERROR_LIST.includes(this.name);\r\n    }\r\n}\r\n\r\n// 文件未通过存储策略验证\r\nexport class FileValidateError extends UploaderError {\r\n    // 未通过验证的文件属性\r\n    public field: \"size\" | \"suffix\";\r\n\r\n    // 对应的存储策略\r\n    public policy: Policy;\r\n\r\n    constructor(message: string, field: \"size\" | \"suffix\", policy: Policy) {\r\n        super(UploaderErrorName.InvalidFile, message);\r\n        this.field = field;\r\n        this.policy = policy;\r\n    }\r\n\r\n    public Message(): string {\r\n        if (this.field == \"size\") {\r\n            return i18next.t(`uploader.sizeExceedLimitError`, {\r\n                max: sizeToString(this.policy.maxSize),\r\n            });\r\n        }\r\n\r\n        return i18next.t(`uploader.suffixNotAllowedError`, {\r\n            supported: this.policy.allowedSuffix\r\n                ? this.policy.allowedSuffix.join(\",\")\r\n                : \"*\",\r\n        });\r\n    }\r\n}\r\n\r\n// 未知存储策略\r\nexport class UnknownPolicyError extends UploaderError {\r\n    // 对应的存储策略\r\n    public policy: Policy;\r\n\r\n    constructor(message: string, policy: Policy) {\r\n        super(UploaderErrorName.UnknownPolicyType, message);\r\n        this.policy = policy;\r\n    }\r\n}\r\n\r\n// 后端 API 出错\r\nexport class APIError extends UploaderError {\r\n    private appError: AppError;\r\n    constructor(\r\n        name: UploaderErrorName,\r\n        message: string,\r\n        protected response: Response<any>\r\n    ) {\r\n        super(name, message);\r\n        this.appError = new AppError(response.msg, response.code, response.msg);\r\n    }\r\n\r\n    public Message(): string {\r\n        return `${this.message}: ${this.appError.message}`;\r\n    }\r\n\r\n    public Retryable(): boolean {\r\n        return (\r\n            super.Retryable() && RETRY_CODE_LIST.includes(this.response.code)\r\n        );\r\n    }\r\n}\r\n\r\n// 无法创建上传会话\r\nexport class CreateUploadSessionError extends APIError {\r\n    constructor(response: Response<any>) {\r\n        super(UploaderErrorName.FailedCreateUploadSession, \"\", response);\r\n    }\r\n\r\n    public Message(): string {\r\n        this.message = i18next.t(`uploader.createUploadSessionError`);\r\n        return super.Message();\r\n    }\r\n}\r\n\r\n// 无法删除上传会话\r\nexport class DeleteUploadSessionError extends APIError {\r\n    constructor(response: Response<any>) {\r\n        super(UploaderErrorName.FailedDeleteUploadSession, \"\", response);\r\n    }\r\n\r\n    public Message(): string {\r\n        this.message = i18next.t(`uploader.deleteUploadSessionError`);\r\n        return super.Message();\r\n    }\r\n}\r\n\r\n// HTTP 请求出错\r\nexport class HTTPError extends UploaderError {\r\n    public response?: any;\r\n    constructor(public axiosErr: any, protected url: string) {\r\n        super(UploaderErrorName.HTTPRequestFailed, axiosErr.message);\r\n        this.response = axiosErr.response;\r\n    }\r\n\r\n    public Message(): string {\r\n        return i18next.t(`uploader.requestError`, {\r\n            msg: this.axiosErr,\r\n            url: this.url,\r\n        });\r\n    }\r\n}\r\n\r\n// 本地分块上传失败\r\nexport class LocalChunkUploadError extends APIError {\r\n    constructor(response: Response<any>, protected chunkIndex: number) {\r\n        super(UploaderErrorName.LocalChunkUploadFailed, \"\", response);\r\n    }\r\n\r\n    public Message(): string {\r\n        this.message = i18next.t(`uploader.chunkUploadError`, {\r\n            index: this.chunkIndex,\r\n        });\r\n        return super.Message();\r\n    }\r\n}\r\n\r\n// 无法创建上传会话\r\nexport class RequestCanceledError extends UploaderError {\r\n    constructor() {\r\n        super(UploaderErrorName.RequestCanceled, \"Request canceled\");\r\n    }\r\n}\r\n\r\n// 从机分块上传失败\r\nexport class SlaveChunkUploadError extends APIError {\r\n    constructor(response: Response<any>, protected chunkIndex: number) {\r\n        super(UploaderErrorName.SlaveChunkUploadFailed, \"\", response);\r\n    }\r\n\r\n    public Message(): string {\r\n        this.message = i18next.t(`uploader.chunkUploadError`, {\r\n            index: this.chunkIndex,\r\n        });\r\n        return super.Message();\r\n    }\r\n}\r\n\r\n// 上传任务冲突\r\nexport class ProcessingTaskDuplicatedError extends UploaderError {\r\n    constructor() {\r\n        super(\r\n            UploaderErrorName.ProcessingTaskDuplicated,\r\n            \"Processing task duplicated\"\r\n        );\r\n    }\r\n\r\n    public Message(): string {\r\n        return i18next.t(`uploader.conflictError`);\r\n    }\r\n}\r\n\r\n// OneDrive 分块上传失败\r\nexport class OneDriveChunkError extends UploaderError {\r\n    constructor(public response: OneDriveError) {\r\n        super(\r\n            UploaderErrorName.OneDriveChunkUploadFailed,\r\n            response.error.message\r\n        );\r\n    }\r\n\r\n    public Message(): string {\r\n        let msg =  i18next.t(`uploader.chunkUploadErrorWithMsg`, {\r\n            msg: this.message,\r\n        });\r\n\r\n        if (this.response.error.retryAfterSeconds != undefined){\r\n            msg += \" \"+i18next.t(`uploader.chunkUploadErrorWithRetryAfter`, {\r\n                retryAfter: this.response.error.retryAfterSeconds,\r\n            })\r\n        }\r\n\r\n        return msg;\r\n    }\r\n\r\n    public Retryable(): boolean {\r\n        return (\r\n            super.Retryable() || this.response.error.retryAfterSeconds != undefined\r\n        );\r\n    }\r\n}\r\n\r\n// OneDrive 选择了空文件上传\r\nexport class OneDriveEmptyFileSelected extends UploaderError {\r\n    constructor() {\r\n        super(UploaderErrorName.OneDriveEmptyFile, \"empty file not supported\");\r\n    }\r\n\r\n    public Message(): string {\r\n        return i18next.t(\"uploader.emptyFileError\");\r\n    }\r\n}\r\n\r\n// OneDrive 无法完成文件上传\r\nexport class OneDriveFinishUploadError extends APIError {\r\n    constructor(response: Response<any>) {\r\n        super(UploaderErrorName.FailedFinishOneDriveUpload, \"\", response);\r\n    }\r\n\r\n    public Message(): string {\r\n        this.message = i18next.t(\"uploader.finishUploadError\");\r\n        return super.Message();\r\n    }\r\n}\r\n\r\n// S3 类策略分块上传失败\r\nexport class S3LikeChunkError extends UploaderError {\r\n    constructor(public response: Document) {\r\n        super(\r\n            UploaderErrorName.S3LikeChunkUploadFailed,\r\n            response.getElementsByTagName(\"Message\")[0].innerHTML\r\n        );\r\n    }\r\n\r\n    public Message(): string {\r\n        return i18next.t(`uploader.chunkUploadErrorWithMsg`, {\r\n            msg: this.message,\r\n        });\r\n    }\r\n}\r\n\r\n// OSS 完成传失败\r\nexport class S3LikeFinishUploadError extends UploaderError {\r\n    constructor(public response: Document) {\r\n        super(\r\n            UploaderErrorName.S3LikeChunkUploadFailed,\r\n            response.getElementsByTagName(\"Message\")[0].innerHTML\r\n        );\r\n    }\r\n\r\n    public Message(): string {\r\n        return i18next.t(`uploader.ossFinishUploadError`, {\r\n            msg: this.message,\r\n            code: this.response.getElementsByTagName(\"Code\")[0].innerHTML,\r\n        });\r\n    }\r\n}\r\n\r\n// qiniu 分块上传失败\r\nexport class QiniuChunkError extends UploaderError {\r\n    constructor(public response: QiniuError) {\r\n        super(UploaderErrorName.QiniuChunkUploadFailed, response.error);\r\n    }\r\n\r\n    public Message(): string {\r\n        return i18next.t(`uploader.chunkUploadErrorWithMsg`, {\r\n            msg: this.message,\r\n        });\r\n    }\r\n}\r\n\r\n// qiniu 完成传失败\r\nexport class QiniuFinishUploadError extends UploaderError {\r\n    constructor(public response: QiniuError) {\r\n        super(UploaderErrorName.FailedFinishQiniuUpload, response.error);\r\n    }\r\n\r\n    public Message(): string {\r\n        return i18next.t(`uploader.finishUploadErrorWithMsg`, {\r\n            msg: this.message,\r\n        });\r\n    }\r\n}\r\n\r\n// COS 上传失败\r\nexport class COSUploadError extends UploaderError {\r\n    constructor(public response: Document) {\r\n        super(\r\n            UploaderErrorName.COSPostUploadFailed,\r\n            response.getElementsByTagName(\"Message\")[0].innerHTML\r\n        );\r\n    }\r\n\r\n    public Message(): string {\r\n        return i18next.t(`uploader.cosUploadFailed`, {\r\n            msg: this.message,\r\n            code: this.response.getElementsByTagName(\"Code\")[0].innerHTML,\r\n        });\r\n    }\r\n}\r\n\r\n// COS 无法完成上传回调\r\nexport class COSUploadCallbackError extends APIError {\r\n    constructor(response: Response<any>) {\r\n        super(UploaderErrorName.COSUploadCallbackFailed, \"\", response);\r\n    }\r\n\r\n    public Message(): string {\r\n        this.message = i18next.t(\"uploader.finishUploadError\");\r\n        return super.Message();\r\n    }\r\n}\r\n\r\n// Upyun 上传失败\r\nexport class UpyunUploadError extends UploaderError {\r\n    constructor(public response: UpyunError) {\r\n        super(UploaderErrorName.UpyunPostUploadFailed, response.message);\r\n    }\r\n\r\n    public Message(): string {\r\n        return i18next.t(\"uploader.upyunUploadFailed\", {\r\n            msg: this.message,\r\n        });\r\n    }\r\n}\r\n\r\n// S3 无法完成上传回调\r\nexport class S3LikeUploadCallbackError extends APIError {\r\n    constructor(response: Response<any>) {\r\n        super(UploaderErrorName.S3LikeUploadCallbackFailed, \"\", response);\r\n    }\r\n\r\n    public Message(): string {\r\n        this.message = i18next.t(\"uploader.finishUploadError\");\r\n        return super.Message();\r\n    }\r\n}\r\n\r\n// 无法解析响应\r\nexport class TransformResponseError extends UploaderError {\r\n    constructor(private response: string, parseError: Error) {\r\n        super(UploaderErrorName.FailedTransformResponse, parseError.message);\r\n    }\r\n\r\n    public Message(): string {\r\n        return i18next.t(\"uploader.parseResponseError\", {\r\n            msg: this.message,\r\n            content: this.response,\r\n        });\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classNames from \"classnames\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport WarningIcon from \"@material-ui/icons/Warning\";\r\n\r\nimport {\r\n    IconButton,\r\n    Snackbar,\r\n    SnackbarContent,\r\n    withStyles,\r\n} from \"@material-ui/core\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        snackbar: state.viewUpdate.snackbar,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = () => {\r\n    return {};\r\n};\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n};\r\n\r\nconst styles1 = (theme) => ({\r\n    success: {\r\n        backgroundColor: theme.palette.success.main,\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.info.main,\r\n    },\r\n    warning: {\r\n        backgroundColor: theme.palette.warning.main,\r\n    },\r\n    icon: {\r\n        fontSize: 20,\r\n    },\r\n    iconVariant: {\r\n        opacity: 0.9,\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    message: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n    },\r\n});\r\n\r\nfunction MySnackbarContent(props) {\r\n    const { classes, className, message, onClose, variant, ...other } = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n        <SnackbarContent\r\n            className={classNames(classes[variant], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n                    <Icon\r\n                        className={classNames(\r\n                            classes.icon,\r\n                            classes.iconVariant\r\n                        )}\r\n                    />\r\n                    {message}\r\n                </span>\r\n            }\r\n            action={[\r\n                <IconButton\r\n                    key=\"close\"\r\n                    aria-label=\"Close\"\r\n                    color=\"inherit\"\r\n                    className={classes.close}\r\n                    onClick={onClose}\r\n                >\r\n                    <CloseIcon className={classes.icon} />\r\n                </IconButton>,\r\n            ]}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\nMySnackbarContent.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    className: PropTypes.string,\r\n    message: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf([\"alert\", \"success\", \"warning\", \"error\", \"info\"])\r\n        .isRequired,\r\n};\r\n\r\nconst MySnackbarContentWrapper = withStyles(styles1)(MySnackbarContent);\r\nconst styles = (theme) => ({\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n});\r\nclass SnackbarCompoment extends Component {\r\n    state = {\r\n        open: false,\r\n    };\r\n\r\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\r\n        if (nextProps.snackbar.toggle !== this.props.snackbar.toggle) {\r\n            this.setState({ open: true });\r\n        }\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: this.props.snackbar.vertical,\r\n                    horizontal: this.props.snackbar.horizontal,\r\n                }}\r\n                open={this.state.open}\r\n                autoHideDuration={6000}\r\n                onClose={this.handleClose}\r\n            >\r\n                <MySnackbarContentWrapper\r\n                    onClose={this.handleClose}\r\n                    variant={this.props.snackbar.color}\r\n                    message={this.props.snackbar.msg}\r\n                />\r\n            </Snackbar>\r\n        );\r\n    }\r\n}\r\n\r\nconst AlertBar = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(SnackbarCompoment));\r\n\r\nexport default AlertBar;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    AccountArrowRight,\r\n    AccountPlus,\r\n    DesktopMacDashboard,\r\n    HomeAccount,\r\n    LogoutVariant,\r\n} from \"mdi-material-ui\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Auth from \"../../middleware/Auth\";\r\nimport {\r\n    Avatar,\r\n    Chip,\r\n    Divider,\r\n    ListItemIcon,\r\n    MenuItem,\r\n    Popover,\r\n    Typography,\r\n    withStyles,\r\n} from \"@material-ui/core\";\r\nimport API from \"../../middleware/Api\";\r\nimport pathHelper from \"../../utils/page\";\r\nimport {\r\n    setSessionStatus,\r\n    setUserPopover,\r\n    toggleSnackbar,\r\n} from \"../../redux/explorer\";\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        anchorEl: state.viewUpdate.userPopoverAnchorEl,\r\n        registerEnabled: state.siteConfig.registerEnabled,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setUserPopover: (anchor) => {\r\n            dispatch(setUserPopover(anchor));\r\n        },\r\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\r\n        },\r\n        setSessionStatus: (status) => {\r\n            dispatch(setSessionStatus(status));\r\n        },\r\n    };\r\n};\r\nconst styles = () => ({\r\n    avatar: {\r\n        width: \"30px\",\r\n        height: \"30px\",\r\n    },\r\n    header: {\r\n        display: \"flex\",\r\n        padding: \"20px 20px 20px 20px\",\r\n    },\r\n    largeAvatar: {\r\n        height: \"90px\",\r\n        width: \"90px\",\r\n    },\r\n    info: {\r\n        marginLeft: \"10px\",\r\n        width: \"139px\",\r\n    },\r\n    badge: {\r\n        marginTop: \"10px\",\r\n    },\r\n    visitorMenu: {\r\n        width: 200,\r\n    },\r\n});\r\n\r\nclass UserAvatarPopoverCompoment extends Component {\r\n    handleClose = () => {\r\n        this.props.setUserPopover(null);\r\n    };\r\n\r\n    openURL = (url) => {\r\n        window.location.href = url;\r\n    };\r\n\r\n    sigOut = () => {\r\n        API.delete(\"/user/session/\")\r\n            .then(() => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"您已退出登录\",\r\n                    \"success\"\r\n                );\r\n                Auth.signout();\r\n                window.location.reload();\r\n                this.props.setSessionStatus(false);\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"warning\"\r\n                );\r\n            })\r\n            .then(() => {\r\n                this.handleClose();\r\n            });\r\n    };\r\n\r\n    render() {\r\n        const { classes, t } = this.props;\r\n        const user = Auth.GetUser();\r\n        const isAdminPage = pathHelper.isAdminPage(\r\n            this.props.location.pathname\r\n        );\r\n\r\n        return (\r\n            <Popover\r\n                open={this.props.anchorEl !== null}\r\n                onClose={this.handleClose}\r\n                anchorEl={this.props.anchorEl}\r\n                anchorOrigin={{\r\n                    vertical: \"bottom\",\r\n                    horizontal: \"right\",\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: \"top\",\r\n                    horizontal: \"right\",\r\n                }}\r\n            >\r\n                {!Auth.Check() && (\r\n                    <div className={classes.visitorMenu}>\r\n                        <Divider />\r\n                        <MenuItem\r\n                            onClick={() => this.props.history.push(\"/login\")}\r\n                        >\r\n                            <ListItemIcon>\r\n                                <AccountArrowRight />\r\n                            </ListItemIcon>\r\n                            {t(\"login.signIn\")}\r\n                        </MenuItem>\r\n                        {this.props.registerEnabled && (\r\n                            <MenuItem\r\n                                onClick={() =>\r\n                                    this.props.history.push(\"/signup\")\r\n                                }\r\n                            >\r\n                                <ListItemIcon>\r\n                                    <AccountPlus />\r\n                                </ListItemIcon>\r\n                                {t(\"login.signUp\")}\r\n                            </MenuItem>\r\n                        )}\r\n                    </div>\r\n                )}\r\n                {Auth.Check() && (\r\n                    <div>\r\n                        <div className={classes.header}>\r\n                            <div className={classes.largeAvatarContainer}>\r\n                                <Avatar\r\n                                    className={classes.largeAvatar}\r\n                                    src={\r\n                                        \"/api/v3/user/avatar/\" + user.id + \"/l\"\r\n                                    }\r\n                                />\r\n                            </div>\r\n                            <div className={classes.info}>\r\n                                <Typography noWrap>{user.nickname}</Typography>\r\n                                <Typography\r\n                                    color=\"textSecondary\"\r\n                                    style={{\r\n                                        fontSize: \"0.875rem\",\r\n                                    }}\r\n                                    noWrap\r\n                                >\r\n                                    {user.user_name}\r\n                                </Typography>\r\n                                <Chip\r\n                                    className={classes.badge}\r\n                                    color={\r\n                                        user.group.id === 1\r\n                                            ? \"secondary\"\r\n                                            : \"default\"\r\n                                    }\r\n                                    label={user.group.name}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <Divider />\r\n                            {!isAdminPage && (\r\n                                <MenuItem\r\n                                    style={{\r\n                                        padding: \" 11px 16px 11px 16px\",\r\n                                    }}\r\n                                    onClick={() => {\r\n                                        this.handleClose();\r\n                                        this.props.history.push(\r\n                                            \"/profile/\" + user.id\r\n                                        );\r\n                                    }}\r\n                                >\r\n                                    <ListItemIcon>\r\n                                        <HomeAccount />\r\n                                    </ListItemIcon>\r\n                                    {t(\"navbar.myProfile\")}\r\n                                </MenuItem>\r\n                            )}\r\n                            {user.group.id === 1 && (\r\n                                <MenuItem\r\n                                    style={{\r\n                                        padding: \" 11px 16px 11px 16px\",\r\n                                    }}\r\n                                    onClick={() => {\r\n                                        this.handleClose();\r\n                                        this.props.history.push(\"/admin/home\");\r\n                                    }}\r\n                                >\r\n                                    <ListItemIcon>\r\n                                        <DesktopMacDashboard />\r\n                                    </ListItemIcon>\r\n                                    {t(\"navbar.dashboard\")}\r\n                                </MenuItem>\r\n                            )}\r\n\r\n                            <MenuItem\r\n                                style={{\r\n                                    padding: \" 11px 16px 11px 16px\",\r\n                                }}\r\n                                onClick={this.sigOut}\r\n                            >\r\n                                <ListItemIcon>\r\n                                    <LogoutVariant />\r\n                                </ListItemIcon>\r\n                                {t(\"login.logout\")}\r\n                            </MenuItem>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </Popover>\r\n        );\r\n    }\r\n}\r\n\r\nUserAvatarPopoverCompoment.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst UserAvatarPopover = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(\r\n    withStyles(styles)(\r\n        withRouter(withTranslation()(UserAvatarPopoverCompoment))\r\n    )\r\n);\r\n\r\nexport default UserAvatarPopover;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport SettingIcon from \"@material-ui/icons/Settings\";\r\nimport UserAvatarPopover from \"./UserAvatarPopover\";\r\nimport { AccountCircle } from \"mdi-material-ui\";\r\nimport Auth from \"../../middleware/Auth\";\r\nimport {\r\n    Avatar,\r\n    Grow,\r\n    IconButton,\r\n    Tooltip,\r\n    withStyles,\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport pathHelper from \"../../utils/page\";\r\nimport DarkModeSwitcher from \"./DarkModeSwitcher\";\r\nimport { Home } from \"@material-ui/icons\";\r\nimport { setUserPopover } from \"../../redux/explorer\";\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selected: state.explorer.selected,\r\n        isMultiple: state.explorer.selectProps.isMultiple,\r\n        withFolder: state.explorer.selectProps.withFolder,\r\n        withFile: state.explorer.selectProps.withFile,\r\n        isLogin: state.viewUpdate.isLogin,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setUserPopover: (anchor) => {\r\n            dispatch(setUserPopover(anchor));\r\n        },\r\n    };\r\n};\r\n\r\nconst styles = (theme) => ({\r\n    mobileHidden: {\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            display: \"none\",\r\n        },\r\n        whiteSpace: \"nowrap\",\r\n    },\r\n    avatar: {\r\n        width: \"30px\",\r\n        height: \"30px\",\r\n    },\r\n    header: {\r\n        display: \"flex\",\r\n        padding: \"20px 20px 20px 20px\",\r\n    },\r\n    largeAvatar: {\r\n        height: \"90px\",\r\n        width: \"90px\",\r\n    },\r\n    info: {\r\n        marginLeft: \"10px\",\r\n        width: \"139px\",\r\n    },\r\n    badge: {\r\n        marginTop: \"10px\",\r\n    },\r\n    visitorMenu: {\r\n        width: 200,\r\n    },\r\n});\r\n\r\nclass UserAvatarCompoment extends Component {\r\n    state = {\r\n        anchorEl: null,\r\n    };\r\n\r\n    showUserInfo = (e) => {\r\n        this.props.setUserPopover(e.currentTarget);\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            anchorEl: null,\r\n        });\r\n    };\r\n\r\n    openURL = (url) => {\r\n        window.location.href = url;\r\n    };\r\n\r\n    returnHome = () => {\r\n        window.location.href = \"/home\";\r\n    };\r\n\r\n    render() {\r\n        const { classes, t } = this.props;\r\n        const loginCheck = Auth.Check(this.props.isLogin);\r\n        const user = Auth.GetUser(this.props.isLogin);\r\n        const isAdminPage = pathHelper.isAdminPage(\r\n            this.props.location.pathname\r\n        );\r\n\r\n        return (\r\n            <div className={classes.mobileHidden}>\r\n                <Grow\r\n                    in={\r\n                        this.props.selected.length <= 1 &&\r\n                        !(!this.props.isMultiple && this.props.withFile)\r\n                    }\r\n                >\r\n                    <div>\r\n                        {!isAdminPage && (\r\n                            <>\r\n                                <DarkModeSwitcher position=\"top\" />\r\n                                {loginCheck && (\r\n                                    <>\r\n                                        <Tooltip\r\n                                            title={t(\"navbar.setting\")}\r\n                                            placement=\"bottom\"\r\n                                        >\r\n                                            <IconButton\r\n                                                onClick={() =>\r\n                                                    this.props.history.push(\r\n                                                        \"/setting?\"\r\n                                                    )\r\n                                                }\r\n                                                color=\"inherit\"\r\n                                            >\r\n                                                <SettingIcon />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    </>\r\n                                )}\r\n                            </>\r\n                        )}\r\n                        {isAdminPage && (\r\n                            <Tooltip\r\n                                title={t(\"navbar.backToHomepage\")}\r\n                                placement=\"bottom\"\r\n                            >\r\n                                <IconButton\r\n                                    color=\"inherit\"\r\n                                    onClick={this.returnHome}\r\n                                >\r\n                                    <Home />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        )}\r\n                        <IconButton color=\"inherit\" onClick={this.showUserInfo}>\r\n                            {!loginCheck && <AccountCircle />}\r\n                            {loginCheck && (\r\n                                <Avatar\r\n                                    src={\r\n                                        \"/api/v3/user/avatar/\" + user.id + \"/s\"\r\n                                    }\r\n                                    className={classes.avatar}\r\n                                />\r\n                            )}\r\n                        </IconButton>{\" \"}\r\n                    </div>\r\n                </Grow>\r\n                <UserAvatarPopover />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nUserAvatarCompoment.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst UserAvatar = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withRouter(withTranslation()(UserAvatarCompoment))));\r\n\r\nexport default UserAvatar;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport { connect } from \"react-redux\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport MusicNote from \"@material-ui/icons/MusicNote\";\r\nimport BackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport OpenIcon from \"@material-ui/icons/OpenInNew\";\r\nimport DownloadIcon from \"@material-ui/icons/CloudDownload\";\r\nimport RenameIcon from \"@material-ui/icons/BorderColor\";\r\nimport MoveIcon from \"@material-ui/icons/Input\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport { isPreviewable } from \"../../config\";\r\nimport { changeThemeColor, sizeToString, vhCheck } from \"../../utils\";\r\nimport Uploader from \"../Uploader/Uploader.js\";\r\nimport pathHelper from \"../../utils/page\";\r\nimport SezrchBar from \"./SearchBar\";\r\nimport StorageBar from \"./StorageBar\";\r\nimport UserAvatar from \"./UserAvatar\";\r\nimport UserInfo from \"./UserInfo\";\r\nimport {\r\n    FolderDownload,\r\n    AccountArrowRight,\r\n    AccountPlus,\r\n    LogoutVariant,\r\n} from \"mdi-material-ui\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n    AppBar,\r\n    Drawer,\r\n    Grow,\r\n    Hidden,\r\n    IconButton,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    SwipeableDrawer,\r\n    Toolbar,\r\n    Tooltip,\r\n    Typography,\r\n    withStyles,\r\n    withTheme,\r\n} from \"@material-ui/core\";\r\nimport Auth from \"../../middleware/Auth\";\r\nimport API from \"../../middleware/Api\";\r\nimport FileTag from \"./FileTags\";\r\nimport { Assignment, Devices, MoreHoriz, Settings } from \"@material-ui/icons\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport SubActions from \"../FileManager/Navigator/SubActions\";\r\nimport {\r\n    audioPreviewSetIsOpen,\r\n    changeContextMenu,\r\n    drawerToggleAction,\r\n    navigateTo,\r\n    openCreateFolderDialog,\r\n    openLoadingDialog,\r\n    openMoveDialog,\r\n    openMusicDialog,\r\n    openPreview,\r\n    openRemoveDialog,\r\n    openRenameDialog,\r\n    openShareDialog,\r\n    saveFile,\r\n    setSelectedTarget,\r\n    setSessionStatus,\r\n    showImgPreivew,\r\n    toggleSnackbar,\r\n} from \"../../redux/explorer\";\r\nimport {\r\n    startBatchDownload,\r\n    startDirectoryDownload,\r\n    startDownload,\r\n} from \"../../redux/explorer/action\";\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\nvhCheck();\r\nconst drawerWidth = 240;\r\nconst drawerWidthMobile = 270;\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        desktopOpen: state.viewUpdate.open,\r\n        selected: state.explorer.selected,\r\n        isMultiple: state.explorer.selectProps.isMultiple,\r\n        withFolder: state.explorer.selectProps.withFolder,\r\n        withFile: state.explorer.selectProps.withFile,\r\n        path: state.navigator.path,\r\n        title: state.siteConfig.title,\r\n        subTitle: state.viewUpdate.subTitle,\r\n        loadUploader: state.viewUpdate.loadUploader,\r\n        isLogin: state.viewUpdate.isLogin,\r\n        shareInfo: state.viewUpdate.shareInfo,\r\n        registerEnabled: state.siteConfig.registerEnabled,\r\n        audioPreviewPlayingName: state.explorer.audioPreview.playingName,\r\n        audioPreviewIsOpen: state.explorer.audioPreview.isOpen,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        handleDesktopToggle: (open) => {\r\n            dispatch(drawerToggleAction(open));\r\n        },\r\n        setSelectedTarget: (targets) => {\r\n            dispatch(setSelectedTarget(targets));\r\n        },\r\n        navigateTo: (path) => {\r\n            dispatch(navigateTo(path));\r\n        },\r\n        openCreateFolderDialog: () => {\r\n            dispatch(openCreateFolderDialog());\r\n        },\r\n        changeContextMenu: (type, open) => {\r\n            dispatch(changeContextMenu(type, open));\r\n        },\r\n        saveFile: () => {\r\n            dispatch(saveFile());\r\n        },\r\n        openMusicDialog: () => {\r\n            dispatch(openMusicDialog());\r\n        },\r\n        showImgPreivew: (first) => {\r\n            dispatch(showImgPreivew(first));\r\n        },\r\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\r\n        },\r\n        openRenameDialog: () => {\r\n            dispatch(openRenameDialog());\r\n        },\r\n        openMoveDialog: () => {\r\n            dispatch(openMoveDialog());\r\n        },\r\n        openRemoveDialog: () => {\r\n            dispatch(openRemoveDialog());\r\n        },\r\n        openShareDialog: () => {\r\n            dispatch(openShareDialog());\r\n        },\r\n        openLoadingDialog: (text) => {\r\n            dispatch(openLoadingDialog(text));\r\n        },\r\n        setSessionStatus: () => {\r\n            dispatch(setSessionStatus());\r\n        },\r\n        openPreview: (share) => {\r\n            dispatch(openPreview(share));\r\n        },\r\n        audioPreviewOpen: () => {\r\n            dispatch(audioPreviewSetIsOpen(true));\r\n        },\r\n        startBatchDownload: (share) => {\r\n            dispatch(startBatchDownload(share));\r\n        },\r\n        startDirectoryDownload: (share) => {\r\n            dispatch(startDirectoryDownload(share));\r\n        },\r\n        startDownload: (share, file) => {\r\n            dispatch(startDownload(share, file));\r\n        },\r\n    };\r\n};\r\n\r\nconst styles = (theme) => ({\r\n    appBar: {\r\n        marginLeft: drawerWidth,\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            marginLeft: drawerWidthMobile,\r\n        },\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: \" background-color 250ms\",\r\n    },\r\n\r\n    drawer: {\r\n        width: 0,\r\n        flexShrink: 0,\r\n    },\r\n    drawerDesktop: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    icon: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    menuButton: {\r\n        marginRight: 20,\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            display: \"none\",\r\n        },\r\n    },\r\n    menuButtonDesktop: {\r\n        marginRight: 20,\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            display: \"none\",\r\n        },\r\n    },\r\n    menuIcon: {\r\n        marginRight: 20,\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n        width: drawerWidthMobile,\r\n    },\r\n    drawerPaperDesktop: {\r\n        width: drawerWidth,\r\n    },\r\n    upDrawer: {\r\n        overflowX: \"hidden\",\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            height: \"100%\",\r\n            justifyContent: \"space-between\",\r\n        },\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create(\"width\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create(\"width\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: \"hidden\",\r\n        width: 0,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    badge: {\r\n        top: 1,\r\n        right: -15,\r\n    },\r\n    nested: {\r\n        paddingLeft: theme.spacing(4),\r\n    },\r\n    sectionForFile: {\r\n        display: \"flex\",\r\n    },\r\n    extendedIcon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    addButton: {\r\n        marginLeft: \"40px\",\r\n        marginTop: \"25px\",\r\n        marginBottom: \"15px\",\r\n    },\r\n    fabButton: {\r\n        borderRadius: \"100px\",\r\n    },\r\n    badgeFix: {\r\n        right: \"10px\",\r\n    },\r\n    iconFix: {\r\n        marginLeft: \"16px\",\r\n    },\r\n    dividerFix: {\r\n        marginTop: \"8px\",\r\n    },\r\n    folderShareIcon: {\r\n        verticalAlign: \"sub\",\r\n        marginRight: \"5px\",\r\n    },\r\n    shareInfoContainer: {\r\n        display: \"flex\",\r\n        marginTop: \"15px\",\r\n        marginBottom: \"20px\",\r\n        marginLeft: \"28px\",\r\n        textDecoration: \"none\",\r\n    },\r\n    shareAvatar: {\r\n        width: \"40px\",\r\n        height: \"40px\",\r\n    },\r\n    stickFooter: {\r\n        bottom: \"0px\",\r\n        position: \"absolute\",\r\n        backgroundColor: theme.palette.background.paper,\r\n        width: \"100%\",\r\n    },\r\n    ownerInfo: {\r\n        marginLeft: \"10px\",\r\n        width: \"150px\",\r\n    },\r\n    minStickDrawer: {\r\n        overflowY: \"auto\",\r\n    },\r\n});\r\nclass NavbarCompoment extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mobileOpen: false,\r\n        };\r\n        this.UploaderRef = React.createRef();\r\n    }\r\n\r\n    UNSAFE_componentWillMount() {\r\n        this.unlisten = this.props.history.listen(() => {\r\n            this.setState(() => ({ mobileOpen: false }));\r\n        });\r\n    }\r\n    componentWillUnmount() {\r\n        this.unlisten();\r\n    }\r\n\r\n    componentDidMount() {\r\n        changeThemeColor(\r\n            this.props.selected.length <= 1 &&\r\n                !(!this.props.isMultiple && this.props.withFile)\r\n                ? this.props.theme.palette.primary.main\r\n                : this.props.theme.palette.background.default\r\n        );\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\r\n        if (\r\n            (this.props.selected.length === 0) !==\r\n            (nextProps.selected.length === 0)\r\n        ) {\r\n            changeThemeColor(\r\n                !(this.props.selected.length === 0)\r\n                    ? this.props.theme.palette.type === \"dark\"\r\n                        ? this.props.theme.palette.background.default\r\n                        : this.props.theme.palette.primary.main\r\n                    : this.props.theme.palette.background.default\r\n            );\r\n        }\r\n    };\r\n\r\n    handleDrawerToggle = () => {\r\n        this.setState((state) => ({ mobileOpen: !state.mobileOpen }));\r\n    };\r\n\r\n    openDownload = () => {\r\n        this.props.startDownload(this.props.shareInfo, this.props.selected[0]);\r\n    };\r\n\r\n    openDirectoryDownload = (e) => {\r\n        this.props.startDirectoryDownload(this.props.shareInfo);\r\n    };\r\n\r\n    archiveDownload = (e) => {\r\n        this.props.startBatchDownload(this.props.shareInfo);\r\n    };\r\n\r\n    signOut = () => {\r\n        API.delete(\"/user/session/\")\r\n            .then(() => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    this.props.t(\"login.loggedOut\"),\r\n                    \"success\"\r\n                );\r\n                Auth.signout();\r\n                window.location.reload();\r\n                this.props.setSessionStatus(false);\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"warning\"\r\n                );\r\n            })\r\n            .finally(() => {\r\n                this.handleClose();\r\n            });\r\n    };\r\n\r\n    render() {\r\n        const { classes, t } = this.props;\r\n        const user = Auth.GetUser(this.props.isLogin);\r\n        const isHomePage = pathHelper.isHomePage(this.props.location.pathname);\r\n        const isSharePage = pathHelper.isSharePage(\r\n            this.props.location.pathname\r\n        );\r\n\r\n        const drawer = (\r\n            <div id=\"container\" className={classes.upDrawer}>\r\n                {pathHelper.isMobile() && <UserInfo />}\r\n\r\n                {Auth.Check(this.props.isLogin) && (\r\n                    <>\r\n                        <div className={classes.minStickDrawer}>\r\n                            <FileTag />\r\n                            <List>\r\n                                <ListItem\r\n                                    button\r\n                                    key=\"我的分享\"\r\n                                    onClick={() =>\r\n                                        this.props.history.push(\"/shares?\")\r\n                                    }\r\n                                >\r\n                                    <ListItemIcon>\r\n                                        <ShareIcon\r\n                                            className={classes.iconFix}\r\n                                        />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText\r\n                                        primary={t(\"navbar.myShare\")}\r\n                                    />\r\n                                </ListItem>\r\n                                {user.group.allowRemoteDownload && (\r\n                                    <ListItem\r\n                                        button\r\n                                        key=\"离线下载\"\r\n                                        onClick={() =>\r\n                                            this.props.history.push(\"/aria2?\")\r\n                                        }\r\n                                    >\r\n                                        <ListItemIcon>\r\n                                            <DownloadIcon\r\n                                                className={classes.iconFix}\r\n                                            />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText\r\n                                            primary={t(\"navbar.remoteDownload\")}\r\n                                        />\r\n                                    </ListItem>\r\n                                )}\r\n                                {user.group.webdav && (\r\n                                    <ListItem\r\n                                        button\r\n                                        key=\"WebDAV\"\r\n                                        onClick={() =>\r\n                                            this.props.history.push(\"/webdav?\")\r\n                                        }\r\n                                    >\r\n                                        <ListItemIcon>\r\n                                            <Devices\r\n                                                className={classes.iconFix}\r\n                                            />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText\r\n                                            primary={t(\"navbar.connect\")}\r\n                                        />\r\n                                    </ListItem>\r\n                                )}\r\n\r\n                                <ListItem\r\n                                    button\r\n                                    key=\"任务队列\"\r\n                                    onClick={() =>\r\n                                        this.props.history.push(\"/tasks?\")\r\n                                    }\r\n                                >\r\n                                    <ListItemIcon>\r\n                                        <Assignment\r\n                                            className={classes.iconFix}\r\n                                        />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText\r\n                                        primary={t(\"navbar.taskQueue\")}\r\n                                    />\r\n                                </ListItem>\r\n                                {pathHelper.isMobile() && (\r\n                                    <>\r\n                                        <Divider />\r\n                                        <ListItem\r\n                                            button\r\n                                            key=\"个人设置\"\r\n                                            onClick={() =>\r\n                                                this.props.history.push(\r\n                                                    \"/setting?\"\r\n                                                )\r\n                                            }\r\n                                        >\r\n                                            <ListItemIcon>\r\n                                                <Settings\r\n                                                    className={classes.iconFix}\r\n                                                />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText\r\n                                                primary={t(\"navbar.setting\")}\r\n                                            />\r\n                                        </ListItem>\r\n\r\n                                        <ListItem\r\n                                            button\r\n                                            key=\"退出登录\"\r\n                                            onClick={this.signOut}\r\n                                        >\r\n                                            <ListItemIcon>\r\n                                                <LogoutVariant\r\n                                                    className={classes.iconFix}\r\n                                                />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText\r\n                                                primary={t(\"login.logout\")}\r\n                                            />\r\n                                        </ListItem>\r\n                                    </>\r\n                                )}\r\n                            </List>\r\n                        </div>\r\n                        <div>\r\n                            <StorageBar></StorageBar>\r\n                        </div>\r\n                    </>\r\n                )}\r\n\r\n                {!Auth.Check(this.props.isLogin) && (\r\n                    <div>\r\n                        <ListItem\r\n                            button\r\n                            key=\"登录\"\r\n                            onClick={() => this.props.history.push(\"/login\")}\r\n                        >\r\n                            <ListItemIcon>\r\n                                <AccountArrowRight\r\n                                    className={classes.iconFix}\r\n                                />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t(\"login.signIn\")} />\r\n                        </ListItem>\r\n                        {this.props.registerEnabled && (\r\n                            <ListItem\r\n                                button\r\n                                key=\"注册\"\r\n                                onClick={() =>\r\n                                    this.props.history.push(\"/signup\")\r\n                                }\r\n                            >\r\n                                <ListItemIcon>\r\n                                    <AccountPlus className={classes.iconFix} />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t(\"login.signUp\")} />\r\n                            </ListItem>\r\n                        )}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n        const iOS =\r\n            process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\r\n        return (\r\n            <div>\r\n                <AppBar\r\n                    position=\"fixed\"\r\n                    className={classes.appBar}\r\n                    color={\r\n                        this.props.theme.palette.type !== \"dark\" &&\r\n                        this.props.selected.length === 0\r\n                            ? \"primary\"\r\n                            : \"default\"\r\n                    }\r\n                >\r\n                    <Toolbar>\r\n                        {this.props.selected.length === 0 && (\r\n                            <IconButton\r\n                                color=\"inherit\"\r\n                                aria-label=\"Open drawer\"\r\n                                onClick={this.handleDrawerToggle}\r\n                                className={classes.menuButton}\r\n                            >\r\n                                <MenuIcon />\r\n                            </IconButton>\r\n                        )}\r\n                        {this.props.selected.length === 0 && (\r\n                            <IconButton\r\n                                color=\"inherit\"\r\n                                aria-label=\"Open drawer\"\r\n                                onClick={() =>\r\n                                    this.props.handleDesktopToggle(\r\n                                        !this.props.desktopOpen\r\n                                    )\r\n                                }\r\n                                className={classes.menuButtonDesktop}\r\n                            >\r\n                                <MenuIcon />\r\n                            </IconButton>\r\n                        )}\r\n                        {this.props.selected.length > 0 &&\r\n                            (isHomePage ||\r\n                                pathHelper.isSharePage(\r\n                                    this.props.location.pathname\r\n                                )) && (\r\n                                <Grow in={this.props.selected.length > 0}>\r\n                                    <IconButton\r\n                                        color=\"inherit\"\r\n                                        className={classes.menuIcon}\r\n                                        onClick={() =>\r\n                                            this.props.setSelectedTarget([])\r\n                                        }\r\n                                    >\r\n                                        <BackIcon />\r\n                                    </IconButton>\r\n                                </Grow>\r\n                            )}\r\n                        {this.props.selected.length === 0 && (\r\n                            <Typography\r\n                                variant=\"h6\"\r\n                                color=\"inherit\"\r\n                                noWrap\r\n                                onClick={() => {\r\n                                    this.props.history.push(\"/\");\r\n                                }}\r\n                            >\r\n                                {this.props.subTitle\r\n                                    ? this.props.subTitle\r\n                                    : this.props.title}\r\n                            </Typography>\r\n                        )}\r\n\r\n                        {!this.props.isMultiple &&\r\n                            (this.props.withFile || this.props.withFolder) &&\r\n                            !pathHelper.isMobile() && (\r\n                                <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                                    {this.props.selected[0].name}{\" \"}\r\n                                    {this.props.withFile &&\r\n                                        (isHomePage ||\r\n                                            pathHelper.isSharePage(\r\n                                                this.props.location.pathname\r\n                                            )) &&\r\n                                        \"(\" +\r\n                                            sizeToString(\r\n                                                this.props.selected[0].size\r\n                                            ) +\r\n                                            \")\"}\r\n                                </Typography>\r\n                            )}\r\n\r\n                        {this.props.selected.length > 1 &&\r\n                            !pathHelper.isMobile() && (\r\n                                <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                                    {t(\"navbar.objectsSelected\", {\r\n                                        num: this.props.selected.length,\r\n                                    })}\r\n                                </Typography>\r\n                            )}\r\n                        {this.props.selected.length === 0 && <SezrchBar />}\r\n                        <div className={classes.grow} />\r\n                        {this.props.selected.length > 0 &&\r\n                            (isHomePage || isSharePage) && (\r\n                                <div className={classes.sectionForFile}>\r\n                                    {!this.props.isMultiple &&\r\n                                        this.props.withFile &&\r\n                                        isPreviewable(\r\n                                            this.props.selected[0].name\r\n                                        ) && (\r\n                                            <Grow\r\n                                                in={\r\n                                                    !this.props.isMultiple &&\r\n                                                    this.props.withFile &&\r\n                                                    isPreviewable(\r\n                                                        this.props.selected[0]\r\n                                                            .name\r\n                                                    )\r\n                                                }\r\n                                            >\r\n                                                <Tooltip\r\n                                                    title={t(\r\n                                                        \"fileManager.open\"\r\n                                                    )}\r\n                                                >\r\n                                                    <IconButton\r\n                                                        color=\"inherit\"\r\n                                                        onClick={() =>\r\n                                                            this.props.openPreview(\r\n                                                                this.props\r\n                                                                    .shareInfo\r\n                                                            )\r\n                                                        }\r\n                                                    >\r\n                                                        <OpenIcon />\r\n                                                    </IconButton>\r\n                                                </Tooltip>\r\n                                            </Grow>\r\n                                        )}\r\n                                    {!this.props.isMultiple &&\r\n                                        this.props.withFile && (\r\n                                            <Grow\r\n                                                in={\r\n                                                    !this.props.isMultiple &&\r\n                                                    this.props.withFile\r\n                                                }\r\n                                            >\r\n                                                <Tooltip\r\n                                                    title={t(\r\n                                                        \"fileManager.download\"\r\n                                                    )}\r\n                                                >\r\n                                                    <IconButton\r\n                                                        color=\"inherit\"\r\n                                                        onClick={() =>\r\n                                                            this.openDownload()\r\n                                                        }\r\n                                                    >\r\n                                                        <DownloadIcon />\r\n                                                    </IconButton>\r\n                                                </Tooltip>\r\n                                            </Grow>\r\n                                        )}\r\n                                    {(this.props.isMultiple ||\r\n                                        this.props.withFolder) &&\r\n                                        window.showDirectoryPicker &&\r\n                                        window.isSecureContext && (\r\n                                            <Grow\r\n                                                in={\r\n                                                    (this.props.isMultiple ||\r\n                                                        this.props\r\n                                                            .withFolder) &&\r\n                                                    window.showDirectoryPicker &&\r\n                                                    window.isSecureContext\r\n                                                }\r\n                                            >\r\n                                                <Tooltip\r\n                                                    title={t(\r\n                                                        \"fileManager.download\"\r\n                                                    )}\r\n                                                >\r\n                                                    <IconButton\r\n                                                        color=\"inherit\"\r\n                                                        onClick={() =>\r\n                                                            this.openDirectoryDownload()\r\n                                                        }\r\n                                                    >\r\n                                                        <FolderDownload />\r\n                                                    </IconButton>\r\n                                                </Tooltip>\r\n                                            </Grow>\r\n                                        )}\r\n                                    {(this.props.isMultiple ||\r\n                                        this.props.withFolder) && (\r\n                                        <Grow\r\n                                            in={\r\n                                                this.props.isMultiple ||\r\n                                                this.props.withFolder\r\n                                            }\r\n                                        >\r\n                                            <Tooltip\r\n                                                title={t(\r\n                                                    \"fileManager.batchDownload\"\r\n                                                )}\r\n                                            >\r\n                                                <IconButton\r\n                                                    color=\"inherit\"\r\n                                                    disableClickAway\r\n                                                    onClick={() =>\r\n                                                        this.archiveDownload()\r\n                                                    }\r\n                                                >\r\n                                                    <DownloadIcon />\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                        </Grow>\r\n                                    )}\r\n                                    {!this.props.isMultiple &&\r\n                                        !pathHelper.isMobile() &&\r\n                                        !isSharePage && (\r\n                                            <Grow in={!this.props.isMultiple}>\r\n                                                <Tooltip\r\n                                                    title={t(\r\n                                                        \"fileManager.share\"\r\n                                                    )}\r\n                                                >\r\n                                                    <IconButton\r\n                                                        color=\"inherit\"\r\n                                                        onClick={() =>\r\n                                                            this.props.openShareDialog()\r\n                                                        }\r\n                                                    >\r\n                                                        <ShareIcon />\r\n                                                    </IconButton>\r\n                                                </Tooltip>\r\n                                            </Grow>\r\n                                        )}\r\n                                    {!this.props.isMultiple && !isSharePage && (\r\n                                        <Grow in={!this.props.isMultiple}>\r\n                                            <Tooltip\r\n                                                title={t(\"fileManager.rename\")}\r\n                                            >\r\n                                                <IconButton\r\n                                                    color=\"inherit\"\r\n                                                    onClick={() =>\r\n                                                        this.props.openRenameDialog()\r\n                                                    }\r\n                                                >\r\n                                                    <RenameIcon />\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                        </Grow>\r\n                                    )}\r\n                                    {!isSharePage && (\r\n                                        <div style={{ display: \"flex\" }}>\r\n                                            {!pathHelper.isMobile() && (\r\n                                                <Grow\r\n                                                    in={\r\n                                                        this.props.selected\r\n                                                            .length !== 0 &&\r\n                                                        !pathHelper.isMobile()\r\n                                                    }\r\n                                                >\r\n                                                    <Tooltip\r\n                                                        title={t(\r\n                                                            \"fileManager.move\"\r\n                                                        )}\r\n                                                    >\r\n                                                        <IconButton\r\n                                                            color=\"inherit\"\r\n                                                            onClick={() =>\r\n                                                                this.props.openMoveDialog()\r\n                                                            }\r\n                                                        >\r\n                                                            <MoveIcon />\r\n                                                        </IconButton>\r\n                                                    </Tooltip>\r\n                                                </Grow>\r\n                                            )}\r\n\r\n                                            <Grow\r\n                                                in={\r\n                                                    this.props.selected\r\n                                                        .length !== 0\r\n                                                }\r\n                                            >\r\n                                                <Tooltip\r\n                                                    title={t(\r\n                                                        \"fileManager.delete\"\r\n                                                    )}\r\n                                                >\r\n                                                    <IconButton\r\n                                                        color=\"inherit\"\r\n                                                        onClick={() =>\r\n                                                            this.props.openRemoveDialog()\r\n                                                        }\r\n                                                    >\r\n                                                        <DeleteIcon />\r\n                                                    </IconButton>\r\n                                                </Tooltip>\r\n                                            </Grow>\r\n\r\n                                            {pathHelper.isMobile() && (\r\n                                                <Grow\r\n                                                    in={\r\n                                                        this.props.selected\r\n                                                            .length !== 0 &&\r\n                                                        pathHelper.isMobile()\r\n                                                    }\r\n                                                >\r\n                                                    <Tooltip\r\n                                                        title={t(\r\n                                                            \"fileManager.moreActions\"\r\n                                                        )}\r\n                                                    >\r\n                                                        <IconButton\r\n                                                            color=\"inherit\"\r\n                                                            onClick={() =>\r\n                                                                this.props.changeContextMenu(\r\n                                                                    \"file\",\r\n                                                                    true\r\n                                                                )\r\n                                                            }\r\n                                                        >\r\n                                                            <MoreHoriz />\r\n                                                        </IconButton>\r\n                                                    </Tooltip>\r\n                                                </Grow>\r\n                                            )}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            )}\r\n                        {this.props.selected.length <= 1 &&\r\n                            !(!this.props.isMultiple && this.props.withFile) &&\r\n                            this.props.audioPreviewPlayingName != null && (\r\n                                <IconButton\r\n                                    title={t(\"navbar.music\")}\r\n                                    className={classes.sideButton}\r\n                                    onClick={this.props.audioPreviewOpen}\r\n                                    color={\"inherit\"}\r\n                                >\r\n                                    <MusicNote fontSize={\"default\"} />\r\n                                </IconButton>\r\n                            )}\r\n\r\n                        {this.props.selected.length === 0 && <UserAvatar />}\r\n                        {this.props.selected.length === 0 &&\r\n                            pathHelper.isMobile() &&\r\n                            (isHomePage || this.props.shareInfo) && (\r\n                                <SubActions inherit />\r\n                            )}\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Uploader />\r\n\r\n                <Hidden smUp implementation=\"css\">\r\n                    <SwipeableDrawer\r\n                        container={this.props.container}\r\n                        variant=\"temporary\"\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        anchor=\"left\"\r\n                        open={this.state.mobileOpen}\r\n                        onClose={this.handleDrawerToggle}\r\n                        onOpen={() =>\r\n                            this.setState(() => ({ mobileOpen: true }))\r\n                        }\r\n                        disableDiscovery={iOS}\r\n                        ModalProps={{\r\n                            keepMounted: true, // Better open performance on mobile.\r\n                        }}\r\n                    >\r\n                        {drawer}\r\n                    </SwipeableDrawer>\r\n                </Hidden>\r\n                <Hidden xsDown implementation=\"css\">\r\n                    <Drawer\r\n                        classes={{\r\n                            paper: classes.drawerPaperDesktop,\r\n                        }}\r\n                        className={classNames(classes.drawer, {\r\n                            [classes.drawerOpen]: this.props.desktopOpen,\r\n                            [classes.drawerClose]: !this.props.desktopOpen,\r\n                        })}\r\n                        variant=\"persistent\"\r\n                        anchor=\"left\"\r\n                        open={this.props.desktopOpen}\r\n                    >\r\n                        <div className={classes.toolbar} />\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nNavbarCompoment.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    theme: PropTypes.object.isRequired,\r\n};\r\n\r\nconst Navbar = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(\r\n    withTheme(\r\n        withStyles(styles)(withRouter(withTranslation()(NavbarCompoment)))\r\n    )\r\n);\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\r\nimport FileIcon from \"@material-ui/icons/InsertDriveFile\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n    Fade,\r\n    InputBase,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    MenuItem,\r\n    Paper,\r\n    Popper,\r\n    Typography,\r\n    withStyles,\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router\";\r\nimport pathHelper from \"../../utils/page\";\r\nimport { configure, HotKeys } from \"react-hotkeys\";\r\nimport { searchMyFile } from \"../../redux/explorer\";\r\nimport FolderIcon from \"@material-ui/icons/Folder\";\r\nimport { Trans, withTranslation } from \"react-i18next\";\r\n\r\nconfigure({\r\n    ignoreTags: [],\r\n});\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        path: state.navigator.path,\r\n        search: state.explorer.search,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        searchMyFile: (keywords, path) => {\r\n            dispatch(searchMyFile(keywords, path));\r\n        },\r\n    };\r\n};\r\n\r\nconst styles = (theme) => ({\r\n    search: {\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            display: \"none\",\r\n        },\r\n        position: \"relative\",\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        \"&:hover\": {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: \"100%\",\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            marginLeft: theme.spacing(7.2),\r\n            width: \"auto\",\r\n        },\r\n    },\r\n    searchIcon: {\r\n        width: theme.spacing(9),\r\n        height: \"100%\",\r\n        position: \"absolute\",\r\n        pointerEvents: \"none\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n    },\r\n    inputRoot: {\r\n        color: \"inherit\",\r\n        width: \"100%\",\r\n    },\r\n    inputInput: {\r\n        paddingTop: theme.spacing(1),\r\n        paddingRight: theme.spacing(1),\r\n        paddingBottom: theme.spacing(1),\r\n        paddingLeft: theme.spacing(7),\r\n        transition: theme.transitions.create(\"width\"),\r\n        width: \"100%\",\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            width: 200,\r\n            \"&:focus\": {\r\n                width: 300,\r\n            },\r\n        },\r\n    },\r\n    suggestBox: {\r\n        zIndex: \"9999\",\r\n        width: 364,\r\n    },\r\n});\r\n\r\nconst keyMap = {\r\n    SEARCH: \"enter\",\r\n};\r\n\r\nclass SearchBarCompoment extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            anchorEl: null,\r\n            input: \"\",\r\n        };\r\n    }\r\n\r\n    handlers = {\r\n        SEARCH: (e) => {\r\n            if (pathHelper.isHomePage(this.props.location.pathname)) {\r\n                this.searchMyFile(\"\")();\r\n            } else {\r\n                this.searchShare();\r\n            }\r\n            e.target.blur();\r\n        },\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        const { currentTarget } = event;\r\n        this.input = event.target.value;\r\n        this.setState({\r\n            anchorEl: currentTarget,\r\n            input: event.target.value,\r\n        });\r\n    };\r\n\r\n    cancelSuggest = () => {\r\n        this.setState({\r\n            input: \"\",\r\n        });\r\n    };\r\n\r\n    searchMyFile = (path) => () => {\r\n        this.props.searchMyFile(\"keywords/\" + this.input, path);\r\n    };\r\n\r\n    searchShare = () => {\r\n        this.props.history.push(\r\n            \"/search?keywords=\" + encodeURIComponent(this.input)\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const { classes, t } = this.props;\r\n        const { anchorEl } = this.state;\r\n        const id = this.state.input !== \"\" ? \"simple-popper\" : null;\r\n        const isHomePage = pathHelper.isHomePage(this.props.location.pathname);\r\n\r\n        return (\r\n            <div className={classes.search}>\r\n                <div className={classes.searchIcon}>\r\n                    <SearchIcon />\r\n                </div>\r\n                <HotKeys keyMap={keyMap} handlers={this.handlers}>\r\n                    <InputBase\r\n                        placeholder={t(\"navbar.searchPlaceholder\")}\r\n                        classes={{\r\n                            root: classes.inputRoot,\r\n                            input: classes.inputInput,\r\n                        }}\r\n                        onChange={this.handleChange}\r\n                        onBlur={this.cancelSuggest}\r\n                        value={this.state.input}\r\n                    />\r\n                </HotKeys>\r\n                <Popper\r\n                    id={id}\r\n                    open={this.state.input !== \"\"}\r\n                    anchorEl={anchorEl}\r\n                    className={classes.suggestBox}\r\n                    transition\r\n                >\r\n                    {({ TransitionProps }) => (\r\n                        <Fade {...TransitionProps} timeout={350}>\r\n                            <Paper square={true}>\r\n                                {isHomePage && (\r\n                                    <MenuItem onClick={this.searchMyFile(\"\")}>\r\n                                        <ListItemIcon className={classes.icon}>\r\n                                            <FileIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText\r\n                                            classes={{\r\n                                                primary: classes.primary,\r\n                                            }}\r\n                                            primary={\r\n                                                <Typography noWrap>\r\n                                                    <Trans\r\n                                                        i18nKey=\"navbar.searchInFiles\"\r\n                                                        values={{\r\n                                                            name: this.state\r\n                                                                .input,\r\n                                                        }}\r\n                                                        components={[\r\n                                                            <strong key={0} />,\r\n                                                        ]}\r\n                                                    />\r\n                                                </Typography>\r\n                                            }\r\n                                        />\r\n                                    </MenuItem>\r\n                                )}\r\n\r\n                                {isHomePage &&\r\n                                    this.props.path !== \"/\" &&\r\n                                    !this.props.search && (\r\n                                        <MenuItem\r\n                                            onClick={this.searchMyFile(\r\n                                                this.props.path\r\n                                            )}\r\n                                        >\r\n                                            <ListItemIcon\r\n                                                className={classes.icon}\r\n                                            >\r\n                                                <FolderIcon />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText\r\n                                                classes={{\r\n                                                    primary: classes.primary,\r\n                                                }}\r\n                                                primary={\r\n                                                    <Typography noWrap>\r\n                                                        <Trans\r\n                                                            i18nKey=\"navbar.searchInFolders\"\r\n                                                            values={{\r\n                                                                name: this.state\r\n                                                                    .input,\r\n                                                            }}\r\n                                                            components={[\r\n                                                                <strong\r\n                                                                    key={0}\r\n                                                                />,\r\n                                                            ]}\r\n                                                        />\r\n                                                    </Typography>\r\n                                                }\r\n                                            />\r\n                                        </MenuItem>\r\n                                    )}\r\n\r\n                                <MenuItem onClick={this.searchShare}>\r\n                                    <ListItemIcon className={classes.icon}>\r\n                                        <ShareIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText\r\n                                        classes={{ primary: classes.primary }}\r\n                                        primary={\r\n                                            <Typography noWrap>\r\n                                                <Trans\r\n                                                    i18nKey=\"navbar.searchInShares\"\r\n                                                    values={{\r\n                                                        name: this.state.input,\r\n                                                    }}\r\n                                                    components={[\r\n                                                        <strong key={0} />,\r\n                                                    ]}\r\n                                                />\r\n                                            </Typography>\r\n                                        }\r\n                                    />\r\n                                </MenuItem>\r\n                            </Paper>\r\n                        </Fade>\r\n                    )}\r\n                </Popper>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSearchBarCompoment.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst SearchBar = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withRouter(withTranslation()(SearchBarCompoment))));\r\n\r\nexport default SearchBar;\r\n","import { Task } from \"../types\";\r\nimport Logger from \"../logger\";\r\nimport { UploaderError, UploaderErrorName } from \"../errors\";\r\nimport { ChunkProgress } from \"../uploader/chunk\";\r\n\r\nexport const sizeToString = (bytes: number): string => {\r\n    if (bytes === 0) return \"0 B\";\r\n    const k = 1024;\r\n    const sizes = [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return (bytes / Math.pow(k, i)).toFixed(1) + \" \" + sizes[i];\r\n};\r\n\r\n// 文件分块\r\nexport function getChunks(\r\n    file: File,\r\n    chunkByteSize: number | undefined\r\n): Blob[] {\r\n    // 如果 chunkByteSize 比文件大或为0，则直接取文件的大小\r\n    if (!chunkByteSize || chunkByteSize > file.size || chunkByteSize == 0) {\r\n        chunkByteSize = file.size;\r\n    }\r\n\r\n    const chunks: Blob[] = [];\r\n    const count = Math.ceil(file.size / chunkByteSize);\r\n    for (let i = 0; i < count; i++) {\r\n        const chunk = file.slice(\r\n            chunkByteSize * i,\r\n            i === count - 1 ? file.size : chunkByteSize * (i + 1)\r\n        );\r\n        chunks.push(chunk);\r\n    }\r\n\r\n    if (chunks.length == 0) {\r\n        chunks.push(file.slice(0));\r\n    }\r\n    return chunks;\r\n}\r\n\r\nexport function sumChunk(list: ChunkProgress[]) {\r\n    return list.reduce((data, loaded) => data + loaded.loaded, 0);\r\n}\r\n\r\nconst resumeKeyPrefix = \"cd_upload_ctx_\";\r\n\r\nfunction isTask(toBeDetermined: Task | string): toBeDetermined is Task {\r\n    return !!(toBeDetermined as Task).name;\r\n}\r\n\r\nexport function getResumeCtxKey(task: Task | string): string {\r\n    if (isTask(task)) {\r\n        return `${resumeKeyPrefix}name_${task.name}_dst_${task.dst}_size_${task.size}_policy_${task.policy.id}`;\r\n    }\r\n\r\n    return task;\r\n}\r\n\r\nexport function setResumeCtx(task: Task, logger: Logger) {\r\n    const ctxKey = getResumeCtxKey(task);\r\n    try {\r\n        localStorage.setItem(ctxKey, JSON.stringify(task));\r\n    } catch (err) {\r\n        logger.warn(\r\n            new UploaderError(\r\n                UploaderErrorName.WriteCtxFailed,\r\n                `setResumeCtx failed: ${ctxKey}`\r\n            )\r\n        );\r\n    }\r\n}\r\n\r\nexport function removeResumeCtx(task: Task | string, logger: Logger) {\r\n    const ctxKey = getResumeCtxKey(task);\r\n    try {\r\n        localStorage.removeItem(ctxKey);\r\n    } catch (err) {\r\n        logger.warn(\r\n            new UploaderError(\r\n                UploaderErrorName.RemoveCtxFailed,\r\n                `removeResumeCtx failed. key: ${ctxKey}`\r\n            )\r\n        );\r\n    }\r\n}\r\n\r\nexport function cleanupResumeCtx(logger: Logger) {\r\n    for (let i = 0; i < localStorage.length; i++) {\r\n        const key = localStorage.key(i);\r\n        if (key && key.startsWith(resumeKeyPrefix)) {\r\n            try {\r\n                localStorage.removeItem(key);\r\n            } catch (err) {\r\n                logger.warn(\r\n                    new UploaderError(\r\n                        UploaderErrorName.RemoveCtxFailed,\r\n                        `removeResumeCtx failed. key: ${key}`\r\n                    )\r\n                );\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function getResumeCtx(task: Task | string, logger: Logger): Task | null {\r\n    const ctxKey = getResumeCtxKey(task);\r\n    let localInfoString: string | null = null;\r\n    try {\r\n        localInfoString = localStorage.getItem(ctxKey);\r\n    } catch {\r\n        logger.warn(\r\n            new UploaderError(\r\n                UploaderErrorName.ReadCtxFailed,\r\n                `getResumeCtx failed. key: ${ctxKey}`\r\n            )\r\n        );\r\n    }\r\n\r\n    if (localInfoString == null) {\r\n        return null;\r\n    }\r\n\r\n    let localInfo: Task | null = null;\r\n    try {\r\n        localInfo = JSON.parse(localInfoString);\r\n    } catch {\r\n        // 本地信息已被破坏，直接删除\r\n        removeResumeCtx(task, logger);\r\n        logger.warn(\r\n            new UploaderError(\r\n                UploaderErrorName.InvalidCtxData,\r\n                `getResumeCtx failed to parse. key: ${ctxKey}`\r\n            )\r\n        );\r\n    }\r\n\r\n    if (\r\n        localInfo &&\r\n        localInfo.session &&\r\n        localInfo.session.expires < Math.floor(Date.now() / 1000)\r\n    ) {\r\n        removeResumeCtx(task, logger);\r\n        logger.warn(\r\n            new UploaderError(\r\n                UploaderErrorName.CtxExpired,\r\n                `upload session already expired at ${localInfo.session.expires}. key: ${ctxKey}`\r\n            )\r\n        );\r\n        return null;\r\n    }\r\n\r\n    return localInfo;\r\n}\r\n\r\nexport function listResumeCtx(logger: Logger): Task[] {\r\n    const res: Task[] = [];\r\n    for (let i = 0, len = localStorage.length; i < len; i++) {\r\n        const key = localStorage.key(i);\r\n        if (key && key.startsWith(resumeKeyPrefix)) {\r\n            const value = getResumeCtx(key, logger);\r\n            if (value) {\r\n                res.push(value);\r\n            }\r\n        }\r\n    }\r\n\r\n    return res;\r\n}\r\n\r\nexport function OBJtoXML(obj: any): string {\r\n    let xml = \"\";\r\n    for (const prop in obj) {\r\n        xml += \"<\" + prop + \">\";\r\n        if (Array.isArray(obj[prop])) {\r\n            for (const array of obj[prop]) {\r\n                // A real botch fix here\r\n                xml += \"</\" + prop + \">\";\r\n                xml += \"<\" + prop + \">\";\r\n\r\n                xml += OBJtoXML(new Object(array));\r\n            }\r\n        } else if (typeof obj[prop] == \"object\") {\r\n            xml += OBJtoXML(new Object(obj[prop]));\r\n        } else {\r\n            xml += obj[prop];\r\n        }\r\n        xml += \"</\" + prop + \">\";\r\n    }\r\n    return xml.replace(/<\\/?[0-9]{1,}>/g, \"\");\r\n}\r\n\r\nexport function getFileInput(id: number, isFolder: boolean): HTMLInputElement {\r\n    const input = document.createElement(\"input\");\r\n    input.type = \"file\";\r\n    input.id = `upload-file-input-${id}`;\r\n    if (isFolder) {\r\n        input.id = `upload-folder-input-${id}`;\r\n        input.setAttribute(\"webkitdirectory\", \"true\");\r\n        input.setAttribute(\"mozdirectory\", \"true\");\r\n    } else {\r\n        input.id = `upload-file-input-${id}`;\r\n        input.multiple = true;\r\n    }\r\n    input.hidden = true;\r\n    document.body.appendChild(input);\r\n    return input;\r\n}\r\n\r\nexport function pathJoin(parts: string[], sep = \"/\"): string {\r\n    parts = parts.map((part, index) => {\r\n        if (index) {\r\n            part = part.replace(new RegExp(\"^\" + sep), \"\");\r\n        }\r\n        if (index !== parts.length - 1) {\r\n            part = part.replace(new RegExp(sep + \"$\"), \"\");\r\n        }\r\n        return part;\r\n    });\r\n    return parts.join(sep);\r\n}\r\n\r\nfunction basename(path: string): string {\r\n    const pathList = path.split(\"/\");\r\n    pathList.pop();\r\n    return pathList.join(\"/\") === \"\" ? \"/\" : pathList.join(\"/\");\r\n}\r\n\r\nexport function trimPrefix(src: string, prefix: string): string {\r\n    if (src.startsWith(prefix)) {\r\n        return src.slice(prefix.length);\r\n    }\r\n    return src;\r\n}\r\n\r\nexport function getDirectoryUploadDst(dst: string, file: any): string {\r\n    let relPath = file.webkitRelativePath;\r\n    if (!relPath || relPath == \"\") {\r\n        relPath = file.fsPath;\r\n        if (!relPath || relPath == \"\") {\r\n            return dst;\r\n        }\r\n    }\r\n\r\n    relPath = trimPrefix(relPath, \"/\");\r\n\r\n    return basename(pathJoin([dst, relPath]));\r\n}\r\n\r\n// Wrap readEntries in a promise to make working with readEntries easier\r\nasync function readEntriesPromise(directoryReader: any): Promise<any> {\r\n    try {\r\n        return await new Promise((resolve, reject) => {\r\n            directoryReader.readEntries(resolve, reject);\r\n        });\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nasync function readFilePromise(fileReader: any, path: string): Promise<any> {\r\n    try {\r\n        return await new Promise((resolve, reject) => {\r\n            fileReader.file((file: any) => {\r\n                file.fsPath = path;\r\n                resolve(file);\r\n            });\r\n        });\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\n// Get all the entries (files or sub-directories) in a directory by calling readEntries until it returns empty array\r\nasync function readAllDirectoryEntries(directoryReader: any): Promise<any> {\r\n    const entries: any[] = [];\r\n    let readEntries = await readEntriesPromise(directoryReader);\r\n    while (readEntries.length > 0) {\r\n        entries.push(...readEntries);\r\n        readEntries = await readEntriesPromise(directoryReader);\r\n    }\r\n    return entries;\r\n}\r\n\r\n// Drop handler function to get all files\r\nexport async function getAllFileEntries(\r\n    dataTransferItemList: DataTransferItemList\r\n): Promise<File[]> {\r\n    const fileEntries: any[] = [];\r\n    // Use BFS to traverse entire directory/file structure\r\n    const queue: any[] = [];\r\n    // Unfortunately dataTransferItemList is not iterable i.e. no forEach\r\n    for (let i = 0; i < dataTransferItemList.length; i++) {\r\n        const fileEntry = dataTransferItemList[i].webkitGetAsEntry();\r\n        if (!fileEntry) {\r\n            const file = dataTransferItemList[i].getAsFile();\r\n            if (file) {\r\n                fileEntries.push(file);\r\n            }\r\n        }\r\n\r\n        queue.push(dataTransferItemList[i].webkitGetAsEntry());\r\n    }\r\n    while (queue.length > 0) {\r\n        const entry = queue.shift();\r\n        if (!entry) {\r\n            continue;\r\n        }\r\n        if (entry.isFile) {\r\n            fileEntries.push(await readFilePromise(entry, entry.fullPath));\r\n        } else if (entry.isDirectory) {\r\n            const reader = entry.createReader();\r\n            const entries: any = await readAllDirectoryEntries(reader);\r\n            queue.push(...entries);\r\n        }\r\n    }\r\n    return fileEntries;\r\n}\r\n\r\nexport function isFileDrop(e: DragEvent): boolean {\r\n    return !!e.dataTransfer && e.dataTransfer.types.includes(\"Files\");\r\n}\r\n","export * from \"./pool\";\r\nexport * from \"./helper\";\r\nexport * from \"./validator\";\r\nexport * from \"./request\";\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport StorageIcon from \"@material-ui/icons/Storage\";\r\nimport { connect } from \"react-redux\";\r\nimport API from \"../../middleware/Api\";\r\nimport { sizeToString } from \"../../utils\";\r\n\r\nimport {\r\n    Divider,\r\n    LinearProgress,\r\n    Tooltip,\r\n    Typography,\r\n    withStyles,\r\n} from \"@material-ui/core\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\r\nimport { withRouter } from \"react-router\";\r\nimport { toggleSnackbar } from \"../../redux/explorer\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        refresh: state.viewUpdate.storageRefresh,\r\n        isLogin: state.viewUpdate.isLogin,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\r\n        },\r\n    };\r\n};\r\n\r\nconst styles = (theme) => ({\r\n    iconFix: {\r\n        marginLeft: \"32px\",\r\n        marginRight: \"17px\",\r\n        color: theme.palette.text.secondary,\r\n        marginTop: \"2px\",\r\n    },\r\n    textFix: {\r\n        padding: \" 0 0 0 16px\",\r\n    },\r\n    storageContainer: {\r\n        display: \"flex\",\r\n        marginTop: \"15px\",\r\n        textAlign: \"left\",\r\n        marginBottom: \"11px\",\r\n    },\r\n    detail: {\r\n        width: \"100%\",\r\n        marginRight: \"35px\",\r\n    },\r\n    info: {\r\n        width: \"131px\",\r\n        overflow: \"hidden\",\r\n        textOverflow: \"ellipsis\",\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            width: \"162px\",\r\n        },\r\n        marginTop: \"5px\",\r\n    },\r\n    bar: {\r\n        marginTop: \"5px\",\r\n    },\r\n    stickFooter: {\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n});\r\n\r\n// TODO 使用 hooks 重构\r\nclass StorageBarCompoment extends Component {\r\n    state = {\r\n        percent: 0,\r\n        used: null,\r\n        total: null,\r\n        showExpand: false,\r\n    };\r\n\r\n    firstLoad = true;\r\n\r\n    componentDidMount = () => {\r\n        if (this.firstLoad && this.props.isLogin) {\r\n            this.firstLoad = !this.firstLoad;\r\n            this.updateStatus();\r\n        }\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        this.firstLoad = false;\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\r\n        if (\r\n            (this.props.isLogin && this.props.refresh !== nextProps.refresh) ||\r\n            (this.props.isLogin !== nextProps.isLogin && nextProps.isLogin)\r\n        ) {\r\n            this.updateStatus();\r\n        }\r\n    };\r\n\r\n    updateStatus = () => {\r\n        let percent = 0;\r\n        API.get(\"/user/storage\")\r\n            .then((response) => {\r\n                if (response.data.used / response.data.total >= 1) {\r\n                    percent = 100;\r\n                    this.props.toggleSnackbar(\r\n                        \"top\",\r\n                        \"right\",\r\n                        this.props.t(\"navbar.exceedQuota\"),\r\n                        \"warning\"\r\n                    );\r\n                } else {\r\n                    percent = (response.data.used / response.data.total) * 100;\r\n                }\r\n                this.setState({\r\n                    percent: percent,\r\n                    used: sizeToString(response.data.used),\r\n                    total: sizeToString(response.data.total),\r\n                });\r\n            })\r\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n            .catch(() => {});\r\n    };\r\n\r\n    render() {\r\n        const { classes, t } = this.props;\r\n        return (\r\n            <div\r\n                onMouseEnter={() => this.setState({ showExpand: true })}\r\n                onMouseLeave={() => this.setState({ showExpand: false })}\r\n                className={classes.stickFooter}\r\n            >\r\n                <Divider />\r\n                <ButtonBase>\r\n                    <div className={classes.storageContainer}>\r\n                        <StorageIcon className={classes.iconFix} />\r\n                        <div className={classes.detail}>\r\n                            <Typography variant={\"subtitle2\"}>\r\n                                {t(\"navbar.storage\")}\r\n                            </Typography>\r\n                            <LinearProgress\r\n                                className={classes.bar}\r\n                                color=\"secondary\"\r\n                                variant=\"determinate\"\r\n                                value={this.state.percent}\r\n                            />\r\n                            <div className={classes.info}>\r\n                                <Tooltip\r\n                                    title={t(\"navbar.storageDetail\", {\r\n                                        used:\r\n                                            this.state.used === null\r\n                                                ? \" -- \"\r\n                                                : this.state.used,\r\n                                        total:\r\n                                            this.state.total === null\r\n                                                ? \" -- \"\r\n                                                : this.state.total,\r\n                                    })}\r\n                                    placement=\"top\"\r\n                                >\r\n                                    <Typography\r\n                                        variant=\"caption\"\r\n                                        noWrap\r\n                                        color=\"textSecondary\"\r\n                                    >\r\n                                        {this.state.used === null\r\n                                            ? \" -- \"\r\n                                            : this.state.used}\r\n                                        {\" / \"}\r\n                                        {this.state.total === null\r\n                                            ? \" -- \"\r\n                                            : this.state.total}\r\n                                    </Typography>\r\n                                </Tooltip>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </ButtonBase>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nStorageBarCompoment.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst StorageBar = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withRouter(withTranslation()(StorageBarCompoment))));\r\n\r\nexport default StorageBar;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Typography, withStyles } from \"@material-ui/core\";\r\nimport Auth from \"../../middleware/Auth\";\r\nimport DarkModeSwitcher from \"./DarkModeSwitcher\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { setUserPopover } from \"../../redux/explorer\";\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLogin: state.viewUpdate.isLogin,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setUserPopover: (anchor) => {\r\n            dispatch(setUserPopover(anchor));\r\n        },\r\n    };\r\n};\r\n\r\nconst styles = (theme) => ({\r\n    userNav: {\r\n        height: \"170px\",\r\n        backgroundColor: theme.palette.primary.main,\r\n        padding: \"20px 20px 2em\",\r\n        backgroundImage:\r\n            \"url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1600 900'%3E%3Cpolygon fill='\" +\r\n            theme.palette.primary.light.replace(\"#\", \"%23\") +\r\n            \"' points='957 450 539 900 1396 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.primary.dark.replace(\"#\", \"%23\") +\r\n            \"' points='957 450 872.9 900 1396 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\r\n            \"' points='-60 900 398 662 816 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\r\n            \"' points='337 900 398 662 816 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.secondary.light.replace(\"#\", \"%23\") +\r\n            \"' points='1203 546 1552 900 876 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\r\n            \"' points='1203 546 1552 900 1162 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.primary.dark.replace(\"#\", \"%23\") +\r\n            \"' points='641 695 886 900 367 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.primary.main.replace(\"#\", \"%23\") +\r\n            \"' points='587 900 641 695 886 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.secondary.light.replace(\"#\", \"%23\") +\r\n            \"' points='1710 900 1401 632 1096 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\r\n            \"' points='1710 900 1401 632 1365 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\r\n            \"' points='1210 900 971 687 725 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\r\n            \"' points='943 900 1210 900 971 687'/%3E%3C/svg%3E\\\")\",\r\n        backgroundSize: \"cover\",\r\n    },\r\n    avatar: {\r\n        display: \"block\",\r\n        width: \"70px\",\r\n        height: \"70px\",\r\n        border: \" 2px solid #fff\",\r\n        borderRadius: \"50%\",\r\n        overflow: \"hidden\",\r\n        boxShadow:\r\n            \"0 2px 5px 0 rgba(0,0,0,0.16), 0 2px 10px 0 rgba(0,0,0,0.12)\",\r\n    },\r\n    avatarImg: {\r\n        width: \"66px\",\r\n        height: \"66px\",\r\n    },\r\n    nickName: {\r\n        color: \"#fff\",\r\n        marginTop: \"15px\",\r\n        fontSize: \"17px\",\r\n    },\r\n    flexAvatar: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"flex-start\",\r\n    },\r\n    groupName: {\r\n        color: \"#ffffff\",\r\n        opacity: \"0.54\",\r\n    },\r\n    storageCircle: {\r\n        width: \"200px\",\r\n    },\r\n});\r\n\r\nclass UserInfoCompoment extends Component {\r\n    showUserInfo = (e) => {\r\n        this.props.setUserPopover(e.currentTarget);\r\n    };\r\n\r\n    render() {\r\n        const { classes, t } = this.props;\r\n        const isLogin = Auth.Check(this.props.isLogin);\r\n        const user = Auth.GetUser(this.props.isLogin);\r\n\r\n        return (\r\n            <div className={classes.userNav}>\r\n                <div className={classes.flexAvatar}>\r\n                    {/* eslint-disable-next-line */}\r\n                    <a onClick={this.showUserInfo} className={classes.avatar}>\r\n                        {isLogin && (\r\n                            <Avatar\r\n                                src={\"/api/v3/user/avatar/\" + user.id + \"/l\"}\r\n                                className={classes.avatarImg}\r\n                            />\r\n                        )}\r\n                        {!isLogin && (\r\n                            <Avatar\r\n                                src={\"/api/v3/user/avatar/0/l\"}\r\n                                className={classes.avatarImg}\r\n                            />\r\n                        )}\r\n                    </a>\r\n                    <DarkModeSwitcher position=\"left\" />\r\n                </div>\r\n                <div className={classes.storageCircle}>\r\n                    <Typography\r\n                        className={classes.nickName}\r\n                        component=\"h2\"\r\n                        noWrap\r\n                    >\r\n                        {isLogin ? user.nickname : t(\"navbar.notLoginIn\")}\r\n                    </Typography>\r\n                    <Typography\r\n                        className={classes.groupName}\r\n                        component=\"h2\"\r\n                        color=\"textSecondary\"\r\n                        noWrap\r\n                    >\r\n                        {isLogin ? user.group.name : t(\"navbar.visitor\")}\r\n                    </Typography>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nUserInfoCompoment.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst UserInfo = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withTranslation()(UserInfoCompoment)));\r\n\r\nexport default UserInfo;\r\n","import React, { Suspense, useCallback, useState } from \"react\";\r\nimport {\r\n    Divider,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    makeStyles,\r\n    withStyles,\r\n} from \"@material-ui/core\";\r\nimport { Clear, KeyboardArrowRight } from \"@material-ui/icons\";\r\nimport classNames from \"classnames\";\r\nimport FolderShared from \"@material-ui/icons/FolderShared\";\r\nimport UploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport VideoIcon from \"@material-ui/icons/VideoLibraryOutlined\";\r\nimport ImageIcon from \"@material-ui/icons/CollectionsOutlined\";\r\nimport MusicIcon from \"@material-ui/icons/LibraryMusicOutlined\";\r\nimport DocIcon from \"@material-ui/icons/FileCopyOutlined\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport pathHelper from \"../../utils/page\";\r\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Auth from \"../../middleware/Auth\";\r\nimport {\r\n    Circle,\r\n    CircleOutline,\r\n    FolderHeartOutline,\r\n    Heart,\r\n    HeartOutline,\r\n    Hexagon,\r\n    HexagonOutline,\r\n    Hexagram,\r\n    HexagramOutline,\r\n    Rhombus,\r\n    RhombusOutline,\r\n    Square,\r\n    SquareOutline,\r\n    TagPlus,\r\n    Triangle,\r\n    TriangleOutline,\r\n} from \"mdi-material-ui\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport API from \"../../middleware/Api\";\r\nimport { navigateTo, searchMyFile, toggleSnackbar } from \"../../redux/explorer\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst ExpansionPanel = withStyles({\r\n    root: {\r\n        maxWidth: \"100%\",\r\n        boxShadow: \"none\",\r\n        \"&:not(:last-child)\": {\r\n            borderBottom: 0,\r\n        },\r\n        \"&:before\": {\r\n            display: \"none\",\r\n        },\r\n        \"&$expanded\": { margin: 0 },\r\n    },\r\n    expanded: {},\r\n})(MuiExpansionPanel);\r\n\r\nconst ExpansionPanelSummary = withStyles({\r\n    root: {\r\n        minHeight: 0,\r\n        padding: 0,\r\n\r\n        \"&$expanded\": {\r\n            minHeight: 0,\r\n        },\r\n    },\r\n    content: {\r\n        maxWidth: \"100%\",\r\n        margin: 0,\r\n        display: \"block\",\r\n        \"&$expanded\": {\r\n            margin: \"0\",\r\n        },\r\n    },\r\n    expanded: {},\r\n})(MuiExpansionPanelSummary);\r\n\r\nconst ExpansionPanelDetails = withStyles((theme) => ({\r\n    root: {\r\n        display: \"block\",\r\n        padding: theme.spacing(0),\r\n    },\r\n}))(MuiExpansionPanelDetails);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    expand: {\r\n        display: \"none\",\r\n        transition: \".15s all ease-in-out\",\r\n    },\r\n    expanded: {\r\n        display: \"block\",\r\n        transform: \"rotate(90deg)\",\r\n    },\r\n    iconFix: {\r\n        marginLeft: \"16px\",\r\n    },\r\n    hiddenButton: {\r\n        display: \"none\",\r\n    },\r\n    subMenu: {\r\n        marginLeft: theme.spacing(2),\r\n    },\r\n    overFlow: {\r\n        whiteSpace: \"nowrap\",\r\n        overflow: \"hidden\",\r\n        textOverflow: \"ellipsis\",\r\n    },\r\n}));\r\n\r\nconst icons = {\r\n    Circle: Circle,\r\n    CircleOutline: CircleOutline,\r\n    Heart: Heart,\r\n    HeartOutline: HeartOutline,\r\n    Hexagon: Hexagon,\r\n    HexagonOutline: HexagonOutline,\r\n    Hexagram: Hexagram,\r\n    HexagramOutline: HexagramOutline,\r\n    Rhombus: Rhombus,\r\n    RhombusOutline: RhombusOutline,\r\n    Square: Square,\r\n    SquareOutline: SquareOutline,\r\n    Triangle: Triangle,\r\n    TriangleOutline: TriangleOutline,\r\n    FolderHeartOutline: FolderHeartOutline,\r\n};\r\n\r\nconst AddTag = React.lazy(() => import(\"../Modals/AddTag\"));\r\n\r\nexport default function FileTag() {\r\n    const classes = useStyles();\r\n    const { t } = useTranslation();\r\n\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    const isHomePage = pathHelper.isHomePage(location.pathname);\r\n\r\n    const [tagOpen, setTagOpen] = useState(true);\r\n    const [addTagModal, setAddTagModal] = useState(false);\r\n    const [tagHover, setTagHover] = useState(null);\r\n    const [tags, setTags] = useState(\r\n        Auth.GetUser().tags ? Auth.GetUser().tags : []\r\n    );\r\n\r\n    const dispatch = useDispatch();\r\n    const SearchMyFile = useCallback((k, p) => dispatch(searchMyFile(k, p)), [\r\n        dispatch,\r\n    ]);\r\n    const NavigateTo = useCallback((k) => dispatch(navigateTo(k)), [dispatch]);\r\n\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const getIcon = (icon, color) => {\r\n        if (icons[icon]) {\r\n            const IconComponent = icons[icon];\r\n            return (\r\n                <IconComponent\r\n                    className={[classes.iconFix]}\r\n                    style={\r\n                        color\r\n                            ? {\r\n                                  color: color,\r\n                              }\r\n                            : {}\r\n                    }\r\n                />\r\n            );\r\n        }\r\n        return <Circle className={[classes.iconFix]} />;\r\n    };\r\n\r\n    const submitSuccess = (tag) => {\r\n        const newTags = [...tags, tag];\r\n        setTags(newTags);\r\n        const user = Auth.GetUser();\r\n        user.tags = newTags;\r\n        Auth.SetUser(user);\r\n    };\r\n\r\n    const submitDelete = (id) => {\r\n        API.delete(\"/tag/\" + id)\r\n            .then(() => {\r\n                const newTags = tags.filter((v) => {\r\n                    return v.id !== id;\r\n                });\r\n                setTags(newTags);\r\n                const user = Auth.GetUser();\r\n                user.tags = newTags;\r\n                Auth.SetUser(user);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Suspense fallback={\"\"}>\r\n                <AddTag\r\n                    onSuccess={submitSuccess}\r\n                    open={addTagModal}\r\n                    onClose={() => setAddTagModal(false)}\r\n                />\r\n            </Suspense>\r\n            <ExpansionPanel\r\n                square\r\n                expanded={tagOpen && isHomePage}\r\n                onChange={() => isHomePage && setTagOpen(!tagOpen)}\r\n            >\r\n                <ExpansionPanelSummary\r\n                    aria-controls=\"panel1d-content\"\r\n                    id=\"panel1d-header\"\r\n                >\r\n                    <ListItem\r\n                        button\r\n                        key=\"我的文件\"\r\n                        onClick={() =>\r\n                            !isHomePage && history.push(\"/home?path=%2F\")\r\n                        }\r\n                    >\r\n                        <ListItemIcon>\r\n                            <KeyboardArrowRight\r\n                                className={classNames(\r\n                                    {\r\n                                        [classes.expanded]:\r\n                                            tagOpen && isHomePage,\r\n                                        [classes.iconFix]: true,\r\n                                    },\r\n                                    classes.expand\r\n                                )}\r\n                            />\r\n                            {!(tagOpen && isHomePage) && (\r\n                                <FolderShared className={classes.iconFix} />\r\n                            )}\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t(\"navbar.myFiles\")} />\r\n                    </ListItem>\r\n                    <Divider />\r\n                </ExpansionPanelSummary>\r\n\r\n                <ExpansionPanelDetails>\r\n                    <List onMouseLeave={() => setTagHover(null)}>\r\n                        <ListItem\r\n                            button\r\n                            id=\"pickfiles\"\r\n                            className={classes.hiddenButton}\r\n                        >\r\n                            <ListItemIcon>\r\n                                <UploadIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText />\r\n                        </ListItem>\r\n                        <ListItem\r\n                            button\r\n                            id=\"pickfolder\"\r\n                            className={classes.hiddenButton}\r\n                        >\r\n                            <ListItemIcon>\r\n                                <UploadIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText />\r\n                        </ListItem>\r\n                        {[\r\n                            {\r\n                                key: t(\"navbar.videos\"),\r\n                                id: \"video\",\r\n                                icon: (\r\n                                    <VideoIcon\r\n                                        className={[\r\n                                            classes.iconFix,\r\n                                            classes.iconVideo,\r\n                                        ]}\r\n                                    />\r\n                                ),\r\n                            },\r\n                            {\r\n                                key: t(\"navbar.photos\"),\r\n                                id: \"image\",\r\n                                icon: (\r\n                                    <ImageIcon\r\n                                        className={[\r\n                                            classes.iconFix,\r\n                                            classes.iconImg,\r\n                                        ]}\r\n                                    />\r\n                                ),\r\n                            },\r\n                            {\r\n                                key: t(\"navbar.music\"),\r\n                                id: \"audio\",\r\n                                icon: (\r\n                                    <MusicIcon\r\n                                        className={[\r\n                                            classes.iconFix,\r\n                                            classes.iconAudio,\r\n                                        ]}\r\n                                    />\r\n                                ),\r\n                            },\r\n                            {\r\n                                key: t(\"navbar.documents\"),\r\n                                id: \"doc\",\r\n                                icon: (\r\n                                    <DocIcon\r\n                                        className={[\r\n                                            classes.iconFix,\r\n                                            classes.iconDoc,\r\n                                        ]}\r\n                                    />\r\n                                ),\r\n                            },\r\n                        ].map((v) => (\r\n                            <ListItem\r\n                                button\r\n                                key={v.key}\r\n                                onClick={() =>\r\n                                    SearchMyFile(v.id + \"/internal\", \"\")\r\n                                }\r\n                            >\r\n                                <ListItemIcon className={classes.subMenu}>\r\n                                    {v.icon}\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={v.key} />\r\n                            </ListItem>\r\n                        ))}\r\n                        {tags.map((v) => (\r\n                            <ListItem\r\n                                button\r\n                                key={v.id}\r\n                                onMouseEnter={() => setTagHover(v.id)}\r\n                                onClick={() => {\r\n                                    if (v.type === 0) {\r\n                                        SearchMyFile(\"tag/\" + v.id, \"\");\r\n                                    } else {\r\n                                        NavigateTo(v.expression);\r\n                                    }\r\n                                }}\r\n                            >\r\n                                <ListItemIcon className={classes.subMenu}>\r\n                                    {getIcon(\r\n                                        v.type === 0\r\n                                            ? v.icon\r\n                                            : \"FolderHeartOutline\",\r\n                                        v.type === 0 ? v.color : null\r\n                                    )}\r\n                                </ListItemIcon>\r\n                                <ListItemText\r\n                                    className={classes.overFlow}\r\n                                    primary={v.name}\r\n                                />\r\n\r\n                                {tagHover === v.id && (\r\n                                    <ListItemSecondaryAction\r\n                                        onClick={() => submitDelete(v.id)}\r\n                                    >\r\n                                        <IconButton\r\n                                            size={\"small\"}\r\n                                            edge=\"end\"\r\n                                            aria-label=\"delete\"\r\n                                        >\r\n                                            <Clear />\r\n                                        </IconButton>\r\n                                    </ListItemSecondaryAction>\r\n                                )}\r\n                            </ListItem>\r\n                        ))}\r\n\r\n                        <ListItem button onClick={() => setAddTagModal(true)}>\r\n                            <ListItemIcon className={classes.subMenu}>\r\n                                <TagPlus className={classes.iconFix} />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t(\"navbar.addATag\")} />\r\n                        </ListItem>\r\n                    </List>{\" \"}\r\n                    <Divider />\r\n                </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n        </>\r\n    );\r\n}\r\n","/* eslint-disable */\r\nclass Crc32 {\r\n    constructor() {\r\n        this.crc = -1;\r\n    }\r\n\r\n    append(data) {\r\n        let crc = this.crc | 0;\r\n        const table = this.table;\r\n        for (let offset = 0, len = data.length | 0; offset < len; offset++) {\r\n            crc = (crc >>> 8) ^ table[(crc ^ data[offset]) & 0xff];\r\n        }\r\n        this.crc = crc;\r\n    }\r\n\r\n    get() {\r\n        return ~this.crc;\r\n    }\r\n}\r\nCrc32.prototype.table = (() => {\r\n    let i;\r\n    let j;\r\n    let t;\r\n    const table = [];\r\n    for (i = 0; i < 256; i++) {\r\n        t = i;\r\n        for (j = 0; j < 8; j++) {\r\n            t = t & 1 ? (t >>> 1) ^ 0xedb88320 : t >>> 1;\r\n        }\r\n        table[i] = t;\r\n    }\r\n    return table;\r\n})();\r\n\r\nconst getDataHelper = (byteLength) => {\r\n    const uint8 = new Uint8Array(byteLength);\r\n    return {\r\n        array: uint8,\r\n        view: new DataView(uint8.buffer),\r\n    };\r\n};\r\n\r\nconst pump = (zipObj) =>\r\n    zipObj.reader.read().then((chunk) => {\r\n        if (chunk.done) return zipObj.writeFooter();\r\n        const outputData = chunk.value;\r\n        zipObj.crc.append(outputData);\r\n        zipObj.uncompressedLength += outputData.length;\r\n        zipObj.compressedLength += outputData.length;\r\n        zipObj.ctrl.enqueue(outputData);\r\n    });\r\n\r\n/**\r\n * [createWriter description]\r\n * @param  {Object} underlyingSource [description]\r\n * @return {Boolean}                  [description]\r\n */\r\nfunction createWriter(underlyingSource) {\r\n    const files = Object.create(null);\r\n    const filenames = [];\r\n    const encoder = new TextEncoder();\r\n    let offset = 0;\r\n    let activeZipIndex = 0;\r\n    let ctrl;\r\n    let activeZipObject, closed;\r\n\r\n    function next() {\r\n        activeZipIndex++;\r\n        activeZipObject = files[filenames[activeZipIndex]];\r\n        if (activeZipObject) processNextChunk();\r\n        else if (closed) closeZip();\r\n    }\r\n\r\n    const zipWriter = {\r\n        enqueue(fileLike) {\r\n            if (closed)\r\n                throw new TypeError(\r\n                    \"Cannot enqueue a chunk into a readable stream that is closed or has been requested to be closed\"\r\n                );\r\n\r\n            let name = fileLike.name.trim();\r\n            const date = new Date(\r\n                typeof fileLike.lastModified === \"undefined\"\r\n                    ? Date.now()\r\n                    : fileLike.lastModified\r\n            );\r\n\r\n            if (fileLike.directory && !name.endsWith(\"/\")) name += \"/\";\r\n            if (files[name]) throw new Error(\"File already exists.\");\r\n\r\n            const nameBuf = encoder.encode(name);\r\n            filenames.push(name);\r\n\r\n            const zipObject = (files[name] = {\r\n                level: 0,\r\n                ctrl,\r\n                directory: !!fileLike.directory,\r\n                nameBuf,\r\n                comment: encoder.encode(fileLike.comment || \"\"),\r\n                compressedLength: 0,\r\n                uncompressedLength: 0,\r\n                writeHeader() {\r\n                    const header = getDataHelper(26);\r\n                    const data = getDataHelper(30 + nameBuf.length);\r\n\r\n                    zipObject.offset = offset;\r\n                    zipObject.header = header;\r\n                    if (zipObject.level !== 0 && !zipObject.directory) {\r\n                        header.view.setUint16(4, 0x0800);\r\n                    }\r\n                    header.view.setUint32(0, 0x14000808);\r\n                    header.view.setUint16(\r\n                        6,\r\n                        (((date.getHours() << 6) | date.getMinutes()) << 5) |\r\n                            (date.getSeconds() / 2),\r\n                        true\r\n                    );\r\n                    header.view.setUint16(\r\n                        8,\r\n                        ((((date.getFullYear() - 1980) << 4) |\r\n                            (date.getMonth() + 1)) <<\r\n                            5) |\r\n                            date.getDate(),\r\n                        true\r\n                    );\r\n                    header.view.setUint16(22, nameBuf.length, true);\r\n                    data.view.setUint32(0, 0x504b0304);\r\n                    data.array.set(header.array, 4);\r\n                    data.array.set(nameBuf, 30);\r\n                    offset += data.array.length;\r\n                    ctrl.enqueue(data.array);\r\n                },\r\n                writeFooter() {\r\n                    const footer = getDataHelper(16);\r\n                    footer.view.setUint32(0, 0x504b0708);\r\n\r\n                    if (zipObject.crc) {\r\n                        zipObject.header.view.setUint32(\r\n                            10,\r\n                            zipObject.crc.get(),\r\n                            true\r\n                        );\r\n                        zipObject.header.view.setUint32(\r\n                            14,\r\n                            zipObject.compressedLength,\r\n                            true\r\n                        );\r\n                        zipObject.header.view.setUint32(\r\n                            18,\r\n                            zipObject.uncompressedLength,\r\n                            true\r\n                        );\r\n                        footer.view.setUint32(4, zipObject.crc.get(), true);\r\n                        footer.view.setUint32(\r\n                            8,\r\n                            zipObject.compressedLength,\r\n                            true\r\n                        );\r\n                        footer.view.setUint32(\r\n                            12,\r\n                            zipObject.uncompressedLength,\r\n                            true\r\n                        );\r\n                    }\r\n\r\n                    ctrl.enqueue(footer.array);\r\n                    offset += zipObject.compressedLength + 16;\r\n                    next();\r\n                },\r\n                fileLike,\r\n            });\r\n\r\n            if (!activeZipObject) {\r\n                activeZipObject = zipObject;\r\n                processNextChunk();\r\n            }\r\n        },\r\n        close() {\r\n            if (closed)\r\n                throw new TypeError(\r\n                    \"Cannot close a readable stream that has already been requested to be closed\"\r\n                );\r\n            if (!activeZipObject) closeZip();\r\n            closed = true;\r\n        },\r\n    };\r\n\r\n    function closeZip() {\r\n        let length = 0;\r\n        let index = 0;\r\n        let indexFilename, file;\r\n        for (\r\n            indexFilename = 0;\r\n            indexFilename < filenames.length;\r\n            indexFilename++\r\n        ) {\r\n            file = files[filenames[indexFilename]];\r\n            length += 46 + file.nameBuf.length + file.comment.length;\r\n        }\r\n        const data = getDataHelper(length + 22);\r\n        for (\r\n            indexFilename = 0;\r\n            indexFilename < filenames.length;\r\n            indexFilename++\r\n        ) {\r\n            file = files[filenames[indexFilename]];\r\n            data.view.setUint32(index, 0x504b0102);\r\n            data.view.setUint16(index + 4, 0x1400);\r\n            data.array.set(file.header.array, index + 6);\r\n            data.view.setUint16(index + 32, file.comment.length, true);\r\n            if (file.directory) {\r\n                data.view.setUint8(index + 38, 0x10);\r\n            }\r\n            data.view.setUint32(index + 42, file.offset, true);\r\n            data.array.set(file.nameBuf, index + 46);\r\n            data.array.set(file.comment, index + 46 + file.nameBuf.length);\r\n            index += 46 + file.nameBuf.length + file.comment.length;\r\n        }\r\n        data.view.setUint32(index, 0x504b0506);\r\n        data.view.setUint16(index + 8, filenames.length, true);\r\n        data.view.setUint16(index + 10, filenames.length, true);\r\n        data.view.setUint32(index + 12, length, true);\r\n        data.view.setUint32(index + 16, offset, true);\r\n        ctrl.enqueue(data.array);\r\n        ctrl.close();\r\n    }\r\n\r\n    function processNextChunk() {\r\n        if (!activeZipObject) return;\r\n        if (activeZipObject.directory)\r\n            return activeZipObject.writeFooter(activeZipObject.writeHeader());\r\n        if (activeZipObject.reader) return pump(activeZipObject);\r\n        if (activeZipObject.fileLike.stream) {\r\n            activeZipObject.crc = new Crc32();\r\n            activeZipObject.reader = activeZipObject.fileLike\r\n                .stream()\r\n                .getReader();\r\n            activeZipObject.writeHeader();\r\n        } else next();\r\n    }\r\n    return new ReadableStream({\r\n        start: (c) => {\r\n            ctrl = c;\r\n            underlyingSource.start &&\r\n                Promise.resolve(underlyingSource.start(zipWriter));\r\n        },\r\n        pull() {\r\n            return (\r\n                processNextChunk() ||\r\n                (underlyingSource.pull &&\r\n                    Promise.resolve(underlyingSource.pull(zipWriter)))\r\n            );\r\n        },\r\n    });\r\n}\r\n\r\nwindow.ZIP = createWriter;\r\n","import { CloudreveFile } from \"../types\";\r\nimport { list } from \"../services/navigate\";\r\nimport { pathJoin } from \"../component/Uploader/core/utils\";\r\n\r\nexport function getPreviewPath(selected: any): string {\r\n    return encodeURIComponent(\r\n        selected.path === \"/\"\r\n            ? selected.path + selected.name\r\n            : selected.path + \"/\" + selected.name\r\n    );\r\n}\r\n\r\nexport async function walk(\r\n    file: CloudreveFile[],\r\n    share: any\r\n): Promise<CloudreveFile[]> {\r\n    let res: CloudreveFile[] = [];\r\n    for (const f of file) {\r\n        if (f.type === \"file\") {\r\n            res.push(f);\r\n            continue;\r\n        }\r\n\r\n        if (f.type === \"dir\") {\r\n            const response = await list(\r\n                pathJoin([f.path, f.name]),\r\n                share,\r\n                \"\",\r\n                \"\"\r\n            );\r\n            const subs = await walk(response.data.objects, share);\r\n            res = [...res, ...subs];\r\n        }\r\n    }\r\n\r\n    return res;\r\n}\r\n","// get the paths of files (no directories) in the directory\r\n// parent: \"\" or \"/\"\r\nexport const getFileSystemDirectoryPaths = async (\r\n    handle: FileSystemDirectoryHandle,\r\n    parent = \"\"\r\n): Promise<string[]> => {\r\n    const paths: Array<string> = [];\r\n\r\n    for await (const [path, fileSystemHandle] of handle.entries()) {\r\n        if (fileSystemHandle instanceof window.FileSystemFileHandle) {\r\n            paths.push(`${parent}${path}`);\r\n        } else {\r\n            paths.push(\r\n                ...(await getFileSystemDirectoryPaths(\r\n                    fileSystemHandle,\r\n                    `${parent}${path}/`\r\n                ))\r\n            );\r\n        }\r\n    }\r\n\r\n    return paths;\r\n};\r\n\r\n// create the dst directory if it doesn't exist\r\n// return the dst directory handle\r\n// paths: \"/dir1/dir2\" => [\"dir1\",\"dir2\"]\r\nexport const createFileSystemDirectory = async (\r\n    handle: FileSystemDirectoryHandle,\r\n    paths: string[]\r\n) => {\r\n    let cur = handle;\r\n    while (paths.length > 0) {\r\n        const path = paths.shift();\r\n        if (!path) {\r\n            break;\r\n        }\r\n        cur = await cur.getDirectoryHandle(path, { create: true });\r\n    }\r\n    return cur;\r\n};\r\n\r\n// save file into the dst directory\r\n// create the dst file if it doesn't exist by default\r\n// path: a/b/c.jpg\r\nexport const saveFileToFileSystemDirectory = async (\r\n    handle: FileSystemDirectoryHandle,\r\n    stream: FileSystemWriteChunkType,\r\n    path: string,\r\n    create = true\r\n) => {\r\n    const paths = path.split(\"/\");\r\n    const fileName = paths.pop();\r\n    if (!fileName) return;\r\n\r\n    const dir = await createFileSystemDirectory(handle, paths);\r\n    const file = await dir.getFileHandle(fileName, { create });\r\n    const writable = await file.createWritable();\r\n    await writable.write(stream);\r\n    await writable.close();\r\n};\r\n\r\n// verify or request the permission of the readwrite permission\r\nexport async function verifyFileSystemRWPermission(\r\n    fileHandle: FileSystemDirectoryHandle\r\n) {\r\n    const opts = { mode: \"readwrite\" as FileSystemPermissionMode };\r\n\r\n    // Check if we already have permission, if so, return true.\r\n    if ((await fileHandle.queryPermission(opts)) === \"granted\") {\r\n        return true;\r\n    }\r\n\r\n    // Request permission to the file, if the user grants permission, return true.\r\n    if ((await fileHandle.requestPermission(opts)) === \"granted\") {\r\n        return true;\r\n    }\r\n\r\n    // The user did not grant permission, return false.\r\n    return false;\r\n}\r\n","import { AnyAction } from \"redux\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport { CloudreveFile, SortMethod } from \"./../../types/index\";\r\nimport { closeContextMenu, setPagination } from \"../viewUpdate/action\";\r\nimport { Policy } from \"../../component/Uploader/core/types\";\r\nimport streamSaver from \"streamsaver\";\r\nimport \"../../utils/zip\";\r\nimport pathHelper from \"../../utils/page\";\r\nimport { filePath, isMac } from \"../../utils\";\r\nimport API, { getBaseURL } from \"../../middleware/Api\";\r\nimport { pathJoin, trimPrefix } from \"../../component/Uploader/core/utils\";\r\nimport { getPreviewPath, walk } from \"../../utils/api\";\r\nimport { askForOption } from \"./async\";\r\nimport Auth from \"../../middleware/Auth\";\r\nimport { encodingRequired, isPreviewable } from \"../../config\";\r\nimport { push } from \"connected-react-router\";\r\nimport {\r\n    changeContextMenu,\r\n    closeAllModals,\r\n    openDirectoryDownloadDialog,\r\n    openGetSourceDialog,\r\n    openLoadingDialog,\r\n    showAudioPreview,\r\n    showImgPreivew,\r\n    toggleSnackbar,\r\n} from \"./index\";\r\nimport { getDownloadURL } from \"../../services/file\";\r\nimport i18next from \"../../i18n\";\r\nimport {\r\n    getFileSystemDirectoryPaths,\r\n    saveFileToFileSystemDirectory,\r\n    verifyFileSystemRWPermission,\r\n} from \"../../utils/filesystem\";\r\n\r\nexport interface ActionSetFileList extends AnyAction {\r\n    type: \"SET_FILE_LIST\";\r\n    list: CloudreveFile[];\r\n}\r\nexport const setFileList = (list: CloudreveFile[]): ActionSetFileList => {\r\n    return {\r\n        type: \"SET_FILE_LIST\",\r\n        list,\r\n    };\r\n};\r\n\r\nexport interface ActionSetDirList extends AnyAction {\r\n    type: \"SET_DIR_LIST\";\r\n    list: CloudreveFile[];\r\n}\r\nexport const setDirList = (list: CloudreveFile[]): ActionSetDirList => {\r\n    return {\r\n        type: \"SET_DIR_LIST\",\r\n        list,\r\n    };\r\n};\r\n\r\nexport interface ActionSetSortMethod extends AnyAction {\r\n    type: \"SET_SORT_METHOD\";\r\n    method: SortMethod;\r\n}\r\nexport const setSortMethod = (method: SortMethod): ActionSetSortMethod => {\r\n    return {\r\n        type: \"SET_SORT_METHOD\",\r\n        method,\r\n    };\r\n};\r\n\r\nexport const setSideBar = (open: boolean) => {\r\n    return {\r\n        type: \"SET_SIDE_BAR\",\r\n        open,\r\n    };\r\n};\r\n\r\nexport const setCurrentPolicy = (policy: Policy) => {\r\n    return {\r\n        type: \"SET_CURRENT_POLICY\",\r\n        policy,\r\n    };\r\n};\r\n\r\nexport const removeSelectedTargets = (fileIds: any) => {\r\n    return {\r\n        type: \"RMOVE_SELECTED_TARGETS\",\r\n        fileIds,\r\n    };\r\n};\r\nexport const addSelectedTargets = (targets: any) => {\r\n    return {\r\n        type: \"ADD_SELECTED_TARGETS\",\r\n        targets,\r\n    };\r\n};\r\nexport const setSelectedTarget = (targets: any) => {\r\n    return {\r\n        type: \"SET_SELECTED_TARGET\",\r\n        targets,\r\n    };\r\n};\r\nexport const setLastSelect = (file: any, index: any) => {\r\n    return {\r\n        type: \"SET_LAST_SELECT\",\r\n        file,\r\n        index,\r\n    };\r\n};\r\nexport const setShiftSelectedIds = (shiftSelectedIds: any) => {\r\n    return {\r\n        type: \"SET_SHIFT_SELECTED_IDS\",\r\n        shiftSelectedIds,\r\n    };\r\n};\r\n\r\ntype SortFunc = (a: CloudreveFile, b: CloudreveFile) => number;\r\nexport const sortMethodFuncs: Record<SortMethod, SortFunc> = {\r\n    sizePos: (a: CloudreveFile, b: CloudreveFile) => {\r\n        return a.size - b.size;\r\n    },\r\n    sizeRes: (a: CloudreveFile, b: CloudreveFile) => {\r\n        return b.size - a.size;\r\n    },\r\n    namePos: (a: CloudreveFile, b: CloudreveFile) => {\r\n        return a.name.localeCompare(\r\n            b.name,\r\n            navigator.languages[0] || navigator.language,\r\n            { numeric: true, ignorePunctuation: true }\r\n        );\r\n    },\r\n    nameRev: (a: CloudreveFile, b: CloudreveFile) => {\r\n        return b.name.localeCompare(\r\n            a.name,\r\n            navigator.languages[0] || navigator.language,\r\n            { numeric: true, ignorePunctuation: true }\r\n        );\r\n    },\r\n    timePos: (a: CloudreveFile, b: CloudreveFile) => {\r\n        return Date.parse(a.create_date) - Date.parse(b.create_date);\r\n    },\r\n    timeRev: (a: CloudreveFile, b: CloudreveFile) => {\r\n        return Date.parse(b.create_date) - Date.parse(a.create_date);\r\n    },\r\n    modifyTimePos: (a: CloudreveFile, b: CloudreveFile) => {\r\n        return Date.parse(a.date) - Date.parse(b.date);\r\n    },\r\n    modifyTimeRev: (a: CloudreveFile, b: CloudreveFile) => {\r\n        return Date.parse(b.date) - Date.parse(a.date);\r\n    },\r\n};\r\n\r\nexport const selectAll = (): ThunkAction<any, any, any, any> => {\r\n    return (dispatch, getState): void => {\r\n        const state = getState();\r\n        const { selected, fileList, dirList } = state.explorer;\r\n        if (selected.length >= dirList.length + fileList.length) {\r\n            dispatch(setSelectedTarget([]));\r\n        } else {\r\n            dispatch(setSelectedTarget([...dirList, ...fileList]));\r\n        }\r\n    };\r\n};\r\n\r\nexport const updateFileList = (\r\n    list: CloudreveFile[]\r\n): ThunkAction<any, any, any, any> => {\r\n    return (dispatch, getState): void => {\r\n        const state = getState();\r\n        // TODO: define state type\r\n        const { sortMethod, pagination } = state.viewUpdate;\r\n        const dirList = list.filter((x) => {\r\n            return x.type === \"dir\";\r\n        });\r\n        const fileList = list.filter((x) => {\r\n            return x.type === \"file\";\r\n        });\r\n        const sortFunc = sortMethodFuncs[sortMethod as SortMethod];\r\n        dispatch(setDirList(dirList.sort(sortFunc)));\r\n        dispatch(setFileList(fileList.sort(sortFunc)));\r\n        const total = dirList.length + fileList.length;\r\n        if (pagination.page * pagination.size > total) {\r\n            dispatch(\r\n                setPagination({\r\n                    ...pagination,\r\n                    page: Math.max(Math.ceil(total / pagination.size), 1),\r\n                })\r\n            );\r\n        }\r\n    };\r\n};\r\n\r\nexport const changeSortMethod = (\r\n    method: SortMethod\r\n): ThunkAction<any, any, any, any> => {\r\n    return (dispatch, getState): void => {\r\n        const state = getState();\r\n        const { fileList, dirList } = state.explorer;\r\n        const sortFunc = sortMethodFuncs[method];\r\n        Auth.SetPreference(\"sort\", method);\r\n        dispatch(setSortMethod(method));\r\n        dispatch(setDirList(dirList.slice().sort(sortFunc)));\r\n        dispatch(setFileList(fileList.slice().sort(sortFunc)));\r\n    };\r\n};\r\n\r\nexport const toggleObjectInfoSidebar = (\r\n    open: boolean\r\n): ThunkAction<any, any, any, any> => {\r\n    return (dispatch, getState): void => {\r\n        const state = getState();\r\n        if (open) {\r\n            dispatch(closeContextMenu());\r\n        }\r\n        dispatch(setSideBar(true));\r\n    };\r\n};\r\n\r\nexport const serverSideBatchDownload = (\r\n    share: any\r\n): ThunkAction<any, any, any, any> => {\r\n    return (dispatch, getState): void => {\r\n        dispatch(\r\n            openLoadingDialog(i18next.t(\"fileManager.preparingBathDownload\"))\r\n        );\r\n        const {\r\n            explorer: { selected },\r\n            router: {\r\n                location: { pathname },\r\n            },\r\n        } = getState();\r\n        const dirs: any[] = [],\r\n            items: any[] = [];\r\n        selected.map((value) => {\r\n            if (value.type === \"dir\") {\r\n                dirs.push(value.id);\r\n            } else {\r\n                items.push(value.id);\r\n            }\r\n            return null;\r\n        });\r\n\r\n        let reqURL = \"/file/archive\";\r\n        const postBody = {\r\n            items: items,\r\n            dirs: dirs,\r\n        };\r\n        if (pathHelper.isSharePage(pathname)) {\r\n            reqURL = \"/share/archive/\" + share.key;\r\n            postBody[\"path\"] = selected[0].path;\r\n        }\r\n\r\n        API.post(reqURL, postBody)\r\n            .then((response: any) => {\r\n                if (response.rawData.code === 0) {\r\n                    dispatch(closeAllModals());\r\n                    window.location.assign(response.data);\r\n                } else {\r\n                    dispatch(\r\n                        toggleSnackbar(\r\n                            \"top\",\r\n                            \"right\",\r\n                            response.rawData.msg,\r\n                            \"warning\"\r\n                        )\r\n                    );\r\n                }\r\n                dispatch(closeAllModals());\r\n            })\r\n            .catch((error) => {\r\n                dispatch(\r\n                    toggleSnackbar(\"top\", \"right\", error.message, \"error\")\r\n                );\r\n                dispatch(closeAllModals());\r\n            });\r\n    };\r\n};\r\n\r\nexport const startDownload = (\r\n    share: any,\r\n    file: CloudreveFile\r\n): ThunkAction<any, any, any, any> => {\r\n    return async (dispatch, getState): Promise<void> => {\r\n        const {\r\n            router: {\r\n                location: { pathname },\r\n            },\r\n        } = getState();\r\n        const user = Auth.GetUser();\r\n        if (\r\n            pathHelper.isSharePage(pathname) &&\r\n            !Auth.Check() &&\r\n            user &&\r\n            !user.group.shareDownload\r\n        ) {\r\n            dispatch(\r\n                toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    i18next.t(\"share.pleaseLogin\"),\r\n                    \"warning\"\r\n                )\r\n            );\r\n            return;\r\n        }\r\n\r\n        dispatch(changeContextMenu(\"file\", false));\r\n        dispatch(openLoadingDialog(i18next.t(\"fileManager.preparingDownload\")));\r\n        try {\r\n            const res = await getDownloadURL(file ? file : share);\r\n            window.location.assign(res.data);\r\n            dispatch(closeAllModals());\r\n        } catch (e) {\r\n            dispatch(toggleSnackbar(\"top\", \"right\", e.message, \"warning\"));\r\n            dispatch(closeAllModals());\r\n        }\r\n    };\r\n};\r\n\r\nexport const startBatchDownload = (\r\n    share: any\r\n): ThunkAction<any, any, any, any> => {\r\n    return async (dispatch, getState): Promise<void> => {\r\n        dispatch(changeContextMenu(\"file\", false));\r\n        const {\r\n            explorer: { selected },\r\n        } = getState();\r\n\r\n        const user = Auth.GetUser();\r\n        if (user.group.allowArchiveDownload) {\r\n            let option: any;\r\n            try {\r\n                option = await dispatch(\r\n                    askForOption(\r\n                        [\r\n                            {\r\n                                key: \"client\",\r\n                                name: i18next.t(\r\n                                    \"fileManager.browserBatchDownload\"\r\n                                ),\r\n                                description: i18next.t(\r\n                                    \"fileManager.browserBatchDownloadDescription\"\r\n                                ),\r\n                            },\r\n                            {\r\n                                key: \"server\",\r\n                                name: i18next.t(\r\n                                    \"fileManager.serverBatchDownload\"\r\n                                ),\r\n                                description: i18next.t(\r\n                                    \"fileManager.serverBatchDownloadDescription\"\r\n                                ),\r\n                            },\r\n                        ],\r\n                        i18next.t(\"fileManager.selectArchiveMethod\")\r\n                    )\r\n                );\r\n            } catch (e) {\r\n                return;\r\n            }\r\n\r\n            if (option.key === \"server\") {\r\n                dispatch(serverSideBatchDownload(share));\r\n                return;\r\n            }\r\n        }\r\n\r\n        dispatch(openLoadingDialog(i18next.t(\"modals.listingFiles\")));\r\n\r\n        let queue: CloudreveFile[] = [];\r\n        try {\r\n            queue = await walk(selected, share);\r\n        } catch (e) {\r\n            dispatch(\r\n                toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    i18next.t(\"modals.listingFileError\", {\r\n                        message: e.message,\r\n                    }),\r\n                    \"warning\"\r\n                )\r\n            );\r\n            dispatch(closeAllModals());\r\n            return;\r\n        }\r\n\r\n        dispatch(closeAllModals());\r\n        dispatch(\r\n            toggleSnackbar(\r\n                \"top\",\r\n                \"center\",\r\n                i18next.t(\"fileManager.batchDownloadStarted\"),\r\n                \"info\"\r\n            )\r\n        );\r\n        const fileStream = streamSaver.createWriteStream(\"archive.zip\");\r\n        let failed = 0;\r\n        const readableZipStream = new (window as any).ZIP({\r\n            start(ctrl: any) {\r\n                // ctrl.close()\r\n            },\r\n            async pull(ctrl: any) {\r\n                while (queue.length > 0) {\r\n                    const next = queue.pop();\r\n                    if (next && next.type === \"file\") {\r\n                        const previewPath = getPreviewPath(next);\r\n                        const url =\r\n                            getBaseURL() +\r\n                            (pathHelper.isSharePage(location.pathname)\r\n                                ? \"/share/preview/\" +\r\n                                  share.key +\r\n                                  (previewPath !== \"\"\r\n                                      ? \"?path=\" + previewPath\r\n                                      : \"\")\r\n                                : \"/file/preview/\" + next.id);\r\n                        try {\r\n                            const res = await fetch(url, { cache: \"no-cache\" });\r\n                            const stream = () => res.body;\r\n                            const name = trimPrefix(\r\n                                pathJoin([next.path, next.name]),\r\n                                \"/\"\r\n                            );\r\n                            ctrl.enqueue({ name, stream });\r\n                            return;\r\n                        } catch (e) {\r\n                            failed++;\r\n                        }\r\n                    }\r\n                }\r\n                ctrl.close();\r\n            },\r\n        });\r\n\r\n        // more optimized\r\n        if (window.WritableStream && readableZipStream.pipeTo) {\r\n            return readableZipStream\r\n                .pipeTo(fileStream)\r\n                .then(() => dispatch(closeAllModals()))\r\n                .catch((e) => {\r\n                    console.log(e);\r\n                    toggleSnackbar(\r\n                        \"top\",\r\n                        \"right\",\r\n                        i18next.t(\"modals.batchDownloadError\", {\r\n                            message: e && e.message,\r\n                        }),\r\n                        \"warning\"\r\n                    );\r\n                    dispatch(closeAllModals());\r\n                });\r\n        }\r\n    };\r\n};\r\n\r\nlet directoryDownloadAbortController: AbortController;\r\nexport const cancelDirectoryDownload = () =>\r\n    directoryDownloadAbortController.abort();\r\n\r\nexport const startDirectoryDownload = (\r\n    share: any\r\n): ThunkAction<any, any, any, any> => {\r\n    return async (dispatch, getState): Promise<void> => {\r\n        dispatch(changeContextMenu(\"file\", false));\r\n\r\n        directoryDownloadAbortController = new AbortController();\r\n        if (!window.showDirectoryPicker || !window.isSecureContext) {\r\n            return;\r\n        }\r\n        let handle: FileSystemDirectoryHandle;\r\n        // we should show directory picker at first\r\n        // https://web.dev/file-system-access/#:~:text=handle%3B%0A%7D-,Gotchas,-Sometimes%20processing%20the\r\n        try {\r\n            // can't use suggestedName for showDirectoryPicker (only available showSaveFilePicker)\r\n            handle = await window.showDirectoryPicker({\r\n                startIn: \"downloads\",\r\n                mode: \"readwrite\",\r\n            });\r\n            // we should obtain the readwrite permission for the directory at first\r\n            if (!(await verifyFileSystemRWPermission(handle))) {\r\n                throw new Error(\r\n                    i18next.t(\"fileManager.directoryDownloadPermissionError\")\r\n                );\r\n            }\r\n            dispatch(closeAllModals());\r\n        } catch (e) {\r\n            dispatch(\r\n                toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    i18next.t(\"modals.directoryDownloadError\", {\r\n                        msg: e && e.message,\r\n                    }),\r\n                    \"error\"\r\n                )\r\n            );\r\n            dispatch(closeAllModals());\r\n            return;\r\n        }\r\n\r\n        const {\r\n            explorer: { selected },\r\n            navigator: { path },\r\n        } = getState();\r\n\r\n        // list files to download\r\n        dispatch(openLoadingDialog(i18next.t(\"modals.listingFiles\")));\r\n\r\n        let queue: CloudreveFile[] = [];\r\n        try {\r\n            queue = await walk(selected, share);\r\n        } catch (e) {\r\n            dispatch(\r\n                toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    i18next.t(\"modals.listingFileError\", {\r\n                        message: e.message,\r\n                    }),\r\n                    \"warning\"\r\n                )\r\n            );\r\n            dispatch(closeAllModals());\r\n            return;\r\n        }\r\n\r\n        dispatch(closeAllModals());\r\n\r\n        let failed = 0;\r\n        let option: any;\r\n        // preparation for downloading\r\n        // get the files in the directory to compare with queue files\r\n        // parent: \"\"\r\n        const fsPaths = await getFileSystemDirectoryPaths(handle, \"\");\r\n\r\n        // path: / or /abc (no sep suffix)\r\n        // file.path: /abc/d (no sep suffix)\r\n        // fsPaths: [\"abc/d/e.bin\",]\r\n        const duplicates = queue\r\n            .map((file) =>\r\n                trimPrefix(\r\n                    `${file.path}/${file.name}`,\r\n                    path === \"/\" ? \"/\" : path + \"/\"\r\n                )\r\n            )\r\n            .filter((path) => fsPaths.includes(path));\r\n\r\n        // we should ask users for the duplication handle method\r\n        if (duplicates.length > 0) {\r\n            try {\r\n                option = await dispatch(\r\n                    askForOption(\r\n                        [\r\n                            {\r\n                                key: \"replace\",\r\n                                name: i18next.t(\r\n                                    \"fileManager.directoryDownloadReplace\"\r\n                                ),\r\n                                description: i18next.t(\r\n                                    \"fileManager.directoryDownloadReplaceDescription\",\r\n                                    {\r\n                                        // display the first three duplications\r\n                                        duplicates: duplicates\r\n                                            .slice(\r\n                                                0,\r\n                                                duplicates.length >= 3\r\n                                                    ? 3\r\n                                                    : duplicates.length\r\n                                            )\r\n                                            .join(\", \"),\r\n                                        num: duplicates.length,\r\n                                    }\r\n                                ),\r\n                            },\r\n                            {\r\n                                key: \"skip\",\r\n                                name: i18next.t(\r\n                                    \"fileManager.directoryDownloadSkip\"\r\n                                ),\r\n                                description: i18next.t(\r\n                                    \"fileManager.directoryDownloadSkipDescription\",\r\n                                    {\r\n                                        duplicates: duplicates\r\n                                            .slice(\r\n                                                0,\r\n                                                duplicates.length >= 3\r\n                                                    ? 3\r\n                                                    : duplicates.length\r\n                                            )\r\n                                            .join(\", \"),\r\n                                        num: duplicates.length,\r\n                                    }\r\n                                ),\r\n                            },\r\n                        ],\r\n                        i18next.t(\r\n                            \"fileManager.selectDirectoryDuplicationMethod\"\r\n                        )\r\n                    )\r\n                );\r\n            } catch (e) {\r\n                return;\r\n            }\r\n        }\r\n        dispatch(closeAllModals());\r\n\r\n        // start the download\r\n        dispatch(\r\n            toggleSnackbar(\r\n                \"top\",\r\n                \"center\",\r\n                i18next.t(\"fileManager.directoryDownloadStarted\"),\r\n                \"info\"\r\n            )\r\n        );\r\n\r\n        const updateLog = (log, done) => {\r\n            dispatch(openDirectoryDownloadDialog(true, log, done));\r\n        };\r\n        let log = \"\";\r\n\r\n        while (queue.length > 0) {\r\n            const next = queue.pop();\r\n            if (next && next.type === \"file\") {\r\n                // donload url\r\n                const previewPath = getPreviewPath(next);\r\n                const url =\r\n                    getBaseURL() +\r\n                    (pathHelper.isSharePage(location.pathname)\r\n                        ? \"/share/preview/\" +\r\n                          share.key +\r\n                          (previewPath !== \"\" ? \"?path=\" + previewPath : \"\")\r\n                        : \"/file/preview/\" + next.id);\r\n\r\n                // path to save this file\r\n                // path: / or /abc (no sep suffix)\r\n                // next.path: /abc/d (no sep suffix)\r\n                // name: d/e.bin\r\n                const name = trimPrefix(\r\n                    pathJoin([next.path, next.name]),\r\n                    path === \"/\" ? \"/\" : path + \"/\"\r\n                );\r\n                // TODO: improve the display of log\r\n                // can we turn the upload queue component to the transition queue?\r\n                // then we can easily cancel or retry the download\r\n                // and the batch download queue can show as well.\r\n                log =\r\n                    (log === \"\" ? \"\" : log + \"\\n\\n\") +\r\n                    i18next.t(\"modals.directoryDownloadStarted\", { name });\r\n                updateLog(log, false);\r\n                try {\r\n                    if (duplicates.includes(name)) {\r\n                        if (option.key === \"skip\") {\r\n                            log +=\r\n                                \"\\n\" +\r\n                                i18next.t(\r\n                                    \"modals.directoryDownloadSkipNotifiction\",\r\n                                    {\r\n                                        name,\r\n                                    }\r\n                                );\r\n                            updateLog(log, false);\r\n                            continue;\r\n                        } else {\r\n                            log +=\r\n                                \"\\n\" +\r\n                                i18next.t(\r\n                                    \"modals.directoryDownloadReplaceNotifiction\",\r\n                                    {\r\n                                        name,\r\n                                    }\r\n                                );\r\n                            updateLog(log, false);\r\n                        }\r\n                    }\r\n\r\n                    // TODO: need concurrent task queue?\r\n                    const res = await fetch(url, {\r\n                        cache: \"no-cache\",\r\n                        signal: directoryDownloadAbortController.signal,\r\n                    });\r\n                    await saveFileToFileSystemDirectory(\r\n                        handle,\r\n                        await res.blob(),\r\n                        name\r\n                    );\r\n                    log += \"\\n\" + i18next.t(\"modals.directoryDownloadFinished\");\r\n                    updateLog(log, false);\r\n                } catch (e) {\r\n                    if (e.name === \"AbortError\") {\r\n                        dispatch(\r\n                            toggleSnackbar(\r\n                                \"top\",\r\n                                \"right\",\r\n                                i18next.t(\"modals.directoryDownloadCancelled\"),\r\n                                \"warning\"\r\n                            )\r\n                        );\r\n                        log +=\r\n                            \"\\n\\n\" +\r\n                            i18next.t(\"modals.directoryDownloadCancelled\");\r\n                        updateLog(log, true);\r\n                        return;\r\n                    }\r\n\r\n                    failed++;\r\n                    dispatch(\r\n                        toggleSnackbar(\r\n                            \"top\",\r\n                            \"right\",\r\n                            i18next.t(\r\n                                \"modals.directoryDownloadErrorNotification\",\r\n                                {\r\n                                    name,\r\n                                    msg: e && e.message,\r\n                                }\r\n                            ),\r\n                            \"warning\"\r\n                        )\r\n                    );\r\n                    log +=\r\n                        \"\\n\" +\r\n                        i18next.t(\"modals.directoryDownloadError\", {\r\n                            msg: e.message,\r\n                        });\r\n                    updateLog(log, false);\r\n                }\r\n            }\r\n        }\r\n        log +=\r\n            \"\\n\" +\r\n            (failed === 0\r\n                ? i18next.t(\"fileManager.directoryDownloadFinished\")\r\n                : i18next.t(\"fileManager.directoryDownloadFinishedWithError\", {\r\n                      failed,\r\n                  }));\r\n        updateLog(log, true);\r\n\r\n        dispatch(\r\n            toggleSnackbar(\r\n                \"top\",\r\n                \"center\",\r\n                failed === 0\r\n                    ? i18next.t(\"fileManager.directoryDownloadFinished\")\r\n                    : i18next.t(\r\n                          \"fileManager.directoryDownloadFinishedWithError\",\r\n                          {\r\n                              failed,\r\n                          }\r\n                      ),\r\n                \"success\"\r\n            )\r\n        );\r\n    };\r\n};\r\n\r\nexport const getViewerURL = (\r\n    viewer: string,\r\n    file: any,\r\n    isShare: boolean | \"\"\r\n): string => {\r\n    const previewPath = getPreviewPath(file);\r\n    if (isShare) {\r\n        return (\r\n            \"/s/\" +\r\n            file.key +\r\n            `/${viewer}?name=` +\r\n            encodeURIComponent(file.name) +\r\n            \"&share_path=\" +\r\n            previewPath\r\n        );\r\n    }\r\n\r\n    return `/${viewer}?p=` + previewPath + \"&id=\" + file.id;\r\n};\r\n\r\nexport const openViewer = (\r\n    viewer: string,\r\n    file: any,\r\n    isShare: boolean | \"\"\r\n) => {\r\n    return (dispatch: any, getState: any) => {\r\n        dispatch(push(getViewerURL(viewer, file, isShare)));\r\n    };\r\n};\r\n\r\nexport const openPreview = (share: any) => {\r\n    return (dispatch: any, getState: any) => {\r\n        const {\r\n            explorer: { selected },\r\n            router: {\r\n                location: { pathname },\r\n            },\r\n        } = getState();\r\n        const isShare = pathHelper.isSharePage(pathname);\r\n        if (isShare) {\r\n            const user = Auth.GetUser();\r\n            if (!Auth.Check() && user && !user.group.shareDownload) {\r\n                dispatch(\r\n                    toggleSnackbar(\r\n                        \"top\",\r\n                        \"right\",\r\n                        i18next.t(\"share.pleaseLogin\"),\r\n                        \"warning\"\r\n                    )\r\n                );\r\n                dispatch(changeContextMenu(\"file\", false));\r\n                return;\r\n            }\r\n        }\r\n\r\n        dispatch(changeContextMenu(\"file\", false));\r\n        switch (isPreviewable(selected[0].name)) {\r\n            case \"img\":\r\n                dispatch(showImgPreivew(selected[0]));\r\n                return;\r\n            case \"msDoc\":\r\n                dispatch(openViewer(\"doc\", selected[0], isShare));\r\n                return;\r\n            case \"audio\":\r\n                dispatch(showAudioPreview(selected[0]));\r\n                return;\r\n            case \"video\":\r\n                dispatch(openViewer(\"video\", selected[0], isShare));\r\n                return;\r\n            case \"pdf\":\r\n                dispatch(openViewer(\"pdf\", selected[0], isShare));\r\n                return;\r\n            case \"edit\":\r\n                dispatch(openViewer(\"text\", selected[0], isShare));\r\n                return;\r\n            case \"code\":\r\n                dispatch(openViewer(\"code\", selected[0], isShare));\r\n                return;\r\n            case \"epub\":\r\n                dispatch(openViewer(\"epub\", selected[0], isShare));\r\n                return;\r\n            default:\r\n                dispatch(startDownload(share, selected[0]));\r\n                return;\r\n        }\r\n    };\r\n};\r\nexport const selectFile = (file: any, event: any, fileIndex: any) => {\r\n    const { ctrlKey, metaKey, shiftKey } = event;\r\n    return (dispatch: any, getState: any) => {\r\n        // 多种组合操作忽略\r\n        if (\r\n            [ctrlKey, shiftKey].filter(Boolean).length > 1 ||\r\n            [metaKey, shiftKey].filter(Boolean).length > 1\r\n        ) {\r\n            return;\r\n        }\r\n        const isMacbook = isMac();\r\n        const { explorer } = getState();\r\n        const { selected, lastSelect, dirList, fileList, shiftSelectedIds } =\r\n            explorer;\r\n        if (shiftKey && !ctrlKey && !metaKey && selected.length !== 0) {\r\n            // shift 多选\r\n            // 取消原有选择\r\n            dispatch(removeSelectedTargets(selected.map((v: any) => v.id)));\r\n            const all = [...dirList, ...fileList];\r\n            // 添加新选择\r\n            const begin = Math.min(lastSelect.index, fileIndex);\r\n            const end = Math.max(lastSelect.index, fileIndex);\r\n            const list = file.type === \"dir\" ? dirList : fileList;\r\n            const newShiftSelected = all.slice(begin, end + 1);\r\n            return dispatch(addSelectedTargets(newShiftSelected));\r\n        }\r\n        dispatch(setLastSelect(file, fileIndex));\r\n        dispatch(setShiftSelectedIds([]));\r\n        if ((ctrlKey && !isMacbook) || (metaKey && isMacbook)) {\r\n            // Ctrl/Command 单击添加/删除\r\n            const presentIndex = selected.findIndex((value: any) => {\r\n                return value.id === file.id;\r\n            });\r\n            if (presentIndex !== -1) {\r\n                return dispatch(removeSelectedTargets([file.id]));\r\n            }\r\n            return dispatch(addSelectedTargets([file]));\r\n        }\r\n        // 单选\r\n        return dispatch(setSelectedTarget([file]));\r\n    };\r\n};\r\n\r\nexport const submitCompressTask = (fileName: string, path: string) => {\r\n    return async (dispatch: any, getState: any) => {\r\n        const {\r\n            explorer: { selected },\r\n        } = getState();\r\n        const dirs: string[] = [],\r\n            items: string[] = [];\r\n        // eslint-disable-next-line\r\n        selected.map((value) => {\r\n            if (value.type === \"dir\") {\r\n                dirs.push(value.id);\r\n            } else {\r\n                items.push(value.id);\r\n            }\r\n        });\r\n\r\n        return await API.post(\"/file/compress\", {\r\n            src: {\r\n                dirs: dirs,\r\n                items: items,\r\n            },\r\n            name: fileName,\r\n            dst: path === \"//\" ? \"/\" : path,\r\n        });\r\n    };\r\n};\r\n\r\nconst encodings = [\r\n    \"ibm866\",\r\n    \"iso8859_2\",\r\n    \"iso8859_3\",\r\n    \"iso8859_4\",\r\n    \"iso8859_5\",\r\n    \"iso8859_6\",\r\n    \"iso8859_7\",\r\n    \"iso8859_8\",\r\n    \"iso8859_8I\",\r\n    \"iso8859_10\",\r\n    \"iso8859_13\",\r\n    \"iso8859_14\",\r\n    \"iso8859_15\",\r\n    \"iso8859_16\",\r\n    \"koi8r\",\r\n    \"koi8u\",\r\n    \"macintosh\",\r\n    \"windows874\",\r\n    \"windows1250\",\r\n    \"windows1251\",\r\n    \"windows1252\",\r\n    \"windows1253\",\r\n    \"windows1254\",\r\n    \"windows1255\",\r\n    \"windows1256\",\r\n    \"windows1257\",\r\n    \"windows1258\",\r\n    \"macintoshcyrillic\",\r\n    \"gbk\",\r\n    \"big5\",\r\n    \"eucjp\",\r\n    \"iso2022jp\",\r\n    \"shiftjis\",\r\n    \"euckr\",\r\n    \"utf16be\",\r\n    \"utf16le\",\r\n];\r\n\r\nexport const submitDecompressTask = (path: string) => {\r\n    return async (dispatch: any, getState: any) => {\r\n        const {\r\n            explorer: { selected },\r\n        } = getState();\r\n\r\n        let encoding = \"\";\r\n        if (selected.length > 0 && encodingRequired(selected[0].name)) {\r\n            let option: any;\r\n            try {\r\n                const allOptions = encodings.map((e) => {\r\n                    return {\r\n                        key: e,\r\n                        name: e.toUpperCase(),\r\n                    };\r\n                });\r\n                option = await dispatch(\r\n                    askForOption(\r\n                        [\r\n                            {\r\n                                key: \"\",\r\n                                name: i18next.t(\"modals.defaultEncoding\"),\r\n                            },\r\n                            {\r\n                                key: \"gb18030\",\r\n                                name: \"GB18030\",\r\n                                description: i18next.t(\r\n                                    \"modals.chineseMajorEncoding\"\r\n                                ),\r\n                            },\r\n                            ...allOptions,\r\n                        ],\r\n                        i18next.t(\"modals.selectEncoding\")\r\n                    )\r\n                );\r\n            } catch (e) {\r\n                throw new Error(i18next.t(\"modals.noEncodingSelected\"));\r\n            }\r\n\r\n            encoding = option.key;\r\n        }\r\n\r\n        return await API.post(\"/file/decompress\", {\r\n            src: filePath(selected[0]),\r\n            dst: path === \"//\" ? \"/\" : path,\r\n            encoding: encoding,\r\n        });\r\n    };\r\n};\r\n\r\nexport const batchGetSource = (): ThunkAction<any, any, any, any> => {\r\n    return async (dispatch, getState): Promise<any> => {\r\n        const {\r\n            explorer: { selected },\r\n            router: {\r\n                location: { pathname },\r\n            },\r\n        } = getState();\r\n\r\n        if (selected.findIndex((f) => f.type === \"dir\") >= 0) {\r\n            dispatch(openLoadingDialog(i18next.t(\"modals.listingFiles\")));\r\n        }\r\n\r\n        let queue: CloudreveFile[] = [];\r\n        try {\r\n            queue = await walk(selected, null);\r\n        } catch (e) {\r\n            dispatch(\r\n                toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    i18next.t(\"modals.listingFileError\", {\r\n                        message: e.message,\r\n                    }),\r\n                    \"warning\"\r\n                )\r\n            );\r\n            dispatch(closeAllModals());\r\n            return;\r\n        }\r\n\r\n        dispatch(openLoadingDialog(i18next.t(\"modals.generatingSourceLinks\")));\r\n\r\n        const items = queue\r\n            .filter((value) => value.source_enabled && value.type === \"file\")\r\n            .map((v) => v.id);\r\n\r\n        if (items.length === 0) {\r\n            dispatch(\r\n                toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    i18next.t(\"modals.noFileCanGenerateSourceLink\"),\r\n                    \"warning\"\r\n                )\r\n            );\r\n            dispatch(closeAllModals());\r\n            return;\r\n        }\r\n\r\n        const user = Auth.GetUser();\r\n        if (items.length > user.group.sourceBatch) {\r\n            dispatch(\r\n                toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    i18next.t(\"modals.sourceBatchSizeExceeded\", {\r\n                        limit: user.group.sourceBatch,\r\n                    }),\r\n                    \"warning\"\r\n                )\r\n            );\r\n            dispatch(closeAllModals());\r\n            return;\r\n        }\r\n\r\n        API.post(\"/file/source\", { items: items })\r\n            .then((response) => {\r\n                console.log(response);\r\n                dispatch(closeAllModals());\r\n                dispatch(\r\n                    openGetSourceDialog(\r\n                        response.data.length == 1\r\n                            ? response.data[0].url\r\n                            : response.data\r\n                                  .map(\r\n                                      (res) =>\r\n                                          `${res.name}: ${res.url}${\r\n                                              res.error ? res.error : \"\"\r\n                                          }`\r\n                                  )\r\n                                  .join(\"\\n\")\r\n                    )\r\n                );\r\n            })\r\n            .catch((error) => {\r\n                dispatch(\r\n                    toggleSnackbar(\"top\", \"right\", error.message, \"warning\")\r\n                );\r\n                dispatch(closeAllModals());\r\n            });\r\n    };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { baseURL } from \"../../middleware/Api\";\r\nimport { imgPreviewSuffix } from \"../../config\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport pathHelper from \"../../utils/page\";\r\nimport { withRouter } from \"react-router\";\r\nimport { PhotoSlider } from \"react-photo-view\";\r\nimport \"react-photo-view/dist/index.css\";\r\nimport * as explorer from \"../../redux/explorer/reducer\";\r\nimport { showImgPreivew } from \"../../redux/explorer\";\r\n\r\nconst styles = () => ({});\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        first: state.explorer.imgPreview.first,\r\n        other: state.explorer.imgPreview.other,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        showImgPreivew: (first) => {\r\n            dispatch(showImgPreivew(first));\r\n        },\r\n    };\r\n};\r\n\r\nclass ImagPreviewComponent extends Component {\r\n    state = {\r\n        items: [],\r\n        photoIndex: 0,\r\n        isOpen: false,\r\n    };\r\n\r\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\r\n        const items = [];\r\n        let firstOne = 0;\r\n        if (nextProps.first.id !== \"\") {\r\n            if (\r\n                pathHelper.isSharePage(this.props.location.pathname) &&\r\n                !nextProps.first.path\r\n            ) {\r\n                const newImg = {\r\n                    intro: nextProps.first.name,\r\n                    src: baseURL + \"/share/preview/\" + nextProps.first.key,\r\n                };\r\n                firstOne = 0;\r\n                items.push(newImg);\r\n                this.setState({\r\n                    photoIndex: firstOne,\r\n                    items: items,\r\n                    isOpen: true,\r\n                });\r\n                return;\r\n            }\r\n            // eslint-disable-next-line\r\n            nextProps.other.map((value) => {\r\n                const fileType = value.name.split(\".\").pop().toLowerCase();\r\n                if (imgPreviewSuffix.indexOf(fileType) !== -1) {\r\n                    let src = \"\";\r\n                    if (pathHelper.isSharePage(this.props.location.pathname)) {\r\n                        src = baseURL + \"/share/preview/\" + value.key;\r\n                        src =\r\n                            src +\r\n                            \"?path=\" +\r\n                            encodeURIComponent(\r\n                                value.path === \"/\"\r\n                                    ? value.path + value.name\r\n                                    : value.path + \"/\" + value.name\r\n                            );\r\n                    } else {\r\n                        src = baseURL + \"/file/preview/\" + value.id;\r\n                    }\r\n                    const newImg = {\r\n                        intro: value.name,\r\n                        src: src,\r\n                    };\r\n                    if (\r\n                        value.path === nextProps.first.path &&\r\n                        value.name === nextProps.first.name\r\n                    ) {\r\n                        firstOne = items.length;\r\n                    }\r\n                    items.push(newImg);\r\n                }\r\n            });\r\n            this.setState({\r\n                photoIndex: firstOne,\r\n                items: items,\r\n                isOpen: true,\r\n            });\r\n        }\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.props.showImgPreivew(explorer.initState.imgPreview.first);\r\n        this.setState({\r\n            isOpen: false,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { photoIndex, isOpen, items } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                {isOpen && (\r\n                    <PhotoSlider\r\n                        images={items}\r\n                        visible={isOpen}\r\n                        onClose={() => this.handleClose()}\r\n                        index={photoIndex}\r\n                        onIndexChange={(n) =>\r\n                            this.setState({\r\n                                photoIndex: n,\r\n                            })\r\n                        }\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nImagPreviewComponent.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst ImgPreivew = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withRouter(ImagPreviewComponent)));\r\n\r\nexport default ImgPreivew;\r\n","import { ChunkProgress } from \"./uploader/chunk\";\r\n\r\nexport enum PolicyType {\r\n    local = \"local\",\r\n    remote = \"remote\",\r\n    oss = \"oss\",\r\n    qiniu = \"qiniu\",\r\n    onedrive = \"onedrive\",\r\n    cos = \"cos\",\r\n    upyun = \"upyun\",\r\n    s3 = \"s3\",\r\n}\r\n\r\nexport interface Policy {\r\n    id: number;\r\n    name: string;\r\n    allowedSuffix: Nullable<string[]>;\r\n    maxSize: number;\r\n    type: PolicyType;\r\n}\r\n\r\nexport enum TaskType {\r\n    file,\r\n    resumeHint,\r\n}\r\n\r\nexport interface Task {\r\n    type: TaskType;\r\n    name: string;\r\n    size: number;\r\n    policy: Policy;\r\n    dst: string;\r\n    file: File;\r\n    child?: Task[];\r\n    session?: UploadCredential;\r\n    chunkProgress: ChunkProgress[];\r\n    resumed: boolean;\r\n}\r\n\r\ntype Nullable<T> = T | null;\r\n\r\nexport interface Response<T> {\r\n    code: number;\r\n    data: T;\r\n    msg: string;\r\n    error: string;\r\n}\r\n\r\nexport interface UploadSessionRequest {\r\n    path: string;\r\n    size: number;\r\n    name: string;\r\n    policy_id: number;\r\n    last_modified?: number;\r\n}\r\n\r\nexport interface UploadCredential {\r\n    sessionID: string;\r\n    expires: number;\r\n    chunkSize: number;\r\n    uploadURLs: string[];\r\n    credential: string;\r\n    uploadID: string;\r\n    callback: string;\r\n    policy: string;\r\n    ak: string;\r\n    keyTime: string;\r\n    path: string;\r\n    completeURL: string;\r\n}\r\n\r\nexport interface OneDriveError {\r\n    error: {\r\n        code: string;\r\n        message: string;\r\n        innererror?: {\r\n            code: string;\r\n        };\r\n        retryAfterSeconds?: number;\r\n    };\r\n}\r\n\r\nexport interface OneDriveChunkResponse {\r\n    expirationDateTime: string;\r\n    nextExpectedRanges: string[];\r\n}\r\n\r\nexport interface QiniuChunkResponse {\r\n    etag: string;\r\n    md5: string;\r\n}\r\n\r\nexport interface QiniuError {\r\n    error: string;\r\n}\r\n\r\nexport interface QiniuPartsInfo {\r\n    etag: string;\r\n    partNumber: number;\r\n}\r\n\r\nexport interface QiniuFinishUploadRequest {\r\n    parts: QiniuPartsInfo[];\r\n}\r\n\r\nexport interface UpyunError {\r\n    message: string;\r\n    code: number;\r\n}\r\n\r\nexport interface S3Part {\r\n    ETag: string;\r\n    PartNumber: number;\r\n}\r\n","// 所有 Uploader 的基类\r\nimport { PolicyType, Task } from \"../types\";\r\nimport UploadManager from \"../index\";\r\nimport Logger from \"../logger\";\r\nimport { validate } from \"../utils/validator\";\r\nimport { CancelToken } from \"../utils/request\";\r\nimport axios, { CancelTokenSource } from \"axios\";\r\nimport { createUploadSession, deleteUploadSession } from \"../api\";\r\nimport * as utils from \"../utils\";\r\nimport { RequestCanceledError, UploaderError } from \"../errors\";\r\n\r\nexport enum Status {\r\n    added,\r\n    resumable,\r\n    initialized,\r\n    queued,\r\n    preparing,\r\n    processing,\r\n    finishing,\r\n    finished,\r\n    error,\r\n    canceled,\r\n}\r\n\r\nexport interface UploadHandlers {\r\n    onTransition: (newStatus: Status) => void;\r\n    onError: (err: Error) => void;\r\n    onProgress: (data: UploadProgress) => void;\r\n    onMsg: (msg: string, color: string) => void;\r\n}\r\n\r\nexport interface UploadProgress {\r\n    total: ProgressCompose;\r\n    chunks?: ProgressCompose[];\r\n}\r\n\r\nexport interface ProgressCompose {\r\n    size: number;\r\n    loaded: number;\r\n    percent: number;\r\n    fromCache?: boolean;\r\n}\r\n\r\nexport interface Progress {\r\n    total: number;\r\n    loaded: number;\r\n}\r\n\r\nconst resumePolicy = [\r\n    PolicyType.local,\r\n    PolicyType.remote,\r\n    PolicyType.qiniu,\r\n    PolicyType.oss,\r\n    PolicyType.onedrive,\r\n    PolicyType.s3,\r\n];\r\nconst deleteUploadSessionDelay = 500;\r\n\r\nexport default abstract class Base {\r\n    public child?: Base[];\r\n    public status: Status = Status.added;\r\n    public error?: Error;\r\n\r\n    public id = ++Base.id;\r\n    private static id = 0;\r\n\r\n    protected logger: Logger;\r\n    protected subscriber: UploadHandlers;\r\n    // 用于取消请求\r\n    protected cancelToken: CancelTokenSource = CancelToken.source();\r\n    protected progress: UploadProgress;\r\n\r\n    public lastTime = Date.now();\r\n    public startTime = Date.now();\r\n\r\n    constructor(public task: Task, protected manager: UploadManager) {\r\n        this.logger = new Logger(\r\n            this.manager.logger.level,\r\n            \"UPLOADER\",\r\n            this.id\r\n        );\r\n        this.logger.info(\"Initialize new uploader for task: \", task);\r\n        this.subscriber = {\r\n            /* eslint-disable @typescript-eslint/no-empty-function */\r\n            onTransition: (newStatus: Status) => {},\r\n            onError: (err: Error) => {},\r\n            onProgress: (data: UploadProgress) => {},\r\n            onMsg: (msg, color: string) => {},\r\n            /* eslint-enable @typescript-eslint/no-empty-function */\r\n        };\r\n    }\r\n\r\n    public subscribe = (handlers: UploadHandlers) => {\r\n        this.subscriber = handlers;\r\n    };\r\n\r\n    public start = async () => {\r\n        this.logger.info(\"Activate uploading task\");\r\n        this.transit(Status.initialized);\r\n        this.lastTime = this.startTime = Date.now();\r\n\r\n        try {\r\n            validate(this.task.file, this.task.policy);\r\n        } catch (e) {\r\n            this.logger.error(\"File validate failed with error:\", e);\r\n            this.setError(e);\r\n            return;\r\n        }\r\n\r\n        this.logger.info(\"Enqueued in manager pool\");\r\n        this.transit(Status.queued);\r\n        this.manager.pool.enqueue(this).catch((e) => {\r\n            this.logger.info(\"Upload task failed with error:\", e);\r\n            this.setError(e);\r\n        });\r\n    };\r\n\r\n    public run = async () => {\r\n        this.logger.info(\"Start upload task, create upload session...\");\r\n        this.transit(Status.preparing);\r\n        const cachedInfo = utils.getResumeCtx(this.task, this.logger);\r\n        if (cachedInfo == null) {\r\n            this.task.session = await createUploadSession(\r\n                {\r\n                    path: this.task.dst,\r\n                    size: this.task.file.size,\r\n                    name: this.task.file.name,\r\n                    policy_id: this.task.policy.id,\r\n                    last_modified: this.task.file.lastModified,\r\n                },\r\n                this.cancelToken.token\r\n            );\r\n            this.logger.info(\"Upload session created:\", this.task.session);\r\n        } else {\r\n            this.task.session = cachedInfo.session;\r\n            this.task.resumed = true;\r\n            this.task.chunkProgress = cachedInfo.chunkProgress;\r\n            this.logger.info(\"Resume upload from cached ctx:\", cachedInfo);\r\n        }\r\n\r\n        this.transit(Status.processing);\r\n        await this.upload();\r\n        await this.afterUpload();\r\n        utils.removeResumeCtx(this.task, this.logger);\r\n        this.transit(Status.finished);\r\n        this.logger.info(\"Upload task completed\");\r\n    };\r\n\r\n    public abstract async upload(): Promise<any>;\r\n    protected async afterUpload(): Promise<any> {\r\n        return;\r\n    }\r\n\r\n    public cancel = async () => {\r\n        if (this.status === Status.finished) {\r\n            return;\r\n        }\r\n\r\n        this.cancelToken.cancel();\r\n        await this.cancelUploadSession();\r\n        this.transit(Status.canceled);\r\n    };\r\n\r\n    public reset = () => {\r\n        this.cancelToken = axios.CancelToken.source();\r\n        this.progress = {\r\n            total: {\r\n                size: 0,\r\n                loaded: 0,\r\n                percent: 0,\r\n            },\r\n        };\r\n    };\r\n\r\n    protected setError(e: Error) {\r\n        if (\r\n            !(e instanceof UploaderError && e.Retryable()) ||\r\n            !resumePolicy.includes(this.task.policy.type)\r\n        ) {\r\n            this.logger.warn(\"Non-resume error occurs, clean resume ctx cache\");\r\n            this.cancelUploadSession();\r\n        }\r\n\r\n        if (!(e instanceof RequestCanceledError)) {\r\n            this.status = Status.error;\r\n            this.error = e;\r\n            this.subscriber.onError(e);\r\n        }\r\n    }\r\n\r\n    protected cancelUploadSession = (): Promise<void> => {\r\n        return new Promise<void>((resolve) => {\r\n            utils.removeResumeCtx(this.task, this.logger);\r\n            if (this.task.session) {\r\n                setTimeout(() => {\r\n                    deleteUploadSession(this.task.session!?.sessionID)\r\n                        .catch((e) => {\r\n                            this.logger.warn(\r\n                                \"Failed to cancel upload session: \",\r\n                                e\r\n                            );\r\n                        })\r\n                        .finally(() => {\r\n                            resolve();\r\n                        });\r\n                }, deleteUploadSessionDelay);\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    };\r\n\r\n    protected transit(status: Status) {\r\n        this.status = status;\r\n        this.subscriber.onTransition(status);\r\n    }\r\n\r\n    public getProgressInfoItem(\r\n        loaded: number,\r\n        size: number,\r\n        fromCache?: boolean\r\n    ): ProgressCompose {\r\n        return {\r\n            size,\r\n            loaded,\r\n            percent: (loaded / size) * 100,\r\n            ...(fromCache == null ? {} : { fromCache }),\r\n        };\r\n    }\r\n\r\n    public key(): string {\r\n        return utils.getResumeCtxKey(this.task);\r\n    }\r\n}\r\n","export type LogLevel = \"INFO\" | \"WARN\" | \"ERROR\" | \"OFF\";\r\n\r\nexport default class Logger {\r\n    constructor(\r\n        public level: LogLevel = \"OFF\",\r\n        private prefix = \"UPLOAD\",\r\n        private id: number = 1\r\n    ) {}\r\n\r\n    private getPrintPrefix(level: LogLevel) {\r\n        return `Cloudreve-Uploader [${level}][${this.prefix}#${this.id}]:`;\r\n    }\r\n\r\n    info(...args: unknown[]) {\r\n        const allowLevel: LogLevel[] = [\"INFO\"];\r\n        if (allowLevel.includes(this.level)) {\r\n            // eslint-disable-next-line no-console\r\n            console.log(this.getPrintPrefix(\"INFO\"), ...args);\r\n        }\r\n    }\r\n\r\n    warn(...args: unknown[]) {\r\n        const allowLevel: LogLevel[] = [\"INFO\", \"WARN\"];\r\n        if (allowLevel.includes(this.level)) {\r\n            // eslint-disable-next-line no-console\r\n            console.warn(this.getPrintPrefix(\"WARN\"), ...args);\r\n        }\r\n    }\r\n\r\n    error(...args: unknown[]) {\r\n        const allowLevel: LogLevel[] = [\"INFO\", \"WARN\", \"ERROR\"];\r\n        if (allowLevel.includes(this.level)) {\r\n            // eslint-disable-next-line no-console\r\n            console.error(this.getPrintPrefix(\"ERROR\"), ...args);\r\n        }\r\n    }\r\n}\r\n","import {\r\n    OneDriveChunkResponse,\r\n    QiniuChunkResponse,\r\n    QiniuFinishUploadRequest,\r\n    QiniuPartsInfo,\r\n    S3Part,\r\n    UploadCredential,\r\n    UploadSessionRequest,\r\n} from \"../types\";\r\nimport { OBJtoXML, request, requestAPI } from \"../utils\";\r\nimport {\r\n    COSUploadCallbackError,\r\n    COSUploadError,\r\n    CreateUploadSessionError,\r\n    DeleteUploadSessionError,\r\n    HTTPError,\r\n    LocalChunkUploadError,\r\n    OneDriveChunkError,\r\n    OneDriveFinishUploadError,\r\n    QiniuChunkError,\r\n    QiniuFinishUploadError,\r\n    S3LikeChunkError,\r\n    S3LikeFinishUploadError,\r\n    S3LikeUploadCallbackError,\r\n    SlaveChunkUploadError,\r\n    UpyunUploadError,\r\n} from \"../errors\";\r\nimport { ChunkInfo, ChunkProgress } from \"../uploader/chunk\";\r\nimport { Progress } from \"../uploader/base\";\r\nimport { CancelToken } from \"axios\";\r\n\r\nexport async function createUploadSession(\r\n    req: UploadSessionRequest,\r\n    cancel: CancelToken\r\n): Promise<UploadCredential> {\r\n    const res = await requestAPI<UploadCredential>(\"file/upload\", {\r\n        method: \"put\",\r\n        data: req,\r\n        cancelToken: cancel,\r\n    });\r\n\r\n    if (res.data.code != 0) {\r\n        throw new CreateUploadSessionError(res.data);\r\n    }\r\n\r\n    return res.data.data;\r\n}\r\n\r\nexport async function deleteUploadSession(id: string): Promise<any> {\r\n    const res = await requestAPI<UploadCredential>(`file/upload/${id}`, {\r\n        method: \"delete\",\r\n    });\r\n\r\n    if (res.data.code != 0) {\r\n        throw new DeleteUploadSessionError(res.data);\r\n    }\r\n\r\n    return res.data.data;\r\n}\r\n\r\nexport async function localUploadChunk(\r\n    sessionID: string,\r\n    chunk: ChunkInfo,\r\n    onProgress: (p: Progress) => void,\r\n    cancel: CancelToken\r\n): Promise<any> {\r\n    const res = await requestAPI<any>(\r\n        `file/upload/${sessionID}/${chunk.index}`,\r\n        {\r\n            method: \"post\",\r\n            headers: { \"content-type\": \"application/octet-stream\" },\r\n            data: chunk.chunk,\r\n            onUploadProgress: (progressEvent) => {\r\n                onProgress({\r\n                    loaded: progressEvent.loaded,\r\n                    total: progressEvent.total,\r\n                });\r\n            },\r\n            cancelToken: cancel,\r\n        }\r\n    );\r\n\r\n    if (res.data.code != 0) {\r\n        throw new LocalChunkUploadError(res.data, chunk.index);\r\n    }\r\n\r\n    return res.data.data;\r\n}\r\n\r\nexport async function slaveUploadChunk(\r\n    url: string,\r\n    credential: string,\r\n    chunk: ChunkInfo,\r\n    onProgress: (p: Progress) => void,\r\n    cancel: CancelToken\r\n): Promise<any> {\r\n    const res = await request<any>(`${url}?chunk=${chunk.index}`, {\r\n        method: \"post\",\r\n        headers: {\r\n            \"content-type\": \"application/octet-stream\",\r\n            Authorization: credential,\r\n        },\r\n        data: chunk.chunk,\r\n        onUploadProgress: (progressEvent) => {\r\n            onProgress({\r\n                loaded: progressEvent.loaded,\r\n                total: progressEvent.total,\r\n            });\r\n        },\r\n        cancelToken: cancel,\r\n    });\r\n\r\n    if (res.data.code != 0) {\r\n        throw new SlaveChunkUploadError(res.data, chunk.index);\r\n    }\r\n\r\n    return res.data.data;\r\n}\r\n\r\nexport async function oneDriveUploadChunk(\r\n    url: string,\r\n    range: string, // if range is empty, this will be an request to query the session status\r\n    chunk: ChunkInfo,\r\n    onProgress: (p: Progress) => void,\r\n    cancel: CancelToken\r\n): Promise<OneDriveChunkResponse> {\r\n    const res = await request<OneDriveChunkResponse>(url, {\r\n        method: range === \"\" ? \"get\" : \"put\",\r\n        headers: {\r\n            \"content-type\": \"application/octet-stream\",\r\n            ...(range !== \"\" && { \"content-range\": range }),\r\n        },\r\n        data: chunk.chunk,\r\n        onUploadProgress: (progressEvent) => {\r\n            onProgress({\r\n                loaded: progressEvent.loaded,\r\n                total: progressEvent.total,\r\n            });\r\n        },\r\n        cancelToken: cancel,\r\n    }).catch((e) => {\r\n        if (e instanceof HTTPError && e.response) {\r\n            throw new OneDriveChunkError(e.response.data);\r\n        }\r\n\r\n        throw e;\r\n    });\r\n\r\n    return res.data;\r\n}\r\n\r\nexport async function finishOneDriveUpload(\r\n    sessionID: string,\r\n    cancel: CancelToken\r\n): Promise<UploadCredential> {\r\n    const res = await requestAPI<UploadCredential>(\r\n        `callback/onedrive/finish/${sessionID}`,\r\n        {\r\n            method: \"post\",\r\n            data: \"{}\",\r\n            cancelToken: cancel,\r\n        }\r\n    );\r\n\r\n    if (res.data.code != 0) {\r\n        throw new OneDriveFinishUploadError(res.data);\r\n    }\r\n\r\n    return res.data.data;\r\n}\r\n\r\nexport async function s3LikeUploadChunk(\r\n    url: string,\r\n    chunk: ChunkInfo,\r\n    onProgress: (p: Progress) => void,\r\n    cancel: CancelToken\r\n): Promise<string> {\r\n    const res = await request<string>(url, {\r\n        method: \"put\",\r\n        headers: {\r\n            \"content-type\": \"application/octet-stream\",\r\n        },\r\n        data: chunk.chunk,\r\n        onUploadProgress: (progressEvent) => {\r\n            onProgress({\r\n                loaded: progressEvent.loaded,\r\n                total: progressEvent.total,\r\n            });\r\n        },\r\n        cancelToken: cancel,\r\n        responseType: \"document\",\r\n        transformResponse: undefined,\r\n    }).catch((e) => {\r\n        if (e instanceof HTTPError && e.response) {\r\n            throw new S3LikeChunkError(e.response.data);\r\n        }\r\n\r\n        throw e;\r\n    });\r\n\r\n    return res.headers.etag;\r\n}\r\n\r\nexport async function s3LikeFinishUpload(\r\n    url: string,\r\n    isOss: boolean,\r\n    chunks: ChunkProgress[],\r\n    cancel: CancelToken\r\n): Promise<any> {\r\n    let body = \"\";\r\n    if (!isOss) {\r\n        body += \"<CompleteMultipartUpload>\";\r\n        chunks.forEach((chunk) => {\r\n            body += \"<Part>\";\r\n            const part: S3Part = {\r\n                PartNumber: chunk.index + 1,\r\n                ETag: chunk.etag!,\r\n            };\r\n            body += OBJtoXML(part);\r\n            body += \"</Part>\";\r\n        });\r\n        body += \"</CompleteMultipartUpload>\";\r\n    }\r\n\r\n    const res = await request<any>(url, {\r\n        method: \"post\",\r\n        cancelToken: cancel,\r\n        responseType: \"document\",\r\n        transformResponse: undefined,\r\n        data: body,\r\n        headers: isOss\r\n            ? {\r\n                  \"content-type\": \"application/octet-stream\",\r\n                  \"x-oss-forbid-overwrite\": \"true\",\r\n                  \"x-oss-complete-all\": \"yes\",\r\n              }\r\n            : {\r\n                  \"content-type\": \"application/xhtml+xml\",\r\n              },\r\n        validateStatus: function (status) {\r\n            return status == 200;\r\n        },\r\n    }).catch((e) => {\r\n        if (e instanceof HTTPError && e.response) {\r\n            throw new S3LikeFinishUploadError(e.response.data);\r\n        }\r\n\r\n        throw e;\r\n    });\r\n\r\n    return res.data;\r\n}\r\n\r\nexport async function qiniuDriveUploadChunk(\r\n    url: string,\r\n    upToken: string,\r\n    chunk: ChunkInfo,\r\n    onProgress: (p: Progress) => void,\r\n    cancel: CancelToken\r\n): Promise<QiniuChunkResponse> {\r\n    const res = await request<QiniuChunkResponse>(`${url}/${chunk.index + 1}`, {\r\n        method: \"put\",\r\n        headers: {\r\n            \"content-type\": \"application/octet-stream\",\r\n            authorization: \"UpToken \" + upToken,\r\n        },\r\n        data: chunk.chunk,\r\n        onUploadProgress: (progressEvent) => {\r\n            onProgress({\r\n                loaded: progressEvent.loaded,\r\n                total: progressEvent.total,\r\n            });\r\n        },\r\n        cancelToken: cancel,\r\n    }).catch((e) => {\r\n        if (e instanceof HTTPError && e.response) {\r\n            throw new QiniuChunkError(e.response.data);\r\n        }\r\n\r\n        throw e;\r\n    });\r\n\r\n    return res.data;\r\n}\r\n\r\nexport async function qiniuFinishUpload(\r\n    url: string,\r\n    upToken: string,\r\n    chunks: ChunkProgress[],\r\n    cancel: CancelToken\r\n): Promise<any> {\r\n    const content: QiniuFinishUploadRequest = {\r\n        parts: chunks.map(\r\n            (chunk): QiniuPartsInfo => {\r\n                return {\r\n                    etag: chunk.etag!,\r\n                    partNumber: chunk.index + 1,\r\n                };\r\n            }\r\n        ),\r\n    };\r\n\r\n    const res = await request<any>(`${url}`, {\r\n        method: \"post\",\r\n        headers: {\r\n            \"content-type\": \"application/json\",\r\n            authorization: \"UpToken \" + upToken,\r\n        },\r\n        data: content,\r\n        cancelToken: cancel,\r\n    }).catch((e) => {\r\n        if (e instanceof HTTPError && e.response) {\r\n            throw new QiniuFinishUploadError(e.response.data);\r\n        }\r\n\r\n        throw e;\r\n    });\r\n\r\n    return res.data;\r\n}\r\n\r\nexport async function cosFormUploadChunk(\r\n    url: string,\r\n    file: File,\r\n    policy: string,\r\n    path: string,\r\n    callback: string,\r\n    sessionID: string,\r\n    keyTime: string,\r\n    credential: string,\r\n    ak: string,\r\n    onProgress: (p: Progress) => void,\r\n    cancel: CancelToken\r\n): Promise<any> {\r\n    const bodyFormData = new FormData();\r\n    bodyFormData.append(\"policy\", policy);\r\n    bodyFormData.append(\"key\", path);\r\n    bodyFormData.append(\"x-cos-meta-callback\", callback);\r\n    bodyFormData.append(\"x-cos-meta-key\", sessionID);\r\n    bodyFormData.append(\"q-sign-algorithm\", \"sha1\");\r\n    bodyFormData.append(\"q-key-time\", keyTime);\r\n    bodyFormData.append(\"q-ak\", ak);\r\n    bodyFormData.append(\"q-signature\", credential);\r\n    bodyFormData.append(\"name\", file.name);\r\n    // File must be the last element in the form\r\n    bodyFormData.append(\"file\", file);\r\n\r\n    const res = await request<any>(`${url}`, {\r\n        method: \"post\",\r\n        headers: {\r\n            \"content-type\": \"multipart/form-data\",\r\n        },\r\n        data: bodyFormData,\r\n        onUploadProgress: (progressEvent) => {\r\n            onProgress({\r\n                loaded: progressEvent.loaded,\r\n                total: progressEvent.total,\r\n            });\r\n        },\r\n        cancelToken: cancel,\r\n        responseType: \"document\",\r\n        transformResponse: undefined,\r\n    }).catch((e) => {\r\n        if (e instanceof HTTPError && e.response) {\r\n            throw new COSUploadError(e.response.data);\r\n        }\r\n\r\n        throw e;\r\n    });\r\n\r\n    return res.data;\r\n}\r\n\r\nexport async function cosUploadCallback(\r\n    sessionID: string,\r\n    cancel: CancelToken\r\n): Promise<any> {\r\n    const res = await requestAPI<any>(`callback/cos/${sessionID}`, {\r\n        method: \"get\",\r\n        data: \"{}\",\r\n        cancelToken: cancel,\r\n    });\r\n\r\n    if (res.data.code != 0) {\r\n        throw new COSUploadCallbackError(res.data);\r\n    }\r\n\r\n    return res.data.data;\r\n}\r\n\r\nexport async function upyunFormUploadChunk(\r\n    url: string,\r\n    file: File,\r\n    policy: string,\r\n    credential: string,\r\n    onProgress: (p: Progress) => void,\r\n    cancel: CancelToken\r\n): Promise<any> {\r\n    const bodyFormData = new FormData();\r\n    bodyFormData.append(\"policy\", policy);\r\n    bodyFormData.append(\"authorization\", credential);\r\n    // File must be the last element in the form\r\n    bodyFormData.append(\"file\", file);\r\n\r\n    const res = await request<any>(`${url}`, {\r\n        method: \"post\",\r\n        headers: {\r\n            \"content-type\": \"multipart/form-data\",\r\n        },\r\n        data: bodyFormData,\r\n        onUploadProgress: (progressEvent) => {\r\n            onProgress({\r\n                loaded: progressEvent.loaded,\r\n                total: progressEvent.total,\r\n            });\r\n        },\r\n        cancelToken: cancel,\r\n    }).catch((e) => {\r\n        if (e instanceof HTTPError && e.response) {\r\n            throw new UpyunUploadError(e.response.data);\r\n        }\r\n\r\n        throw e;\r\n    });\r\n\r\n    return res.data;\r\n}\r\n\r\nexport async function s3LikeUploadCallback(\r\n    sessionID: string,\r\n    cancel: CancelToken\r\n): Promise<any> {\r\n    const res = await requestAPI<any>(`callback/s3/${sessionID}`, {\r\n        method: \"get\",\r\n        data: \"{}\",\r\n        cancelToken: cancel,\r\n    });\r\n\r\n    if (res.data.code != 0) {\r\n        throw new S3LikeUploadCallbackError(res.data);\r\n    }\r\n\r\n    return res.data.data;\r\n}\r\n","import { Policy, PolicyType, Task, TaskType } from \"./types\";\r\nimport Logger, { LogLevel } from \"./logger\";\r\nimport { UnknownPolicyError, UploaderError, UploaderErrorName } from \"./errors\";\r\nimport Base from \"./uploader/base\";\r\nimport Local from \"./uploader/local\";\r\nimport { Pool } from \"./utils/pool\";\r\nimport {\r\n    cleanupResumeCtx,\r\n    getAllFileEntries,\r\n    getDirectoryUploadDst,\r\n    getFileInput,\r\n    isFileDrop,\r\n    listResumeCtx,\r\n} from \"./utils\";\r\nimport Remote from \"./uploader/remote\";\r\nimport OneDrive from \"./uploader/onedrive\";\r\nimport OSS from \"./uploader/oss\";\r\nimport Qiniu from \"./uploader/qiniu\";\r\nimport COS from \"./uploader/cos\";\r\nimport Upyun from \"./uploader/upyun\";\r\nimport S3 from \"./uploader/s3\";\r\nimport ResumeHint from \"./uploader/placeholder\";\r\n\r\nexport interface Option {\r\n    logLevel: LogLevel;\r\n    concurrentLimit: number;\r\n    dropZone?: HTMLElement;\r\n    onDropOver?: (e: DragEvent) => void;\r\n    onDropLeave?: (e: DragEvent) => void;\r\n    onToast: (type: string, msg: string) => void;\r\n    onDropFileAdded?: (uploaders: Base[]) => void;\r\n}\r\n\r\nexport enum SelectType {\r\n    File,\r\n    Directory,\r\n}\r\n\r\nexport default class UploadManager {\r\n    public logger: Logger;\r\n    public pool: Pool;\r\n    private static id = 0;\r\n    private policy?: Policy;\r\n    private fileInput: HTMLInputElement;\r\n    private directoryInput: HTMLInputElement;\r\n    private id = ++UploadManager.id;\r\n    // used for proactive upload (drop, paste)\r\n    private currentPath = \"/\";\r\n\r\n    constructor(private o: Option) {\r\n        this.logger = new Logger(o.logLevel, \"MANAGER\");\r\n        this.logger.info(`Initialized with log level: ${o.logLevel}`);\r\n\r\n        this.pool = new Pool(o.concurrentLimit);\r\n        this.fileInput = getFileInput(this.id, false);\r\n        this.directoryInput = getFileInput(this.id, true);\r\n\r\n        if (o.dropZone) {\r\n            this.logger.info(`Drag and drop container set to:`, o.dropZone);\r\n            o.dropZone.addEventListener(\"dragenter\", (e) => {\r\n                if (isFileDrop(e)) {\r\n                    e.preventDefault();\r\n                    if (o.onDropOver) {\r\n                        o.onDropOver(e);\r\n                    }\r\n                }\r\n            });\r\n\r\n            o.dropZone.addEventListener(\"dragleave\", (e) => {\r\n                if (isFileDrop(e)) {\r\n                    e.preventDefault();\r\n                    if (o.onDropLeave) {\r\n                        o.onDropLeave(e);\r\n                    }\r\n                }\r\n            });\r\n\r\n            o.dropZone.addEventListener(\"drop\", this.onFileDroppedIn);\r\n        }\r\n    }\r\n\r\n    changeConcurrentLimit = (newLimit: number) => {\r\n        this.pool.limit = newLimit;\r\n    };\r\n\r\n    dispatchUploader(task: Task): Base {\r\n        if (task.type == TaskType.resumeHint) {\r\n            return new ResumeHint(task, this);\r\n        }\r\n\r\n        switch (task.policy.type) {\r\n            case PolicyType.local:\r\n                return new Local(task, this);\r\n            case PolicyType.remote:\r\n                return new Remote(task, this);\r\n            case PolicyType.onedrive:\r\n                return new OneDrive(task, this);\r\n            case PolicyType.oss:\r\n                return new OSS(task, this);\r\n            case PolicyType.qiniu:\r\n                return new Qiniu(task, this);\r\n            case PolicyType.cos:\r\n                return new COS(task, this);\r\n            case PolicyType.upyun:\r\n                return new Upyun(task, this);\r\n            case PolicyType.s3:\r\n                return new S3(task, this);\r\n            default:\r\n                throw new UnknownPolicyError(\r\n                    \"Unknown policy type.\",\r\n                    task.policy\r\n                );\r\n        }\r\n    }\r\n\r\n    // 设定当前存储策略\r\n    public setPolicy(p: Policy, path: string) {\r\n        this.policy = p;\r\n        this.currentPath = path;\r\n        if (p == undefined) {\r\n            this.logger.info(`Currently no policy selected`);\r\n            return;\r\n        }\r\n\r\n        this.logger.info(`Switching policy to:`, p);\r\n\r\n        if (p.allowedSuffix != undefined && p.allowedSuffix.length > 0) {\r\n            const acceptVal = p.allowedSuffix\r\n                .map((v) => {\r\n                    return \".\" + v;\r\n                })\r\n                .join(\",\");\r\n            this.logger.info(`Set allowed file suffix to ${acceptVal}`);\r\n            this.fileInput.setAttribute(\"accept\", acceptVal);\r\n        } else {\r\n            this.logger.info(`Set allowed file suffix to *`);\r\n            this.fileInput.removeAttribute(\"accept\");\r\n        }\r\n    }\r\n\r\n    // 选择文件\r\n    public select = (dst: string, type = SelectType.File): Promise<Base[]> => {\r\n        return new Promise<Base[]>((resolve) => {\r\n            if (this.policy == undefined) {\r\n                this.logger.warn(\r\n                    `Calling file selector while no policy is set`\r\n                );\r\n                throw new UploaderError(\r\n                    UploaderErrorName.NoPolicySelected,\r\n                    \"No policy selected.\"\r\n                );\r\n            }\r\n\r\n            this.fileInput.onchange = (ev: Event) =>\r\n                this.fileSelectCallback(ev, dst, resolve);\r\n            this.directoryInput.onchange = (ev: Event) =>\r\n                this.fileSelectCallback(ev, dst, resolve);\r\n            this.fileInput.value = \"\";\r\n            this.directoryInput.value = \"\";\r\n            type == SelectType.File\r\n                ? this.fileInput.click()\r\n                : this.directoryInput.click();\r\n        });\r\n    };\r\n\r\n    public resumeTasks = (): Base[] => {\r\n        const tasks = listResumeCtx(this.logger);\r\n        if (tasks.length > 0) {\r\n            this.logger.info(\r\n                `Resumed ${tasks.length} unfinished task(s) from local storage:`,\r\n                tasks\r\n            );\r\n        }\r\n        return tasks\r\n            .filter(\r\n                (t) =>\r\n                    t.chunkProgress.length > 0 && t.chunkProgress[0].loaded > 0\r\n            )\r\n            .map((t) =>\r\n                this.dispatchUploader({ ...t, type: TaskType.resumeHint })\r\n            );\r\n    };\r\n\r\n    public cleanupSessions = () => {\r\n        cleanupResumeCtx(this.logger);\r\n    };\r\n\r\n    private fileSelectCallback = (\r\n        ev: Event | File[],\r\n        dst: string,\r\n        resolve: (value?: Base[] | PromiseLike<Base[]> | undefined) => void\r\n    ) => {\r\n        let files: File[] = [];\r\n        if (ev instanceof Event) {\r\n            const target = ev.target as HTMLInputElement;\r\n            if (!ev || !target || !target.files) return;\r\n            if (target.files.length > 0) {\r\n                files = Array.from(target.files);\r\n            }\r\n        } else {\r\n            files = ev as File[];\r\n        }\r\n\r\n        if (files.length > 0) {\r\n            resolve(\r\n                files.map(\r\n                    (file): Base =>\r\n                        this.dispatchUploader({\r\n                            type: TaskType.file,\r\n                            policy: this.policy as Policy,\r\n                            dst: getDirectoryUploadDst(dst, file),\r\n                            file: file,\r\n                            size: file.size,\r\n                            name: file.name,\r\n                            chunkProgress: [],\r\n                            resumed: false,\r\n                        })\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    private onFileDroppedIn = async (e: DragEvent) => {\r\n        const containFile =\r\n            e.dataTransfer && e.dataTransfer.types.includes(\"Files\");\r\n        if (containFile) {\r\n            this.o.onDropLeave && this.o.onDropLeave(e);\r\n            const items = await getAllFileEntries(e.dataTransfer!.items);\r\n            console.log(items);\r\n            const uploaders = await new Promise<Base[]>((resolve) =>\r\n                this.fileSelectCallback(items, this.currentPath, resolve)\r\n            );\r\n            this.o.onDropFileAdded && this.o.onDropFileAdded(uploaders);\r\n        }\r\n    };\r\n}\r\n","import Base, { Status, UploadProgress } from \"./base\";\r\nimport * as utils from \"../utils\";\r\nimport { Task, TaskType } from \"../types\";\r\nimport UploadManager from \"../index\";\r\nimport Logger from \"../logger\";\r\n\r\nexport interface ChunkProgress {\r\n    loaded: number;\r\n    index: number;\r\n    etag?: string;\r\n}\r\n\r\nexport interface ChunkInfo {\r\n    chunk: Blob;\r\n    index: number;\r\n}\r\n\r\nexport default abstract class Chunk extends Base {\r\n    protected chunks: Blob[];\r\n\r\n    public upload = async () => {\r\n        this.logger.info(\"Preparing uploading file chunks.\");\r\n        this.initBeforeUploadChunks();\r\n\r\n        this.logger.info(\"Starting uploading file chunks:\", this.chunks);\r\n        this.updateLocalCache();\r\n        for (let i = 0; i < this.chunks.length; i++) {\r\n            if (\r\n                this.task.chunkProgress[i].loaded < this.chunks[i].size ||\r\n                this.chunks[i].size == 0\r\n            ) {\r\n                await this.uploadChunk({ chunk: this.chunks[i], index: i });\r\n                this.logger.info(`Chunk [${i}] uploaded.`);\r\n                this.updateLocalCache();\r\n            }\r\n        }\r\n    };\r\n\r\n    private initBeforeUploadChunks() {\r\n        this.chunks = utils.getChunks(\r\n            this.task.file,\r\n            this.task.session?.chunkSize\r\n        );\r\n        const cachedInfo = utils.getResumeCtx(this.task, this.logger);\r\n        if (cachedInfo == null) {\r\n            this.task.chunkProgress = this.chunks.map(\r\n                (value, index): ChunkProgress => ({\r\n                    loaded: 0,\r\n                    index,\r\n                })\r\n            );\r\n        }\r\n\r\n        this.notifyResumeProgress();\r\n    }\r\n\r\n    protected abstract async uploadChunk(chunkInfo: ChunkInfo): Promise<any>;\r\n\r\n    protected updateChunkProgress(loaded: number, index: number) {\r\n        this.task.chunkProgress[index].loaded = loaded;\r\n        this.notifyResumeProgress();\r\n    }\r\n\r\n    private notifyResumeProgress() {\r\n        this.progress = {\r\n            total: this.getProgressInfoItem(\r\n                utils.sumChunk(this.task.chunkProgress),\r\n                this.task.file.size + 1\r\n            ),\r\n            chunks: this.chunks.map((chunk, index) => {\r\n                return this.getProgressInfoItem(\r\n                    this.task.chunkProgress[index].loaded,\r\n                    chunk.size,\r\n                    false\r\n                );\r\n            }),\r\n        };\r\n        this.subscriber.onProgress(this.progress);\r\n    }\r\n\r\n    private updateLocalCache() {\r\n        utils.setResumeCtx(this.task, this.logger);\r\n    }\r\n}\r\n","import Chunk, { ChunkInfo } from \"./chunk\";\r\nimport { localUploadChunk } from \"../api\";\r\n\r\nexport default class Local extends Chunk {\r\n    protected async uploadChunk(chunkInfo: ChunkInfo) {\r\n        return localUploadChunk(\r\n            this.task.session?.sessionID!,\r\n            chunkInfo,\r\n            (p) => {\r\n                this.updateChunkProgress(p.loaded, chunkInfo.index);\r\n            },\r\n            this.cancelToken.token\r\n        );\r\n    }\r\n}\r\n","import Chunk, { ChunkInfo } from \"./chunk\";\r\nimport { slaveUploadChunk } from \"../api\";\r\n\r\nexport default class Remote extends Chunk {\r\n    protected async uploadChunk(chunkInfo: ChunkInfo) {\r\n        return slaveUploadChunk(\r\n            `${this.task.session?.uploadURLs[0]!}`,\r\n            this.task.session?.credential!,\r\n            chunkInfo,\r\n            (p) => {\r\n                this.updateChunkProgress(p.loaded, chunkInfo.index);\r\n            },\r\n            this.cancelToken.token\r\n        );\r\n    }\r\n}\r\n","import Chunk, { ChunkInfo } from \"./chunk\";\r\nimport { finishOneDriveUpload, oneDriveUploadChunk } from \"../api\";\r\nimport { OneDriveChunkError, OneDriveEmptyFileSelected } from \"../errors\";\r\nimport { Status } from \"./base\";\r\n\r\nexport default class OneDrive extends Chunk {\r\n    protected async uploadChunk(chunkInfo: ChunkInfo) {\r\n        if (chunkInfo.chunk.size === 0) {\r\n            throw new OneDriveEmptyFileSelected();\r\n        }\r\n\r\n        const rangeEnd = this.progress.total.loaded + chunkInfo.chunk.size - 1;\r\n        return this.sendRange(\r\n            chunkInfo,\r\n            this.progress.total.loaded,\r\n            rangeEnd,\r\n            0\r\n        ).catch((e) => {\r\n            if (\r\n                e instanceof OneDriveChunkError &&\r\n                e.response.error.innererror &&\r\n                e.response.error.innererror.code == \"fragmentOverlap\"\r\n            ) {\r\n                return this.alignChunkOffset(chunkInfo);\r\n            }\r\n\r\n            throw e;\r\n        });\r\n    }\r\n\r\n    private async sendRange(\r\n        chunkInfo: ChunkInfo,\r\n        start: number,\r\n        end: number,\r\n        chunkOffset: number\r\n    ) {\r\n        const range = `bytes ${start}-${end}/${this.task.file.size}`;\r\n        return oneDriveUploadChunk(\r\n            `${this.task.session?.uploadURLs[0]!}`,\r\n            range,\r\n            chunkInfo,\r\n            (p) => {\r\n                this.updateChunkProgress(\r\n                    chunkOffset + p.loaded,\r\n                    chunkInfo.index\r\n                );\r\n            },\r\n            this.cancelToken.token\r\n        );\r\n    }\r\n\r\n    private async alignChunkOffset(chunkInfo: ChunkInfo) {\r\n        this.logger.info(\r\n            `Chunk [${chunkInfo.index}] overlapped, checking next expected range...`\r\n        );\r\n        const rangeStatus = await oneDriveUploadChunk(\r\n            `${this.task.session?.uploadURLs[0]!}`,\r\n            \"\",\r\n            chunkInfo,\r\n            (p) => {\r\n                return null;\r\n            },\r\n            this.cancelToken.token\r\n        );\r\n        const expectedStart = parseInt(\r\n            rangeStatus.nextExpectedRanges[0].split(\"-\")[0]\r\n        );\r\n        this.logger.info(\r\n            `Next expected range start from OneDrive is ${expectedStart}.`\r\n        );\r\n\r\n        if (expectedStart >= this.progress.total.loaded) {\r\n            this.logger.info(`This whole chunk is overlapped, skipping...`);\r\n            this.updateChunkProgress(chunkInfo.chunk.size, chunkInfo.index);\r\n            return;\r\n        } else {\r\n            this.updateChunkProgress(0, chunkInfo.index);\r\n            const rangeEnd =\r\n                this.progress.total.loaded + chunkInfo.chunk.size - 1;\r\n            const newChunkOffset = expectedStart - this.progress.total.loaded;\r\n            chunkInfo.chunk = chunkInfo.chunk.slice(newChunkOffset);\r\n            this.updateChunkProgress(newChunkOffset, chunkInfo.index);\r\n            return this.sendRange(\r\n                chunkInfo,\r\n                expectedStart,\r\n                rangeEnd,\r\n                newChunkOffset\r\n            );\r\n        }\r\n    }\r\n\r\n    protected async afterUpload(): Promise<any> {\r\n        this.logger.info(`Finishing upload...`);\r\n        this.transit(Status.finishing);\r\n        return finishOneDriveUpload(\r\n            this.task.session!.sessionID,\r\n            this.cancelToken.token\r\n        );\r\n    }\r\n}\r\n","import Chunk, { ChunkInfo } from \"./chunk\";\r\nimport { s3LikeFinishUpload, s3LikeUploadChunk } from \"../api\";\r\nimport { Status } from \"./base\";\r\n\r\nexport default class OSS extends Chunk {\r\n    protected async uploadChunk(chunkInfo: ChunkInfo) {\r\n        return s3LikeUploadChunk(\r\n            this.task.session?.uploadURLs[chunkInfo.index]!,\r\n            chunkInfo,\r\n            (p) => {\r\n                this.updateChunkProgress(p.loaded, chunkInfo.index);\r\n            },\r\n            this.cancelToken.token\r\n        );\r\n    }\r\n\r\n    protected async afterUpload(): Promise<any> {\r\n        this.logger.info(`Finishing multipart upload...`);\r\n        this.transit(Status.finishing);\r\n        return s3LikeFinishUpload(\r\n            this.task.session!.completeURL,\r\n            true,\r\n            this.task.chunkProgress,\r\n            this.cancelToken.token\r\n        );\r\n    }\r\n}\r\n","import Chunk, { ChunkInfo } from \"./chunk\";\r\nimport { qiniuDriveUploadChunk, qiniuFinishUpload } from \"../api\";\r\nimport { Status } from \"./base\";\r\n\r\nexport default class Qiniu extends Chunk {\r\n    protected async uploadChunk(chunkInfo: ChunkInfo) {\r\n        const chunkRes = await qiniuDriveUploadChunk(\r\n            this.task.session?.uploadURLs[0]!,\r\n            this.task.session?.credential!,\r\n            chunkInfo,\r\n            (p) => {\r\n                this.updateChunkProgress(p.loaded, chunkInfo.index);\r\n            },\r\n            this.cancelToken.token\r\n        );\r\n\r\n        this.task.chunkProgress[chunkInfo.index].etag = chunkRes.etag;\r\n    }\r\n\r\n    protected async afterUpload(): Promise<any> {\r\n        this.logger.info(`Finishing multipart upload...`);\r\n        this.transit(Status.finishing);\r\n        return qiniuFinishUpload(\r\n            this.task.session?.uploadURLs[0]!,\r\n            this.task.session?.credential!,\r\n            this.task.chunkProgress,\r\n            this.cancelToken.token\r\n        );\r\n    }\r\n}\r\n","import Base, { Status } from \"./base\";\r\nimport { cosFormUploadChunk, cosUploadCallback } from \"../api\";\r\n\r\nexport default class COS extends Base {\r\n    public upload = async () => {\r\n        this.logger.info(\"Starting uploading file stream:\", this.task.file);\r\n        await cosFormUploadChunk(\r\n            this.task.session?.uploadURLs[0]!,\r\n            this.task.file,\r\n            this.task.session?.policy!,\r\n            this.task.session?.path!,\r\n            this.task.session?.callback!,\r\n            this.task.session?.sessionID!,\r\n            this.task.session?.keyTime!,\r\n            this.task.session?.credential!,\r\n            this.task.session?.ak!,\r\n            (p) => {\r\n                this.subscriber.onProgress({\r\n                    total: this.getProgressInfoItem(p.loaded, p.total),\r\n                });\r\n            },\r\n            this.cancelToken.token\r\n        );\r\n    };\r\n\r\n    protected async afterUpload(): Promise<any> {\r\n        this.transit(Status.finishing);\r\n        this.logger.info(`Sending COS upload callback...`);\r\n        try {\r\n            await cosUploadCallback(\r\n                this.task.session!.sessionID,\r\n                this.cancelToken.token\r\n            );\r\n        } catch (e) {\r\n            this.logger.warn(`Failed to finish COS upload:`, e);\r\n        }\r\n    }\r\n}\r\n","import Base from \"./base\";\r\nimport { upyunFormUploadChunk } from \"../api\";\r\n\r\nexport default class Upyun extends Base {\r\n    public upload = async () => {\r\n        this.logger.info(\"Starting uploading file stream:\", this.task.file);\r\n        await upyunFormUploadChunk(\r\n            this.task.session?.uploadURLs[0]!,\r\n            this.task.file,\r\n            this.task.session?.policy!,\r\n            this.task.session?.credential!,\r\n            (p) => {\r\n                this.subscriber.onProgress({\r\n                    total: this.getProgressInfoItem(p.loaded, p.total),\r\n                });\r\n            },\r\n            this.cancelToken.token\r\n        );\r\n    };\r\n}\r\n","import Chunk, { ChunkInfo } from \"./chunk\";\r\nimport {\r\n    s3LikeFinishUpload,\r\n    s3LikeUploadCallback,\r\n    s3LikeUploadChunk,\r\n} from \"../api\";\r\nimport { Status } from \"./base\";\r\n\r\nexport default class OSS extends Chunk {\r\n    protected async uploadChunk(chunkInfo: ChunkInfo) {\r\n        const etag = await s3LikeUploadChunk(\r\n            this.task.session?.uploadURLs[chunkInfo.index]!,\r\n            chunkInfo,\r\n            (p) => {\r\n                this.updateChunkProgress(p.loaded, chunkInfo.index);\r\n            },\r\n            this.cancelToken.token\r\n        );\r\n\r\n        this.task.chunkProgress[chunkInfo.index].etag = etag;\r\n    }\r\n\r\n    protected async afterUpload(): Promise<any> {\r\n        this.logger.info(`Finishing multipart upload...`);\r\n        this.transit(Status.finishing);\r\n        await s3LikeFinishUpload(\r\n            this.task.session!.completeURL,\r\n            false,\r\n            this.task.chunkProgress,\r\n            this.cancelToken.token\r\n        );\r\n\r\n        this.logger.info(`Sending S3-like upload callback...`);\r\n        return s3LikeUploadCallback(\r\n            this.task.session!.sessionID,\r\n            this.cancelToken.token\r\n        );\r\n    }\r\n}\r\n","import Chunk, { ChunkInfo } from \"./chunk\";\r\nimport { qiniuDriveUploadChunk, qiniuFinishUpload } from \"../api\";\r\nimport { Status } from \"./base\";\r\nimport { Task } from \"../types\";\r\nimport UploadManager from \"../index\";\r\nimport * as utils from \"../utils\";\r\n\r\nexport default class ResumeHint extends Chunk {\r\n    constructor(task: Task, manager: UploadManager) {\r\n        super(task, manager);\r\n        this.status = Status.resumable;\r\n        this.progress = {\r\n            total: this.getProgressInfoItem(\r\n                utils.sumChunk(this.task.chunkProgress),\r\n                this.task.size + 1\r\n            ),\r\n        };\r\n        this.subscriber.onProgress(this.progress);\r\n    }\r\n\r\n    protected async uploadChunk(chunkInfo: ChunkInfo) {\r\n        return null;\r\n    }\r\n}\r\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { Badge, CircularProgress, makeStyles } from \"@material-ui/core\";\r\nimport SpeedDial from \"@material-ui/lab/SpeedDial\";\r\nimport SpeedDialIcon from \"@material-ui/lab/SpeedDialIcon\";\r\nimport SpeedDialAction from \"@material-ui/lab/SpeedDialAction\";\r\nimport CreateNewFolderIcon from \"@material-ui/icons/CreateNewFolder\";\r\nimport PublishIcon from \"@material-ui/icons/Publish\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport AutoHidden from \"./AutoHidden\";\r\nimport statusHelper from \"../../utils/page\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport { FilePlus, FolderUpload } from \"mdi-material-ui\";\r\nimport { green } from \"@material-ui/core/colors\";\r\nimport { SelectType } from \"../Uploader/core\";\r\nimport {\r\n    openCreateFileDialog,\r\n    openCreateFolderDialog,\r\n    toggleSnackbar,\r\n} from \"../../redux/explorer\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    fab: {\r\n        margin: 0,\r\n        top: \"auto\",\r\n        right: 20,\r\n        bottom: 20,\r\n        left: \"auto\",\r\n        zIndex: 5,\r\n        position: \"fixed\",\r\n    },\r\n    badge: {\r\n        position: \"absolute\",\r\n        bottom: 26,\r\n        top: \"auto\",\r\n        zIndex: 9999,\r\n        right: 7,\r\n    },\r\n    \"@global\": {\r\n        \".MuiSpeedDialAction-staticTooltipLabel\": {\r\n            whiteSpace: \"nowrap\",\r\n        },\r\n    },\r\n    fabProgress: {\r\n        color: green[500],\r\n        position: \"absolute\",\r\n        bottom: -6,\r\n        left: -6,\r\n        zIndex: 1,\r\n    },\r\n    buttonSuccess: {\r\n        backgroundColor: green[500],\r\n        \"&:hover\": {\r\n            backgroundColor: green[700],\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function UploadButton(props) {\r\n    const { t } = useTranslation(\"application\", { keyPrefix: \"fileManager\" });\r\n    const [open, setOpen] = useState(false);\r\n    const [queued, setQueued] = useState(5);\r\n    const path = useSelector((state) => state.navigator.path);\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n    const OpenNewFolderDialog = useCallback(\r\n        () => dispatch(openCreateFolderDialog()),\r\n        [dispatch]\r\n    );\r\n    const OpenNewFileDialog = useCallback(\r\n        () => dispatch(openCreateFileDialog()),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        setQueued(props.Queued);\r\n    }, [props.Queued]);\r\n\r\n    const uploadClicked = () => {\r\n        if (open) {\r\n            if (queued !== 0) {\r\n                props.openFileList();\r\n            } else {\r\n                props.selectFile(path);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const circularProgress = useMemo(() => {\r\n        if (props.progress.totalSize > 0) {\r\n            return (\r\n                <CircularProgress\r\n                    key={1}\r\n                    size={68}\r\n                    variant=\"determinate\"\r\n                    value={\r\n                        (props.progress.processedSize /\r\n                            props.progress.totalSize) *\r\n                        100\r\n                    }\r\n                    className={classes.fabProgress}\r\n                />\r\n            );\r\n        }\r\n    }, [classes, props.progress]);\r\n\r\n    return (\r\n        <AutoHidden enable hide={props.taskListOpen}>\r\n            <Badge\r\n                badgeContent={queued}\r\n                classes={{\r\n                    badge: classes.badge, // class name, e.g. `root-x`\r\n                }}\r\n                className={classes.fab}\r\n                invisible={queued === 0}\r\n                color=\"primary\"\r\n            >\r\n                <Backdrop open={open && statusHelper.isMobile()} />\r\n                <SpeedDial\r\n                    hidden={false}\r\n                    tooltipTitle={t(\"uploadFiles\")}\r\n                    icon={\r\n                        <SpeedDialIcon\r\n                            openIcon={\r\n                                !statusHelper.isMobile() && <PublishIcon />\r\n                            }\r\n                        />\r\n                    }\r\n                    onClose={handleClose}\r\n                    FabProps={{\r\n                        onClick: () =>\r\n                            !statusHelper.isMobile() && uploadClicked(),\r\n                        color: \"secondary\",\r\n                    }}\r\n                    onOpen={handleOpen}\r\n                    open={open}\r\n                    ariaLabel={\"\"}\r\n                >\r\n                    {statusHelper.isMobile() && (\r\n                        <SpeedDialAction\r\n                            key=\"UploadFile\"\r\n                            icon={<PublishIcon />}\r\n                            tooltipOpen\r\n                            tooltipTitle={t(\"uploadFiles\")}\r\n                            onClick={() => uploadClicked()}\r\n                            title={t(\"uploadFiles\")}\r\n                        />\r\n                    )}\r\n                    {!statusHelper.isMobile() && (\r\n                        <SpeedDialAction\r\n                            key=\"UploadFolder\"\r\n                            icon={<FolderUpload />}\r\n                            tooltipOpen\r\n                            tooltipTitle={t(\"uploadFolder\")}\r\n                            onClick={() =>\r\n                                props.selectFile(path, SelectType.Directory)\r\n                            }\r\n                            title={t(\"uploadFolder\")}\r\n                        />\r\n                    )}\r\n                    <SpeedDialAction\r\n                        key=\"NewFolder\"\r\n                        icon={<CreateNewFolderIcon />}\r\n                        tooltipOpen\r\n                        tooltipTitle={t(\"newFolder\")}\r\n                        onClick={() => OpenNewFolderDialog()}\r\n                        title={t(\"newFolder\")}\r\n                    />\r\n                    <SpeedDialAction\r\n                        key=\"NewFile\"\r\n                        icon={<FilePlus />}\r\n                        tooltipOpen\r\n                        tooltipTitle={t(\"newFile\")}\r\n                        onClick={() => OpenNewFileDialog()}\r\n                        title={t(\"newFile\")}\r\n                    />\r\n                </SpeedDial>\r\n                {circularProgress}\r\n            </Badge>\r\n        </AutoHidden>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { sizeToString } from \"../../../utils\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport TimeAgo from \"timeago-react\";\r\nimport { Status } from \"../core/uploader/base\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    infoTitle: {\r\n        fontWeight: 700,\r\n    },\r\n    infoValue: {\r\n        color: theme.palette.text.secondary,\r\n        wordBreak: \"break-all\",\r\n    },\r\n}));\r\n\r\nexport default function TaskDetail({ uploader, navigateToDst, error }) {\r\n    const { t } = useTranslation();\r\n    const classes = useStyles();\r\n    const items = [\r\n        {\r\n            name: t(\"uploader.fileName\"),\r\n            value: uploader.task.name,\r\n        },\r\n        {\r\n            name: t(\"uploader.fileSize\"),\r\n            value: `${sizeToString(uploader.task.size)} ${\r\n                uploader.task.session && uploader.task.session.chunkSize > 0\r\n                    ? t(\"uploader.chunkDescription\", {\r\n                          total: uploader.task.chunkProgress.length,\r\n                          size: sizeToString(uploader.task.session.chunkSize),\r\n                      })\r\n                    : t(\"uploader.noChunks\")\r\n            }`,\r\n        },\r\n        {\r\n            name: t(\"fileManager.storagePolicy\"),\r\n            value: uploader.task.policy.name,\r\n        },\r\n        {\r\n            name: t(\"uploader.destination\"),\r\n            value: (\r\n                <Link\r\n                    href={\"javascript:void\"}\r\n                    onClick={() => navigateToDst(uploader.task.dst)}\r\n                >\r\n                    {uploader.task.dst === \"/\"\r\n                        ? t(\"uploader.rootFolder\")\r\n                        : uploader.task.dst}\r\n                </Link>\r\n            ),\r\n        },\r\n        uploader.task.session\r\n            ? {\r\n                  name: t(\"uploader.uploadSession\"),\r\n                  value: (\r\n                      <>\r\n                          <Trans\r\n                              i18nKey=\"uploader.sessionExpiredIn\"\r\n                              components={[\r\n                                  <TimeAgo\r\n                                      key={0}\r\n                                      datetime={\r\n                                          uploader.task.session\r\n                                              ? uploader.task.session.expires *\r\n                                                1000\r\n                                              : 0\r\n                                      }\r\n                                      locale={t(\"timeAgoLocaleCode\", {\r\n                                          ns: \"common\",\r\n                                      })}\r\n                                  />,\r\n                              ]}\r\n                          />\r\n                      </>\r\n                  ),\r\n              }\r\n            : null,\r\n        uploader.status === Status.error\r\n            ? {\r\n                  name: t(\"uploader.errorDetails\"),\r\n                  value: error,\r\n              }\r\n            : null,\r\n    ];\r\n    return (\r\n        <Grid container>\r\n            {items.map((i) => (\r\n                <>\r\n                    {i && (\r\n                        <Grid key={i.name} container xs={12}>\r\n                            <Grid item xs={3} className={classes.infoTitle}>\r\n                                {i.name}\r\n                            </Grid>\r\n                            <Grid item xs={9} className={classes.infoValue}>\r\n                                {i.value}\r\n                            </Grid>\r\n                        </Grid>\r\n                    )}\r\n                </>\r\n            ))}\r\n        </Grid>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport {\r\n    Divider,\r\n    Grow,\r\n    IconButton,\r\n    ListItem,\r\n    ListItemText,\r\n    makeStyles,\r\n    Tooltip,\r\n} from \"@material-ui/core\";\r\nimport TypeIcon from \"../../FileManager/TypeIcon\";\r\nimport { useUpload } from \"../UseUpload\";\r\nimport { Status } from \"../core/uploader/base\";\r\nimport { UploaderError } from \"../core/errors\";\r\nimport { filename, sizeToString } from \"../../../utils\";\r\nimport { darken, lighten } from \"@material-ui/core/styles/colorManipulator\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport PlayArrow from \"@material-ui/icons/PlayArrow\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport TaskDetail from \"./TaskDetail\";\r\nimport { SelectType } from \"../core\";\r\nimport { navigateTo } from \"../../../redux/explorer\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    progressContent: {\r\n        position: \"relative\",\r\n        zIndex: 9,\r\n    },\r\n    progress: {\r\n        transition: \"width .4s linear\",\r\n        zIndex: 1,\r\n        height: \"100%\",\r\n        position: \"absolute\",\r\n        left: 0,\r\n        top: 0,\r\n    },\r\n    progressContainer: {\r\n        position: \"relative\",\r\n    },\r\n    listAction: {\r\n        marginLeft: 20,\r\n        marginRight: 20,\r\n    },\r\n    wordBreak: {\r\n        wordBreak: \"break-all\",\r\n        whiteSpace: \"nowrap\",\r\n        overflow: \"hidden\",\r\n        textOverflow: \"ellipsis\",\r\n    },\r\n    successStatus: {\r\n        color: theme.palette.success.main,\r\n    },\r\n    errorStatus: {\r\n        color: theme.palette.warning.main,\r\n        wordBreak: \"break-all\",\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            whiteSpace: \"nowrap\",\r\n            overflow: \"hidden\",\r\n            textOverflow: \"ellipsis\",\r\n        },\r\n    },\r\n    disabledBadge: {\r\n        marginLeft: theme.spacing(1),\r\n        height: 18,\r\n    },\r\n    delete: {\r\n        zIndex: 9,\r\n    },\r\n    dstLink: {\r\n        color: theme.palette.success.main,\r\n        fontWeight: 600,\r\n    },\r\n    fileNameContainer: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n    },\r\n}));\r\n\r\nconst ExpansionPanel = withStyles({\r\n    root: {\r\n        maxWidth: \"100%\",\r\n        boxShadow: \"none\",\r\n        \"&:not(:last-child)\": {\r\n            borderBottom: 0,\r\n        },\r\n        \"&:before\": {\r\n            display: \"none\",\r\n        },\r\n        \"&$expanded\": {\r\n            margin: 0,\r\n        },\r\n    },\r\n    expanded: {},\r\n})(MuiExpansionPanel);\r\n\r\nconst ExpansionPanelSummary = withStyles({\r\n    root: {\r\n        minHeight: 0,\r\n        padding: 0,\r\n        display: \"block\",\r\n        \"&$expanded\": {},\r\n    },\r\n    content: {\r\n        margin: 0,\r\n        display: \"block\",\r\n        \"&$expanded\": {\r\n            margin: \"0\",\r\n        },\r\n    },\r\n    expanded: {},\r\n})(MuiExpansionPanelSummary);\r\n\r\nconst ExpansionPanelDetails = withStyles((theme) => ({\r\n    root: {\r\n        paddingLeft: 16,\r\n        paddingRight: 16,\r\n        paddingTop: 8,\r\n        paddingBottom: 8,\r\n        display: \"block\",\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n}))(MuiExpansionPanelDetails);\r\n\r\nconst getSpeedText = (speed, speedAvg, useSpeedAvg) => {\r\n    let displayedSpeed = speedAvg;\r\n    if (!useSpeedAvg) {\r\n        displayedSpeed = speed;\r\n    }\r\n\r\n    return `${sizeToString(displayedSpeed ? displayedSpeed : 0)} /s`;\r\n};\r\n\r\nconst getErrMsg = (error) => {\r\n    let errMsg = error.message;\r\n    if (error instanceof UploaderError) {\r\n        errMsg = error.Message(\"\");\r\n    }\r\n\r\n    return errMsg;\r\n};\r\n\r\nexport default function UploadTask({\r\n    uploader,\r\n    useAvgSpeed,\r\n    onCancel,\r\n    onClose,\r\n    selectFile,\r\n    onRefresh,\r\n}) {\r\n    const { t } = useTranslation(\"application\", { keyPrefix: \"uploader\" });\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [taskHover, setTaskHover] = useState(false);\r\n    const [expanded, setExpanded] = useState(false);\r\n    const { status, error, progress, speed, speedAvg, retry } = useUpload(\r\n        uploader\r\n    );\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n    const [loading, setLoading] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const NavigateTo = useCallback((k) => dispatch(navigateTo(k)), [dispatch]);\r\n    const navigateToDst = (path) => {\r\n        onClose(null, \"backdropClick\");\r\n        NavigateTo(path);\r\n    };\r\n\r\n    const toggleDetail = (event, newExpanded) => {\r\n        setExpanded(!!newExpanded);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (status >= Status.finished) {\r\n            onRefresh();\r\n        }\r\n    }, [status]);\r\n\r\n    const statusText = useMemo(() => {\r\n        const parent = filename(uploader.task.dst);\r\n        switch (status) {\r\n            case Status.added:\r\n            case Status.initialized:\r\n            case Status.queued:\r\n                return <div>{t(\"pendingInQueue\")}</div>;\r\n            case Status.preparing:\r\n                return <div>{t(\"preparing\")}</div>;\r\n            case Status.error:\r\n                return (\r\n                    <div className={classes.errorStatus}>\r\n                        {getErrMsg(error)}\r\n                        <br />\r\n                    </div>\r\n                );\r\n            case Status.finishing:\r\n                return <div>{t(\"processing\")}</div>;\r\n            case Status.resumable:\r\n                return (\r\n                    <div>\r\n                        {t(\"progressDescription\", {\r\n                            uploaded: sizeToString(progress.total.loaded),\r\n                            total: sizeToString(progress.total.size),\r\n                            percentage: progress.total.percent.toFixed(2),\r\n                        })}\r\n                    </div>\r\n                );\r\n            case Status.processing:\r\n                if (progress) {\r\n                    return (\r\n                        <div>\r\n                            {t(\"progressDescriptionFull\", {\r\n                                speed: getSpeedText(\r\n                                    speed,\r\n                                    speedAvg,\r\n                                    useAvgSpeed\r\n                                ),\r\n                                uploaded: sizeToString(progress.total.loaded),\r\n                                total: sizeToString(progress.total.size),\r\n                                percentage: progress.total.percent.toFixed(2),\r\n                            })}\r\n                        </div>\r\n                    );\r\n                }\r\n                return <div>{t(\"progressDescriptionPlaceHolder\")}</div>;\r\n            case Status.finished:\r\n                return (\r\n                    <div className={classes.successStatus}>\r\n                        {t(\"uploadedTo\")}\r\n                        <Tooltip title={uploader.task.dst}>\r\n                            <Link\r\n                                className={classes.dstLink}\r\n                                href={\"javascript:void\"}\r\n                                onClick={() => navigateToDst(uploader.task.dst)}\r\n                            >\r\n                                {parent === \"\" ? t(\"rootFolder\") : parent}\r\n                            </Link>\r\n                        </Tooltip>\r\n                        <br />\r\n                    </div>\r\n                );\r\n            default:\r\n                return <div>{t(\"unknownStatus\")}</div>;\r\n        }\r\n    }, [status, error, progress, speed, speedAvg, useAvgSpeed]);\r\n\r\n    const resumeLabel = useMemo(\r\n        () =>\r\n            uploader.task.resumed && !fullScreen ? (\r\n                <Chip\r\n                    className={classes.disabledBadge}\r\n                    size=\"small\"\r\n                    label={t(\"resumed\")}\r\n                />\r\n            ) : null,\r\n        [status, fullScreen]\r\n    );\r\n\r\n    const continueLabel = useMemo(\r\n        () =>\r\n            status === Status.resumable && !fullScreen ? (\r\n                <Chip\r\n                    className={classes.disabledBadge}\r\n                    size=\"small\"\r\n                    color={\"secondary\"}\r\n                    label={t(\"resumable\")}\r\n                />\r\n            ) : null,\r\n        [status, fullScreen]\r\n    );\r\n\r\n    const progressBar = useMemo(\r\n        () =>\r\n            (status === Status.processing ||\r\n                status === Status.finishing ||\r\n                status === Status.resumable) &&\r\n            progress ? (\r\n                <div\r\n                    style={{\r\n                        backgroundColor:\r\n                            theme.palette.type === \"light\"\r\n                                ? lighten(theme.palette.primary.main, 0.8)\r\n                                : darken(theme.palette.background.paper, 0.2),\r\n                        width: progress.total.percent + \"%\",\r\n                    }}\r\n                    className={classes.progress}\r\n                />\r\n            ) : null,\r\n        [status, progress, theme]\r\n    );\r\n\r\n    const taskDetail = useMemo(() => {\r\n        return (\r\n            <TaskDetail\r\n                error={error && getErrMsg(error)}\r\n                navigateToDst={navigateToDst}\r\n                uploader={uploader}\r\n            />\r\n        );\r\n    }, [uploader, expanded]);\r\n\r\n    const cancel = () => {\r\n        setLoading(true);\r\n        uploader.cancel().then(() => {\r\n            setLoading(false);\r\n            onCancel((u) => u.id != uploader.id);\r\n        });\r\n    };\r\n\r\n    const stopRipple = (e) => {\r\n        e.stopPropagation();\r\n    };\r\n\r\n    const secondaryAction = useMemo(() => {\r\n        if (!taskHover && !fullScreen) {\r\n            return <></>;\r\n        }\r\n\r\n        const actions = [\r\n            {\r\n                show: status === Status.error,\r\n                title: t(\"retry\"),\r\n                click: retry,\r\n                icon: <RefreshIcon />,\r\n                loading: false,\r\n            },\r\n            {\r\n                show: true,\r\n                title:\r\n                    status === Status.finished\r\n                        ? t(\"deleteTask\")\r\n                        : t(\"cancelAndDelete\"),\r\n                click: cancel,\r\n                icon: <DeleteIcon />,\r\n                loading: loading,\r\n            },\r\n            {\r\n                show: status === Status.resumable,\r\n                title: t(\"selectAndResume\"),\r\n                click: () =>\r\n                    selectFile(uploader.task.dst, SelectType.File, uploader),\r\n                icon: <PlayArrow />,\r\n                loading: false,\r\n            },\r\n        ];\r\n\r\n        return (\r\n            <>\r\n                {actions.map((a) => (\r\n                    <>\r\n                        {a.show && (\r\n                            <Grow in={a.show}>\r\n                                <Tooltip title={a.title}>\r\n                                    <IconButton\r\n                                        onMouseDown={stopRipple}\r\n                                        onTouchStart={stopRipple}\r\n                                        disabled={a.loading}\r\n                                        onClick={(e) => {\r\n                                            e.stopPropagation();\r\n                                            a.click();\r\n                                        }}\r\n                                    >\r\n                                        {a.icon}\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                            </Grow>\r\n                        )}\r\n                    </>\r\n                ))}\r\n            </>\r\n        );\r\n    }, [status, loading, taskHover, fullScreen, uploader]);\r\n\r\n    const fileIcon = useMemo(() => {\r\n        if (!fullScreen) {\r\n            return <TypeIcon fileName={uploader.task.name} isUpload />;\r\n        }\r\n    }, [uploader, fullScreen]);\r\n\r\n    return (\r\n        <>\r\n            <ExpansionPanel square expanded={expanded} onChange={toggleDetail}>\r\n                <ExpansionPanelSummary\r\n                    aria-controls=\"panel1d-content\"\r\n                    id=\"panel1d-header\"\r\n                >\r\n                    <div\r\n                        className={classes.progressContainer}\r\n                        onMouseLeave={() => setTaskHover(false)}\r\n                        onMouseOver={() => setTaskHover(true)}\r\n                    >\r\n                        {progressBar}\r\n                        <ListItem className={classes.progressContent} button>\r\n                            {fileIcon}\r\n                            <ListItemText\r\n                                className={classes.listAction}\r\n                                primary={\r\n                                    <div className={classes.fileNameContainer}>\r\n                                        <div className={classes.wordBreak}>\r\n                                            {uploader.task.name}\r\n                                        </div>\r\n                                        <div>{resumeLabel}</div>\r\n                                        <div>{continueLabel}</div>\r\n                                    </div>\r\n                                }\r\n                                secondary={\r\n                                    <div className={classes.wordBreak}>\r\n                                        {statusText}\r\n                                    </div>\r\n                                }\r\n                            />\r\n                            {secondaryAction}\r\n                        </ListItem>\r\n                    </div>\r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails>{taskDetail}</ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n            <Divider />\r\n        </>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../redux/explorer\";\r\n\r\nexport function useUpload(uploader) {\r\n    const startLoadedRef = useRef(0);\r\n    const [status, setStatus] = useState(uploader.status);\r\n    const [error, setError] = useState(uploader.error);\r\n    const [progress, setProgress] = useState(uploader.progress);\r\n    const dispatch = useDispatch();\r\n\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        /* eslint-disable @typescript-eslint/no-empty-function */\r\n        uploader.subscribe({\r\n            onTransition: (newStatus) => {\r\n                setStatus(newStatus);\r\n            },\r\n            onError: (err) => {\r\n                setError(err);\r\n                setStatus(uploader.status);\r\n            },\r\n            onProgress: (data) => {\r\n                setProgress(data);\r\n            },\r\n            onMsg: (msg, color) => {\r\n                ToggleSnackbar(\"top\", \"right\", msg, color);\r\n            },\r\n        });\r\n    }, []);\r\n\r\n    // 获取上传速度\r\n    const [speed, speedAvg] = React.useMemo(() => {\r\n        if (\r\n            progress == null ||\r\n            progress.total == null ||\r\n            progress.total.loaded == null\r\n        )\r\n            return [0, 0];\r\n        const duration = (Date.now() - (uploader.lastTime || 0)) / 1000;\r\n        const durationTotal = (Date.now() - (uploader.startTime || 0)) / 1000;\r\n        const res =\r\n            progress.total.loaded > startLoadedRef.current\r\n                ? Math.floor(\r\n                      (progress.total.loaded - startLoadedRef.current) /\r\n                          duration\r\n                  )\r\n                : 0;\r\n        const resAvg =\r\n            progress.total.loaded > 0\r\n                ? Math.floor(progress.total.loaded / durationTotal)\r\n                : 0;\r\n\r\n        startLoadedRef.current = progress.total.loaded;\r\n        uploader.lastTime = Date.now();\r\n        return [res, resAvg];\r\n    }, [progress]);\r\n\r\n    const retry = () => {\r\n        uploader.reset();\r\n        uploader.start();\r\n    };\r\n\r\n    return { status, error, progress, speed, speedAvg, retry };\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Input,\r\n    InputLabel,\r\n    makeStyles,\r\n} from \"@material-ui/core\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Auth from \"../../middleware/Auth\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({}));\r\n\r\nexport default function ConcurrentOptionDialog({ open, onClose, onSave }) {\r\n    const { t } = useTranslation();\r\n    const [count, setCount] = useState(\r\n        Auth.GetPreferenceWithDefault(\"concurrent_limit\", \"5\")\r\n    );\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Dialog\r\n            fullWidth\r\n            maxWidth={\"xs\"}\r\n            open={open}\r\n            onClose={onClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\">\r\n                {t(\"uploader.setConcurrent\")}\r\n            </DialogTitle>\r\n\r\n            <DialogContent>\r\n                <FormControl fullWidth>\r\n                    <InputLabel htmlFor=\"component-helper\">\r\n                        {t(\"uploader.concurrentTaskNumber\")}\r\n                    </InputLabel>\r\n                    <Input\r\n                        type={\"number\"}\r\n                        inputProps={{\r\n                            min: 1,\r\n                            step: 1,\r\n                            max: 20,\r\n                        }}\r\n                        value={count}\r\n                        onChange={(e) => setCount(e.target.value)}\r\n                    />\r\n                </FormControl>\r\n            </DialogContent>\r\n\r\n            <DialogActions>\r\n                <Button onClick={onClose}>\r\n                    {t(\"cancel\", { ns: \"common\" })}\r\n                </Button>\r\n                <div className={classes.wrapper}>\r\n                    <Button\r\n                        color=\"primary\"\r\n                        disabled={count === \"\"}\r\n                        onClick={() => onSave(count)}\r\n                    >\r\n                        {t(\"ok\", { ns: \"common\" })}\r\n                    </Button>\r\n                </div>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import {\r\n    Icon,\r\n    ListItemIcon,\r\n    makeStyles,\r\n    Menu,\r\n    MenuItem,\r\n    Tooltip,\r\n} from \"@material-ui/core\";\r\nimport React, { useCallback, useMemo, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport API from \"../../../middleware/Api\";\r\nimport { TaskType } from \"../core/types\";\r\nimport { refreshStorage, toggleSnackbar } from \"../../../redux/explorer\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport { DeleteEmpty } from \"mdi-material-ui\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport ConcurrentOptionDialog from \"../../Modals/ConcurrentOption\";\r\nimport Auth from \"../../../middleware/Auth\";\r\nimport { ClearAll } from \"@material-ui/icons\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    icon: {\r\n        minWidth: 38,\r\n    },\r\n}));\r\n\r\nexport default function MoreActions({\r\n    anchorEl,\r\n    onClose,\r\n    uploadManager,\r\n    deleteTask,\r\n    useAvgSpeed,\r\n    setUseAvgSpeed,\r\n    filter,\r\n    setFilter,\r\n    sorter,\r\n    setSorter,\r\n    cleanFinished,\r\n}) {\r\n    const { t } = useTranslation(\"application\", { keyPrefix: \"uploader\" });\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const [concurrentDialog, setConcurrentDialog] = useState(false);\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n    const RefreshStorage = useCallback(() => dispatch(refreshStorage()), [\r\n        dispatch,\r\n    ]);\r\n\r\n    const actionClicked = (next) => () => {\r\n        onClose();\r\n        next();\r\n    };\r\n\r\n    const cleanupSessions = () => {\r\n        uploadManager.cleanupSessions();\r\n        API.delete(\"/file/upload\")\r\n            .then((response) => {\r\n                if (response.rawData.code === 0) {\r\n                    ToggleSnackbar(\r\n                        \"top\",\r\n                        \"right\",\r\n                        t(\"uploadSessionCleaned\"),\r\n                        \"success\"\r\n                    );\r\n                } else {\r\n                    ToggleSnackbar(\r\n                        \"top\",\r\n                        \"right\",\r\n                        response.rawData.msg,\r\n                        \"warning\"\r\n                    );\r\n                }\r\n                deleteTask((u) => u.task.type !== TaskType.resumeHint);\r\n                RefreshStorage();\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? \"uploader-action-popover\" : undefined;\r\n\r\n    const listItems = useMemo(\r\n        () => [\r\n            {\r\n                tooltip: t(\"hideCompletedTooltip\"),\r\n                onClick: () =>\r\n                    setFilter(filter === \"default\" ? \"ongoing\" : \"default\"),\r\n                icon: filter !== \"default\" ? <CheckIcon /> : <Icon />,\r\n                text: t(\"hideCompleted\"),\r\n                divider: true,\r\n            },\r\n            {\r\n                tooltip: t(\"addTimeAscTooltip\"),\r\n                onClick: () => setSorter(\"default\"),\r\n                icon: sorter === \"default\" ? <CheckIcon /> : <Icon />,\r\n                text: t(\"addTimeAsc\"),\r\n                divider: false,\r\n            },\r\n            {\r\n                tooltip: t(\"addTimeDescTooltip\"),\r\n                onClick: () => setSorter(\"reverse\"),\r\n                icon: sorter === \"reverse\" ? <CheckIcon /> : <Icon />,\r\n                text: t(\"addTimeDesc\"),\r\n                divider: true,\r\n            },\r\n            {\r\n                tooltip: t(\"showInstantSpeedTooltip\"),\r\n                onClick: () => setUseAvgSpeed(false),\r\n                icon: useAvgSpeed ? <Icon /> : <CheckIcon />,\r\n                text: t(\"showInstantSpeed\"),\r\n                divider: false,\r\n            },\r\n            {\r\n                tooltip: t(\"showAvgSpeedTooltip\"),\r\n                onClick: () => setUseAvgSpeed(true),\r\n                icon: !useAvgSpeed ? <Icon /> : <CheckIcon />,\r\n                text: t(\"showAvgSpeed\"),\r\n                divider: true,\r\n            },\r\n            {\r\n                tooltip: t(\"cleanAllSessionTooltip\"),\r\n                onClick: () => cleanupSessions(),\r\n                icon: <DeleteEmpty />,\r\n                text: t(\"cleanAllSession\"),\r\n                divider: false,\r\n            },\r\n            {\r\n                tooltip: t(\"cleanCompletedTooltip\"),\r\n                onClick: () => cleanFinished(),\r\n                icon: <DeleteIcon />,\r\n                text: t(\"cleanCompleted\"),\r\n                divider: true,\r\n            },\r\n            {\r\n                tooltip: t(\"setConcurrentTooltip\"),\r\n                onClick: () => setConcurrentDialog(true),\r\n                icon: <ClearAll />,\r\n                text: t(\"setConcurrent\"),\r\n                divider: false,\r\n            },\r\n        ],\r\n        [\r\n            useAvgSpeed,\r\n            setUseAvgSpeed,\r\n            sorter,\r\n            setSorter,\r\n            filter,\r\n            setFilter,\r\n            cleanFinished,\r\n        ]\r\n    );\r\n\r\n    const onConcurrentLimitSave = (val) => {\r\n        val = parseInt(val);\r\n        if (val > 0) {\r\n            Auth.SetPreference(\"concurrent_limit\", val);\r\n            uploadManager.changeConcurrentLimit(parseInt(val));\r\n        }\r\n        setConcurrentDialog(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Menu id={id} open={open} anchorEl={anchorEl} onClose={onClose}>\r\n                {listItems.map((item) => (\r\n                    <>\r\n                        <Tooltip\r\n                            enterNextDelay={500}\r\n                            key={item.text}\r\n                            title={item.tooltip}\r\n                        >\r\n                            <MenuItem\r\n                                dense\r\n                                onClick={actionClicked(item.onClick)}\r\n                            >\r\n                                <ListItemIcon className={classes.icon}>\r\n                                    {item.icon}\r\n                                </ListItemIcon>\r\n                                {item.text}\r\n                            </MenuItem>\r\n                        </Tooltip>\r\n                        {item.divider && <Divider />}\r\n                    </>\r\n                ))}\r\n            </Menu>\r\n            <ConcurrentOptionDialog\r\n                open={concurrentDialog}\r\n                onClose={() => setConcurrentDialog(false)}\r\n                onSave={onConcurrentLimitSave}\r\n            />\r\n        </>\r\n    );\r\n}\r\n","import React, { useMemo, useState } from \"react\";\r\nimport {\r\n    Accordion,\r\n    AccordionDetails,\r\n    AppBar,\r\n    Dialog,\r\n    DialogContent,\r\n    Fade,\r\n    IconButton,\r\n    makeStyles,\r\n    Slide,\r\n    Toolbar,\r\n    Tooltip,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandLess\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport classnames from \"classnames\";\r\nimport UploadTask from \"./UploadTask\";\r\nimport { MoreHoriz } from \"@material-ui/icons\";\r\nimport MoreActions from \"./MoreActions\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Virtuoso } from \"react-virtuoso\";\r\nimport Nothing from \"../../Placeholder/Nothing\";\r\nimport { lighten } from \"@material-ui/core/styles/colorManipulator\";\r\nimport { Status } from \"../core/uploader/base\";\r\nimport Auth from \"../../../middleware/Auth\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    rootOverwrite: {\r\n        top: \"auto!important\",\r\n        left: \"auto!important\",\r\n    },\r\n    appBar: {\r\n        position: \"relative\",\r\n    },\r\n    flex: {\r\n        flex: 1,\r\n    },\r\n    popup: {\r\n        alignItems: \"flex-end\",\r\n        justifyContent: \"flex-end\",\r\n    },\r\n    dialog: {\r\n        margin: 0,\r\n        right: 10,\r\n        bottom: 10,\r\n        zIndex: 9999,\r\n        position: \"fixed\",\r\n        inset: \"-1!important\",\r\n    },\r\n    paddingZero: {\r\n        padding: 0,\r\n    },\r\n    dialogContent: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            width: 500,\r\n            minHeight: 300,\r\n            maxHeight: \"calc(100vh - 140px)\",\r\n        },\r\n        padding: 0,\r\n        paddingTop: \"0!important\",\r\n    },\r\n    virtualList: {\r\n        height: \"100%\",\r\n        maxHeight: \"calc(100vh - 56px)\",\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            minHeight: 300,\r\n            maxHeight: \"calc(100vh - 140px)\",\r\n        },\r\n    },\r\n    expandIcon: {\r\n        transform: \"rotate(0deg)\",\r\n        transition: theme.transitions.create(\"transform\", {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandIconExpanded: {\r\n        transform: \"rotate(180deg)\",\r\n    },\r\n    toolbar: {\r\n        paddingLeft: theme.spacing(1),\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    progress: {\r\n        transition: \"width .4s linear\",\r\n        zIndex: -1,\r\n        height: \"100%\",\r\n        position: \"absolute\",\r\n        left: 0,\r\n        top: 0,\r\n    },\r\n}));\r\n\r\nconst sorters = {\r\n    default: (a, b) => a.id - b.id,\r\n    reverse: (a, b) => b.id - a.id,\r\n};\r\n\r\nconst filters = {\r\n    default: (u) => true,\r\n    ongoing: (u) => u.status < Status.finished,\r\n};\r\n\r\nexport default function TaskList({\r\n    open,\r\n    onClose,\r\n    selectFile,\r\n    taskList,\r\n    onCancel,\r\n    uploadManager,\r\n    progress,\r\n    setUploaders,\r\n}) {\r\n    const { t } = useTranslation(\"application\", { keyPrefix: \"uploader\" });\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n    const path = useSelector((state) => state.navigator.path);\r\n    const [expanded, setExpanded] = useState(true);\r\n    const [useAvgSpeed, setUseAvgSpeed] = useState(\r\n        Auth.GetPreferenceWithDefault(\"use_avg_speed\", true)\r\n    );\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [filter, setFilter] = useState(\r\n        Auth.GetPreferenceWithDefault(\"task_filter\", \"default\")\r\n    );\r\n    const [sorter, setSorter] = useState(\r\n        Auth.GetPreferenceWithDefault(\"task_sorter\", \"default\")\r\n    );\r\n    const [refreshList, setRefreshList] = useState(false);\r\n\r\n    const handleActionClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleActionClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const close = (e, reason) => {\r\n        if (reason !== \"backdropClick\") {\r\n            onClose();\r\n        } else {\r\n            setExpanded(false);\r\n        }\r\n    };\r\n    const handlePanelChange = (event, isExpanded) => {\r\n        setExpanded(isExpanded);\r\n    };\r\n\r\n    useMemo(() => {\r\n        if (open) {\r\n            setExpanded(true);\r\n        }\r\n    }, [taskList]);\r\n\r\n    const progressBar = useMemo(\r\n        () =>\r\n            progress.totalSize > 0 ? (\r\n                <Fade in={progress.totalSize > 0 && !expanded}>\r\n                    <div>\r\n                        <div\r\n                            style={{\r\n                                backgroundColor:\r\n                                    theme.palette.type === \"light\"\r\n                                        ? lighten(\r\n                                              theme.palette.primary.main,\r\n                                              0.2\r\n                                          )\r\n                                        : lighten(\r\n                                              theme.palette.primary.main,\r\n                                              0.2\r\n                                          ),\r\n                                width:\r\n                                    (progress.processedSize /\r\n                                        progress.totalSize) *\r\n                                        100 +\r\n                                    \"%\",\r\n                            }}\r\n                            className={classes.progress}\r\n                        />\r\n                    </div>\r\n                </Fade>\r\n            ) : null,\r\n        [progress, expanded, classes, theme]\r\n    );\r\n\r\n    const list = useMemo(() => {\r\n        const currentList = taskList\r\n            .filter(filters[filter])\r\n            .sort(sorters[sorter]);\r\n        if (currentList.length === 0) {\r\n            return <Nothing size={0.5} top={63} primary={t(\"taskListEmpty\")} />;\r\n        }\r\n\r\n        return (\r\n            <Virtuoso\r\n                style={{\r\n                    height: (fullScreen ? 500 : 73) * currentList.length,\r\n                }}\r\n                className={classes.virtualList}\r\n                increaseViewportBy={180}\r\n                data={currentList}\r\n                itemContent={(index, uploader) => (\r\n                    <UploadTask\r\n                        selectFile={selectFile}\r\n                        onClose={close}\r\n                        onCancel={onCancel}\r\n                        key={uploader.id}\r\n                        useAvgSpeed={useAvgSpeed}\r\n                        uploader={uploader}\r\n                        filter={filters[filter]}\r\n                        onRefresh={() => setRefreshList((r) => !r)}\r\n                    />\r\n                )}\r\n            />\r\n        );\r\n    }, [\r\n        classes,\r\n        taskList,\r\n        useAvgSpeed,\r\n        fullScreen,\r\n        filter,\r\n        sorter,\r\n        refreshList,\r\n    ]);\r\n\r\n    return (\r\n        <>\r\n            <MoreActions\r\n                deleteTask={onCancel}\r\n                onClose={handleActionClose}\r\n                uploadManager={uploadManager}\r\n                anchorEl={anchorEl}\r\n                useAvgSpeed={useAvgSpeed}\r\n                setUseAvgSpeed={(v) => {\r\n                    Auth.SetPreference(\"use_avg_speed\", v);\r\n                    setUseAvgSpeed(v);\r\n                }}\r\n                filter={filter}\r\n                sorter={sorter}\r\n                setFilter={(v) => {\r\n                    Auth.SetPreference(\"task_filter\", v);\r\n                    setFilter(v);\r\n                }}\r\n                setSorter={(v) => {\r\n                    Auth.SetPreference(\"task_sorter\", v);\r\n                    setSorter(v);\r\n                }}\r\n                cleanFinished={() =>\r\n                    setUploaders((u) => u.filter(filters[\"ongoing\"]))\r\n                }\r\n            />\r\n            <Dialog\r\n                classes={{\r\n                    container: classes.popup, // class name, e.g. `classes-nesting-root-x`\r\n                    root: classnames({\r\n                        [classes.rootOverwrite]: !fullScreen,\r\n                    }),\r\n                }}\r\n                className={classnames({\r\n                    [classes.dialog]: !fullScreen,\r\n                })}\r\n                fullScreen={fullScreen}\r\n                open={open}\r\n                onClose={close}\r\n                TransitionComponent={Transition}\r\n                disableEnforceFocus={!expanded}\r\n                hideBackdrop={!expanded}\r\n                disableBackdropClick={!expanded}\r\n                disableScrollLock={!expanded}\r\n            >\r\n                <Accordion\r\n                    expanded={expanded || fullScreen}\r\n                    onChange={handlePanelChange}\r\n                >\r\n                    <AppBar className={classes.appBar}>\r\n                        {progressBar}\r\n                        <Toolbar disableGutters className={classes.toolbar}>\r\n                            <Tooltip title={t(\"hideTaskList\")}>\r\n                                <IconButton\r\n                                    color=\"inherit\"\r\n                                    onClick={close}\r\n                                    aria-label=\"Close\"\r\n                                >\r\n                                    <CloseIcon />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                            <Typography\r\n                                variant=\"h6\"\r\n                                color=\"inherit\"\r\n                                className={classes.flex}\r\n                            >\r\n                                {t(\"uploadTasks\")}\r\n                            </Typography>\r\n                            <Tooltip title={t(\"moreActions\")}>\r\n                                <IconButton\r\n                                    color=\"inherit\"\r\n                                    onClick={handleActionClick}\r\n                                >\r\n                                    <MoreHoriz />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                            <Tooltip title={t(\"addNewFiles\")}>\r\n                                <IconButton\r\n                                    color=\"inherit\"\r\n                                    onClick={() => selectFile(path)}\r\n                                >\r\n                                    <AddIcon />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                            {!fullScreen && (\r\n                                <Tooltip title={t(\"toggleTaskList\")}>\r\n                                    <IconButton\r\n                                        color=\"inherit\"\r\n                                        onClick={() => setExpanded(!expanded)}\r\n                                    >\r\n                                        <ExpandMoreIcon\r\n                                            className={classnames({\r\n                                                [classes.expandIconExpanded]: expanded,\r\n                                                [classes.expandIcon]: true,\r\n                                            })}\r\n                                        />\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                            )}\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    <AccordionDetails className={classes.paddingZero}>\r\n                        <DialogContent className={classes.dialogContent}>\r\n                            {list}\r\n                        </DialogContent>\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport UploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n    createStyles({\r\n        backdrop: {\r\n            zIndex: theme.zIndex.drawer + 1,\r\n            color: \"#fff\",\r\n            flexDirection: \"column\",\r\n        },\r\n    })\r\n);\r\n\r\nexport function DropFileBackground({ open }) {\r\n    const classes = useStyles();\r\n    const { t } = useTranslation();\r\n    return (\r\n        <Backdrop className={classes.backdrop} open={open}>\r\n            <div>\r\n                <UploadIcon style={{ fontSize: 80 }} />\r\n            </div>\r\n            <div>\r\n                <Typography variant={\"h4\"}>\r\n                    {t(\"uploader.dropFileHere\")}\r\n                </Typography>\r\n            </div>\r\n        </Backdrop>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport UploadManager, { SelectType } from \"./core\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport UploadButton from \"../Dial/Create\";\r\nimport pathHelper from \"../../utils/page\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { UploaderError } from \"./core/errors\";\r\nimport TaskList from \"./Popup/TaskList\";\r\nimport { Status } from \"./core/uploader/base\";\r\nimport { DropFileBackground } from \"../Placeholder/DropFile\";\r\nimport {\r\n    refreshFileList,\r\n    refreshStorage,\r\n    toggleSnackbar,\r\n} from \"../../redux/explorer\";\r\nimport Auth from \"../../middleware/Auth\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nlet totalProgressCollector = null;\r\nlet lastProgressStart = -1;\r\nlet dragCounter = 0;\r\n\r\nexport default function Uploader() {\r\n    const { t } = useTranslation(\"application\", { keyPrefix: \"uploader\" });\r\n    const [uploaders, setUploaders] = useState([]);\r\n    const [taskListOpen, setTaskListOpen] = useState(false);\r\n    const [dropBgOpen, setDropBgOpen] = useState(0);\r\n    const [totalProgress, setTotalProgress] = useState({\r\n        totalSize: 0,\r\n        processedSize: 0,\r\n        total: 0,\r\n        processed: 0,\r\n    });\r\n    const search = useSelector((state) => state.explorer.search);\r\n    const policy = useSelector((state) => state.explorer.currentPolicy);\r\n    const isLogin = useSelector((state) => state.viewUpdate.isLogin);\r\n    const path = useSelector((state) => state.navigator.path);\r\n    const fileSelectCounter = useSelector(\r\n        (state) => state.viewUpdate.openFileSelector\r\n    );\r\n    const folderSelectCounter = useSelector(\r\n        (state) => state.viewUpdate.openFolderSelector\r\n    );\r\n    const location = useLocation();\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n    const RefreshFileList = useCallback(() => dispatch(refreshFileList()), [\r\n        dispatch,\r\n    ]);\r\n    const RefreshStorage = useCallback(() => dispatch(refreshStorage()), [\r\n        dispatch,\r\n    ]);\r\n\r\n    const enableUploader = useMemo(\r\n        () => pathHelper.isHomePage(location.pathname) && isLogin && !search,\r\n        [location.pathname, isLogin, search]\r\n    );\r\n\r\n    const taskAdded = (original = null) => (tasks) => {\r\n        if (original !== null) {\r\n            if (tasks.length !== 1 || tasks[0].key() !== original.key()) {\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    t(\"fileNotMatchError\"),\r\n                    \"warning\"\r\n                );\r\n                return;\r\n            }\r\n        }\r\n\r\n        tasks.forEach((t) => t.start());\r\n\r\n        setTaskListOpen(true);\r\n        setUploaders((uploaders) => {\r\n            if (original !== null) {\r\n                uploaders = uploaders.filter((u) => u.key() !== original.key());\r\n            }\r\n\r\n            return [...uploaders, ...tasks];\r\n        });\r\n    };\r\n\r\n    const uploadManager = useMemo(() => {\r\n        return new UploadManager({\r\n            logLevel: \"INFO\",\r\n            concurrentLimit: parseInt(\r\n                Auth.GetPreferenceWithDefault(\"concurrent_limit\", \"5\")\r\n            ),\r\n            dropZone: document.querySelector(\"body\"),\r\n            onToast: (type, msg) => {\r\n                ToggleSnackbar(\"top\", \"right\", msg, type);\r\n            },\r\n            onDropOver: (e) => {\r\n                dragCounter++;\r\n                setDropBgOpen((value) => !value);\r\n            },\r\n            onDropLeave: (e) => {\r\n                dragCounter--;\r\n                setDropBgOpen((value) => !value);\r\n            },\r\n            onDropFileAdded: taskAdded(),\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        uploadManager.setPolicy(policy, path);\r\n    }, [policy]);\r\n\r\n    useEffect(() => {\r\n        const unfinished = uploadManager.resumeTasks();\r\n        setUploaders((uploaders) => [...uploaders, ...unfinished]);\r\n        if (!totalProgressCollector) {\r\n            totalProgressCollector = setInterval(() => {\r\n                const progress = {\r\n                    totalSize: 0,\r\n                    processedSize: 0,\r\n                    total: 0,\r\n                    processed: 0,\r\n                };\r\n                setUploaders((uploaders) => {\r\n                    uploaders.forEach((u) => {\r\n                        if (u.id <= lastProgressStart) {\r\n                            return;\r\n                        }\r\n\r\n                        progress.totalSize += u.task.size;\r\n                        progress.total += 1;\r\n\r\n                        if (\r\n                            u.status === Status.finished ||\r\n                            u.status === Status.canceled ||\r\n                            u.status === Status.error\r\n                        ) {\r\n                            progress.processedSize += u.task.size;\r\n                            progress.processed += 1;\r\n                        }\r\n\r\n                        if (\r\n                            u.status === Status.added ||\r\n                            u.status === Status.initialized ||\r\n                            u.status === Status.queued ||\r\n                            u.status === Status.preparing ||\r\n                            u.status === Status.processing ||\r\n                            u.status === Status.finishing\r\n                        ) {\r\n                            progress.processedSize += u.progress\r\n                                ? u.progress.total.loaded\r\n                                : 0;\r\n                        }\r\n                    });\r\n\r\n                    if (\r\n                        progress.total > 0 &&\r\n                        progress.processed === progress.total\r\n                    ) {\r\n                        lastProgressStart = uploaders[uploaders.length - 1].id;\r\n                    }\r\n                    return uploaders;\r\n                });\r\n\r\n                if (\r\n                    progress.total > 0 &&\r\n                    progress.total === progress.processed\r\n                ) {\r\n                    RefreshFileList();\r\n                    RefreshStorage();\r\n                }\r\n\r\n                setTotalProgress(progress);\r\n            }, 2000);\r\n        }\r\n    }, []);\r\n\r\n    const selectFile = (path, type = SelectType.File, original = null) => {\r\n        setTaskListOpen(true);\r\n\r\n        // eslint-disable-next-line no-unreachable\r\n        uploadManager\r\n            .select(path, type)\r\n            .then(taskAdded(original))\r\n            .catch((e) => {\r\n                if (e instanceof UploaderError) {\r\n                    ToggleSnackbar(\"top\", \"right\", e.Message(), \"warning\");\r\n                } else {\r\n                    ToggleSnackbar(\r\n                        \"top\",\r\n                        \"right\",\r\n                        t(\"unknownError\", { msg: e.message }),\r\n                        \"error\"\r\n                    );\r\n                }\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (fileSelectCounter > 0) {\r\n            selectFile(path);\r\n        }\r\n    }, [fileSelectCounter]);\r\n\r\n    useEffect(() => {\r\n        if (folderSelectCounter > 0) {\r\n            selectFile(path, SelectType.Directory);\r\n        }\r\n    }, [folderSelectCounter]);\r\n\r\n    const deleteTask = (filter) => {\r\n        setUploaders((uploaders) => uploaders.filter(filter));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {enableUploader && (\r\n                <>\r\n                    <DropFileBackground open={dropBgOpen > 0} />\r\n                    <UploadButton\r\n                        progress={totalProgress}\r\n                        taskListOpen={taskListOpen}\r\n                        selectFile={selectFile}\r\n                        Queued={uploaders.length}\r\n                        openFileList={() => setTaskListOpen(true)}\r\n                    />\r\n                    <TaskList\r\n                        progress={totalProgress}\r\n                        uploadManager={uploadManager}\r\n                        taskList={uploaders}\r\n                        open={taskListOpen}\r\n                        onCancel={deleteTask}\r\n                        selectFile={selectFile}\r\n                        onClose={() => setTaskListOpen(false)}\r\n                        setUploaders={setUploaders}\r\n                    />\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n","import i18next from \"./i18n\";\r\n\r\nexport const imgPreviewSuffix = [\r\n    \"bmp\",\r\n    \"png\",\r\n    \"gif\",\r\n    \"jpg\",\r\n    \"jpeg\",\r\n    \"svg\",\r\n    \"webp\",\r\n];\r\nexport const msDocPreviewSuffix = [\r\n    \"ppt\",\r\n    \"pptx\",\r\n    \"pps\",\r\n    \"doc\",\r\n    \"docx\",\r\n    \"xlsx\",\r\n    \"xls\",\r\n];\r\nexport const subtitleSuffix = [\"ass\", \"srt\", \"vrr\"];\r\nexport const audioPreviewSuffix = [\"mp3\", \"ogg\", \"wav\", \"flac\", \"m4a\"];\r\nexport const videoPreviewSuffix = [\"mp4\", \"mkv\", \"webm\", \"avi\", \"m3u8\", \"mov\"];\r\nexport const pdfPreviewSuffix = [\"pdf\"];\r\nexport const editSuffix = [\"md\", \"txt\"];\r\nexport const epubSuffix = [\"epub\"];\r\nexport const codePreviewSuffix = {\r\n    json: \"json\",\r\n    php: \"php\",\r\n    py: \"python\",\r\n    bat: \"bat\",\r\n    cpp: \"cpp\",\r\n    c: \"cpp\",\r\n    h: \"cpp\",\r\n    cs: \"csharp\",\r\n    css: \"css\",\r\n    dockerfile: \"dockerfile\",\r\n    go: \"go\",\r\n    html: \"html\",\r\n    ini: \"ini\",\r\n    java: \"java\",\r\n    js: \"javascript\",\r\n    jsx: \"javascript\",\r\n    less: \"less\",\r\n    lua: \"lua\",\r\n    sh: \"shell\",\r\n    sql: \"sql\",\r\n    xml: \"xml\",\r\n    yaml: \"yaml\",\r\n};\r\nexport const mediaType = {\r\n    audio: [\"mp3\", \"flac\", \"ape\", \"wav\", \"acc\", \"ogg\", \"m4a\"],\r\n    video: [\"mp4\", \"flv\", \"avi\", \"wmv\", \"mkv\", \"rm\", \"rmvb\", \"mov\", \"ogv\"],\r\n    image: [\"bmp\", \"iff\", \"png\", \"gif\", \"jpg\", \"jpeg\", \"psd\", \"svg\", \"webp\"],\r\n    pdf: [\"pdf\"],\r\n    word: [\"doc\", \"docx\"],\r\n    ppt: [\"ppt\", \"pptx\"],\r\n    excel: [\"xls\", \"xlsx\", \"csv\"],\r\n    text: [\"txt\", \"md\", \"html\"],\r\n    torrent: [\"torrent\"],\r\n    zip: [\"zip\", \"gz\", \"xz\", \"tar\", \"rar\", \"7z\"],\r\n    excute: [\"exe\"],\r\n    android: [\"apk\"],\r\n    php: [\"php\"],\r\n    go: [\"go\"],\r\n    python: [\"py\"],\r\n    cpp: [\"cpp\"],\r\n    c: [\"c\"],\r\n    js: [\"js\", \"jsx\"],\r\n    epub: epubSuffix,\r\n};\r\nexport const isPreviewable = (name: any) => {\r\n    const suffix = name.split(\".\").pop().toLowerCase();\r\n    if (imgPreviewSuffix.indexOf(suffix) !== -1) {\r\n        return \"img\";\r\n    } else if (msDocPreviewSuffix.indexOf(suffix) !== -1) {\r\n        return \"msDoc\";\r\n    } else if (audioPreviewSuffix.indexOf(suffix) !== -1) {\r\n        return \"audio\";\r\n    } else if (videoPreviewSuffix.indexOf(suffix) !== -1) {\r\n        return \"video\";\r\n    } else if (editSuffix.indexOf(suffix) !== -1) {\r\n        return \"edit\";\r\n    } else if (pdfPreviewSuffix.indexOf(suffix) !== -1) {\r\n        return \"pdf\";\r\n    } else if (Object.keys(codePreviewSuffix).indexOf(suffix) !== -1) {\r\n        return \"code\";\r\n    } else if (epubSuffix.indexOf(suffix) !== -1) {\r\n        return \"epub\";\r\n    }\r\n    return false;\r\n};\r\nexport const isTorrent = (name: any) => {\r\n    const suffix = name.split(\".\").pop().toLowerCase();\r\n    if (mediaType.torrent.indexOf(suffix) !== -1) {\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\nexport const isCompressFile = (name: any) => {\r\n    const suffix = name.split(\".\").pop().toLowerCase();\r\n    return suffix !== \"7z\" && mediaType[\"zip\"].indexOf(suffix) !== -1;\r\n};\r\n\r\nexport const encodingRequired = (name: any) => {\r\n    const suffix = name.split(\".\").pop().toLowerCase();\r\n    return suffix === \"zip\";\r\n};\r\n\r\nconst taskStatus = [\r\n    \"setting.queueing\",\r\n    \"setting.processing\",\r\n    \"setting.failed\",\r\n    \"setting.canceled\",\r\n    \"setting.finished\",\r\n];\r\nconst taskType = [\r\n    \"fileManager.compress\",\r\n    \"fileManager.decompress\",\r\n    \"setting.fileTransfer\",\r\n    \"setting.importFiles\",\r\n    \"setting.fileRecycle\",\r\n];\r\nconst taskProgress = [\r\n    \"setting.waiting\",\r\n    \"setting.compressing\",\r\n    \"setting.decompressing\",\r\n    \"setting.downloading\",\r\n    \"setting.transferring\",\r\n    \"setting.indexing\",\r\n    \"setting.listing\",\r\n];\r\n\r\nexport const getTaskStatus = (status: any) => {\r\n    return i18next.t(taskStatus[status]);\r\n};\r\n\r\nexport const getTaskType = (status: any) => {\r\n    return i18next.t(taskType[status]);\r\n};\r\n\r\nexport const getTaskProgress = (type: any, status: any) => {\r\n    if (type === 2) {\r\n        return i18next.t(\"setting.transferProgress\", {\r\n            num: status,\r\n        });\r\n    }\r\n    return i18next.t(taskProgress[status]);\r\n};\r\n","import { ThunkAction } from \"redux-thunk\";\r\nimport { AnyAction } from \"redux\";\r\nimport Auth from \"../../middleware/Auth\";\r\nimport { askForOption } from \"../explorer/async\";\r\nimport i18next, { languages } from \"../../i18n\";\r\n\r\nexport interface ActionSetSubtitle extends AnyAction {\r\n    type: \"SET_SUBTITLE\";\r\n    title: string;\r\n}\r\n\r\nexport const setSubtitle = (title: string): ActionSetSubtitle => {\r\n    return {\r\n        type: \"SET_SUBTITLE\",\r\n        title,\r\n    };\r\n};\r\n\r\nexport const closeContextMenu = () => {\r\n    return {\r\n        type: \"CLOSE_CONTEXT_MENU\",\r\n    };\r\n};\r\n\r\nexport const changeContextMenu = (type: string, open: boolean) => {\r\n    return {\r\n        type: \"CHANGE_CONTEXT_MENU\",\r\n        menuType: type,\r\n        open: open,\r\n    };\r\n};\r\n\r\nexport const changeSubTitle = (\r\n    title: string\r\n): ThunkAction<any, any, any, any> => {\r\n    return (dispatch, getState) => {\r\n        const state = getState();\r\n        document.title =\r\n            title === null || title === undefined\r\n                ? state.siteConfig.title\r\n                : title + \" - \" + state.siteConfig.title;\r\n        dispatch(setSubtitle(title));\r\n    };\r\n};\r\n\r\nexport const setOptionModal = (option: any) => {\r\n    return {\r\n        type: \"SET_OPTION_MODAL\",\r\n        option: option,\r\n    };\r\n};\r\n\r\nexport const openFileSelector = () => {\r\n    return {\r\n        type: \"OPEN_FILE_SELECTOR\",\r\n    };\r\n};\r\n\r\nexport const openFolderSelector = () => {\r\n    return {\r\n        type: \"OPEN_FOLDER_SELECTOR\",\r\n    };\r\n};\r\n\r\nexport const setPagination = (pagination) => {\r\n    return {\r\n        type: \"SET_PAGINATION\",\r\n        pagination: pagination,\r\n    };\r\n};\r\n\r\nexport const setShareInfo = (shareInfo) => {\r\n    return {\r\n        type: \"SET_SHARE_INFO\",\r\n        shareInfo: shareInfo,\r\n    };\r\n};\r\n\r\nexport const changePageSize = (\r\n    size: number\r\n): ThunkAction<any, any, any, any> => {\r\n    return (dispatch, getState) => {\r\n        const {\r\n            explorer: { dirList, fileList },\r\n            viewUpdate: { pagination },\r\n        } = getState();\r\n        const total = dirList.length + fileList.length;\r\n        let page = pagination.page;\r\n        if (pagination.page * size > total) {\r\n            page = Math.max(Math.ceil(total / size), 1);\r\n        } else if (size === -1) {\r\n            page = 1;\r\n        }\r\n        Auth.SetPreference(\"pagination\", size);\r\n        dispatch(\r\n            setPagination({\r\n                ...pagination,\r\n                size: size,\r\n                page: page,\r\n            })\r\n        );\r\n    };\r\n};\r\n\r\nexport const selectLanguage = (): ThunkAction<any, any, any, any> => {\r\n    return async (dispatch, getState) => {\r\n        let option: any;\r\n        let lng = \"\";\r\n        try {\r\n            const allOptions = languages.map((e) => {\r\n                return {\r\n                    key: e.code,\r\n                    name: e.displayName,\r\n                };\r\n            });\r\n            option = await dispatch(\r\n                askForOption(allOptions, i18next.t(\"setting.language\"))\r\n            );\r\n        } catch (e) {\r\n            console.log(e);\r\n            return;\r\n        }\r\n\r\n        lng = option.key;\r\n        await i18next.changeLanguage(lng);\r\n    };\r\n};\r\n","import dayjs from \"dayjs\";\r\nimport timezone from \"dayjs/plugin/timezone\";\r\nimport utc from \"dayjs/plugin/utc\";\r\nimport Auth from \"../middleware/Auth\";\r\nimport i18next from \"../i18n\";\r\n\r\ndayjs.extend(utc);\r\ndayjs.extend(timezone);\r\n\r\nlet userTimezone = \"\";\r\ntry {\r\n    userTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\r\n} catch (e) {\r\n    console.log(e);\r\n}\r\n\r\nif (!userTimezone || userTimezone==\"Etc/Unknown\") {\r\n    userTimezone = \"Asia/Shanghai\";\r\n}\r\n\r\nconst preferTimeZone = Auth.GetPreference(\"timeZone\");\r\nexport let timeZone = preferTimeZone ? preferTimeZone : userTimezone;\r\n\r\nexport function refreshTimeZone() {\r\n    timeZone = Auth.GetPreference(\"timeZone\");\r\n    timeZone = timeZone ? timeZone : userTimezone;\r\n}\r\n\r\nexport function formatLocalTime(time) {\r\n    return i18next.t(\"intlDateTime\", {\r\n        ns: \"common\",\r\n        val: dayjs(time).tz(timeZone).toDate(),\r\n        formatParams: {\r\n            val: {\r\n                year: \"numeric\",\r\n                month: \"numeric\",\r\n                day: \"numeric\",\r\n                hour: \"numeric\",\r\n                minute: \"numeric\",\r\n                second: \"numeric\",\r\n            },\r\n        },\r\n    });\r\n}\r\n\r\nexport function validateTimeZone(name) {\r\n    try {\r\n        dayjs().tz(name).format();\r\n    } catch (e) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n","import React from \"react\";\r\nimport { mediaType } from \"../../config\";\r\nimport ImageIcon from \"@material-ui/icons/PhotoSizeSelectActual\";\r\nimport VideoIcon from \"@material-ui/icons/Videocam\";\r\nimport AudioIcon from \"@material-ui/icons/Audiotrack\";\r\nimport PdfIcon from \"@material-ui/icons/PictureAsPdf\";\r\nimport {\r\n    Android,\r\n    FileExcelBox,\r\n    FilePowerpointBox,\r\n    FileWordBox,\r\n    LanguageC,\r\n    LanguageCpp,\r\n    LanguageGo,\r\n    LanguageJavascript,\r\n    LanguagePhp,\r\n    LanguagePython,\r\n    MagnetOn,\r\n    ScriptText,\r\n    WindowRestore,\r\n    ZipBox,\r\n} from \"mdi-material-ui\";\r\nimport FileShowIcon from \"@material-ui/icons/InsertDriveFile\";\r\nimport { lighten } from \"@material-ui/core/styles\";\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport { MenuBook } from \"@material-ui/icons\";\r\n\r\nconst icons = {\r\n    audio: {\r\n        color: \"#651fff\",\r\n        icon: AudioIcon,\r\n    },\r\n    video: {\r\n        color: \"#d50000\",\r\n        icon: VideoIcon,\r\n    },\r\n    image: {\r\n        color: \"#d32f2f\",\r\n        icon: ImageIcon,\r\n    },\r\n    pdf: {\r\n        color: \"#f44336\",\r\n        icon: PdfIcon,\r\n    },\r\n    word: {\r\n        color: \"#538ce5\",\r\n        icon: FileWordBox,\r\n    },\r\n    ppt: {\r\n        color: \"rgb(239, 99, 63)\",\r\n        icon: FilePowerpointBox,\r\n    },\r\n    excel: {\r\n        color: \"#4caf50\",\r\n        icon: FileExcelBox,\r\n    },\r\n    text: {\r\n        color: \"#607d8b\",\r\n        icon: ScriptText,\r\n    },\r\n    torrent: {\r\n        color: \"#5c6bc0\",\r\n        icon: MagnetOn,\r\n    },\r\n    zip: {\r\n        color: \"#f9a825\",\r\n        icon: ZipBox,\r\n    },\r\n    excute: {\r\n        color: \"#1a237e\",\r\n        icon: WindowRestore,\r\n    },\r\n    android: {\r\n        color: \"#8bc34a\",\r\n        icon: Android,\r\n    },\r\n    file: {\r\n        color: \"#607d8b\",\r\n        icon: FileShowIcon,\r\n    },\r\n    php: {\r\n        color: \"#777bb3\",\r\n        icon: LanguagePhp,\r\n    },\r\n    go: {\r\n        color: \"#16b3da\",\r\n        icon: LanguageGo,\r\n    },\r\n    python: {\r\n        color: \"#3776ab\",\r\n        icon: LanguagePython,\r\n    },\r\n    c: {\r\n        color: \"#a8b9cc\",\r\n        icon: LanguageC,\r\n    },\r\n    cpp: {\r\n        color: \"#004482\",\r\n        icon: LanguageCpp,\r\n    },\r\n    js: {\r\n        color: \"#f4d003\",\r\n        icon: LanguageJavascript,\r\n    },\r\n    epub: {\r\n        color: \"#81b315\",\r\n        icon: MenuBook,\r\n    },\r\n};\r\n\r\nconst getColor = (theme, color) =>\r\n    theme.palette.type === \"light\" ? color : lighten(color, 0.2);\r\n\r\nlet color;\r\n\r\nconst TypeIcon = (props) => {\r\n    const theme = useTheme();\r\n\r\n    const fileSuffix = props.fileName.split(\".\").pop().toLowerCase();\r\n    let fileType = \"file\";\r\n    Object.keys(mediaType).forEach((k) => {\r\n        if (mediaType[k].indexOf(fileSuffix) !== -1) {\r\n            fileType = k;\r\n        }\r\n    });\r\n    const IconComponent = icons[fileType].icon;\r\n    color = getColor(theme, icons[fileType].color);\r\n    if (props.getColorValue) {\r\n        props.getColorValue(color);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {props.isUpload && (\r\n                <Avatar\r\n                    className={props.className}\r\n                    style={{\r\n                        backgroundColor: color,\r\n                    }}\r\n                >\r\n                    <IconComponent\r\n                        className={props.iconClassName}\r\n                        style={{\r\n                            color: theme.palette.background.paper,\r\n                        }}\r\n                    />\r\n                </Avatar>\r\n            )}\r\n            {!props.isUpload && (\r\n                <IconComponent\r\n                    className={props.className}\r\n                    style={{\r\n                        color: color,\r\n                    }}\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TypeIcon;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then((registration) => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === \"installed\") {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                \"New content is available and will be used when all \" +\r\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log(\"Content is cached for offline use.\");\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch((error) => {\r\n            console.error(\"Error during service worker registration:\", error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then((response) => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get(\"content-type\");\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null &&\r\n                    contentType.indexOf(\"javascript\") === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then((registration) => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                \"No internet connection found. App is running in offline mode.\"\r\n            );\r\n        });\r\n}\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === \"localhost\" ||\r\n        // [::1] is the IPv6 localhost address.\r\n        window.location.hostname === \"[::1]\" ||\r\n        // 127.0.0.1/8 is considered localhost for IPv4.\r\n        window.location.hostname.match(\r\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n        )\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener(\"load\", () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        \"This web app is being served cache-first by a service \" +\r\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport function unregister() {\r\n    if (\"serviceWorker\" in navigator) {\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Auth from \"./Auth\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nfunction AuthRoute({ children, ...rest }) {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={({ location }) =>\r\n                Auth.Check(rest.isLogin) ? (\r\n                    children\r\n                ) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: \"/login\",\r\n                            state: { from: location },\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nexport default AuthRoute;\r\n","import React from \"react\";\r\nimport Auth from \"./Auth\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nfunction NoAuthRoute({ children, ...rest }) {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={({ location }) =>\r\n                !Auth.Check(rest.isLogin) ? (\r\n                    children\r\n                ) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: \"/home\",\r\n                            state: { from: location },\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nexport default NoAuthRoute;\r\n","import React from \"react\";\r\nimport SentimentVeryDissatisfiedIcon from \"@material-ui/icons/SentimentVeryDissatisfied\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    icon: {\r\n        fontSize: \"160px\",\r\n    },\r\n    emptyContainer: {\r\n        bottom: \"0\",\r\n        height: \"300px\",\r\n        margin: \"50px auto\",\r\n        width: \"300px\",\r\n        color: lighten(theme.palette.text.disabled, 0.4),\r\n        textAlign: \"center\",\r\n        paddingTop: \"20px\",\r\n    },\r\n    emptyInfoBig: {\r\n        fontSize: \"25px\",\r\n        color: lighten(theme.palette.text.disabled, 0.4),\r\n    },\r\n}));\r\n\r\nexport default function Notice(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.emptyContainer}>\r\n            <SentimentVeryDissatisfiedIcon className={classes.icon} />\r\n            <div className={classes.emptyInfoBig}>{props.msg}</div>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport ContentLoader from \"react-content-loader\";\r\n\r\nconst MyLoader = () => (\r\n    <ContentLoader\r\n        height={60}\r\n        width={240}\r\n        speed={2}\r\n        primaryColor=\"#f3f3f3\"\r\n        secondaryColor=\"#e4e4e4\"\r\n    >\r\n        <rect x=\"0\" y=\"0\" rx=\"3\" ry=\"3\" width=\"100%\" height=\"100%\" />\r\n    </ContentLoader>\r\n);\r\n\r\nfunction captchaPlacholder() {\r\n    return <MyLoader />;\r\n}\r\n\r\nexport default captchaPlacholder;\r\n","import React, {\r\n    forwardRef,\r\n    useCallback,\r\n    useEffect,\r\n    useRef,\r\n    useState,\r\n} from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport API from \"../middleware/Api\";\r\nimport { FormControl, Input, InputLabel } from \"@material-ui/core\";\r\nimport Placeholder from \"../component/Placeholder/Captcha\";\r\nimport { defaultValidate, useStyle } from \"./useCaptcha\";\r\nimport { toggleSnackbar } from \"../redux/explorer\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst NormalCaptcha = forwardRef(function NormalCaptcha(\r\n    { captchaRef, setLoading },\r\n    ref\r\n) {\r\n    const { t } = useTranslation();\r\n    const classes = useStyle();\r\n\r\n    const [captcha, setCaptcha] = useState(\"\");\r\n    const [captchaData, setCaptchaData] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const refreshCaptcha = () => {\r\n        API.get(\"/site/captcha\")\r\n            .then((response) => {\r\n                setCaptchaData(response.data);\r\n                setLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    t(\"login.captchaError\", { message: error.message }),\r\n                    \"error\"\r\n                );\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        ref.current = refreshCaptcha;\r\n        refreshCaptcha();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        captchaRef.current.captchaCode = captcha;\r\n    }, [captcha]);\r\n\r\n    return (\r\n        <div className={classes.captchaContainer}>\r\n            <FormControl margin=\"normal\" required fullWidth>\r\n                <InputLabel htmlFor=\"captcha\">{t(\"login.captcha\")}</InputLabel>\r\n                <Input\r\n                    name=\"captcha\"\r\n                    onChange={(e) => setCaptcha(e.target.value)}\r\n                    type=\"text\"\r\n                    id=\"captcha\"\r\n                    value={captcha}\r\n                    autoComplete\r\n                />\r\n            </FormControl>{\" \"}\r\n            <div\r\n                className={classes.captchaImageContainer}\r\n                title={t(\"login.clickToRefresh\")}\r\n            >\r\n                {captchaData === null && (\r\n                    <Placeholder />\r\n                )}\r\n                {captchaData !== null && (\r\n                    <img\r\n                        className={classes.captchaImage}\r\n                        src={captchaData}\r\n                        alt=\"captcha\"\r\n                        onClick={refreshCaptcha}\r\n                    />\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default function useNormalCaptcha(captchaRefreshRef, setLoading) {\r\n    const isValidate = useRef({\r\n        isValidate: true,\r\n    });\r\n\r\n    const captchaParamsRef = useRef({\r\n        captchaCode: \"\",\r\n    });\r\n\r\n    const CaptchaRender = useCallback(\r\n        function Normal() {\r\n            return (\r\n                <NormalCaptcha\r\n                    captchaRef={captchaParamsRef}\r\n                    ref={captchaRefreshRef}\r\n                    setLoading={setLoading}\r\n                />\r\n            );\r\n        },\r\n        [captchaParamsRef, captchaRefreshRef, setLoading]\r\n    );\r\n\r\n    return {\r\n        isValidate,\r\n        validate: defaultValidate,\r\n        captchaParamsRef,\r\n        CaptchaRender,\r\n    };\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class ReCAPTCHA extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.handleExpired = this.handleExpired.bind(this);\r\n        this.handleErrored = this.handleErrored.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleRecaptchaRef = this.handleRecaptchaRef.bind(this);\r\n    }\r\n\r\n    getValue() {\r\n        if (this.props.grecaptcha && this._widgetId !== undefined) {\r\n            return this.props.grecaptcha.getResponse(this._widgetId);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getWidgetId() {\r\n        if (this.props.grecaptcha && this._widgetId !== undefined) {\r\n            return this._widgetId;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    execute() {\r\n        const { grecaptcha } = this.props;\r\n\r\n        if (grecaptcha && this._widgetId !== undefined) {\r\n            return grecaptcha.execute(this._widgetId);\r\n        } else {\r\n            this._executeRequested = true;\r\n        }\r\n    }\r\n\r\n    reset() {\r\n        if (this.props.grecaptcha && this._widgetId !== undefined) {\r\n            this.props.grecaptcha.reset(this._widgetId);\r\n        }\r\n    }\r\n\r\n    handleExpired() {\r\n        if (this.props.onExpired) {\r\n            this.props.onExpired();\r\n        } else {\r\n            this.handleChange(null);\r\n        }\r\n    }\r\n\r\n    handleErrored() {\r\n        if (this.props.onErrored) this.props.onErrored();\r\n    }\r\n\r\n    handleChange(token) {\r\n        if (this.props.onChange) this.props.onChange(token);\r\n    }\r\n\r\n    explicitRender() {\r\n        if (\r\n            this.props.grecaptcha &&\r\n            this.props.grecaptcha.render &&\r\n            this._widgetId === undefined\r\n        ) {\r\n            const wrapper = document.createElement(\"div\");\r\n            this._widgetId = this.props.grecaptcha.render(wrapper, {\r\n                sitekey: this.props.sitekey,\r\n                callback: this.handleChange,\r\n                theme: this.props.theme,\r\n                type: this.props.type,\r\n                tabindex: this.props.tabindex,\r\n                \"expired-callback\": this.handleExpired,\r\n                \"error-callback\": this.handleErrored,\r\n                size: this.props.size,\r\n                stoken: this.props.stoken,\r\n                hl: this.props.hl,\r\n                badge: this.props.badge,\r\n            });\r\n            this.captcha.appendChild(wrapper);\r\n        }\r\n        if (\r\n            this._executeRequested &&\r\n            this.props.grecaptcha &&\r\n            this._widgetId !== undefined\r\n        ) {\r\n            this._executeRequested = false;\r\n            this.execute();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.explicitRender();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.explicitRender();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this._widgetId !== undefined) {\r\n            this.delayOfCaptchaIframeRemoving();\r\n            this.reset();\r\n        }\r\n    }\r\n\r\n    delayOfCaptchaIframeRemoving() {\r\n        const temporaryNode = document.createElement(\"div\");\r\n        document.body.appendChild(temporaryNode);\r\n        temporaryNode.style.display = \"none\";\r\n\r\n        // move of the recaptcha to a temporary node\r\n        while (this.captcha.firstChild) {\r\n            temporaryNode.appendChild(this.captcha.firstChild);\r\n        }\r\n\r\n        // delete the temporary node after reset will be done\r\n        setTimeout(() => {\r\n            document.body.removeChild(temporaryNode);\r\n        }, 5000);\r\n    }\r\n\r\n    handleRecaptchaRef(elem) {\r\n        this.captcha = elem;\r\n    }\r\n\r\n    render() {\r\n        // consume properties owned by the reCATPCHA, pass the rest to the div so the user can style it.\r\n        /* eslint-disable no-unused-vars */\r\n        /* eslint-disable @typescript-eslint/no-unused-vars */\r\n        const {\r\n            sitekey,\r\n            onChange,\r\n            theme,\r\n            type,\r\n            tabindex,\r\n            onExpired,\r\n            onErrored,\r\n            size,\r\n            stoken,\r\n            grecaptcha,\r\n            badge,\r\n            hl,\r\n            ...childProps\r\n        } = this.props;\r\n        /* eslint-enable no-unused-vars */\r\n        return <div {...childProps} ref={this.handleRecaptchaRef} />;\r\n    }\r\n}\r\n\r\nReCAPTCHA.displayName = \"ReCAPTCHA\";\r\nReCAPTCHA.propTypes = {\r\n    sitekey: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func,\r\n    grecaptcha: PropTypes.object,\r\n    theme: PropTypes.oneOf([\"dark\", \"light\"]),\r\n    type: PropTypes.oneOf([\"image\", \"audio\"]),\r\n    tabindex: PropTypes.number,\r\n    onExpired: PropTypes.func,\r\n    onErrored: PropTypes.func,\r\n    size: PropTypes.oneOf([\"compact\", \"normal\", \"invisible\"]),\r\n    stoken: PropTypes.string,\r\n    hl: PropTypes.string,\r\n    badge: PropTypes.oneOf([\"bottomright\", \"bottomleft\", \"inline\"]),\r\n};\r\nReCAPTCHA.defaultProps = {\r\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n    onChange: () => {},\r\n    theme: \"light\",\r\n    type: \"image\",\r\n    tabindex: 0,\r\n    size: \"normal\",\r\n    badge: \"bottomright\",\r\n};\r\n","import ReCAPTCHA from \"./ReCaptchaWrapper\";\r\nimport makeAsyncScriptLoader from \"react-async-script\";\r\n\r\nconst callbackName = \"onloadcallback\";\r\nconst globalName = \"grecaptcha\";\r\n\r\nfunction getURL() {\r\n    const hostname = \"recaptcha.net\";\r\n    return `https://${hostname}/recaptcha/api.js?onload=${callbackName}&render=explicit`;\r\n}\r\n\r\nexport default makeAsyncScriptLoader(getURL, {\r\n    callbackName,\r\n    globalName,\r\n})(ReCAPTCHA);\r\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { FormControl } from \"@material-ui/core\";\r\nimport ReCaptcha from \"../component/Login/ReCaptcha\";\r\nimport { defaultValidate, useStyle } from \"./useCaptcha\";\r\n\r\nconst Recaptcha = ({ captchaRef, setLoading }) => {\r\n    const classes = useStyle();\r\n\r\n    const [captcha, setCaptcha] = useState(\"\");\r\n\r\n    const reCaptchaKey = useSelector(\r\n        (state) => state.siteConfig.captcha_ReCaptchaKey\r\n    );\r\n\r\n    useEffect(() => {\r\n        captchaRef.current.captchaCode = captcha;\r\n    }, [captcha]);\r\n\r\n    useEffect(() => setLoading(false), []);\r\n\r\n    return (\r\n        <div className={classes.captchaContainer}>\r\n            <FormControl margin=\"normal\" required fullWidth>\r\n                <div>\r\n                    <ReCaptcha\r\n                        style={{\r\n                            display: \"inline-block\",\r\n                        }}\r\n                        sitekey={reCaptchaKey}\r\n                        onChange={(value) => setCaptcha(value)}\r\n                        id=\"captcha\"\r\n                        name=\"captcha\"\r\n                    />\r\n                </div>\r\n            </FormControl>{\" \"}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default function useRecaptcha(setLoading) {\r\n    const isValidate = useRef({\r\n        isValidate: true,\r\n    });\r\n\r\n    const captchaParamsRef = useRef({\r\n        captchaCode: \"\",\r\n    });\r\n\r\n    const CaptchaRender = useCallback(\r\n        function RecaptchaRender() {\r\n            return (\r\n                <Recaptcha\r\n                    captchaRef={captchaParamsRef}\r\n                    setLoading={setLoading}\r\n                />\r\n            );\r\n        },\r\n        [captchaParamsRef, setLoading]\r\n    );\r\n\r\n    return {\r\n        isValidate,\r\n        validate: defaultValidate,\r\n        captchaParamsRef,\r\n        CaptchaRender,\r\n    };\r\n}\r\n","import React, { forwardRef, useCallback, useRef } from \"react\";\r\nimport Script from \"react-load-script\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst TCaptcha = forwardRef(function TCaptcha(\r\n    { captchaRef, setLoading, isValidateRef, submitRef },\r\n    ref\r\n) {\r\n    const appid = useSelector(\r\n        (state) => state.siteConfig.tcaptcha_captcha_app_id\r\n    );\r\n    const onLoad = () => {\r\n        try {\r\n            ref.current = new window.TencentCaptcha(appid, function (res) {\r\n                if (res.ret === 0) {\r\n                    captchaRef.current.ticket = res.ticket;\r\n                    captchaRef.current.randstr = res.randstr;\r\n\r\n                    isValidateRef.current.isValidate = true;\r\n                    submitRef.current.submit();\r\n                    console.log(submitRef);\r\n                } else {\r\n                    submitRef.current.setLoading(false);\r\n                }\r\n            });\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n        setLoading(false);\r\n    };\r\n    return (\r\n        <Script\r\n            url={\"https://ssl.captcha.qq.com/TCaptcha.js\"}\r\n            onLoad={onLoad}\r\n        />\r\n    );\r\n});\r\n\r\nexport default function useTCaptcha(setLoading) {\r\n    const isValidate = useRef({\r\n        isValidate: false,\r\n    });\r\n    const captchaParamsRef = useRef({\r\n        ticket: \"\",\r\n        randstr: \"\",\r\n    });\r\n    const submitRef = useRef({\r\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n        submit: () => {},\r\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n        setLoading: () => {},\r\n    });\r\n\r\n    const captchaRef = useRef();\r\n\r\n    const CaptchaRender = useCallback(\r\n        function TCaptchaRender() {\r\n            return (\r\n                <TCaptcha\r\n                    captchaRef={captchaParamsRef}\r\n                    setLoading={setLoading}\r\n                    isValidateRef={isValidate}\r\n                    submitRef={submitRef}\r\n                    ref={captchaRef}\r\n                />\r\n            );\r\n        },\r\n        [captchaParamsRef, setLoading, isValidate, submitRef, captchaRef]\r\n    );\r\n\r\n    return {\r\n        isValidate: isValidate,\r\n        validate: (submit, setLoading) => {\r\n            submitRef.current.submit = submit;\r\n            submitRef.current.setLoading = setLoading;\r\n            captchaRef.current.show();\r\n        },\r\n        captchaParamsRef,\r\n        CaptchaRender,\r\n    };\r\n}\r\n","import { useSelector } from \"react-redux\";\r\nimport { useRef, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport useNormalCaptcha from \"./normal\";\r\nimport useRecaptcha from \"./recaptcha\";\r\nimport useTCaptcha from \"./tcaptcha\";\r\n\r\nexport const useStyle = makeStyles((theme) => ({\r\n    captchaContainer: {\r\n        display: \"flex\",\r\n        marginTop: \"10px\",\r\n        alignItems: 'center',\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            marginTop: 0,\r\n            display: \"block\",\r\n        },\r\n    },\r\n    captchaImageContainer: {\r\n        cursor: 'pointer',\r\n        marginLeft: \"1rem\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            marginLeft: 0,\r\n        },\r\n    },\r\n    captchaImage: {\r\n        borderRadius: 4,\r\n    },\r\n}));\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars,@typescript-eslint/no-empty-function\r\nexport const defaultValidate = (submit, setLoading) => {};\r\n\r\nexport const useCaptcha = () => {\r\n    const captchaType = useSelector((state) => state.siteConfig.captcha_type);\r\n\r\n    const [captchaLoading, setCaptchaLoading] = useState(true);\r\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n    const captchaRefreshRef = useRef(() => {});\r\n\r\n    const normal = useNormalCaptcha(captchaRefreshRef, setCaptchaLoading);\r\n    const recaptcha = useRecaptcha(setCaptchaLoading);\r\n    const tcaptcha = useTCaptcha(setCaptchaLoading);\r\n\r\n    switch (captchaType) {\r\n        case \"normal\":\r\n            return { ...normal, captchaRefreshRef, captchaLoading };\r\n        case \"recaptcha\":\r\n            return { ...recaptcha, captchaRefreshRef, captchaLoading };\r\n        case \"tcaptcha\":\r\n            return { ...tcaptcha, captchaRefreshRef, captchaLoading };\r\n        default:\r\n            return { ...normal, captchaRefreshRef, captchaLoading };\r\n    }\r\n};\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport {\r\n    Avatar,\r\n    Button,\r\n    Divider,\r\n    FormControl,\r\n    Input,\r\n    InputLabel,\r\n    Link,\r\n    makeStyles,\r\n    Paper,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport { Link as RouterLink, useHistory } from \"react-router-dom\";\r\nimport API from \"../../middleware/Api\";\r\nimport Auth from \"../../middleware/Auth\";\r\nimport { bufferDecode, bufferEncode } from \"../../utils/index\";\r\nimport { Fingerprint, VpnKey } from \"@material-ui/icons\";\r\nimport VpnIcon from \"@material-ui/icons/VpnKeyOutlined\";\r\nimport { useLocation } from \"react-router\";\r\nimport { useCaptcha } from \"../../hooks/useCaptcha\";\r\nimport {\r\n    applyThemes,\r\n    setSessionStatus,\r\n    toggleSnackbar,\r\n} from \"../../redux/explorer\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    layout: {\r\n        width: \"auto\",\r\n        marginTop: \"110px\",\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            width: 400,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n        marginBottom: 110,\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\r\n            3\r\n        )}px`,\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    link: {\r\n        marginTop: \"20px\",\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    buttonContainer: {\r\n        display: \"flex\",\r\n    },\r\n    authnLink: {\r\n        textAlign: \"center\",\r\n        marginTop: 16,\r\n    },\r\n}));\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nfunction LoginForm() {\r\n    const { t } = useTranslation();\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [pwd, setPwd] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [useAuthn, setUseAuthn] = useState(false);\r\n    const [twoFA, setTwoFA] = useState(false);\r\n    const [faCode, setFACode] = useState(\"\");\r\n\r\n    const loginCaptcha = useSelector((state) => state.siteConfig.loginCaptcha);\r\n    const registerEnabled = useSelector(\r\n        (state) => state.siteConfig.registerEnabled\r\n    );\r\n    const title = useSelector((state) => state.siteConfig.title);\r\n    const authn = useSelector((state) => state.siteConfig.authn);\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n    const ApplyThemes = useCallback((theme) => dispatch(applyThemes(theme)), [\r\n        dispatch,\r\n    ]);\r\n    const SetSessionStatus = useCallback(\r\n        (status) => dispatch(setSessionStatus(status)),\r\n        [dispatch]\r\n    );\r\n\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const {\r\n        captchaLoading,\r\n        isValidate,\r\n        validate,\r\n        CaptchaRender,\r\n        captchaRefreshRef,\r\n        captchaParamsRef,\r\n    } = useCaptcha();\r\n    const query = useQuery();\r\n\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        setEmail(query.get(\"username\"));\r\n    }, [location]);\r\n\r\n    const afterLogin = (data) => {\r\n        Auth.authenticate(data);\r\n\r\n        // 设置用户主题色\r\n        if (data[\"preferred_theme\"] !== \"\") {\r\n            ApplyThemes(data[\"preferred_theme\"]);\r\n        }\r\n\r\n        // 设置登录状态\r\n        SetSessionStatus(true);\r\n\r\n        history.push(\"/home\");\r\n        ToggleSnackbar(\"top\", \"right\", t(\"login.success\"), \"success\");\r\n\r\n        localStorage.removeItem(\"siteConfigCache\");\r\n    };\r\n\r\n    const authnLogin = (e) => {\r\n        e.preventDefault();\r\n        if (!navigator.credentials) {\r\n            ToggleSnackbar(\r\n                \"top\",\r\n                \"right\",\r\n                t(\"login.browserNotSupport\"),\r\n                \"warning\"\r\n            );\r\n\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n\r\n        API.get(\"/user/authn/\" + email)\r\n            .then((response) => {\r\n                const credentialRequestOptions = response.data;\r\n                console.log(credentialRequestOptions);\r\n                credentialRequestOptions.publicKey.challenge = bufferDecode(\r\n                    credentialRequestOptions.publicKey.challenge\r\n                );\r\n                credentialRequestOptions.publicKey.allowCredentials.forEach(\r\n                    function (listItem) {\r\n                        listItem.id = bufferDecode(listItem.id);\r\n                    }\r\n                );\r\n\r\n                return navigator.credentials.get({\r\n                    publicKey: credentialRequestOptions.publicKey,\r\n                });\r\n            })\r\n            .then((assertion) => {\r\n                const authData = assertion.response.authenticatorData;\r\n                const clientDataJSON = assertion.response.clientDataJSON;\r\n                const rawId = assertion.rawId;\r\n                const sig = assertion.response.signature;\r\n                const userHandle = assertion.response.userHandle;\r\n\r\n                return API.post(\r\n                    \"/user/authn/finish/\" + email,\r\n                    JSON.stringify({\r\n                        id: assertion.id,\r\n                        rawId: bufferEncode(rawId),\r\n                        type: assertion.type,\r\n                        response: {\r\n                            authenticatorData: bufferEncode(authData),\r\n                            clientDataJSON: bufferEncode(clientDataJSON),\r\n                            signature: bufferEncode(sig),\r\n                            userHandle: bufferEncode(userHandle),\r\n                        },\r\n                    })\r\n                );\r\n            })\r\n            .then((response) => {\r\n                afterLogin(response.data);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const login = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        if (!isValidate.current.isValidate && loginCaptcha) {\r\n            validate(() => login(e), setLoading);\r\n            return;\r\n        }\r\n        API.post(\"/user/session\", {\r\n            userName: email,\r\n            Password: pwd,\r\n            ...captchaParamsRef.current,\r\n        })\r\n            .then((response) => {\r\n                setLoading(false);\r\n                if (response.rawData.code === 203) {\r\n                    setTwoFA(true);\r\n                } else {\r\n                    afterLogin(response.data);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                setLoading(false);\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\r\n                captchaRefreshRef.current();\r\n            });\r\n    };\r\n\r\n    const twoFALogin = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        API.post(\"/user/2fa\", {\r\n            code: faCode,\r\n        })\r\n            .then((response) => {\r\n                setLoading(false);\r\n                afterLogin(response.data);\r\n            })\r\n            .catch((error) => {\r\n                setLoading(false);\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className={classes.layout}>\r\n            {!twoFA && (\r\n                <>\r\n                    <Paper className={classes.paper}>\r\n                        <Avatar className={classes.avatar}>\r\n                            <LockOutlinedIcon />\r\n                        </Avatar>\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            {t(\"login.title\", { title })}\r\n                        </Typography>\r\n                        {!useAuthn && (\r\n                            <form className={classes.form} onSubmit={login}>\r\n                                <FormControl margin=\"normal\" required fullWidth>\r\n                                    <InputLabel htmlFor=\"email\">\r\n                                        {t(\"login.email\")}\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        id=\"email\"\r\n                                        type=\"email\"\r\n                                        name=\"email\"\r\n                                        onChange={(e) =>\r\n                                            setEmail(e.target.value)\r\n                                        }\r\n                                        autoComplete\r\n                                        value={email}\r\n                                        autoFocus\r\n                                    />\r\n                                </FormControl>\r\n                                <FormControl margin=\"normal\" required fullWidth>\r\n                                    <InputLabel htmlFor=\"password\">\r\n                                        {t(\"login.password\")}\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        name=\"password\"\r\n                                        onChange={(e) => setPwd(e.target.value)}\r\n                                        type=\"password\"\r\n                                        id=\"password\"\r\n                                        value={pwd}\r\n                                        autoComplete\r\n                                    />\r\n                                </FormControl>\r\n                                {loginCaptcha && <CaptchaRender />}\r\n\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    disabled={\r\n                                        loading ||\r\n                                        (loginCaptcha ? captchaLoading : false)\r\n                                    }\r\n                                    className={classes.submit}\r\n                                >\r\n                                    {t(\"login.signIn\")}\r\n                                </Button>\r\n                            </form>\r\n                        )}\r\n                        {useAuthn && (\r\n                            <form className={classes.form}>\r\n                                <FormControl margin=\"normal\" required fullWidth>\r\n                                    <InputLabel htmlFor=\"email\">\r\n                                        {t(\"login.email\")}\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        id=\"email\"\r\n                                        type=\"email\"\r\n                                        name=\"email\"\r\n                                        onChange={(e) =>\r\n                                            setEmail(e.target.value)\r\n                                        }\r\n                                        autoComplete\r\n                                        value={email}\r\n                                        autoFocus\r\n                                    />\r\n                                </FormControl>\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    disabled={loading}\r\n                                    onClick={authnLogin}\r\n                                    className={classes.submit}\r\n                                >\r\n                                    {t(\"login.continue\")}\r\n                                </Button>\r\n                            </form>\r\n                        )}\r\n                        <Divider />\r\n                        <div className={classes.link}>\r\n                            <div>\r\n                                <Link component={RouterLink} to={\"/forget\"}>\r\n                                    {t(\"login.forgetPassword\")}\r\n                                </Link>\r\n                            </div>\r\n                            <div>\r\n                                {registerEnabled && (\r\n                                    <Link component={RouterLink} to={\"/signup\"}>\r\n                                        {t(\"login.signUpAccount\")}\r\n                                    </Link>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </Paper>\r\n\r\n                    {authn && (\r\n                        <div className={classes.authnLink}>\r\n                            <Button\r\n                                color=\"primary\"\r\n                                onClick={() => setUseAuthn(!useAuthn)}\r\n                            >\r\n                                {!useAuthn && (\r\n                                    <>\r\n                                        <Fingerprint\r\n                                            style={{\r\n                                                marginRight: 8,\r\n                                            }}\r\n                                        />\r\n                                        {t(\"login.useFIDO2\")}\r\n                                    </>\r\n                                )}\r\n                                {useAuthn && (\r\n                                    <>\r\n                                        <VpnKey\r\n                                            style={{\r\n                                                marginRight: 8,\r\n                                            }}\r\n                                        />\r\n                                        {t(\"login.usePassword\")}\r\n                                    </>\r\n                                )}\r\n                            </Button>\r\n                        </div>\r\n                    )}\r\n                </>\r\n            )}\r\n            {twoFA && (\r\n                <Paper className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <VpnIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        {t(\"login.2FA\")}\r\n                    </Typography>\r\n                    <form className={classes.form} onSubmit={twoFALogin}>\r\n                        <FormControl margin=\"normal\" required fullWidth>\r\n                            <InputLabel htmlFor=\"code\">\r\n                                {t(\"login.input2FACode\")}\r\n                            </InputLabel>\r\n                            <Input\r\n                                id=\"code\"\r\n                                type=\"number\"\r\n                                name=\"code\"\r\n                                onChange={(event) =>\r\n                                    setFACode(event.target.value)\r\n                                }\r\n                                autoComplete\r\n                                value={faCode}\r\n                                autoFocus\r\n                            />\r\n                        </FormControl>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            disabled={loading}\r\n                            className={classes.submit}\r\n                        >\r\n                            {t(\"login.continue\")}\r\n                        </Button>{\" \"}\r\n                    </form>{\" \"}\r\n                    <Divider />\r\n                </Paper>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginForm;\r\n","import Highlighter from \"react-highlight-words\";\r\nimport { trimPrefix } from \"../Uploader/core/utils\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    highlight: {\r\n        backgroundColor: theme.palette.warning.light,\r\n    },\r\n}));\r\n\r\nexport default function FileName({ name }) {\r\n    const classes = useStyles();\r\n    const search = useSelector((state) => state.explorer.search);\r\n    if (!search) {\r\n        return name;\r\n    }\r\n\r\n    return (\r\n        <Highlighter\r\n            highlightClassName={classes.highlight}\r\n            searchWords={trimPrefix(search.keywords, \"keywords/\").split(\" \")}\r\n            autoEscape={true}\r\n            textToHighlight={name}\r\n        />\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classNames from \"classnames\";\r\nimport {\r\n    ButtonBase,\r\n    fade,\r\n    Tooltip,\r\n    Typography,\r\n    withStyles,\r\n} from \"@material-ui/core\";\r\nimport TypeIcon from \"./TypeIcon\";\r\nimport CheckCircleRoundedIcon from \"@material-ui/icons/CheckCircleRounded\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport { Folder } from \"@material-ui/icons\";\r\nimport FileName from \"./FileName\";\r\n\r\nconst styles = (theme) => ({\r\n    container: {\r\n        padding: \"7px\",\r\n    },\r\n\r\n    selected: {\r\n        \"&:hover\": {\r\n            border: \"1px solid #d0d0d0\",\r\n        },\r\n        backgroundColor: fade(\r\n            theme.palette.primary.main,\r\n            theme.palette.type === \"dark\" ? 0.3 : 0.18\r\n        ),\r\n    },\r\n    notSelected: {\r\n        \"&:hover\": {\r\n            backgroundColor: theme.palette.background.default,\r\n            border: \"1px solid #d0d0d0\",\r\n        },\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n\r\n    button: {\r\n        height: \"50px\",\r\n        border: \"1px solid \" + theme.palette.divider,\r\n        width: \"100%\",\r\n        borderRadius: \"6px\",\r\n        boxSizing: \"border-box\",\r\n        transition:\r\n            \"background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\r\n        display: \"flex\",\r\n        justifyContent: \"left\",\r\n        alignItems: \"initial\",\r\n    },\r\n    icon: {\r\n        margin: \"10px 10px 10px 16px\",\r\n        height: \"30px\",\r\n        minWidth: \"30px\",\r\n        backgroundColor: theme.palette.background.paper,\r\n        borderRadius: \"90%\",\r\n        paddingTop: \"3px\",\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    folderNameSelected: {\r\n        color:\r\n            theme.palette.type === \"dark\" ? \"#fff\" : theme.palette.primary.dark,\r\n        fontWeight: \"500\",\r\n    },\r\n    folderNameNotSelected: {\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    folderName: {\r\n        marginTop: \"15px\",\r\n        textOverflow: \"ellipsis\",\r\n        whiteSpace: \"nowrap\",\r\n        overflow: \"hidden\",\r\n        marginRight: \"20px\",\r\n    },\r\n    checkIcon: {\r\n        color: theme.palette.primary.main,\r\n    },\r\n});\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selected: state.explorer.selected,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = () => {\r\n    return {};\r\n};\r\n\r\nclass SmallIconCompoment extends Component {\r\n    state = {};\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const isSelectedCurrent =\r\n            this.props.selected.findIndex((value) => {\r\n                return value === this.props.file;\r\n            }) !== -1;\r\n        const isSelectedNext =\r\n            nextProps.selected.findIndex((value) => {\r\n                return value === this.props.file;\r\n            }) !== -1;\r\n        if (\r\n            nextProps.selected !== this.props.selected &&\r\n            isSelectedCurrent === isSelectedNext\r\n        ) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const isSelected =\r\n            this.props.selected.findIndex((value) => {\r\n                return value === this.props.file;\r\n            }) !== -1;\r\n\r\n        return (\r\n            <ButtonBase\r\n                focusRipple\r\n                className={classNames(\r\n                    {\r\n                        [classes.selected]: isSelected,\r\n                        [classes.notSelected]: !isSelected,\r\n                    },\r\n                    classes.button\r\n                )}\r\n            >\r\n                <div\r\n                    onClick={this.props.onIconClick}\r\n                    className={classNames(classes.icon, {\r\n                        [classes.iconSelected]: isSelected,\r\n                        [classes.iconNotSelected]: !isSelected,\r\n                    })}\r\n                >\r\n                    {!isSelected && (\r\n                        <>\r\n                            {this.props.isFolder && <Folder />}\r\n                            {!this.props.isFolder && (\r\n                                <TypeIcon fileName={this.props.file.name} />\r\n                            )}\r\n                        </>\r\n                    )}\r\n                    {isSelected && (\r\n                        <Grow in={isSelected}>\r\n                            <CheckCircleRoundedIcon\r\n                                className={classes.checkIcon}\r\n                            />\r\n                        </Grow>\r\n                    )}\r\n                </div>\r\n                <Tooltip\r\n                    title={this.props.file.name}\r\n                    aria-label={this.props.file.name}\r\n                >\r\n                    <Typography\r\n                        className={classNames(classes.folderName, {\r\n                            [classes.folderNameSelected]: isSelected,\r\n                            [classes.folderNameNotSelected]: !isSelected,\r\n                        })}\r\n                        variant=\"body2\"\r\n                    >\r\n                        <FileName name={this.props.file.name} />\r\n                    </Typography>\r\n                </Tooltip>\r\n            </ButtonBase>\r\n        );\r\n    }\r\n}\r\n\r\nSmallIconCompoment.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    file: PropTypes.object.isRequired,\r\n};\r\n\r\nconst SmallIcon = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(SmallIconCompoment));\r\n\r\nexport default SmallIcon;\r\n","import {\r\n    ButtonBase,\r\n    Divider,\r\n    fade,\r\n    Tooltip,\r\n    Typography,\r\n    withStyles,\r\n} from \"@material-ui/core\";\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport ContentLoader from \"react-content-loader\";\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport { baseURL } from \"../../middleware/Api\";\r\nimport pathHelper from \"../../utils/page\";\r\nimport TypeIcon from \"./TypeIcon\";\r\nimport CheckCircleRoundedIcon from \"@material-ui/icons/CheckCircleRounded\";\r\nimport statusHelper from \"../../utils/page\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport FileName from \"./FileName\";\r\n\r\nconst styles = (theme) => ({\r\n    container: {},\r\n\r\n    selected: {\r\n        \"&:hover\": {\r\n            border: \"1px solid #d0d0d0\",\r\n        },\r\n        backgroundColor: fade(\r\n            theme.palette.primary.main,\r\n            theme.palette.type === \"dark\" ? 0.3 : 0.18\r\n        ),\r\n    },\r\n\r\n    notSelected: {\r\n        \"&:hover\": {\r\n            backgroundColor: theme.palette.background.default,\r\n            border: \"1px solid #d0d0d0\",\r\n        },\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n\r\n    button: {\r\n        border: \"1px solid \" + theme.palette.divider,\r\n        width: \"100%\",\r\n        borderRadius: \"6px\",\r\n        boxSizing: \"border-box\",\r\n        transition:\r\n            \"background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\r\n        alignItems: \"initial\",\r\n        display: \"initial\",\r\n    },\r\n    folderNameSelected: {\r\n        color:\r\n            theme.palette.type === \"dark\" ? \"#fff\" : theme.palette.primary.dark,\r\n        fontWeight: \"500\",\r\n    },\r\n    folderNameNotSelected: {\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    folderName: {\r\n        marginTop: \"15px\",\r\n        textOverflow: \"ellipsis\",\r\n        whiteSpace: \"nowrap\",\r\n        overflow: \"hidden\",\r\n        marginRight: \"20px\",\r\n    },\r\n    preview: {\r\n        overflow: \"hidden\",\r\n        height: \"150px\",\r\n        width: \"100%\",\r\n        borderRadius: \"6px 6px 0 0\",\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    previewIcon: {\r\n        overflow: \"hidden\",\r\n        height: \"149px\",\r\n        width: \"100%\",\r\n        borderRadius: \"5px 5px 0 0\",\r\n        backgroundColor: theme.palette.background.paper,\r\n        paddingTop: \"50px\",\r\n    },\r\n    iconBig: {\r\n        fontSize: 50,\r\n    },\r\n    picPreview: {\r\n        objectFit: \"cover\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n    },\r\n    fileInfo: {\r\n        height: \"50px\",\r\n        display: \"flex\",\r\n    },\r\n    icon: {\r\n        margin: \"10px 10px 10px 16px\",\r\n        height: \"30px\",\r\n        minWidth: \"30px\",\r\n        backgroundColor: theme.palette.background.paper,\r\n        borderRadius: \"90%\",\r\n        paddingTop: \"3px\",\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    hide: {\r\n        display: \"none\",\r\n    },\r\n    loadingAnimation: {\r\n        borderRadius: \"6px 6px 0 0\",\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n    },\r\n    shareFix: {\r\n        marginLeft: \"20px\",\r\n    },\r\n    checkIcon: {\r\n        color: theme.palette.primary.main,\r\n    },\r\n    noDrag: {\r\n        userDrag: \"none\",\r\n    },\r\n});\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        path: state.navigator.path,\r\n        selected: state.explorer.selected,\r\n        shareInfo: state.viewUpdate.shareInfo,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = () => {\r\n    return {};\r\n};\r\n\r\nclass FileIconCompoment extends Component {\r\n    static defaultProps = {\r\n        share: false,\r\n    };\r\n\r\n    state = {\r\n        loading: false,\r\n        showPicIcon: false,\r\n    };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const isSelectedCurrent =\r\n            this.props.selected.findIndex((value) => {\r\n                return value === this.props.file;\r\n            }) !== -1;\r\n        const isSelectedNext =\r\n            nextProps.selected.findIndex((value) => {\r\n                return value === this.props.file;\r\n            }) !== -1;\r\n        if (\r\n            nextProps.selected !== this.props.selected &&\r\n            isSelectedCurrent === isSelectedNext\r\n        ) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const isSelected =\r\n            this.props.selected.findIndex((value) => {\r\n                return value === this.props.file;\r\n            }) !== -1;\r\n        const isSharePage = pathHelper.isSharePage(\r\n            this.props.location.pathname\r\n        );\r\n        const isMobile = statusHelper.isMobile();\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n                <ButtonBase\r\n                    focusRipple\r\n                    className={classNames(\r\n                        {\r\n                            [classes.selected]: isSelected,\r\n                            [classes.notSelected]: !isSelected,\r\n                        },\r\n                        classes.button\r\n                    )}\r\n                >\r\n                    {this.props.file.pic !== \"\" &&\r\n                        !this.state.showPicIcon &&\r\n                        this.props.file.pic !== \" \" &&\r\n                        this.props.file.pic !== \"null,null\" && (\r\n                            <div className={classes.preview}>\r\n                                <LazyLoadImage\r\n                                    className={classNames(\r\n                                        {\r\n                                            [classes.hide]: this.state.loading,\r\n                                            [classes.picPreview]: !this.state\r\n                                                .loading,\r\n                                        },\r\n                                        classes.noDrag\r\n                                    )}\r\n                                    src={\r\n                                        baseURL +\r\n                                        (isSharePage && this.props.shareInfo\r\n                                            ? \"/share/thumb/\" +\r\n                                              this.props.shareInfo.key +\r\n                                              \"/\" +\r\n                                              this.props.file.id +\r\n                                              \"?path=\" +\r\n                                              encodeURIComponent(\r\n                                                  this.props.file.path\r\n                                              )\r\n                                            : \"/file/thumb/\" +\r\n                                              this.props.file.id)\r\n                                    }\r\n                                    afterLoad={() =>\r\n                                        this.setState({ loading: false })\r\n                                    }\r\n                                    beforeLoad={() =>\r\n                                        this.setState({ loading: true })\r\n                                    }\r\n                                    onError={() =>\r\n                                        this.setState({ showPicIcon: true })\r\n                                    }\r\n                                />\r\n                                <ContentLoader\r\n                                    height={150}\r\n                                    width={170}\r\n                                    className={classNames(\r\n                                        {\r\n                                            [classes.hide]: !this.state.loading,\r\n                                        },\r\n                                        classes.loadingAnimation\r\n                                    )}\r\n                                >\r\n                                    <rect\r\n                                        x=\"0\"\r\n                                        y=\"0\"\r\n                                        width=\"100%\"\r\n                                        height=\"150\"\r\n                                    />\r\n                                </ContentLoader>\r\n                            </div>\r\n                        )}\r\n                    {(this.props.file.pic === \"\" ||\r\n                        this.state.showPicIcon ||\r\n                        this.props.file.pic === \" \" ||\r\n                        this.props.file.pic === \"null,null\") && (\r\n                        <div className={classes.previewIcon}>\r\n                            <TypeIcon\r\n                                className={classes.iconBig}\r\n                                fileName={this.props.file.name}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {(this.props.file.pic === \"\" ||\r\n                        this.state.showPicIcon ||\r\n                        this.props.file.pic === \" \" ||\r\n                        this.props.file.pic === \"null,null\") && <Divider />}\r\n                    <div className={classes.fileInfo}>\r\n                        {!this.props.share && (\r\n                            <div\r\n                                onClick={this.props.onIconClick}\r\n                                className={classNames(classes.icon, {\r\n                                    [classes.iconSelected]: isSelected,\r\n                                    [classes.iconNotSelected]: !isSelected,\r\n                                })}\r\n                            >\r\n                                {!isSelected && (\r\n                                    <TypeIcon fileName={this.props.file.name} />\r\n                                )}\r\n                                {isSelected && (\r\n                                    <Grow in={isSelected}>\r\n                                        <CheckCircleRoundedIcon\r\n                                            className={classes.checkIcon}\r\n                                        />\r\n                                    </Grow>\r\n                                )}\r\n                            </div>\r\n                        )}\r\n                        <Tooltip\r\n                            title={this.props.file.name}\r\n                            aria-label={this.props.file.name}\r\n                        >\r\n                            <Typography\r\n                                variant=\"body2\"\r\n                                className={classNames(classes.folderName, {\r\n                                    [classes.folderNameSelected]: isSelected,\r\n                                    [classes.folderNameNotSelected]: !isSelected,\r\n                                    [classes.shareFix]: this.props.share,\r\n                                })}\r\n                            >\r\n                                <FileName name={this.props.file.name} />\r\n                            </Typography>\r\n                        </Tooltip>\r\n                    </div>\r\n                </ButtonBase>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nFileIconCompoment.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    file: PropTypes.object.isRequired,\r\n};\r\n\r\nconst FileIcon = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withRouter(FileIconCompoment)));\r\n\r\nexport default FileIcon;\r\n","import React from \"react\";\r\nimport FolderIcon from \"@material-ui/icons/Folder\";\r\nimport classNames from \"classnames\";\r\nimport {\r\n    ButtonBase,\r\n    fade,\r\n    makeStyles,\r\n    Tooltip,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport { useSelector } from \"react-redux\";\r\nimport statusHelper from \"../../utils/page\";\r\nimport CheckCircleRoundedIcon from \"@material-ui/icons/CheckCircleRounded\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        padding: \"7px\",\r\n    },\r\n\r\n    selected: {\r\n        \"&:hover\": {\r\n            border: \"1px solid #d0d0d0\",\r\n        },\r\n        backgroundColor: fade(\r\n            theme.palette.primary.main,\r\n            theme.palette.type === \"dark\" ? 0.3 : 0.18\r\n        ),\r\n    },\r\n\r\n    notSelected: {\r\n        \"&:hover\": {\r\n            backgroundColor: theme.palette.background.default,\r\n            border: \"1px solid #d0d0d0\",\r\n        },\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n\r\n    button: {\r\n        height: \"50px\",\r\n        border: \"1px solid \" + theme.palette.divider,\r\n        width: \"100%\",\r\n        borderRadius: \"6px\",\r\n        boxSizing: \"border-box\",\r\n        transition:\r\n            \"background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\r\n        display: \"flex\",\r\n        justifyContent: \"left\",\r\n        alignItems: \"initial\",\r\n    },\r\n    icon: {\r\n        margin: \"10px 10px 10px 16px\",\r\n        height: \"30px\",\r\n        minWidth: \"30px\",\r\n        backgroundColor: theme.palette.background.paper,\r\n        borderRadius: \"90%\",\r\n        paddingTop: \"3px\",\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    folderNameSelected: {\r\n        color:\r\n            theme.palette.type === \"dark\" ? \"#fff\" : theme.palette.primary.dark,\r\n        fontWeight: \"500\",\r\n    },\r\n    folderNameNotSelected: {\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    folderName: {\r\n        marginTop: \"15px\",\r\n        textOverflow: \"ellipsis\",\r\n        whiteSpace: \"nowrap\",\r\n        overflow: \"hidden\",\r\n        marginRight: \"20px\",\r\n    },\r\n    active: {\r\n        boxShadow: \"0 0 0 2px \" + theme.palette.primary.light,\r\n    },\r\n    checkIcon: {\r\n        color: theme.palette.primary.main,\r\n    },\r\n}));\r\n\r\nexport default function Folder({ folder, isActive, onIconClick }) {\r\n    const selected = useSelector((state) => state.explorer.selected);\r\n    const classes = useStyles();\r\n    const isMobile = statusHelper.isMobile();\r\n    const isSelected =\r\n        selected.findIndex((value) => {\r\n            return value === folder;\r\n        }) !== -1;\r\n\r\n    return (\r\n        <ButtonBase\r\n            focusRipple\r\n            className={classNames(\r\n                {\r\n                    [classes.selected]: isSelected,\r\n                    [classes.notSelected]: !isSelected,\r\n                    [classes.active]: isActive,\r\n                },\r\n                classes.button\r\n            )}\r\n        >\r\n            <div\r\n                onClick={onIconClick}\r\n                className={classNames(classes.icon, {\r\n                    [classes.iconSelected]: isSelected,\r\n                    [classes.iconNotSelected]: !isSelected,\r\n                })}\r\n            >\r\n                {!isSelected && <FolderIcon />}\r\n                {isSelected && (\r\n                    <CheckCircleRoundedIcon className={classes.checkIcon} />\r\n                )}\r\n            </div>\r\n            <Tooltip title={folder.name} aria-label={folder.name}>\r\n                <Typography\r\n                    variant=\"body2\"\r\n                    className={classNames(classes.folderName, {\r\n                        [classes.folderNameSelected]: isSelected,\r\n                        [classes.folderNameNotSelected]: !isSelected,\r\n                    })}\r\n                >\r\n                    {folder.name}\r\n                </Typography>\r\n            </Tooltip>\r\n        </ButtonBase>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport SmallIcon from \"../SmallIcon\";\r\nimport FileIcon from \"../FileIcon\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport Folder from \"../Folder\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    dragging: {\r\n        width: \"200px\",\r\n    },\r\n    cardDragged: {\r\n        position: \"absolute\",\r\n        \"transform-origin\": \"bottom left\",\r\n    },\r\n}));\r\n\r\nconst diliverIcon = (object, viewMethod, classes) => {\r\n    if (object.type === \"dir\") {\r\n        return (\r\n            <div className={classes.dragging}>\r\n                <SmallIcon file={object} isFolder />\r\n            </div>\r\n        );\r\n    }\r\n    if (object.type === \"file\" && viewMethod === \"icon\") {\r\n        return (\r\n            <div className={classes.dragging}>\r\n                <FileIcon file={object} />\r\n            </div>\r\n        );\r\n    }\r\n    if (\r\n        (object.type === \"file\" && viewMethod === \"smallIcon\") ||\r\n        viewMethod === \"list\"\r\n    ) {\r\n        return (\r\n            <div className={classes.dragging}>\r\n                <SmallIcon file={object} />\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst Preview = (props) => {\r\n    const selected = useSelector((state) => state.explorer.selected);\r\n    const viewMethod = useSelector(\r\n        (state) => state.viewUpdate.explorerViewMethod\r\n    );\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n            {selected.length === 0 &&\r\n                diliverIcon(props.object, viewMethod, classes)}\r\n            {selected.length > 0 && (\r\n                <>\r\n                    {selected.slice(0, 3).map((card, i) => (\r\n                        <div\r\n                            key={card.id}\r\n                            className={classes.cardDragged}\r\n                            style={{\r\n                                zIndex: selected.length - i,\r\n                                transform: `rotateZ(${-i * 2.5}deg)`,\r\n                            }}\r\n                        >\r\n                            {diliverIcon(card, viewMethod, classes)}\r\n                        </div>\r\n                    ))}\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\nexport default Preview;\r\n","import React, { useMemo } from \"react\";\r\nimport { useDragLayer } from \"react-dnd\";\r\nimport Preview from \"./Preview\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst layerStyles = {\r\n    position: \"fixed\",\r\n    pointerEvents: \"none\",\r\n    zIndex: 100,\r\n    left: 0,\r\n    top: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n};\r\n\r\nfunction getItemStyles(\r\n    initialOffset,\r\n    currentOffset,\r\n    pointerOffset,\r\n    viewMethod\r\n) {\r\n    if (!initialOffset || !currentOffset) {\r\n        return {\r\n            display: \"none\",\r\n        };\r\n    }\r\n    let { x, y } = currentOffset;\r\n    if (viewMethod === \"list\") {\r\n        x += pointerOffset.x - initialOffset.x;\r\n        y += pointerOffset.y - initialOffset.y;\r\n    }\r\n\r\n    const transform = `translate(${x}px, ${y}px)`;\r\n    return {\r\n        opacity: 0.5,\r\n        transform,\r\n        WebkitTransform: transform,\r\n    };\r\n}\r\nconst CustomDragLayer = (props) => {\r\n    const {\r\n        itemType,\r\n        isDragging,\r\n        item,\r\n        initialOffset,\r\n        currentOffset,\r\n        pointerOffset,\r\n    } = useDragLayer((monitor) => ({\r\n        item: monitor.getItem(),\r\n        itemType: monitor.getItemType(),\r\n        initialOffset: monitor.getInitialSourceClientOffset(),\r\n        currentOffset: monitor.getSourceClientOffset(),\r\n        pointerOffset: monitor.getInitialClientOffset(),\r\n        isDragging: monitor.isDragging(),\r\n    }));\r\n    const viewMethod = useSelector(\r\n        (state) => state.viewUpdate.explorerViewMethod\r\n    );\r\n    const image = useMemo(() => {\r\n        switch (itemType) {\r\n            case \"object\":\r\n                return <Preview object={item.object} />;\r\n            default:\r\n                return null;\r\n        }\r\n    }, [itemType, item]);\r\n    if (!isDragging) {\r\n        return null;\r\n    }\r\n    return (\r\n        <div style={layerStyles}>\r\n            <div\r\n                style={getItemStyles(\r\n                    initialOffset,\r\n                    currentOffset,\r\n                    pointerOffset,\r\n                    viewMethod\r\n                )}\r\n            >\r\n                {image}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default CustomDragLayer;\r\n","import {\r\n    Divider,\r\n    ListItemIcon,\r\n    MenuItem,\r\n    Typography,\r\n    withStyles,\r\n} from \"@material-ui/core\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport { Archive, InfoOutlined, Unarchive } from \"@material-ui/icons\";\r\nimport RenameIcon from \"@material-ui/icons/BorderColor\";\r\nimport DownloadIcon from \"@material-ui/icons/CloudDownload\";\r\nimport UploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport NewFolderIcon from \"@material-ui/icons/CreateNewFolder\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\r\nimport OpenFolderIcon from \"@material-ui/icons/FolderOpen\";\r\nimport MoveIcon from \"@material-ui/icons/Input\";\r\nimport LinkIcon from \"@material-ui/icons/InsertLink\";\r\nimport OpenIcon from \"@material-ui/icons/OpenInNew\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport {\r\n    FolderDownload,\r\n    FolderUpload,\r\n    MagnetOn,\r\n    FilePlus,\r\n} from \"mdi-material-ui\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { isCompressFile, isPreviewable, isTorrent } from \"../../config\";\r\nimport Auth from \"../../middleware/Auth\";\r\nimport pathHelper from \"../../utils/page\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\nimport {\r\n    batchGetSource,\r\n    openPreview,\r\n    setSelectedTarget,\r\n    startBatchDownload,\r\n    startDirectoryDownload,\r\n    startDownload,\r\n    toggleObjectInfoSidebar,\r\n} from \"../../redux/explorer/action\";\r\nimport {\r\n    changeContextMenu,\r\n    navigateTo,\r\n    openCompressDialog,\r\n    openCopyDialog,\r\n    openCreateFileDialog,\r\n    openCreateFolderDialog,\r\n    openDecompressDialog,\r\n    openLoadingDialog,\r\n    openMoveDialog,\r\n    openMusicDialog,\r\n    openRemoteDownloadDialog,\r\n    openRemoveDialog,\r\n    openRenameDialog,\r\n    openShareDialog,\r\n    openTorrentDownloadDialog,\r\n    refreshFileList,\r\n    setNavigatorLoadingStatus,\r\n    showImgPreivew,\r\n    toggleSnackbar,\r\n} from \"../../redux/explorer\";\r\nimport { pathJoin } from \"../Uploader/core/utils\";\r\nimport {\r\n    openFileSelector,\r\n    openFolderSelector,\r\n} from \"../../redux/viewUpdate/action\";\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\nconst styles = () => ({\r\n    propover: {},\r\n    divider: {\r\n        marginTop: 4,\r\n        marginBottom: 4,\r\n    },\r\n});\r\n\r\nconst StyledListItemIcon = withStyles({\r\n    root: {\r\n        minWidth: 38,\r\n    },\r\n})(ListItemIcon);\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        menuType: state.viewUpdate.contextType,\r\n        menuOpen: state.viewUpdate.contextOpen,\r\n        isMultiple: state.explorer.selectProps.isMultiple,\r\n        withFolder: state.explorer.selectProps.withFolder,\r\n        withFile: state.explorer.selectProps.withFile,\r\n        withSourceEnabled: state.explorer.selectProps.withSourceEnabled,\r\n        path: state.navigator.path,\r\n        selected: state.explorer.selected,\r\n        search: state.explorer.search,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeContextMenu: (type, open) => {\r\n            dispatch(changeContextMenu(type, open));\r\n        },\r\n        setNavigatorLoadingStatus: (status) => {\r\n            dispatch(setNavigatorLoadingStatus(status));\r\n        },\r\n        setSelectedTarget: (targets) => {\r\n            dispatch(setSelectedTarget(targets));\r\n        },\r\n        navigateTo: (path) => {\r\n            dispatch(navigateTo(path));\r\n        },\r\n        openCreateFolderDialog: () => {\r\n            dispatch(openCreateFolderDialog());\r\n        },\r\n        openCreateFileDialog: () => {\r\n            dispatch(openCreateFileDialog());\r\n        },\r\n        openRenameDialog: () => {\r\n            dispatch(openRenameDialog());\r\n        },\r\n        openMoveDialog: () => {\r\n            dispatch(openMoveDialog());\r\n        },\r\n        openRemoveDialog: () => {\r\n            dispatch(openRemoveDialog());\r\n        },\r\n        openShareDialog: () => {\r\n            dispatch(openShareDialog());\r\n        },\r\n        showImgPreivew: (first) => {\r\n            dispatch(showImgPreivew(first));\r\n        },\r\n        openMusicDialog: () => {\r\n            dispatch(openMusicDialog());\r\n        },\r\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\r\n        },\r\n        openRemoteDownloadDialog: () => {\r\n            dispatch(openRemoteDownloadDialog());\r\n        },\r\n        openTorrentDownloadDialog: () => {\r\n            dispatch(openTorrentDownloadDialog());\r\n        },\r\n        openCopyDialog: () => {\r\n            dispatch(openCopyDialog());\r\n        },\r\n        openLoadingDialog: (text) => {\r\n            dispatch(openLoadingDialog(text));\r\n        },\r\n        openDecompressDialog: () => {\r\n            dispatch(openDecompressDialog());\r\n        },\r\n        openCompressDialog: () => {\r\n            dispatch(openCompressDialog());\r\n        },\r\n        refreshFileList: () => {\r\n            dispatch(refreshFileList());\r\n        },\r\n        openPreview: (share) => {\r\n            dispatch(openPreview(share));\r\n        },\r\n        toggleObjectInfoSidebar: (open) => {\r\n            dispatch(toggleObjectInfoSidebar(open));\r\n        },\r\n        startBatchDownload: (share) => {\r\n            dispatch(startBatchDownload(share));\r\n        },\r\n        openFileSelector: () => {\r\n            dispatch(openFileSelector());\r\n        },\r\n        openFolderSelector: () => {\r\n            dispatch(openFolderSelector());\r\n        },\r\n        startDownload: (share, file) => {\r\n            dispatch(startDownload(share, file));\r\n        },\r\n        batchGetSource: () => {\r\n            dispatch(batchGetSource());\r\n        },\r\n        startDirectoryDownload: (share) => {\r\n            dispatch(startDirectoryDownload(share));\r\n        },\r\n    };\r\n};\r\n\r\nclass ContextMenuCompoment extends Component {\r\n    X = 0;\r\n    Y = 0;\r\n\r\n    state = {};\r\n\r\n    componentDidMount = () => {\r\n        window.document.addEventListener(\"mousemove\", this.setPoint);\r\n    };\r\n\r\n    setPoint = (e) => {\r\n        this.Y = e.clientY;\r\n        this.X = e.clientX;\r\n    };\r\n\r\n    openArchiveDownload = () => {\r\n        this.props.startBatchDownload(this.props.share);\r\n    };\r\n\r\n    openDirectoryDownload = () => {\r\n        this.props.startDirectoryDownload(this.props.share);\r\n    };\r\n\r\n    openDownload = () => {\r\n        this.props.startDownload(this.props.share, this.props.selected[0]);\r\n    };\r\n\r\n    enterFolder = () => {\r\n        this.props.navigateTo(\r\n            pathJoin([this.props.path, this.props.selected[0].name])\r\n        );\r\n    };\r\n\r\n    // 暂时只对空白处右键菜单使用这个函数，疑似有bug会导致的一个菜单被默认选中。\r\n    // 相关issue： https://github.com/mui-org/material-ui/issues/23747\r\n    renderMenuItems = (items) => {\r\n        const res = [];\r\n        let key = 0;\r\n\r\n        [\"top\", \"center\", \"bottom\"].forEach((position) => {\r\n            let visibleCount = 0;\r\n            items[position].forEach((item) => {\r\n                if (item.condition) {\r\n                    res.push(\r\n                        <MenuItem dense key={key} onClick={item.onClick}>\r\n                            <ListItemIcon>{item.icon}</ListItemIcon>\r\n                            <Typography variant=\"inherit\">\r\n                                {item.text}\r\n                            </Typography>\r\n                        </MenuItem>\r\n                    );\r\n                    key++;\r\n                    visibleCount++;\r\n                }\r\n            });\r\n            if (visibleCount > 0 && position != \"bottom\") {\r\n                res.push(\r\n                    <Divider key={key} className={this.props.classes.divider} />\r\n                );\r\n                key++;\r\n            }\r\n        });\r\n\r\n        return res;\r\n    };\r\n\r\n    render() {\r\n        const { classes, t } = this.props;\r\n        const user = Auth.GetUser();\r\n        const isHomePage = pathHelper.isHomePage(this.props.location.pathname);\r\n        const emptyMenuList = {\r\n            top: [\r\n                {\r\n                    condition: true,\r\n                    onClick: () => {\r\n                        this.props.refreshFileList();\r\n                        this.props.changeContextMenu(\r\n                            this.props.menuType,\r\n                            false\r\n                        );\r\n                    },\r\n                    icon: <RefreshIcon />,\r\n                    text: \"刷新\",\r\n                },\r\n            ],\r\n            center: [\r\n                {\r\n                    condition: true,\r\n                    onClick: () => this.props.openFileSelector(),\r\n                    icon: <UploadIcon />,\r\n                    text: \"上传文件\",\r\n                },\r\n                {\r\n                    condition: true,\r\n                    onClick: () => this.props.openFolderSelector(),\r\n                    icon: <FolderUpload />,\r\n                    text: \"上传目录\",\r\n                },\r\n                {\r\n                    condition: user.group.allowRemoteDownload,\r\n                    onClick: () => this.props.openRemoteDownloadDialog(),\r\n                    icon: <DownloadIcon />,\r\n                    text: \"离线下载\",\r\n                },\r\n            ],\r\n            bottom: [\r\n                {\r\n                    condition: true,\r\n                    onClick: () => this.props.openCreateFolderDialog(),\r\n                    icon: <NewFolderIcon />,\r\n                    text: \"创建文件夹\",\r\n                },\r\n                {\r\n                    condition: true,\r\n                    onClick: () => this.props.openCreateFileDialog(),\r\n                    icon: <FilePlus />,\r\n                    text: \"创建文件\",\r\n                },\r\n            ],\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <Menu\r\n                    keepMounted\r\n                    open={this.props.menuOpen}\r\n                    onClose={() =>\r\n                        this.props.changeContextMenu(this.props.menuType, false)\r\n                    }\r\n                    anchorReference=\"anchorPosition\"\r\n                    anchorPosition={{ top: this.Y, left: this.X }}\r\n                    anchorOrigin={{\r\n                        vertical: \"top\",\r\n                        horizontal: \"left\",\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: \"top\",\r\n                        horizontal: \"left\",\r\n                    }}\r\n                >\r\n                    {this.props.menuType === \"empty\" && (\r\n                        <div>\r\n                            <MenuItem\r\n                                dense\r\n                                onClick={() => {\r\n                                    this.props.refreshFileList();\r\n                                    this.props.changeContextMenu(\r\n                                        this.props.menuType,\r\n                                        false\r\n                                    );\r\n                                }}\r\n                            >\r\n                                <StyledListItemIcon>\r\n                                    <RefreshIcon />\r\n                                </StyledListItemIcon>\r\n                                <Typography variant=\"inherit\">\r\n                                    {t(\"fileManager.refresh\")}\r\n                                </Typography>\r\n                            </MenuItem>\r\n                            <Divider className={classes.divider} />\r\n                            <MenuItem\r\n                                dense\r\n                                onClick={() => this.props.openFileSelector()}\r\n                            >\r\n                                <StyledListItemIcon>\r\n                                    <UploadIcon />\r\n                                </StyledListItemIcon>\r\n                                <Typography variant=\"inherit\">\r\n                                    {t(\"fileManager.uploadFiles\")}\r\n                                </Typography>\r\n                            </MenuItem>\r\n                            <MenuItem\r\n                                dense\r\n                                onClick={() => this.props.openFolderSelector()}\r\n                            >\r\n                                <StyledListItemIcon>\r\n                                    <FolderUpload />\r\n                                </StyledListItemIcon>\r\n                                <Typography variant=\"inherit\">\r\n                                    {t(\"fileManager.uploadFolder\")}\r\n                                </Typography>\r\n                            </MenuItem>\r\n                            {user.group.allowRemoteDownload && (\r\n                                <MenuItem\r\n                                    dense\r\n                                    onClick={() =>\r\n                                        this.props.openRemoteDownloadDialog()\r\n                                    }\r\n                                >\r\n                                    <StyledListItemIcon>\r\n                                        <DownloadIcon />\r\n                                    </StyledListItemIcon>\r\n                                    <Typography variant=\"inherit\">\r\n                                        {t(\"fileManager.newRemoteDownloads\")}\r\n                                    </Typography>\r\n                                </MenuItem>\r\n                            )}\r\n\r\n                            <Divider className={classes.divider} />\r\n                            <MenuItem\r\n                                dense\r\n                                onClick={() =>\r\n                                    this.props.openCreateFolderDialog()\r\n                                }\r\n                            >\r\n                                <StyledListItemIcon>\r\n                                    <NewFolderIcon />\r\n                                </StyledListItemIcon>\r\n                                <Typography variant=\"inherit\">\r\n                                    {t(\"fileManager.newFolder\")}\r\n                                </Typography>\r\n                            </MenuItem>\r\n                            <MenuItem\r\n                                dense\r\n                                onClick={() =>\r\n                                    this.props.openCreateFileDialog()\r\n                                }\r\n                            >\r\n                                <StyledListItemIcon>\r\n                                    <FilePlus />\r\n                                </StyledListItemIcon>\r\n                                <Typography variant=\"inherit\">\r\n                                    {t(\"fileManager.newFile\")}\r\n                                </Typography>\r\n                            </MenuItem>\r\n                        </div>\r\n                    )}\r\n                    {this.props.menuType !== \"empty\" && (\r\n                        <div>\r\n                            {!this.props.isMultiple && this.props.withFolder && (\r\n                                <div>\r\n                                    <MenuItem dense onClick={this.enterFolder}>\r\n                                        <StyledListItemIcon>\r\n                                            <OpenFolderIcon />\r\n                                        </StyledListItemIcon>\r\n                                        <Typography variant=\"inherit\">\r\n                                            {t(\"fileManager.enter\")}\r\n                                        </Typography>\r\n                                    </MenuItem>\r\n                                    {isHomePage && (\r\n                                        <Divider className={classes.divider} />\r\n                                    )}\r\n                                </div>\r\n                            )}\r\n                            {!this.props.isMultiple &&\r\n                                this.props.withFile &&\r\n                                (!this.props.share ||\r\n                                    this.props.share.preview) &&\r\n                                isPreviewable(this.props.selected[0].name) && (\r\n                                    <div>\r\n                                        <MenuItem\r\n                                            dense\r\n                                            onClick={() =>\r\n                                                this.props.openPreview()\r\n                                            }\r\n                                        >\r\n                                            <StyledListItemIcon>\r\n                                                <OpenIcon />\r\n                                            </StyledListItemIcon>\r\n                                            <Typography variant=\"inherit\">\r\n                                                {t(\"fileManager.open\")}\r\n                                            </Typography>\r\n                                        </MenuItem>\r\n                                    </div>\r\n                                )}\r\n\r\n                            {!this.props.isMultiple && this.props.withFile && (\r\n                                <div>\r\n                                    <MenuItem\r\n                                        dense\r\n                                        onClick={() =>\r\n                                            this.openDownload(this.props.share)\r\n                                        }\r\n                                    >\r\n                                        <StyledListItemIcon>\r\n                                            <DownloadIcon />\r\n                                        </StyledListItemIcon>\r\n                                        <Typography variant=\"inherit\">\r\n                                            {t(\"fileManager.download\")}\r\n                                        </Typography>\r\n                                    </MenuItem>\r\n                                    {isHomePage && (\r\n                                        <Divider className={classes.divider} />\r\n                                    )}\r\n                                </div>\r\n                            )}\r\n\r\n                            {(this.props.isMultiple || this.props.withFolder) &&\r\n                                window.showDirectoryPicker &&\r\n                                window.isSecureContext && (\r\n                                    <MenuItem\r\n                                        dense\r\n                                        onClick={() =>\r\n                                            this.openDirectoryDownload()\r\n                                        }\r\n                                    >\r\n                                        <StyledListItemIcon>\r\n                                            <FolderDownload />\r\n                                        </StyledListItemIcon>\r\n                                        <Typography variant=\"inherit\">\r\n                                            {t(\"fileManager.download\")}\r\n                                        </Typography>\r\n                                    </MenuItem>\r\n                                )}\r\n\r\n                            {(this.props.isMultiple ||\r\n                                this.props.withFolder) && (\r\n                                <MenuItem\r\n                                    dense\r\n                                    onClick={() => this.openArchiveDownload()}\r\n                                >\r\n                                    <StyledListItemIcon>\r\n                                        <DownloadIcon />\r\n                                    </StyledListItemIcon>\r\n                                    <Typography variant=\"inherit\">\r\n                                        {t(\"fileManager.batchDownload\")}\r\n                                    </Typography>\r\n                                </MenuItem>\r\n                            )}\r\n\r\n                            {isHomePage &&\r\n                                user.group.sourceBatch > 0 &&\r\n                                this.props.withSourceEnabled && (\r\n                                    <MenuItem\r\n                                        dense\r\n                                        onClick={() =>\r\n                                            this.props.batchGetSource()\r\n                                        }\r\n                                    >\r\n                                        <StyledListItemIcon>\r\n                                            <LinkIcon />\r\n                                        </StyledListItemIcon>\r\n                                        <Typography variant=\"inherit\">\r\n                                            {this.props.isMultiple ||\r\n                                            (this.props.withFolder &&\r\n                                                !this.props.withFile)\r\n                                                ? t(\r\n                                                      \"fileManager.getSourceLinkInBatch\"\r\n                                                  )\r\n                                                : t(\r\n                                                      \"fileManager.getSourceLink\"\r\n                                                  )}\r\n                                        </Typography>\r\n                                    </MenuItem>\r\n                                )}\r\n\r\n                            {!this.props.isMultiple &&\r\n                                isHomePage &&\r\n                                user.group.allowRemoteDownload &&\r\n                                this.props.withFile &&\r\n                                isTorrent(this.props.selected[0].name) && (\r\n                                    <MenuItem\r\n                                        dense\r\n                                        onClick={() =>\r\n                                            this.props.openTorrentDownloadDialog()\r\n                                        }\r\n                                    >\r\n                                        <StyledListItemIcon>\r\n                                            <MagnetOn />\r\n                                        </StyledListItemIcon>\r\n                                        <Typography variant=\"inherit\">\r\n                                            {t(\r\n                                                \"fileManager.createRemoteDownloadForTorrent\"\r\n                                            )}\r\n                                        </Typography>\r\n                                    </MenuItem>\r\n                                )}\r\n                            {!this.props.isMultiple &&\r\n                                isHomePage &&\r\n                                user.group.compress &&\r\n                                this.props.withFile &&\r\n                                isCompressFile(this.props.selected[0].name) && (\r\n                                    <MenuItem\r\n                                        dense\r\n                                        onClick={() =>\r\n                                            this.props.openDecompressDialog()\r\n                                        }\r\n                                    >\r\n                                        <StyledListItemIcon>\r\n                                            <Unarchive />\r\n                                        </StyledListItemIcon>\r\n                                        <Typography variant=\"inherit\">\r\n                                            {t(\"fileManager.decompress\")}\r\n                                        </Typography>\r\n                                    </MenuItem>\r\n                                )}\r\n\r\n                            {isHomePage && user.group.compress && (\r\n                                <MenuItem\r\n                                    dense\r\n                                    onClick={() =>\r\n                                        this.props.openCompressDialog()\r\n                                    }\r\n                                >\r\n                                    <StyledListItemIcon>\r\n                                        <Archive />\r\n                                    </StyledListItemIcon>\r\n                                    <Typography variant=\"inherit\">\r\n                                        {t(\"fileManager.compress\")}\r\n                                    </Typography>\r\n                                </MenuItem>\r\n                            )}\r\n\r\n                            {!this.props.isMultiple && isHomePage && (\r\n                                <MenuItem\r\n                                    dense\r\n                                    onClick={() => this.props.openShareDialog()}\r\n                                >\r\n                                    <StyledListItemIcon>\r\n                                        <ShareIcon />\r\n                                    </StyledListItemIcon>\r\n                                    <Typography variant=\"inherit\">\r\n                                        {t(\"fileManager.createShareLink\")}\r\n                                    </Typography>\r\n                                </MenuItem>\r\n                            )}\r\n\r\n                            {!this.props.isMultiple && isHomePage && (\r\n                                <MenuItem\r\n                                    dense\r\n                                    onClick={() =>\r\n                                        this.props.toggleObjectInfoSidebar(true)\r\n                                    }\r\n                                >\r\n                                    <StyledListItemIcon>\r\n                                        <InfoOutlined />\r\n                                    </StyledListItemIcon>\r\n                                    <Typography variant=\"inherit\">\r\n                                        {t(\"fileManager.viewDetails\")}\r\n                                    </Typography>\r\n                                </MenuItem>\r\n                            )}\r\n\r\n                            {!this.props.isMultiple && isHomePage && (\r\n                                <Divider className={classes.divider} />\r\n                            )}\r\n\r\n                            {!this.props.isMultiple && isHomePage && (\r\n                                <div>\r\n                                    <MenuItem\r\n                                        dense\r\n                                        onClick={() =>\r\n                                            this.props.openRenameDialog()\r\n                                        }\r\n                                    >\r\n                                        <StyledListItemIcon>\r\n                                            <RenameIcon />\r\n                                        </StyledListItemIcon>\r\n                                        <Typography variant=\"inherit\">\r\n                                            {t(\"fileManager.rename\")}\r\n                                        </Typography>\r\n                                    </MenuItem>\r\n                                    {!this.props.search && (\r\n                                        <MenuItem\r\n                                            dense\r\n                                            onClick={() =>\r\n                                                this.props.openCopyDialog()\r\n                                            }\r\n                                        >\r\n                                            <StyledListItemIcon>\r\n                                                <FileCopyIcon />\r\n                                            </StyledListItemIcon>\r\n                                            <Typography variant=\"inherit\">\r\n                                                {t(\"fileManager.copy\")}\r\n                                            </Typography>\r\n                                        </MenuItem>\r\n                                    )}\r\n                                </div>\r\n                            )}\r\n                            {isHomePage && (\r\n                                <div>\r\n                                    {!this.props.search && (\r\n                                        <MenuItem\r\n                                            dense\r\n                                            onClick={() =>\r\n                                                this.props.openMoveDialog()\r\n                                            }\r\n                                        >\r\n                                            <StyledListItemIcon>\r\n                                                <MoveIcon />\r\n                                            </StyledListItemIcon>\r\n                                            <Typography variant=\"inherit\">\r\n                                                {t(\"fileManager.move\")}\r\n                                            </Typography>\r\n                                        </MenuItem>\r\n                                    )}\r\n\r\n                                    <Divider className={classes.divider} />\r\n                                    <MenuItem\r\n                                        dense\r\n                                        className={classes.propover}\r\n                                        onClick={() =>\r\n                                            this.props.openRemoveDialog()\r\n                                        }\r\n                                    >\r\n                                        <StyledListItemIcon>\r\n                                            <DeleteIcon />\r\n                                        </StyledListItemIcon>\r\n                                        <Typography variant=\"inherit\">\r\n                                            {t(\"fileManager.delete\")}\r\n                                        </Typography>\r\n                                    </MenuItem>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                </Menu>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nContextMenuCompoment.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    menuType: PropTypes.string.isRequired,\r\n};\r\n\r\nconst ContextMenu = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withRouter(withTranslation()(ContextMenuCompoment))));\r\n\r\nexport default ContextMenu;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport FolderIcon from \"@material-ui/icons/Folder\";\r\nimport classNames from \"classnames\";\r\nimport { sizeToString } from \"../../utils/index\";\r\nimport {\r\n    fade,\r\n    TableCell,\r\n    TableRow,\r\n    Typography,\r\n    withStyles,\r\n} from \"@material-ui/core\";\r\nimport TypeIcon from \"./TypeIcon\";\r\nimport pathHelper from \"../../utils/page\";\r\nimport statusHelper from \"../../utils/page\";\r\nimport { withRouter } from \"react-router\";\r\nimport KeyboardReturnIcon from \"@material-ui/icons/KeyboardReturn\";\r\nimport CheckCircleRoundedIcon from \"@material-ui/icons/CheckCircleRounded\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport { formatLocalTime } from \"../../utils/datetime\";\r\nimport FileName from \"./FileName\";\r\n\r\nconst styles = (theme) => ({\r\n    selected: {\r\n        \"&:hover\": {},\r\n        backgroundColor: fade(theme.palette.primary.main, 0.18),\r\n    },\r\n\r\n    selectedShared: {\r\n        \"&:hover\": {},\r\n        backgroundColor: fade(theme.palette.primary.main, 0.18),\r\n    },\r\n\r\n    notSelected: {\r\n        \"&:hover\": {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n    },\r\n    icon: {\r\n        verticalAlign: \"middle\",\r\n        marginRight: \"20px\",\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    tableIcon: {\r\n        marginRight: \"20px\",\r\n        verticalAlign: \"middle\",\r\n    },\r\n    folderNameSelected: {\r\n        color:\r\n            theme.palette.type === \"dark\" ? \"#fff\" : theme.palette.primary.dark,\r\n        fontWeight: \"500\",\r\n        userSelect: \"none\",\r\n    },\r\n    folderNameNotSelected: {\r\n        color: theme.palette.text.secondary,\r\n        userSelect: \"none\",\r\n    },\r\n    folderName: {\r\n        marginRight: \"20px\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n    },\r\n    hideAuto: {\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            display: \"none\",\r\n        },\r\n    },\r\n    tableRow: {\r\n        padding: \"10px 16px\",\r\n    },\r\n    checkIcon: {\r\n        color: theme.palette.primary.main,\r\n    },\r\n    active: {\r\n        backgroundColor: fade(theme.palette.primary.main, 0.1),\r\n    },\r\n});\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selected: state.explorer.selected,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = () => {\r\n    return {};\r\n};\r\n\r\nclass TableRowCompoment extends Component {\r\n    state = {};\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const isSelectedCurrent =\r\n            this.props.selected.findIndex((value) => {\r\n                return value === this.props.file;\r\n            }) !== -1;\r\n        const isSelectedNext =\r\n            nextProps.selected.findIndex((value) => {\r\n                return value === this.props.file;\r\n            }) !== -1;\r\n        if (\r\n            nextProps.selected !== this.props.selected &&\r\n            isSelectedCurrent === isSelectedNext\r\n        ) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const isShare = pathHelper.isSharePage(this.props.location.pathname);\r\n\r\n        let icon;\r\n        if (this.props.file.type === \"dir\") {\r\n            icon = <FolderIcon className={classes.icon} />;\r\n        } else if (this.props.file.type === \"up\") {\r\n            icon = <KeyboardReturnIcon className={classes.icon} />;\r\n        } else {\r\n            icon = (\r\n                <TypeIcon\r\n                    className={classes.tableIcon}\r\n                    fileName={this.props.file.name}\r\n                />\r\n            );\r\n        }\r\n        const isSelected =\r\n            this.props.selected.findIndex((value) => {\r\n                return value === this.props.file;\r\n            }) !== -1;\r\n        const isMobile = statusHelper.isMobile();\r\n\r\n        return (\r\n            <TableRow\r\n                ref={this.props.pref}\r\n                onContextMenu={this.props.contextMenu}\r\n                onClick={this.props.handleClick}\r\n                onDoubleClick={this.props.handleDoubleClick.bind(this)}\r\n                className={classNames({\r\n                    [classes.selected]: isSelected && !isShare,\r\n                    [classes.selectedShared]: isSelected && isShare,\r\n                    [classes.notSelected]: !isSelected,\r\n                    [classes.active]: this.props.isActive,\r\n                })}\r\n            >\r\n                <TableCell\r\n                    ref={this.props.dref}\r\n                    component=\"th\"\r\n                    scope=\"row\"\r\n                    className={classes.tableRow}\r\n                >\r\n                    <Typography\r\n                        variant=\"body2\"\r\n                        className={classNames(classes.folderName, {\r\n                            [classes.folderNameSelected]: isSelected,\r\n                            [classes.folderNameNotSelected]: !isSelected,\r\n                        })}\r\n                    >\r\n                        <div\r\n                            onClick={\r\n                                this.props.file.type !== \"up\"\r\n                                    ? this.props.onIconClick\r\n                                    : null\r\n                            }\r\n                        >\r\n                            {!isSelected && icon}\r\n                            {isSelected && (\r\n                                <Grow in={isSelected}>\r\n                                    <CheckCircleRoundedIcon\r\n                                        className={classNames(\r\n                                            classes.checkIcon,\r\n                                            classes.icon\r\n                                        )}\r\n                                    />\r\n                                </Grow>\r\n                            )}\r\n                        </div>\r\n                        <FileName name={this.props.file.name} />\r\n                    </Typography>\r\n                </TableCell>\r\n                <TableCell\r\n                    className={classNames(classes.hideAuto, classes.tableRow)}\r\n                >\r\n                    <Typography\r\n                        variant=\"body2\"\r\n                        className={classNames(classes.folderName, {\r\n                            [classes.folderNameSelected]: isSelected,\r\n                            [classes.folderNameNotSelected]: !isSelected,\r\n                        })}\r\n                    >\r\n                        {\" \"}\r\n                        {this.props.file.type !== \"dir\" &&\r\n                            this.props.file.type !== \"up\" &&\r\n                            sizeToString(this.props.file.size)}\r\n                    </Typography>\r\n                </TableCell>\r\n                <TableCell\r\n                    className={classNames(classes.hideAuto, classes.tableRow)}\r\n                >\r\n                    <Typography\r\n                        variant=\"body2\"\r\n                        className={classNames(classes.folderName, {\r\n                            [classes.folderNameSelected]: isSelected,\r\n                            [classes.folderNameNotSelected]: !isSelected,\r\n                        })}\r\n                    >\r\n                        {\" \"}\r\n                        {formatLocalTime(this.props.file.date)}\r\n                    </Typography>\r\n                </TableCell>\r\n            </TableRow>\r\n        );\r\n    }\r\n}\r\n\r\nTableRowCompoment.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    file: PropTypes.object.isRequired,\r\n};\r\n\r\nconst TableItem = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withRouter(TableRowCompoment)));\r\n\r\nexport default TableItem;\r\n","import React from \"react\";\r\nimport { useDrop } from \"react-dnd\";\r\nimport Folder from \"../Folder\";\r\nimport classNames from \"classnames\";\r\nimport TableItem from \"../TableRow\";\r\nexport default function FolderDropWarpper({\r\n    isListView,\r\n    folder,\r\n    onIconClick,\r\n    contextMenu,\r\n    handleClick,\r\n    handleDoubleClick,\r\n    className,\r\n    pref,\r\n}) {\r\n    const [{ canDrop, isOver }, drop] = useDrop({\r\n        accept: \"object\",\r\n        drop: () => ({ folder }),\r\n        collect: (monitor) => ({\r\n            isOver: monitor.isOver(),\r\n            canDrop: monitor.canDrop(),\r\n        }),\r\n    });\r\n    const isActive = canDrop && isOver;\r\n    if (!isListView) {\r\n        return (\r\n            <div ref={drop}>\r\n                <Folder\r\n                    folder={folder}\r\n                    onIconClick={onIconClick}\r\n                    isActive={isActive}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <TableItem\r\n            pref={pref}\r\n            dref={drop}\r\n            className={className}\r\n            onIconClick={onIconClick}\r\n            contextMenu={contextMenu}\r\n            handleClick={handleClick}\r\n            handleDoubleClick={handleDoubleClick}\r\n            file={folder}\r\n            isActive={isActive}\r\n        />\r\n    );\r\n}\r\n","import { useRef } from \"react\";\r\nimport { throttle } from \"lodash\";\r\n\r\nconst useDragScrolling = () => {\r\n    const isScrolling = useRef(false);\r\n    const target = document.querySelector(\"#explorer-container\");\r\n\r\n    const goDown = () => {\r\n        target.scrollTop += 10;\r\n\r\n        const { offsetHeight, scrollTop, scrollHeight } = target;\r\n        const isScrollEnd = offsetHeight + scrollTop >= scrollHeight;\r\n\r\n        if (isScrolling.current && !isScrollEnd) {\r\n            window.requestAnimationFrame(goDown);\r\n        }\r\n    };\r\n\r\n    const goUp = () => {\r\n        target.scrollTop -= 10;\r\n\r\n        if (isScrolling.current && target.scrollTop > 0) {\r\n            window.requestAnimationFrame(goUp);\r\n        }\r\n    };\r\n\r\n    const onDragOver = (event) => {\r\n        const isMouseOnTop = event.clientY < 100;\r\n        const isMouseOnDown = window.innerHeight - event.clientY < 100;\r\n\r\n        if (!isScrolling.current && (isMouseOnTop || isMouseOnDown)) {\r\n            isScrolling.current = true;\r\n\r\n            if (isMouseOnTop) {\r\n                window.requestAnimationFrame(goUp);\r\n            }\r\n\r\n            if (isMouseOnDown) {\r\n                window.requestAnimationFrame(goDown);\r\n            }\r\n        } else if (!isMouseOnTop && !isMouseOnDown) {\r\n            isScrolling.current = false;\r\n        }\r\n    };\r\n\r\n    const throttleOnDragOver = throttle(onDragOver, 300);\r\n\r\n    const addEventListenerForWindow = () => {\r\n        window.addEventListener(\"dragover\", throttleOnDragOver, false);\r\n    };\r\n\r\n    const removeEventListenerForWindow = () => {\r\n        window.removeEventListener(\"dragover\", throttleOnDragOver, false);\r\n        isScrolling.current = false;\r\n    };\r\n\r\n    return {\r\n        addEventListenerForWindow,\r\n        removeEventListenerForWindow,\r\n    };\r\n};\r\n\r\nexport default useDragScrolling;\r\n","import React, { useCallback, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport statusHelper from \"../../utils/page\";\r\nimport FileIcon from \"./FileIcon\";\r\nimport SmallIcon from \"./SmallIcon\";\r\nimport TableItem from \"./TableRow\";\r\nimport classNames from \"classnames\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { useDrag } from \"react-dnd\";\r\nimport { getEmptyImage } from \"react-dnd-html5-backend\";\r\nimport DropWarpper from \"./DnD/DropWarpper\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { pathBack } from \"../../utils\";\r\nimport {\r\n    changeContextMenu,\r\n    dragAndDrop,\r\n    navigateTo,\r\n    openLoadingDialog,\r\n    openPreview,\r\n    selectFile,\r\n    setSelectedTarget,\r\n    toggleSnackbar,\r\n} from \"../../redux/explorer\";\r\nimport useDragScrolling from \"./DnD/Scrolling\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    container: {\r\n        padding: \"7px\",\r\n    },\r\n    fixFlex: {\r\n        minWidth: 0,\r\n    },\r\n    dragging: {\r\n        opacity: 0.4,\r\n    },\r\n}));\r\n\r\nexport default function ObjectIcon(props) {\r\n    const path = useSelector((state) => state.navigator.path);\r\n    const shareInfo = useSelector((state) => state.viewUpdate.shareInfo);\r\n    const selected = useSelector((state) => state.explorer.selected);\r\n    const viewMethod = useSelector(\r\n        (state) => state.viewUpdate.explorerViewMethod\r\n    );\r\n    const navigatorPath = useSelector((state) => state.navigator.path);\r\n    const location = useLocation();\r\n\r\n    const dispatch = useDispatch();\r\n    const ContextMenu = useCallback(\r\n        (type, open) => dispatch(changeContextMenu(type, open)),\r\n        [dispatch]\r\n    );\r\n    const SetSelectedTarget = useCallback(\r\n        (targets) => dispatch(setSelectedTarget(targets)),\r\n        [dispatch]\r\n    );\r\n\r\n    const NavitateTo = useCallback((targets) => dispatch(navigateTo(targets)), [\r\n        dispatch,\r\n    ]);\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n    const DragAndDrop = useCallback(\r\n        (source, target) => dispatch(dragAndDrop(source, target)),\r\n        [dispatch]\r\n    );\r\n    const OpenLoadingDialog = useCallback(\r\n        (text) => dispatch(openLoadingDialog(text)),\r\n        [dispatch]\r\n    );\r\n    const OpenPreview = useCallback((share) => dispatch(openPreview(share)), [\r\n        dispatch,\r\n    ]);\r\n    const StartDownload = useCallback(\r\n        (share, file) => dispatch(StartDownload(share, file)),\r\n        [dispatch]\r\n    );\r\n\r\n    const classes = useStyles();\r\n\r\n    const contextMenu = (e) => {\r\n        if (props.file.type === \"up\") {\r\n            return;\r\n        }\r\n        e.preventDefault();\r\n        if (\r\n            selected.findIndex((value) => {\r\n                return value === props.file;\r\n            }) === -1\r\n        ) {\r\n            SetSelectedTarget([props.file]);\r\n        }\r\n        ContextMenu(\"file\", true);\r\n    };\r\n\r\n    const SelectFile = (e) => {\r\n        dispatch(selectFile(props.file, e, props.index));\r\n    };\r\n    const enterFolder = () => {\r\n        NavitateTo(\r\n            path === \"/\" ? path + props.file.name : path + \"/\" + props.file.name\r\n        );\r\n    };\r\n    const handleClick = (e) => {\r\n        if (props.file.type === \"up\") {\r\n            NavitateTo(pathBack(navigatorPath));\r\n            return;\r\n        }\r\n\r\n        SelectFile(e);\r\n        if (\r\n            props.file.type === \"dir\" &&\r\n            !e.ctrlKey &&\r\n            !e.metaKey &&\r\n            !e.shiftKey\r\n        ) {\r\n            enterFolder();\r\n        }\r\n    };\r\n\r\n    const handleDoubleClick = () => {\r\n        if (props.file.type === \"up\") {\r\n            return;\r\n        }\r\n        if (props.file.type === \"dir\") {\r\n            enterFolder();\r\n            return;\r\n        }\r\n\r\n        OpenPreview(shareInfo);\r\n    };\r\n\r\n    const handleIconClick = (e) => {\r\n        e.stopPropagation();\r\n        if (!e.shiftKey) {\r\n            e.ctrlKey = true;\r\n        }\r\n        SelectFile(e);\r\n        return false;\r\n    };\r\n\r\n    const {\r\n        addEventListenerForWindow,\r\n        removeEventListenerForWindow,\r\n    } = useDragScrolling();\r\n\r\n    const [{ isDragging }, drag, preview] = useDrag({\r\n        item: {\r\n            object: props.file,\r\n            type: \"object\",\r\n            selected: [...selected],\r\n            viewMethod: viewMethod,\r\n        },\r\n        begin: () => {\r\n            addEventListenerForWindow();\r\n        },\r\n        end: (item, monitor) => {\r\n            removeEventListenerForWindow();\r\n            const dropResult = monitor.getDropResult();\r\n            if (item && dropResult) {\r\n                if (dropResult.folder) {\r\n                    if (\r\n                        item.object.id !== dropResult.folder.id ||\r\n                        item.object.type !== dropResult.folder.type\r\n                    ) {\r\n                        DragAndDrop(item.object, dropResult.folder);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        canDrag: () => {\r\n            return (\r\n                !statusHelper.isMobile() &&\r\n                statusHelper.isHomePage(location.pathname)\r\n            );\r\n        },\r\n        collect: (monitor) => ({\r\n            isDragging: monitor.isDragging(),\r\n        }),\r\n    });\r\n\r\n    useEffect(() => {\r\n        preview(getEmptyImage(), { captureDraggingState: true });\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    if (viewMethod === \"list\") {\r\n        return (\r\n            <>\r\n                {props.file.type === \"dir\" && (\r\n                    <DropWarpper\r\n                        isListView={true}\r\n                        pref={drag}\r\n                        className={classNames(classes.container, {\r\n                            [classes.dragging]: isDragging,\r\n                        })}\r\n                        onIconClick={handleIconClick}\r\n                        contextMenu={contextMenu}\r\n                        handleClick={handleClick}\r\n                        handleDoubleClick={handleDoubleClick.bind(this)}\r\n                        folder={props.file}\r\n                    />\r\n                )}\r\n                {props.file.type !== \"dir\" && (\r\n                    <TableItem\r\n                        pref={drag}\r\n                        className={classNames(classes.container, {\r\n                            [classes.dragging]: isDragging,\r\n                        })}\r\n                        onIconClick={handleIconClick}\r\n                        contextMenu={contextMenu}\r\n                        handleClick={handleClick}\r\n                        handleDoubleClick={handleDoubleClick.bind(this)}\r\n                        file={props.file}\r\n                    />\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div\r\n            ref={drag}\r\n            className={classNames({\r\n                [classes.container]: viewMethod !== \"list\",\r\n                [classes.dragging]: isDragging,\r\n            })}\r\n        >\r\n            <div\r\n                className={classes.fixFlex}\r\n                onContextMenu={contextMenu}\r\n                onClick={handleClick}\r\n                onDoubleClick={handleDoubleClick.bind(this)}\r\n            >\r\n                {props.file.type === \"dir\" && viewMethod !== \"list\" && (\r\n                    <DropWarpper\r\n                        isListView={false}\r\n                        onIconClick={handleIconClick}\r\n                        folder={props.file}\r\n                    />\r\n                )}\r\n                {props.file.type === \"file\" && viewMethod === \"icon\" && (\r\n                    <FileIcon\r\n                        onIconClick={handleIconClick}\r\n                        ref={drag}\r\n                        file={props.file}\r\n                    />\r\n                )}\r\n                {props.file.type === \"file\" && viewMethod === \"smallIcon\" && (\r\n                    <SmallIcon\r\n                        onIconClick={handleIconClick}\r\n                        file={props.file}\r\n                    />\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import {\r\n    CircularProgress,\r\n    Grid,\r\n    Paper,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport classNames from \"classnames\";\r\nimport React, { useCallback, useEffect, useMemo } from \"react\";\r\nimport { configure, GlobalHotKeys } from \"react-hotkeys\";\r\nimport explorer, {\r\n    changeContextMenu,\r\n    openRemoveDialog,\r\n    setSelectedTarget,\r\n} from \"../../redux/explorer\";\r\nimport { isMac } from \"../../utils\";\r\nimport pathHelper from \"../../utils/page\";\r\nimport ContextMenu from \"./ContextMenu\";\r\nimport ImgPreivew from \"./ImgPreview\";\r\nimport ObjectIcon from \"./ObjectIcon\";\r\nimport Nothing from \"../Placeholder/Nothing\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useLocation } from \"react-router\";\r\nimport { usePagination } from \"../../hooks/pagination\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: \"center\",\r\n        color: theme.palette.text.secondary,\r\n        margin: \"10px\",\r\n    },\r\n    root: {\r\n        padding: \"10px\",\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            height: \"calc(100vh - 113px)\",\r\n        },\r\n    },\r\n    rootTable: {\r\n        padding: \"0px\",\r\n        backgroundColor: theme.palette.background.paper.white,\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            height: \"calc(100vh - 113px)\",\r\n        },\r\n    },\r\n    typeHeader: {\r\n        margin: \"10px 25px\",\r\n        color: \"#6b6b6b\",\r\n        fontWeight: \"500\",\r\n    },\r\n    loading: {\r\n        justifyContent: \"center\",\r\n        display: \"flex\",\r\n        marginTop: \"40px\",\r\n    },\r\n    errorBox: {\r\n        padding: theme.spacing(4),\r\n    },\r\n    errorMsg: {\r\n        marginTop: \"10px\",\r\n    },\r\n    hideAuto: {\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            display: \"none\",\r\n        },\r\n    },\r\n    flexFix: {\r\n        minWidth: 0,\r\n    },\r\n    upButton: {\r\n        marginLeft: \"20px\",\r\n        marginTop: \"10px\",\r\n        marginBottom: \"10px\",\r\n    },\r\n    clickAway: {\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n    },\r\n    rootShare: {\r\n        height: \"100%\",\r\n        minHeight: 500,\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: \"rect(0 0 0 0)\",\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: \"hidden\",\r\n        padding: 0,\r\n        position: \"absolute\",\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n    gridContainer: {\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            gridTemplateColumns:\r\n                \"repeat(auto-fill,minmax(180px,1fr))!important\",\r\n        },\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            gridTemplateColumns:\r\n                \"repeat(auto-fill,minmax(220px,1fr))!important\",\r\n        },\r\n        display: \"grid!important\",\r\n    },\r\n    gridItem: {\r\n        flex: \"1 1 220px!important\",\r\n    },\r\n}));\r\n\r\nconst keyMap = {\r\n    DELETE_FILE: \"del\",\r\n    SELECT_ALL_SHOWED: `${isMac() ? \"command\" : \"ctrl\"}+a`,\r\n    SELECT_ALL: `${isMac() ? \"command\" : \"ctrl\"}+shift+a`,\r\n    DESELECT_ALL: \"esc\",\r\n};\r\n\r\nexport default function Explorer({ share }) {\r\n    const { t } = useTranslation(\"application\", { keyPrefix: \"fileManager\" });\r\n    const location = useLocation();\r\n    const dispatch = useDispatch();\r\n    const selected = useSelector((state) => state.explorer.selected);\r\n    const search = useSelector((state) => state.explorer.search);\r\n    const loading = useSelector((state) => state.viewUpdate.navigatorLoading);\r\n    const path = useSelector((state) => state.navigator.path);\r\n    const sortMethod = useSelector((state) => state.viewUpdate.sortMethod);\r\n    const navigatorErrorMsg = useSelector(\r\n        (state) => state.viewUpdate.navigatorErrorMsg\r\n    );\r\n    const navigatorError = useSelector(\r\n        (state) => state.viewUpdate.navigatorError\r\n    );\r\n    const viewMethod = useSelector(\r\n        (state) => state.viewUpdate.explorerViewMethod\r\n    );\r\n\r\n    const OpenRemoveDialog = useCallback(() => dispatch(openRemoveDialog()), [\r\n        dispatch,\r\n    ]);\r\n    const SetSelectedTarget = useCallback(\r\n        (targets) => dispatch(setSelectedTarget(targets)),\r\n        [dispatch]\r\n    );\r\n    const ChangeContextMenu = useCallback(\r\n        (type, open) => dispatch(changeContextMenu(type, open)),\r\n        [dispatch]\r\n    );\r\n    const ChangeSortMethod = useCallback(\r\n        (method) => dispatch(explorer.actions.changeSortMethod(method)),\r\n        [dispatch]\r\n    );\r\n    const SelectAll = useCallback(\r\n        () => dispatch(explorer.actions.selectAll()),\r\n        [dispatch]\r\n    );\r\n\r\n    const { dirList, fileList, startIndex } = usePagination();\r\n\r\n    const handlers = {\r\n        DELETE_FILE: () => {\r\n            if (selected.length > 0 && !share) {\r\n                OpenRemoveDialog();\r\n            }\r\n        },\r\n        SELECT_ALL_SHOWED: (e) => {\r\n            e.preventDefault();\r\n            if (selected.length >= dirList.length + fileList.length) {\r\n                SetSelectedTarget([]);\r\n            } else {\r\n                SetSelectedTarget([...dirList, ...fileList]);\r\n            }\r\n        },\r\n        SELECT_ALL: (e) => {\r\n            e.preventDefault();\r\n            SelectAll();\r\n        },\r\n        DESELECT_ALL: (e) => {\r\n            e.preventDefault();\r\n            SetSelectedTarget([]);\r\n        },\r\n    };\r\n\r\n    useEffect(\r\n        () =>\r\n            configure({\r\n                ignoreTags: [\"input\", \"select\", \"textarea\"],\r\n            }),\r\n        []\r\n    );\r\n\r\n    const contextMenu = (e) => {\r\n        e.preventDefault();\r\n        if (!search && !pathHelper.isSharePage(location.pathname)) {\r\n            if (!loading) {\r\n                ChangeContextMenu(\"empty\", true);\r\n            }\r\n        }\r\n    };\r\n\r\n    const ClickAway = (e) => {\r\n        const element = e.target;\r\n        if (element.dataset.clickaway) {\r\n            SetSelectedTarget([]);\r\n        }\r\n    };\r\n\r\n    const classes = useStyles();\r\n    const isHomePage = pathHelper.isHomePage(location.pathname);\r\n\r\n    const showView =\r\n        !loading && (dirList.length !== 0 || fileList.length !== 0);\r\n\r\n    const listView = useMemo(\r\n        () => (\r\n            <Table className={classes.table}>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>\r\n                            <TableSortLabel\r\n                                active={\r\n                                    sortMethod === \"namePos\" ||\r\n                                    sortMethod === \"nameRev\"\r\n                                }\r\n                                direction={\r\n                                    sortMethod === \"namePos\" ? \"asc\" : \"des\"\r\n                                }\r\n                                onClick={() => {\r\n                                    ChangeSortMethod(\r\n                                        sortMethod === \"namePos\"\r\n                                            ? \"nameRev\"\r\n                                            : \"namePos\"\r\n                                    );\r\n                                }}\r\n                            >\r\n                                {t(\"name\")}\r\n                                {sortMethod === \"namePos\" ||\r\n                                sortMethod === \"nameRev\" ? (\r\n                                    <span className={classes.visuallyHidden}>\r\n                                        {sortMethod === \"nameRev\"\r\n                                            ? \"sorted descending\"\r\n                                            : \"sorted ascending\"}\r\n                                    </span>\r\n                                ) : null}\r\n                            </TableSortLabel>\r\n                        </TableCell>\r\n                        <TableCell className={classes.hideAuto}>\r\n                            <TableSortLabel\r\n                                active={\r\n                                    sortMethod === \"sizePos\" ||\r\n                                    sortMethod === \"sizeRes\"\r\n                                }\r\n                                direction={\r\n                                    sortMethod === \"sizePos\" ? \"asc\" : \"des\"\r\n                                }\r\n                                onClick={() => {\r\n                                    ChangeSortMethod(\r\n                                        sortMethod === \"sizePos\"\r\n                                            ? \"sizeRes\"\r\n                                            : \"sizePos\"\r\n                                    );\r\n                                }}\r\n                            >\r\n                                {t(\"size\")}\r\n                                {sortMethod === \"sizePos\" ||\r\n                                sortMethod === \"sizeRes\" ? (\r\n                                    <span className={classes.visuallyHidden}>\r\n                                        {sortMethod === \"sizeRes\"\r\n                                            ? \"sorted descending\"\r\n                                            : \"sorted ascending\"}\r\n                                    </span>\r\n                                ) : null}\r\n                            </TableSortLabel>\r\n                        </TableCell>\r\n                        <TableCell className={classes.hideAuto}>\r\n                            <TableSortLabel\r\n                                active={\r\n                                    sortMethod === \"modifyTimePos\" ||\r\n                                    sortMethod === \"modifyTimeRev\"\r\n                                }\r\n                                direction={\r\n                                    sortMethod === \"modifyTimePos\"\r\n                                        ? \"asc\"\r\n                                        : \"des\"\r\n                                }\r\n                                onClick={() => {\r\n                                    ChangeSortMethod(\r\n                                        sortMethod === \"modifyTimePos\"\r\n                                            ? \"modifyTimeRev\"\r\n                                            : \"modifyTimePos\"\r\n                                    );\r\n                                }}\r\n                            >\r\n                                {t(\"lastModified\")}\r\n                                {sortMethod === \"modifyTimePos\" ||\r\n                                sortMethod === \"modifyTimeRev\" ? (\r\n                                    <span className={classes.visuallyHidden}>\r\n                                        {sortMethod === \"sizeRes\"\r\n                                            ? \"sorted descending\"\r\n                                            : \"sorted ascending\"}\r\n                                    </span>\r\n                                ) : null}\r\n                            </TableSortLabel>\r\n                        </TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {pathHelper.isMobile() && path !== \"/\" && (\r\n                        <ObjectIcon\r\n                            file={{\r\n                                type: \"up\",\r\n                                name: t(\"backToParentFolder\"),\r\n                            }}\r\n                        />\r\n                    )}\r\n                    {dirList.map((value, index) => (\r\n                        <ObjectIcon\r\n                            key={value.id}\r\n                            file={value}\r\n                            index={startIndex + index}\r\n                        />\r\n                    ))}\r\n                    {fileList.map((value, index) => (\r\n                        <ObjectIcon\r\n                            key={value.id}\r\n                            file={value}\r\n                            index={startIndex + dirList.length + index}\r\n                        />\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        ),\r\n        [dirList, fileList, path, sortMethod, ChangeSortMethod, classes]\r\n    );\r\n\r\n    const normalView = useMemo(\r\n        () => (\r\n            <div className={classes.flexFix}>\r\n                {dirList.length !== 0 && (\r\n                    <>\r\n                        <Typography\r\n                            data-clickAway={\"true\"}\r\n                            variant=\"body2\"\r\n                            className={classes.typeHeader}\r\n                        >\r\n                            {t(\"folders\")}\r\n                        </Typography>\r\n                        <Grid\r\n                            data-clickAway={\"true\"}\r\n                            container\r\n                            spacing={0}\r\n                            alignItems=\"flex-start\"\r\n                            className={classes.gridContainer}\r\n                        >\r\n                            {dirList.map((value, index) => (\r\n                                <Grid\r\n                                    key={value.id}\r\n                                    item\r\n                                    className={classes.gridItem}\r\n                                >\r\n                                    <ObjectIcon\r\n                                        key={value.id}\r\n                                        file={value}\r\n                                        index={startIndex + index}\r\n                                    />\r\n                                </Grid>\r\n                            ))}\r\n                        </Grid>\r\n                    </>\r\n                )}\r\n                {fileList.length !== 0 && (\r\n                    <>\r\n                        <Typography\r\n                            data-clickAway={\"true\"}\r\n                            variant=\"body2\"\r\n                            className={classes.typeHeader}\r\n                        >\r\n                            {t(\"files\")}\r\n                        </Typography>\r\n                        <Grid\r\n                            data-clickAway={\"true\"}\r\n                            container\r\n                            spacing={0}\r\n                            alignItems=\"flex-start\"\r\n                            className={classes.gridContainer}\r\n                        >\r\n                            {fileList.map((value, index) => (\r\n                                <Grid\r\n                                    className={classes.gridItem}\r\n                                    key={value.id}\r\n                                    item\r\n                                >\r\n                                    <ObjectIcon\r\n                                        key={value.id}\r\n                                        index={\r\n                                            startIndex + dirList.length + index\r\n                                        }\r\n                                        file={value}\r\n                                    />\r\n                                </Grid>\r\n                            ))}\r\n                        </Grid>\r\n                    </>\r\n                )}\r\n            </div>\r\n        ),\r\n        [dirList, fileList, classes]\r\n    );\r\n\r\n    const view = viewMethod === \"list\" ? listView : normalView;\r\n\r\n    return (\r\n        <div\r\n            onContextMenu={contextMenu}\r\n            onClick={ClickAway}\r\n            className={classNames(\r\n                {\r\n                    [classes.root]: viewMethod !== \"list\",\r\n                    [classes.rootTable]: viewMethod === \"list\",\r\n                    [classes.rootShare]: share,\r\n                },\r\n                classes.button\r\n            )}\r\n        >\r\n            <GlobalHotKeys handlers={handlers} allowChanges keyMap={keyMap} />\r\n            <ContextMenu share={share} />\r\n            <ImgPreivew />\r\n            {navigatorError && (\r\n                <Paper elevation={1} className={classes.errorBox}>\r\n                    <Typography variant=\"h5\" component=\"h3\">\r\n                        {t(\"listError\")}\r\n                    </Typography>\r\n                    <Typography\r\n                        color={\"textSecondary\"}\r\n                        className={classes.errorMsg}\r\n                    >\r\n                        {navigatorErrorMsg.message}\r\n                    </Typography>\r\n                </Paper>\r\n            )}\r\n\r\n            {loading && !navigatorError && (\r\n                <div className={classes.loading}>\r\n                    <CircularProgress />\r\n                </div>\r\n            )}\r\n\r\n            {!search &&\r\n                isHomePage &&\r\n                dirList.length === 0 &&\r\n                fileList.length === 0 &&\r\n                !loading &&\r\n                !navigatorError && (\r\n                    <Nothing\r\n                        primary={t(\"dropFileHere\")}\r\n                        secondary={t(\"orClickUploadButton\")}\r\n                    />\r\n                )}\r\n            {((search &&\r\n                dirList.length === 0 &&\r\n                fileList.length === 0 &&\r\n                !loading &&\r\n                !navigatorError) ||\r\n                (dirList.length === 0 &&\r\n                    fileList.length === 0 &&\r\n                    !loading &&\r\n                    !navigatorError &&\r\n                    !isHomePage)) && <Nothing primary={t(\"nothingFound\")} />}\r\n            {showView && view}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst paginate = (array, page_size, page_number) =>\r\n    page_size === -1\r\n        ? array\r\n        : array.slice((page_number - 1) * page_size, page_number * page_size);\r\n\r\nexport function usePagination() {\r\n    const files = useSelector((state) => state.explorer.fileList);\r\n    const folders = useSelector((state) => state.explorer.dirList);\r\n    const pagination = useSelector((state) => state.viewUpdate.pagination);\r\n\r\n    const { dirList, fileList, startIndex } = useMemo(() => {\r\n        const all = paginate(\r\n            [...folders, ...files],\r\n            pagination.size,\r\n            pagination.page\r\n        );\r\n        const dirList = [];\r\n        const fileList = [];\r\n        all.forEach((v) =>\r\n            v.type === \"dir\" ? dirList.push(v) : fileList.push(v)\r\n        );\r\n        const startIndex = pagination.size * (pagination.page - 1);\r\n        return { dirList, fileList, startIndex };\r\n    }, [folders, files, pagination]);\r\n    return { dirList, fileList, startIndex };\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { useDrop } from \"react-dnd\";\r\nimport classNames from \"classnames\";\r\nimport MoreIcon from \"@material-ui/icons/MoreHoriz\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    expandMore: {\r\n        color: \"#8d8d8d\",\r\n    },\r\n    active: {\r\n        boxShadow: \"0 0 0 2px \" + theme.palette.primary.light,\r\n    },\r\n    button: {\r\n        textTransform: \"none\",\r\n    },\r\n}));\r\n\r\nexport default function PathButton(props) {\r\n    const inputRef = React.useRef(null);\r\n\r\n    const [{ canDrop, isOver }, drop] = useDrop({\r\n        accept: \"object\",\r\n        drop: () => {\r\n            if (props.more) {\r\n                inputRef.current.click();\r\n            } else {\r\n                return {\r\n                    folder: {\r\n                        id: -1,\r\n                        path: props.path,\r\n                        name: props.folder === \"/\" ? \"\" : props.folder,\r\n                    },\r\n                };\r\n            }\r\n        },\r\n        collect: (monitor) => ({\r\n            isOver: monitor.isOver(),\r\n            canDrop: monitor.canDrop(),\r\n        }),\r\n    });\r\n\r\n    const isActive = canDrop && isOver;\r\n\r\n    useEffect(() => {\r\n        if (props.more && isActive) {\r\n            inputRef.current.click();\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [isActive]);\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <span onClick={props.onClick} ref={inputRef}>\r\n            <Button\r\n                ref={drop}\r\n                className={classNames(\r\n                    {\r\n                        [classes.active]: isActive,\r\n                    },\r\n                    classes.button\r\n                )}\r\n                component=\"span\"\r\n                title={props.title}\r\n            >\r\n                {props.more && <MoreIcon />}\r\n                {!props.more && (\r\n                    <>\r\n                        {props.folder}\r\n                        {props.last && (\r\n                            <ExpandMore className={classes.expandMore} />\r\n                        )}\r\n                    </>\r\n                )}\r\n            </Button>\r\n        </span>\r\n    );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport FolderIcon from \"@material-ui/icons/Folder\";\r\nimport { MenuItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\r\nimport { useDrop } from \"react-dnd\";\r\nimport classNames from \"classnames\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    active: {\r\n        border: \"2px solid \" + theme.palette.primary.light,\r\n    },\r\n}));\r\n\r\nexport default function DropDownItem(props) {\r\n    const [{ canDrop, isOver }, drop] = useDrop({\r\n        accept: \"object\",\r\n        drop: () => {\r\n            console.log({\r\n                folder: {\r\n                    id: -1,\r\n                    path: props.path,\r\n                    name: props.folder === \"/\" ? \"\" : props.folder,\r\n                },\r\n            });\r\n        },\r\n        collect: (monitor) => ({\r\n            isOver: monitor.isOver(),\r\n            canDrop: monitor.canDrop(),\r\n        }),\r\n    });\r\n\r\n    const isActive = canDrop && isOver;\r\n\r\n    useEffect(() => {\r\n        props.setActiveStatus(props.id, isActive);\r\n        // eslint-disable-next-line\r\n    }, [isActive]);\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <MenuItem\r\n            ref={drop}\r\n            className={classNames({\r\n                [classes.active]: isActive,\r\n            })}\r\n            onClick={(e) => props.navigateTo(e, props.id)}\r\n        >\r\n            <ListItemIcon>\r\n                <FolderIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={props.folder} />\r\n        </MenuItem>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport DropDownItem from \"./DropDownItem\";\r\n\r\nexport default function DropDown(props) {\r\n    let timer;\r\n    let first = props.folders.length;\r\n    const status = [];\r\n    for (let index = 0; index < props.folders.length; index++) {\r\n        status[index] = false;\r\n    }\r\n\r\n    const setActiveStatus = (id, value) => {\r\n        status[id] = value;\r\n        if (value) {\r\n            clearTimeout(timer);\r\n        } else {\r\n            let shouldClose = true;\r\n            status.forEach((element) => {\r\n                if (element) {\r\n                    shouldClose = false;\r\n                }\r\n            });\r\n            if (shouldClose) {\r\n                if (first <= 0) {\r\n                    timer = setTimeout(() => {\r\n                        props.onClose();\r\n                    }, 100);\r\n                } else {\r\n                    first--;\r\n                }\r\n            }\r\n        }\r\n        console.log(status);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {props.folders.map((folder, id) => (\r\n                <DropDownItem\r\n                    key={id}\r\n                    path={\"/\" + props.folders.slice(0, id).join(\"/\")}\r\n                    navigateTo={props.navigateTo}\r\n                    id={id}\r\n                    setActiveStatus={setActiveStatus}\r\n                    folder={folder}\r\n                />\r\n            ))}\r\n        </>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport RightIcon from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport NewFolderIcon from \"@material-ui/icons/CreateNewFolder\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\nimport explorer, {\r\n    drawerToggleAction,\r\n    navigateTo,\r\n    navigateUp,\r\n    openCompressDialog,\r\n    openCreateFileDialog,\r\n    openCreateFolderDialog,\r\n    openShareDialog,\r\n    refreshFileList,\r\n    setNavigatorError,\r\n    setNavigatorLoadingStatus,\r\n    setSelectedTarget,\r\n} from \"../../../redux/explorer\";\r\nimport { fixUrlHash, setGetParameter } from \"../../../utils/index\";\r\nimport {\r\n    Divider,\r\n    ListItemIcon,\r\n    Menu,\r\n    MenuItem,\r\n    withStyles,\r\n} from \"@material-ui/core\";\r\nimport PathButton from \"./PathButton\";\r\nimport DropDown from \"./DropDown\";\r\nimport pathHelper from \"../../../utils/page\";\r\nimport classNames from \"classnames\";\r\nimport Auth from \"../../../middleware/Auth\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { Archive } from \"@material-ui/icons\";\r\nimport { FilePlus } from \"mdi-material-ui\";\r\nimport SubActions from \"./SubActions\";\r\nimport { setCurrentPolicy } from \"../../../redux/explorer/action\";\r\nimport { list } from \"../../../services/navigate\";\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        path: state.navigator.path,\r\n        refresh: state.navigator.refresh,\r\n        drawerDesktopOpen: state.viewUpdate.open,\r\n        viewMethod: state.viewUpdate.explorerViewMethod,\r\n        search: state.explorer.search,\r\n        sortMethod: state.viewUpdate.sortMethod,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        navigateToPath: (path) => {\r\n            dispatch(navigateTo(path));\r\n        },\r\n        navigateUp: () => {\r\n            dispatch(navigateUp());\r\n        },\r\n        setNavigatorError: (status, msg) => {\r\n            dispatch(setNavigatorError(status, msg));\r\n        },\r\n        updateFileList: (list) => {\r\n            dispatch(explorer.actions.updateFileList(list));\r\n        },\r\n        setNavigatorLoadingStatus: (status) => {\r\n            dispatch(setNavigatorLoadingStatus(status));\r\n        },\r\n        refreshFileList: () => {\r\n            dispatch(refreshFileList());\r\n        },\r\n        setSelectedTarget: (target) => {\r\n            dispatch(setSelectedTarget(target));\r\n        },\r\n        openCreateFolderDialog: () => {\r\n            dispatch(openCreateFolderDialog());\r\n        },\r\n        openCreateFileDialog: () => {\r\n            dispatch(openCreateFileDialog());\r\n        },\r\n        openShareDialog: () => {\r\n            dispatch(openShareDialog());\r\n        },\r\n        handleDesktopToggle: (open) => {\r\n            dispatch(drawerToggleAction(open));\r\n        },\r\n        openCompressDialog: () => {\r\n            dispatch(openCompressDialog());\r\n        },\r\n        setCurrentPolicy: (policy) => {\r\n            dispatch(setCurrentPolicy(policy));\r\n        },\r\n    };\r\n};\r\n\r\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\r\n\r\nconst styles = (theme) => ({\r\n    container: {\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            display: \"none\",\r\n        },\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    navigatorContainer: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    nav: {\r\n        height: \"48px\",\r\n        padding: \"5px 15px\",\r\n        display: \"flex\",\r\n    },\r\n    optionContainer: {\r\n        paddingTop: \"6px\",\r\n        marginRight: \"10px\",\r\n    },\r\n    rightIcon: {\r\n        marginTop: \"6px\",\r\n        verticalAlign: \"top\",\r\n        color: \"#868686\",\r\n    },\r\n    expandMore: {\r\n        color: \"#8d8d8d\",\r\n    },\r\n    roundBorder: {\r\n        borderRadius: \"4px 4px 0 0\",\r\n    },\r\n});\r\n\r\nclass NavigatorComponent extends Component {\r\n    search = undefined;\r\n    currentID = 0;\r\n\r\n    state = {\r\n        hidden: false,\r\n        hiddenFolders: [],\r\n        folders: [],\r\n        anchorEl: null,\r\n        hiddenMode: false,\r\n        anchorHidden: null,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.element = React.createRef();\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const url = new URL(fixUrlHash(window.location.href));\r\n        const c = url.searchParams.get(\"path\");\r\n        this.renderPath(c === null ? \"/\" : c);\r\n\r\n        if (!this.props.isShare) {\r\n            // 如果是在个人文件管理页，首次加载时打开侧边栏\r\n            this.props.handleDesktopToggle(true);\r\n        }\r\n\r\n        // 后退操作时重新导航\r\n        window.onpopstate = () => {\r\n            const url = new URL(fixUrlHash(window.location.href));\r\n            const c = url.searchParams.get(\"path\");\r\n            if (c !== null) {\r\n                this.props.navigateToPath(c);\r\n            }\r\n        };\r\n    };\r\n\r\n    renderPath = (path = null) => {\r\n        this.props.setNavigatorError(false, null);\r\n        this.setState({\r\n            folders:\r\n                path !== null\r\n                    ? path.substr(1).split(\"/\")\r\n                    : this.props.path.substr(1).split(\"/\"),\r\n        });\r\n        const newPath = path !== null ? path : this.props.path;\r\n        list(\r\n            newPath,\r\n            this.props.share,\r\n            this.search ? this.search.keywords : \"\",\r\n            this.search ? this.search.searchPath : \"\"\r\n        )\r\n            .then((response) => {\r\n                this.currentID = response.data.parent;\r\n                this.props.updateFileList(response.data.objects);\r\n                this.props.setNavigatorLoadingStatus(false);\r\n                if (!this.search) {\r\n                    setGetParameter(\"path\", encodeURIComponent(newPath));\r\n                }\r\n                if (response.data.policy) {\r\n                    this.props.setCurrentPolicy({\r\n                        id: response.data.policy.id,\r\n                        name: response.data.policy.name,\r\n                        type: response.data.policy.type,\r\n                        maxSize: response.data.policy.max_size,\r\n                        allowedSuffix: response.data.policy.file_type,\r\n                    });\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                this.props.setNavigatorError(true, error);\r\n            });\r\n\r\n        this.checkOverFlow(true);\r\n    };\r\n\r\n    redresh = (path) => {\r\n        this.props.setNavigatorLoadingStatus(true);\r\n        this.props.setNavigatorError(false, \"error\");\r\n        this.renderPath(path);\r\n    };\r\n\r\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\r\n        if (this.props.search !== nextProps.search) {\r\n            this.search = nextProps.search;\r\n        }\r\n        if (this.props.path !== nextProps.path) {\r\n            this.renderPath(nextProps.path);\r\n        }\r\n        if (this.props.refresh !== nextProps.refresh) {\r\n            this.redresh(nextProps.path);\r\n        }\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        this.props.updateFileList([]);\r\n    }\r\n\r\n    componentDidUpdate = (prevProps, prevStates) => {\r\n        if (this.state.folders !== prevStates.folders) {\r\n            this.checkOverFlow(true);\r\n        }\r\n        if (this.props.drawerDesktopOpen !== prevProps.drawerDesktopOpen) {\r\n            delay(500).then(() => this.checkOverFlow());\r\n        }\r\n    };\r\n\r\n    checkOverFlow = (force) => {\r\n        if (this.overflowInitLock && !force) {\r\n            return;\r\n        }\r\n        if (this.element.current !== null) {\r\n            const hasOverflowingChildren =\r\n                this.element.current.offsetHeight <\r\n                    this.element.current.scrollHeight ||\r\n                this.element.current.offsetWidth <\r\n                    this.element.current.scrollWidth;\r\n            if (hasOverflowingChildren) {\r\n                this.overflowInitLock = true;\r\n                this.setState({ hiddenMode: true });\r\n            }\r\n            if (!hasOverflowingChildren && this.state.hiddenMode) {\r\n                this.setState({ hiddenMode: false });\r\n            }\r\n        }\r\n    };\r\n\r\n    navigateTo = (event, id) => {\r\n        if (id === this.state.folders.length - 1) {\r\n            //最后一个路径\r\n            this.setState({ anchorEl: event.currentTarget });\r\n        } else if (\r\n            id === -1 &&\r\n            this.state.folders.length === 1 &&\r\n            this.state.folders[0] === \"\"\r\n        ) {\r\n            this.props.refreshFileList();\r\n            this.handleClose();\r\n        } else if (id === -1) {\r\n            this.props.navigateToPath(\"/\");\r\n            this.handleClose();\r\n        } else {\r\n            this.props.navigateToPath(\r\n                \"/\" + this.state.folders.slice(0, id + 1).join(\"/\")\r\n            );\r\n            this.handleClose();\r\n        }\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ anchorEl: null, anchorHidden: null, anchorSort: null });\r\n    };\r\n\r\n    showHiddenPath = (e) => {\r\n        this.setState({ anchorHidden: e.currentTarget });\r\n    };\r\n\r\n    performAction = (e) => {\r\n        this.handleClose();\r\n        if (e === \"refresh\") {\r\n            this.redresh();\r\n            return;\r\n        }\r\n        const presentPath = this.props.path.split(\"/\");\r\n        const newTarget = [\r\n            {\r\n                id: this.currentID,\r\n                type: \"dir\",\r\n                name: presentPath.pop(),\r\n                path: presentPath.length === 1 ? \"/\" : presentPath.join(\"/\"),\r\n            },\r\n        ];\r\n        //this.props.navitateUp();\r\n        switch (e) {\r\n            case \"share\":\r\n                this.props.setSelectedTarget(newTarget);\r\n                this.props.openShareDialog();\r\n                break;\r\n            case \"newfolder\":\r\n                this.props.openCreateFolderDialog();\r\n                break;\r\n            case \"compress\":\r\n                this.props.setSelectedTarget(newTarget);\r\n                this.props.openCompressDialog();\r\n                break;\r\n            case \"newFile\":\r\n                this.props.openCreateFileDialog();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { classes, t } = this.props;\r\n        const isHomePage = pathHelper.isHomePage(this.props.location.pathname);\r\n        const user = Auth.GetUser();\r\n\r\n        const presentFolderMenu = (\r\n            <Menu\r\n                id=\"presentFolderMenu\"\r\n                anchorEl={this.state.anchorEl}\r\n                open={Boolean(this.state.anchorEl)}\r\n                onClose={this.handleClose}\r\n                disableAutoFocusItem={true}\r\n            >\r\n                <MenuItem onClick={() => this.performAction(\"refresh\")}>\r\n                    <ListItemIcon>\r\n                        <RefreshIcon />\r\n                    </ListItemIcon>\r\n                    {t(\"fileManager.refresh\")}\r\n                </MenuItem>\r\n                {!this.props.search && isHomePage && (\r\n                    <div>\r\n                        <Divider />\r\n                        <MenuItem onClick={() => this.performAction(\"share\")}>\r\n                            <ListItemIcon>\r\n                                <ShareIcon />\r\n                            </ListItemIcon>\r\n                            {t(\"fileManager.share\")}\r\n                        </MenuItem>\r\n                        {user.group.compress && (\r\n                            <MenuItem\r\n                                onClick={() => this.performAction(\"compress\")}\r\n                            >\r\n                                <ListItemIcon>\r\n                                    <Archive />\r\n                                </ListItemIcon>\r\n                                {t(\"fileManager.compress\")}\r\n                            </MenuItem>\r\n                        )}\r\n                        <Divider />\r\n                        <MenuItem\r\n                            onClick={() => this.performAction(\"newfolder\")}\r\n                        >\r\n                            <ListItemIcon>\r\n                                <NewFolderIcon />\r\n                            </ListItemIcon>\r\n                            {t(\"fileManager.newFolder\")}\r\n                        </MenuItem>\r\n                        <MenuItem onClick={() => this.performAction(\"newFile\")}>\r\n                            <ListItemIcon>\r\n                                <FilePlus />\r\n                            </ListItemIcon>\r\n                            {t(\"fileManager.newFile\")}\r\n                        </MenuItem>\r\n                    </div>\r\n                )}\r\n            </Menu>\r\n        );\r\n\r\n        return (\r\n            <div\r\n                className={classNames(\r\n                    {\r\n                        [classes.roundBorder]: this.props.isShare,\r\n                    },\r\n                    classes.container\r\n                )}\r\n            >\r\n                <div className={classes.navigatorContainer}>\r\n                    <div className={classes.nav} ref={this.element}>\r\n                        <span>\r\n                            <PathButton\r\n                                folder=\"/\"\r\n                                path=\"/\"\r\n                                onClick={(e) => this.navigateTo(e, -1)}\r\n                            />\r\n                            <RightIcon className={classes.rightIcon} />\r\n                        </span>\r\n                        {this.state.hiddenMode && (\r\n                            <span>\r\n                                <PathButton\r\n                                    more\r\n                                    title={t(\"fileManager.showFullPath\")}\r\n                                    onClick={this.showHiddenPath}\r\n                                />\r\n                                <Menu\r\n                                    id=\"hiddenPathMenu\"\r\n                                    anchorEl={this.state.anchorHidden}\r\n                                    open={Boolean(this.state.anchorHidden)}\r\n                                    onClose={this.handleClose}\r\n                                    disableAutoFocusItem={true}\r\n                                >\r\n                                    <DropDown\r\n                                        onClose={this.handleClose}\r\n                                        folders={this.state.folders.slice(\r\n                                            0,\r\n                                            -1\r\n                                        )}\r\n                                        navigateTo={this.navigateTo}\r\n                                    />\r\n                                </Menu>\r\n                                <RightIcon className={classes.rightIcon} />\r\n                                <PathButton\r\n                                    folder={this.state.folders.slice(-1)}\r\n                                    path={\r\n                                        \"/\" +\r\n                                        this.state.folders\r\n                                            .slice(0, -1)\r\n                                            .join(\"/\")\r\n                                    }\r\n                                    last={true}\r\n                                    onClick={(e) =>\r\n                                        this.navigateTo(\r\n                                            e,\r\n                                            this.state.folders.length - 1\r\n                                        )\r\n                                    }\r\n                                />\r\n                                {presentFolderMenu}\r\n                            </span>\r\n                        )}\r\n                        {!this.state.hiddenMode &&\r\n                            this.state.folders.map((folder, id, folders) => (\r\n                                <span key={id}>\r\n                                    {folder !== \"\" && (\r\n                                        <span>\r\n                                            <PathButton\r\n                                                folder={folder}\r\n                                                path={\r\n                                                    \"/\" +\r\n                                                    folders\r\n                                                        .slice(0, id)\r\n                                                        .join(\"/\")\r\n                                                }\r\n                                                last={id === folders.length - 1}\r\n                                                onClick={(e) =>\r\n                                                    this.navigateTo(e, id)\r\n                                                }\r\n                                            />\r\n                                            {id === folders.length - 1 &&\r\n                                                presentFolderMenu}\r\n                                            {id !== folders.length - 1 && (\r\n                                                <RightIcon\r\n                                                    className={\r\n                                                        classes.rightIcon\r\n                                                    }\r\n                                                />\r\n                                            )}\r\n                                        </span>\r\n                                    )}\r\n                                </span>\r\n                            ))}\r\n                    </div>\r\n                    <div className={classes.optionContainer}>\r\n                        <SubActions isSmall />\r\n                    </div>\r\n                </div>\r\n                <Divider />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nNavigatorComponent.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    path: PropTypes.string.isRequired,\r\n};\r\n\r\nconst Navigator = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withRouter(withTranslation()(NavigatorComponent))));\r\n\r\nexport default Navigator;\r\n","import React from \"react\";\r\nimport { BulletList } from \"react-content-loader\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    loader: {\r\n        width: \"100%\",\r\n        // padding: 40,\r\n        // [theme.breakpoints.down(\"md\")]: {\r\n        //     width: \"100%\",\r\n        //     padding: 10\r\n        // }\r\n    },\r\n}));\r\n\r\nconst MyLoader = (props) => (\r\n    <BulletList\r\n        backgroundColor={props.dark ? \"#333\" : \"#f5f6f7\"}\r\n        foregroundColor={props.dark ? \"#636363\" : \"#eee\"}\r\n        className={props.className}\r\n    />\r\n);\r\n\r\nfunction ListLoading() {\r\n    const theme = useTheme();\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <MyLoader\r\n                dark={theme.palette.type === \"dark\"}\r\n                className={classes.loader}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListLoading;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport { Clear, Folder } from \"@material-ui/icons\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { setSideBar } from \"../../../redux/explorer/action\";\r\nimport TypeIcon from \"../TypeIcon\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport API from \"../../../middleware/Api\";\r\nimport { filename, sizeToString } from \"../../../utils\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport TimeAgo from \"timeago-react\";\r\nimport ListLoading from \"../../Placeholder/ListLoading\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport { formatLocalTime } from \"../../../utils/datetime\";\r\nimport { navigateTo, toggleSnackbar } from \"../../../redux/explorer\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\n\r\nconst drawerWidth = 350;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n        boxShadow:\r\n            \"0px 8px 10px -5px rgb(0 0 0 / 20%), 0px 16px 24px 2px rgb(0 0 0 / 14%), 0px 6px 30px 5px rgb(0 0 0 / 12%)\",\r\n    },\r\n    drawerContainer: {\r\n        overflow: \"auto\",\r\n    },\r\n    header: {\r\n        display: \"flex\",\r\n        padding: theme.spacing(3),\r\n        placeContent: \"space-between\",\r\n    },\r\n    fileIcon: { width: 33, height: 33 },\r\n    fileIconSVG: { fontSize: 20 },\r\n    folderIcon: {\r\n        color: theme.palette.text.secondary,\r\n        width: 33,\r\n        height: 33,\r\n    },\r\n    fileName: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n        wordBreak: \"break-all\",\r\n        flexGrow: 2,\r\n    },\r\n    closeIcon: {\r\n        placeSelf: \"flex-start\",\r\n        marginTop: 2,\r\n    },\r\n    propsContainer: {\r\n        padding: theme.spacing(3),\r\n    },\r\n    propsLabel: {\r\n        color: theme.palette.text.secondary,\r\n        padding: theme.spacing(1),\r\n    },\r\n    propsTime: {\r\n        color: theme.palette.text.disabled,\r\n        padding: theme.spacing(1),\r\n    },\r\n    propsValue: {\r\n        padding: theme.spacing(1),\r\n        wordBreak: \"break-all\",\r\n    },\r\n    appBar: {\r\n        position: \"relative\",\r\n    },\r\n    title: {\r\n        marginLeft: theme.spacing(2),\r\n        flex: 1,\r\n    },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function SideDrawer() {\r\n    const { t } = useTranslation();\r\n    const dispatch = useDispatch();\r\n    const sideBarOpen = useSelector((state) => state.explorer.sideBarOpen);\r\n    const selected = useSelector((state) => state.explorer.selected);\r\n    const SetSideBar = useCallback((open) => dispatch(setSideBar(open)), [\r\n        dispatch,\r\n    ]);\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n    const NavigateTo = useCallback((k) => dispatch(navigateTo(k)), [dispatch]);\r\n    const search = useSelector((state) => state.explorer.search);\r\n    const [target, setTarget] = useState(null);\r\n    const [details, setDetails] = useState(null);\r\n    const loadProps = (object) => {\r\n        API.get(\r\n            \"/object/property/\" +\r\n                object.id +\r\n                \"?trace_root=\" +\r\n                (search ? \"true\" : \"false\") +\r\n                \"&is_folder=\" +\r\n                (object.type === \"dir\").toString()\r\n        )\r\n            .then((response) => {\r\n                setDetails(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        setDetails(null);\r\n        if (sideBarOpen) {\r\n            if (selected.length !== 1) {\r\n                SetSideBar(false);\r\n            } else {\r\n                setTarget(selected[0]);\r\n                loadProps(selected[0]);\r\n            }\r\n        }\r\n    }, [selected, sideBarOpen]);\r\n\r\n    const classes = useStyles();\r\n    const propsItem = [\r\n        {\r\n            label: t(\"fileManager.size\"),\r\n            value: (d, target) =>\r\n                sizeToString(d.size) +\r\n                t(\"fileManager.bytes\", { bytes: d.size.toLocaleString() }),\r\n            show: (d) => true,\r\n        },\r\n        {\r\n            label: t(\"fileManager.storagePolicy\"),\r\n            value: (d, target) => d.policy,\r\n            show: (d) => d.type === \"file\",\r\n        },\r\n        {\r\n            label: t(\"fileManager.childFolders\"),\r\n            value: (d, target) =>\r\n                t(\"fileManager.childCount\", {\r\n                    num: d.child_folder_num.toLocaleString(),\r\n                }),\r\n            show: (d) => d.type === \"dir\",\r\n        },\r\n        {\r\n            label: t(\"fileManager.childFiles\"),\r\n            value: (d, target) =>\r\n                t(\"fileManager.childCount\", {\r\n                    num: d.child_file_num.toLocaleString(),\r\n                }),\r\n            show: (d) => d.type === \"dir\",\r\n        },\r\n        {\r\n            label: t(\"fileManager.parentFolder\"),\r\n            // eslint-disable-next-line react/display-name\r\n            value: (d, target) => {\r\n                const path = d.path === \"\" ? target.path : d.path;\r\n                const name = filename(path);\r\n                return (\r\n                    <Tooltip title={path}>\r\n                        <Link\r\n                            href={\"javascript:void\"}\r\n                            onClick={() => NavigateTo(path)}\r\n                        >\r\n                            {name === \"\" ? t(\"fileManager.rootFolder\") : name}\r\n                        </Link>\r\n                    </Tooltip>\r\n                );\r\n            },\r\n            show: (d) => true,\r\n        },\r\n        {\r\n            label: t(\"fileManager.modifiedAt\"),\r\n            value: (d, target) => formatLocalTime(d.updated_at),\r\n            show: (d) => true,\r\n        },\r\n        {\r\n            label: t(\"fileManager.createdAt\"),\r\n            value: (d) => formatLocalTime(d.created_at),\r\n            show: (d) => true,\r\n        },\r\n    ];\r\n    const content = (\r\n        <Grid container className={classes.propsContainer}>\r\n            {!details && <ListLoading />}\r\n            {details && (\r\n                <>\r\n                    {propsItem.map((item) => {\r\n                        if (item.show(target)) {\r\n                            return (\r\n                                <>\r\n                                    <Grid\r\n                                        item\r\n                                        xs={5}\r\n                                        className={classes.propsLabel}\r\n                                    >\r\n                                        {item.label}\r\n                                    </Grid>\r\n                                    <Grid\r\n                                        item\r\n                                        xs={7}\r\n                                        className={classes.propsValue}\r\n                                    >\r\n                                        {item.value(details, target)}\r\n                                    </Grid>\r\n                                </>\r\n                            );\r\n                        }\r\n                    })}\r\n                    {target.type === \"dir\" && (\r\n                        <Grid item xs={12} className={classes.propsTime}>\r\n                            <Trans\r\n                                i18nKey=\"fileManager.statisticAt\"\r\n                                components={[\r\n                                    <span key={0} />,\r\n                                    <TimeAgo\r\n                                        key={1}\r\n                                        datetime={details.query_date}\r\n                                        locale={t(\"timeAgoLocaleCode\", {\r\n                                            ns: \"common\",\r\n                                        })}\r\n                                    />,\r\n                                    <span key={2} />,\r\n                                ]}\r\n                            />\r\n                        </Grid>\r\n                    )}\r\n                </>\r\n            )}\r\n        </Grid>\r\n    );\r\n    return (\r\n        <>\r\n            <Hidden smUp>\r\n                <Dialog\r\n                    fullScreen\r\n                    open={sideBarOpen}\r\n                    TransitionComponent={Transition}\r\n                >\r\n                    {target && (\r\n                        <>\r\n                            <AppBar className={classes.appBar}>\r\n                                <Toolbar>\r\n                                    <IconButton\r\n                                        edge=\"start\"\r\n                                        color=\"inherit\"\r\n                                        onClick={() => SetSideBar(false)}\r\n                                        aria-label=\"close\"\r\n                                    >\r\n                                        <Clear />\r\n                                    </IconButton>\r\n                                    <Typography\r\n                                        variant=\"h6\"\r\n                                        className={classes.title}\r\n                                    >\r\n                                        {target.name}\r\n                                    </Typography>\r\n                                </Toolbar>\r\n                            </AppBar>\r\n                            {content}\r\n                        </>\r\n                    )}\r\n                </Dialog>\r\n            </Hidden>\r\n            <Hidden xsDown>\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"persistent\"\r\n                    classes={{\r\n                        paper: classes.drawerPaper,\r\n                    }}\r\n                    open={sideBarOpen}\r\n                    anchor=\"right\"\r\n                >\r\n                    <Toolbar />\r\n                    <div className={classes.drawerContainer}>\r\n                        {target && (\r\n                            <>\r\n                                <div className={classes.header}>\r\n                                    {target.type === \"dir\" && (\r\n                                        <Folder\r\n                                            className={classes.folderIcon}\r\n                                        />\r\n                                    )}\r\n                                    {target.type !== \"dir\" && (\r\n                                        <TypeIcon\r\n                                            isUpload\r\n                                            className={classes.fileIcon}\r\n                                            iconClassName={classes.fileIconSVG}\r\n                                            fileName={target.name}\r\n                                        />\r\n                                    )}\r\n                                    <div className={classes.fileName}>\r\n                                        <Typography variant=\"h6\" gutterBottom>\r\n                                            {target.name}\r\n                                        </Typography>\r\n                                    </div>\r\n                                    <IconButton\r\n                                        onClick={() => SetSideBar(false)}\r\n                                        className={classes.closeIcon}\r\n                                        aria-label=\"close\"\r\n                                        size={\"small\"}\r\n                                    >\r\n                                        <Clear />\r\n                                    </IconButton>\r\n                                </div>\r\n                            </>\r\n                        )}\r\n                        <Divider />\r\n                        {content}\r\n                    </div>\r\n                </Drawer>\r\n            </Hidden>\r\n        </>\r\n    );\r\n}\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { useDrop } from \"react-dnd\";\r\nimport { PaginationItem } from \"@material-ui/lab\";\r\n\r\nexport default function CustomPaginationItem(props) {\r\n    const inputRef = useRef(null);\r\n\r\n    const [{ canDrop, isOver }, drop] = useDrop({\r\n        accept: \"object\",\r\n        collect: (monitor) => ({\r\n            isOver: monitor.isOver(),\r\n            canDrop: monitor.canDrop(),\r\n        }),\r\n    });\r\n\r\n    const isActive = canDrop && isOver;\r\n\r\n    useEffect(() => {\r\n        if (\r\n            isActive &&\r\n            props.onClick &&\r\n            props.type !== \"start-ellipsis\" &&\r\n            props.type !== \"end-ellipsis\"\r\n        ) {\r\n            console.log(\"ss\");\r\n            props.onClick();\r\n        }\r\n    }, [isActive, inputRef]);\r\n\r\n    if (\r\n        props.isMobile &&\r\n        (props.type === \"start-ellipsis\" ||\r\n            props.type === \"end-ellipsis\" ||\r\n            props.type === \"page\")\r\n    ) {\r\n        if (props.selected) {\r\n            return (\r\n                <div>\r\n                    {props.page} / {props.count}\r\n                </div>\r\n            );\r\n        }\r\n        return <></>;\r\n    }\r\n    return (\r\n        <div ref={inputRef}>\r\n            <PaginationItem ref={drop} {...props} />\r\n        </div>\r\n    );\r\n}\r\n","import React, { useCallback, useMemo } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Pagination } from \"@material-ui/lab\";\r\nimport CustomPaginationItem from \"./PaginationItem\";\r\nimport { setPagination } from \"../../redux/viewUpdate/action\";\r\nimport AutoHidden from \"../Dial/AutoHidden\";\r\nimport statusHelper from \"../../utils/page\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        position: \"fixed\",\r\n        bottom: 23,\r\n        /* left: 8px; */\r\n        background: theme.palette.background.paper,\r\n        borderRadius: 24,\r\n        boxShadow:\r\n            \" 0px 3px 5px -1px rgb(0 0 0 / 20%), 0px 6px 10px 0px rgb(0 0 0 / 14%), 0px 1px 18px 0px rgb(0 0 0 / 12%)\",\r\n        padding: \"8px 4px 8px 4px\",\r\n        marginLeft: 20,\r\n    },\r\n    placeholder: {\r\n        marginTop: 80,\r\n    },\r\n}));\r\n\r\nexport default function PaginationFooter() {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const files = useSelector((state) => state.explorer.fileList);\r\n    const folders = useSelector((state) => state.explorer.dirList);\r\n    const pagination = useSelector((state) => state.viewUpdate.pagination);\r\n    const loading = useSelector((state) => state.viewUpdate.navigatorLoading);\r\n    const location = useLocation();\r\n\r\n    const SetPagination = useCallback((p) => dispatch(setPagination(p)), [\r\n        dispatch,\r\n    ]);\r\n\r\n    const handleChange = (event, value) => {\r\n        SetPagination({ ...pagination, page: value });\r\n    };\r\n\r\n    const count = useMemo(\r\n        () => Math.ceil((files.length + folders.length) / pagination.size),\r\n        [files, folders, pagination.size]\r\n    );\r\n\r\n    const isMobile = statusHelper.isMobile();\r\n    const isSharePage = statusHelper.isSharePage(location.pathname);\r\n\r\n    if (count > 1 && !loading) {\r\n        return (\r\n            <>\r\n                {!isMobile && !isSharePage && (\r\n                    <div className={classes.placeholder} />\r\n                )}\r\n                <AutoHidden\r\n                    enable\r\n                    element={\r\n                        isMobile || isSharePage\r\n                            ? null\r\n                            : document.querySelector(\"#explorer-container\")\r\n                    }\r\n                >\r\n                    <div className={classes.root}>\r\n                        <Pagination\r\n                            renderItem={(item) => (\r\n                                <CustomPaginationItem\r\n                                    count={count}\r\n                                    isMobile={isMobile}\r\n                                    {...item}\r\n                                />\r\n                            )}\r\n                            color=\"secondary\"\r\n                            count={count}\r\n                            page={pagination.page}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </div>\r\n                </AutoHidden>\r\n            </>\r\n        );\r\n    }\r\n    return <div></div>;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { DndProvider } from \"react-dnd\";\r\nimport HTML5Backend from \"react-dnd-html5-backend\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { changeSubTitle } from \"../../redux/viewUpdate/action\";\r\nimport pathHelper from \"../../utils/page\";\r\nimport DragLayer from \"./DnD/DragLayer\";\r\nimport Explorer from \"./Explorer\";\r\nimport Modals from \"./Modals\";\r\nimport Navigator from \"./Navigator/Navigator\";\r\nimport SideDrawer from \"./Sidebar/SideDrawer\";\r\nimport classNames from \"classnames\";\r\nimport {\r\n    closeAllModals,\r\n    navigateTo,\r\n    setSelectedTarget,\r\n    toggleSnackbar,\r\n} from \"../../redux/explorer\";\r\nimport PaginationFooter from \"./Pagination\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        height: \"calc(100vh - 64px)\",\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            height: \"100%\",\r\n        },\r\n    },\r\n    rootShare: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        height: \"100%\",\r\n        minHeight: 500,\r\n    },\r\n    explorer: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        overflowY: \"auto\",\r\n    },\r\n});\r\n\r\nconst mapStateToProps = () => ({});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeSubTitle: (text) => {\r\n            dispatch(changeSubTitle(text));\r\n        },\r\n        setSelectedTarget: (targets) => {\r\n            dispatch(setSelectedTarget(targets));\r\n        },\r\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\r\n        },\r\n        closeAllModals: () => {\r\n            dispatch(closeAllModals());\r\n        },\r\n        navigateTo: (path) => {\r\n            dispatch(navigateTo(path));\r\n        },\r\n    };\r\n};\r\n\r\nclass FileManager extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.image = React.createRef();\r\n    }\r\n    componentWillUnmount() {\r\n        this.props.setSelectedTarget([]);\r\n        this.props.closeAllModals();\r\n        this.props.navigateTo(\"/\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (pathHelper.isHomePage(this.props.location.pathname)) {\r\n            this.props.changeSubTitle(null);\r\n        }\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div\r\n                className={classNames({\r\n                    [classes.rootShare]: this.props.share,\r\n                    [classes.root]: !this.props.share,\r\n                })}\r\n            >\r\n                <DndProvider backend={HTML5Backend}>\r\n                    <Modals share={this.props.share} />\r\n                    <Navigator\r\n                        isShare={this.props.isShare}\r\n                        share={this.props.share}\r\n                    />\r\n                    <div className={classes.explorer} id={\"explorer-container\"}>\r\n                        <Explorer share={this.props.share} />\r\n                        <PaginationFooter />\r\n                    </div>\r\n\r\n                    <DragLayer />\r\n                </DndProvider>\r\n                <SideDrawer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nFileManager.propTypes = {};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withRouter(FileManager)));\r\n","import React from \"react\";\r\nimport {\r\n    Icon,\r\n    ListItemIcon,\r\n    makeStyles,\r\n    Menu,\r\n    MenuItem,\r\n} from \"@material-ui/core\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    icon: {\r\n        minWidth: 38,\r\n    },\r\n}));\r\n\r\nexport default function SelectMenu({\r\n    options,\r\n    anchorEl,\r\n    handleClose,\r\n    callback,\r\n    selected,\r\n    showIcon = true,\r\n}) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Menu\r\n            id=\"simple-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleClose}\r\n        >\r\n            {options.map((item) => (\r\n                <>\r\n                    <MenuItem\r\n                        style={{ whiteSpace: \"normal\" }}\r\n                        dense\r\n                        onClick={() => callback(item)}\r\n                    >\r\n                        {showIcon && (\r\n                            <ListItemIcon className={classes.icon}>\r\n                                {item.name !== selected ? (\r\n                                    <Icon />\r\n                                ) : (\r\n                                    <CheckIcon />\r\n                                )}\r\n                            </ListItemIcon>\r\n                        )}\r\n\r\n                        {item.name}\r\n                    </MenuItem>\r\n                </>\r\n            ))}\r\n        </Menu>\r\n    );\r\n}\r\n","import React, { Suspense, useCallback, useEffect, useState } from \"react\";\r\nimport { Button, Paper } from \"@material-ui/core\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport { useLocation, useParams, useRouteMatch } from \"react-router\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport pathHelper from \"../../utils/page\";\r\nimport UseFileSubTitle from \"../../hooks/fileSubtitle\";\r\nimport { getPreviewURL } from \"../../middleware/Api\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { basename, fileNameNoExt, isMobileSafari } from \"../../utils\";\r\nimport { list } from \"../../services/navigate\";\r\nimport { getViewerURL } from \"../../redux/explorer/action\";\r\nimport { subtitleSuffix, videoPreviewSuffix } from \"../../config\";\r\nimport { toggleSnackbar } from \"../../redux/explorer\";\r\nimport { pathJoin } from \"../Uploader/core/utils\";\r\nimport { Launch, PlaylistPlay, Subtitles } from \"@material-ui/icons\";\r\nimport TextLoading from \"../Placeholder/TextLoading\";\r\nimport SelectMenu from \"./SelectMenu\";\r\nimport { getDownloadURL } from \"../../services/file\";\r\nimport { sortMethodFuncs } from \"../../redux/explorer/action\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst Artplayer = React.lazy(() =>\r\n    import(\r\n        /* webpackChunkName: \"artplayer\" */ \"artplayer/examples/react/Artplayer\"\r\n    )\r\n);\r\n\r\nconst externalPlayers = [\r\n    {\r\n        name: \"PotPlayer\",\r\n        url: (source, title) => `potplayer://${source}`,\r\n    },\r\n    {\r\n        name: \"VLC\",\r\n        url: (source, title) => `vlc://${source}`,\r\n    },\r\n    {\r\n        name: \"IINA\",\r\n        url: (source, title) => `iina://weblink?url=${source}`,\r\n    },\r\n    {\r\n        name: \"nPlayer\",\r\n        url: (source, title) => `nplayer-${source}`,\r\n    },\r\n    {\r\n        name: \"MXPlayer (Free)\",\r\n        url: (source, title) =>\r\n            `intent:${source}#Intent;package=com.mxtech.videoplayer.ad;S.title=${title};end`,\r\n    },\r\n    {\r\n        name: \"MXPlayer (Pro)\",\r\n        url: (source, title) =>\r\n            `intent:${source}#Intent;package=com.mxtech.videoplayer.pro;S.title=${title};end`,\r\n    },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    layout: {\r\n        width: \"auto\",\r\n        marginTop: 30,\r\n        marginBottom: 20,\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\r\n            width: 1100,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n    },\r\n    player: {\r\n        borderRadius: 4,\r\n        height: \"100vh\",\r\n        maxHeight: \"calc(100vh - 180px)\",\r\n    },\r\n    actions: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    actionButton: {\r\n        marginRight: theme.spacing(1),\r\n        marginTop: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nexport default function VideoViewer() {\r\n    const { t } = useTranslation();\r\n    const math = useRouteMatch();\r\n    const location = useLocation();\r\n    const query = useQuery();\r\n    const { id } = useParams();\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n    const { title, path } = UseFileSubTitle(query, math, location);\r\n    const theme = useTheme();\r\n    const [art, setArt] = useState(null);\r\n    const history = useHistory();\r\n    const [files, setFiles] = useState([]);\r\n    const [subtitles, setSubtitles] = useState([]);\r\n    const [playlist, setPlaylist] = useState([]);\r\n    const [subtitleOpen, setSubtitleOpen] = useState(null);\r\n    const [subtitleSelected, setSubtitleSelected] = useState(\"\");\r\n    const [playlistOpen, setPlaylistOpen] = useState(null);\r\n    const [externalPlayerOpen, setExternalPlayerOpen] = useState(null);\r\n    const isShare = pathHelper.isSharePage(location.pathname);\r\n    const sortMethod = useSelector((state) => state.viewUpdate.sortMethod);\r\n    const sortFunc = sortMethodFuncs[sortMethod];\r\n\r\n    useEffect(() => {\r\n        art &&\r\n            art.on(\"ready\", () => {\r\n                art.autoHeight = true;\r\n            });\r\n        return () => {\r\n            if (\r\n                art !== null &&\r\n                !isMobileSafari() &&\r\n                document.pictureInPictureEnabled &&\r\n                art.playing\r\n            ) {\r\n                art.pip = true;\r\n                art.query(\".art-video\").addEventListener(\r\n                    \"leavepictureinpicture\",\r\n                    () => {\r\n                        art.pause();\r\n                    },\r\n                    false\r\n                );\r\n            }\r\n        };\r\n    }, [art]);\r\n\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        if (art !== null) {\r\n            const newURL = getPreviewURL(\r\n                isShare,\r\n                id,\r\n                query.get(\"id\"),\r\n                query.get(\"share_path\")\r\n            );\r\n            if (newURL !== art.url) {\r\n                if (art.subtitle) {\r\n                    art.subtitle.show = false;\r\n                }\r\n                art.switchUrl(newURL);\r\n                if (path && path !== \"\") {\r\n                    list(\r\n                        basename(path),\r\n                        isShare ? { key: id } : null,\r\n                        \"\",\r\n                        \"\"\r\n                    ).then((res) => {\r\n                        setFiles(\r\n                            res.data.objects.sort(sortFunc).filter((o) => o.type === \"file\")\r\n                        );\r\n                        setPlaylist(\r\n                            res.data.objects.filter(\r\n                                (o) =>\r\n                                    o.type === \"file\" &&\r\n                                    videoPreviewSuffix.indexOf(\r\n                                        o.name.split(\".\").pop().toLowerCase()\r\n                                    ) !== -1\r\n                            )\r\n                        );\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }, [art, id, location, path]);\r\n\r\n    const switchSubtitle = (f) => {\r\n        if (art !== null) {\r\n            const fileType = f.name.split(\".\").pop().toLowerCase();\r\n            art.subtitle.switch(\r\n                getPreviewURL(\r\n                    isShare,\r\n                    id,\r\n                    f.id,\r\n                    pathJoin([basename(query.get(\"share_path\")), f.name])\r\n                ),\r\n                {\r\n                    type: fileType,\r\n                }\r\n            );\r\n            art.subtitle.show = true;\r\n            setSubtitleSelected(f.name);\r\n            ToggleSnackbar(\r\n                \"top\",\r\n                \"center\",\r\n                t(\"fileManager.subtitleSwitchTo\", {\r\n                    subtitle: f.name,\r\n                }),\r\n                \"info\"\r\n            );\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (files.length > 0) {\r\n            const fileNameMatch = fileNameNoExt(title) + \".\";\r\n            const options = files.filter((f) => {\r\n                const fileType = f.name.split(\".\").pop().toLowerCase();\r\n                return subtitleSuffix.indexOf(fileType) !== -1;\r\n            }).sort((a, b) => {\r\n                return (a.name.startsWith(fileNameMatch) && !b.name.startsWith(fileNameMatch)) ? -1 : 0;\r\n            });\r\n            if (options.length > 0 && options[0].name.startsWith(fileNameMatch)) {\r\n                switchSubtitle(options[0]);\r\n            }\r\n            setSubtitles(options);\r\n        }\r\n    }, [files]);\r\n\r\n    const switchVideo = (file) => {\r\n        setSubtitleSelected(null);\r\n        if (isShare) {\r\n            file.key = id;\r\n        }\r\n        if (isMobileSafari()) {\r\n            window.location.href = getViewerURL(\"video\", file, isShare);\r\n        } else {\r\n            history.push(getViewerURL(\"video\", file, isShare));\r\n        }\r\n    };\r\n\r\n    const setSubtitle = (sub) => {\r\n        setSubtitleOpen(null);\r\n        switchSubtitle(sub);\r\n    };\r\n\r\n    const startSelectSubTitle = (e) => {\r\n        if (subtitles.length === 0) {\r\n            ToggleSnackbar(\r\n                \"top\",\r\n                \"right\",\r\n                t(\"fileManager.noSubtitleAvailable\"),\r\n                \"warning\"\r\n            );\r\n            return;\r\n        }\r\n        setSubtitleOpen(e.currentTarget);\r\n    };\r\n\r\n    const openInExternalPlayer = (player) => {\r\n        const current = { name: title };\r\n        current.id = query.get(\"id\");\r\n        current.path = basename(path);\r\n        if (isShare) {\r\n            current.key = id;\r\n        }\r\n\r\n        setExternalPlayerOpen(null);\r\n        getDownloadURL(current)\r\n            .then((response) => {\r\n                window.location.assign(player.url(response.data, title));\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className={classes.layout}>\r\n            <Paper className={classes.root} elevation={1}>\r\n                <Suspense fallback={<TextLoading />}>\r\n                    <Artplayer\r\n                        option={{\r\n                            title: title,\r\n                            theme: theme.palette.secondary.main,\r\n                            flip: true,\r\n                            setting: true,\r\n                            playbackRate: true,\r\n                            aspectRatio: true,\r\n                            hotkey: true,\r\n                            pip: true,\r\n                            fullscreen: true,\r\n                            fullscreenWeb: true,\r\n                            autoHeight: true,\r\n                            whitelist: [\"*\"],\r\n                            moreVideoAttr: {\r\n                                \"webkit-playsinline\": true,\r\n                                playsInline: true,\r\n                            },\r\n                            lang: t(\"artPlayerLocaleCode\", { ns: \"common\" }),\r\n                        }}\r\n                        className={classes.player}\r\n                        getInstance={(a) => setArt(a)}\r\n                    />\r\n                </Suspense>\r\n            </Paper>\r\n            <div className={classes.actions}>\r\n                <Button\r\n                    onClick={startSelectSubTitle}\r\n                    className={classes.actionButton}\r\n                    startIcon={<Subtitles />}\r\n                    variant=\"outlined\"\r\n                >\r\n                    {t(\"fileManager.subtitle\")}\r\n                </Button>\r\n                {playlist.length >= 2 && (\r\n                    <Button\r\n                        onClick={(e) => setPlaylistOpen(e.currentTarget)}\r\n                        className={classes.actionButton}\r\n                        startIcon={<PlaylistPlay />}\r\n                        variant=\"outlined\"\r\n                    >\r\n                        {t(\"fileManager.playlist\")}\r\n                    </Button>\r\n                )}\r\n                <Button\r\n                    onClick={(e) => setExternalPlayerOpen(e.currentTarget)}\r\n                    className={classes.actionButton}\r\n                    startIcon={<Launch />}\r\n                    variant=\"outlined\"\r\n                >\r\n                    {t(\"fileManager.openInExternalPlayer\")}\r\n                </Button>\r\n            </div>\r\n            <SelectMenu\r\n                selected={subtitleSelected}\r\n                options={subtitles}\r\n                callback={setSubtitle}\r\n                anchorEl={subtitleOpen}\r\n                handleClose={() => setSubtitleOpen(null)}\r\n            />\r\n            <SelectMenu\r\n                selected={title}\r\n                options={playlist}\r\n                callback={switchVideo}\r\n                anchorEl={playlistOpen}\r\n                handleClose={() => setPlaylistOpen(null)}\r\n            />\r\n            <SelectMenu\r\n                showIcon={false}\r\n                options={externalPlayers}\r\n                callback={openInExternalPlayer}\r\n                anchorEl={externalPlayerOpen}\r\n                handleClose={() => setExternalPlayerOpen(null)}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport OpenIcon from \"@material-ui/icons/OpenInNew\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport FolderIcon from \"@material-ui/icons/Folder\";\r\n\r\nimport {\r\n    Avatar,\r\n    Card,\r\n    CardHeader,\r\n    Grid,\r\n    IconButton,\r\n    Tooltip,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport API from \"../../middleware/Api\";\r\nimport TypeIcon from \"../FileManager/TypeIcon\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useLocation } from \"react-router\";\r\nimport TimeAgo from \"timeago-react\";\r\nimport { toggleSnackbar } from \"../../redux/explorer\";\r\nimport Nothing from \"../Placeholder/Nothing\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    cardContainer: {\r\n        padding: theme.spacing(1),\r\n    },\r\n    card: {\r\n        maxWidth: 400,\r\n        margin: \"0 auto\",\r\n    },\r\n    actions: {\r\n        display: \"flex\",\r\n    },\r\n    layout: {\r\n        width: \"auto\",\r\n        marginTop: \"50px\",\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\r\n            width: 1100,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n    },\r\n    shareTitle: {\r\n        maxWidth: \"200px\",\r\n    },\r\n    avatarFile: {\r\n        backgroundColor: theme.palette.primary.light,\r\n    },\r\n    avatarFolder: {\r\n        backgroundColor: theme.palette.secondary.light,\r\n    },\r\n    gird: {\r\n        marginTop: \"30px\",\r\n    },\r\n    loadMore: {\r\n        textAlign: \"right\",\r\n        marginTop: \"20px\",\r\n        marginBottom: \"40px\",\r\n    },\r\n    badge: {\r\n        marginLeft: theme.spacing(1),\r\n        height: 17,\r\n    },\r\n    orderSelect: {\r\n        textAlign: \"right\",\r\n        marginTop: 5,\r\n    },\r\n    cardAction: {\r\n        marginTop: 0,\r\n    },\r\n}));\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nexport default function SearchResult() {\r\n    const { t } = useTranslation(\"application\", { keyPrefix: \"share\" });\r\n    const { t: tGlobal } = useTranslation();\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    const query = useQuery();\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const [page, setPage] = useState(1);\r\n    const [total, setTotal] = useState(0);\r\n    const [shareList, setShareList] = useState([]);\r\n    const [orderBy, setOrderBy] = useState(\"created_at DESC\");\r\n\r\n    const search = useCallback((keywords, page, orderBy) => {\r\n        const order = orderBy.split(\" \");\r\n        API.get(\r\n            \"/share/search?page=\" +\r\n                page +\r\n                \"&order_by=\" +\r\n                order[0] +\r\n                \"&order=\" +\r\n                order[1] +\r\n                \"&keywords=\" +\r\n                encodeURIComponent(keywords)\r\n        )\r\n            .then((response) => {\r\n                setTotal(response.data.total);\r\n                setShareList(response.data.items);\r\n            })\r\n            .catch(() => {\r\n                ToggleSnackbar(\"top\", \"right\", t(\"listLoadingError\"), \"error\");\r\n            });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const keywords = query.get(\"keywords\");\r\n        if (keywords) {\r\n            search(keywords, page, orderBy);\r\n        } else {\r\n            ToggleSnackbar(\"top\", \"right\", t(\"enterKeywords\"), \"warning\");\r\n        }\r\n    }, [location]);\r\n\r\n    const handlePageChange = (event, value) => {\r\n        setPage(value);\r\n        const keywords = query.get(\"keywords\");\r\n        search(keywords, value, orderBy);\r\n    };\r\n\r\n    const handleOrderChange = (event) => {\r\n        setOrderBy(event.target.value);\r\n        const keywords = query.get(\"keywords\");\r\n        search(keywords, page, event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.layout}>\r\n            <Grid container>\r\n                <Grid sm={6} xs={6}>\r\n                    <Typography color=\"textSecondary\" variant=\"h4\">\r\n                        {t(\"searchResult\")}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid sm={6} xs={6} className={classes.orderSelect}>\r\n                    <FormControl>\r\n                        <Select\r\n                            color={\"secondary\"}\r\n                            onChange={handleOrderChange}\r\n                            value={orderBy}\r\n                        >\r\n                            <MenuItem value={\"created_at DESC\"}>\r\n                                {t(\"createdAtDesc\")}\r\n                            </MenuItem>\r\n                            <MenuItem value={\"created_at ASC\"}>\r\n                                {t(\"createdAtAsc\")}\r\n                            </MenuItem>\r\n                            <MenuItem value={\"downloads DESC\"}>\r\n                                {t(\"downloadsDesc\")}\r\n                            </MenuItem>\r\n                            <MenuItem value={\"downloads ASC\"}>\r\n                                {t(\"downloadsAsc\")}\r\n                            </MenuItem>\r\n                            <MenuItem value={\"views DESC\"}>\r\n                                {t(\"viewsDesc\")}\r\n                            </MenuItem>\r\n                            <MenuItem value={\"views ASC\"}>\r\n                                {t(\"viewsAsc\")}\r\n                            </MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container spacing={24} className={classes.gird}>\r\n                {shareList.length === 0 && <Nothing primary={t(\"noRecords\")} />}\r\n                {shareList.map((value) => (\r\n                    <Grid\r\n                        item\r\n                        xs={12}\r\n                        sm={4}\r\n                        key={value.id}\r\n                        className={classes.cardContainer}\r\n                    >\r\n                        <Card className={classes.card}>\r\n                            <CardHeader\r\n                                classes={{\r\n                                    action: classes.cardAction,\r\n                                }}\r\n                                avatar={\r\n                                    <div>\r\n                                        {!value.is_dir && (\r\n                                            <TypeIcon\r\n                                                fileName={\r\n                                                    value.source\r\n                                                        ? value.source.name\r\n                                                        : \"\"\r\n                                                }\r\n                                                isUpload\r\n                                            />\r\n                                        )}{\" \"}\r\n                                        {value.is_dir && (\r\n                                            <Avatar\r\n                                                className={classes.avatarFolder}\r\n                                            >\r\n                                                <FolderIcon />\r\n                                            </Avatar>\r\n                                        )}\r\n                                    </div>\r\n                                }\r\n                                action={\r\n                                    <Tooltip\r\n                                        placement=\"top\"\r\n                                        title={tGlobal(\"fileManager.open\")}\r\n                                    >\r\n                                        <IconButton\r\n                                            onClick={() =>\r\n                                                history.push(\"/s/\" + value.key)\r\n                                            }\r\n                                        >\r\n                                            <OpenIcon />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                }\r\n                                title={\r\n                                    <Tooltip\r\n                                        placement=\"top\"\r\n                                        title={\r\n                                            value.source\r\n                                                ? value.source.name\r\n                                                : t(\"sourceNotFound\")\r\n                                        }\r\n                                    >\r\n                                        <Typography\r\n                                            noWrap\r\n                                            className={classes.shareTitle}\r\n                                        >\r\n                                            {value.source\r\n                                                ? value.source.name\r\n                                                : t(\"sourceNotFound\")}\r\n                                        </Typography>\r\n                                    </Tooltip>\r\n                                }\r\n                                subheader={\r\n                                    <span>\r\n                                        <Trans\r\n                                            i18nKey=\"share.sharedAt\"\r\n                                            components={[\r\n                                                <TimeAgo\r\n                                                    key={0}\r\n                                                    datetime={value.create_date}\r\n                                                    locale={tGlobal(\r\n                                                        \"timeAgoLocaleCode\",\r\n                                                        {\r\n                                                            ns: \"common\",\r\n                                                        }\r\n                                                    )}\r\n                                                />,\r\n                                            ]}\r\n                                        />\r\n                                    </span>\r\n                                }\r\n                            />\r\n                        </Card>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n            <div className={classes.loadMore}>\r\n                <Pagination\r\n                    count={Math.ceil(total / 18)}\r\n                    onChange={handlePageChange}\r\n                    color=\"secondary\"\r\n                />\r\n            </div>{\" \"}\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport OpenIcon from \"@material-ui/icons/OpenInNew\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport FolderIcon from \"@material-ui/icons/Folder\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport UnlockIcon from \"@material-ui/icons/LockOpen\";\r\nimport EyeIcon from \"@material-ui/icons/RemoveRedEye\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nimport {\r\n    Avatar,\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardHeader,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Grid,\r\n    IconButton,\r\n    TextField,\r\n    Tooltip,\r\n    Typography,\r\n    withStyles,\r\n} from \"@material-ui/core\";\r\nimport API from \"../../middleware/Api\";\r\nimport TypeIcon from \"../FileManager/TypeIcon\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { VisibilityOff, VpnKey } from \"@material-ui/icons\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport ToggleIcon from \"material-ui-toggle-icon\";\r\nimport { formatLocalTime } from \"../../utils/datetime\";\r\nimport { toggleSnackbar } from \"../../redux/explorer\";\r\nimport Nothing from \"../Placeholder/Nothing\";\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\nconst styles = (theme) => ({\r\n    cardContainer: {\r\n        padding: theme.spacing(1),\r\n    },\r\n    card: {\r\n        maxWidth: 400,\r\n        margin: \"0 auto\",\r\n    },\r\n    actions: {\r\n        display: \"flex\",\r\n    },\r\n    layout: {\r\n        width: \"auto\",\r\n        marginTop: \"50px\",\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\r\n            width: 1100,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n    },\r\n    shareTitle: {\r\n        maxWidth: \"200px\",\r\n    },\r\n    avatarFile: {\r\n        backgroundColor: theme.palette.primary.light,\r\n    },\r\n    avatarFolder: {\r\n        backgroundColor: theme.palette.secondary.light,\r\n    },\r\n    gird: {\r\n        marginTop: \"30px\",\r\n    },\r\n    loadMore: {\r\n        textAlign: \"right\",\r\n        marginTop: \"20px\",\r\n        marginBottom: \"40px\",\r\n    },\r\n    badge: {\r\n        marginLeft: theme.spacing(1),\r\n        height: 17,\r\n    },\r\n    orderSelect: {\r\n        textAlign: \"right\",\r\n        marginTop: 5,\r\n    },\r\n});\r\nconst mapStateToProps = () => {\r\n    return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\r\n        },\r\n    };\r\n};\r\n\r\nclass MyShareCompoment extends Component {\r\n    state = {\r\n        page: 1,\r\n        total: 0,\r\n        shareList: [],\r\n        showPwd: null,\r\n        orderBy: \"created_at DESC\",\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        this.loadList(1, this.state.orderBy);\r\n    };\r\n\r\n    showPwd = (pwd) => {\r\n        this.setState({ showPwd: pwd });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ showPwd: null });\r\n    };\r\n\r\n    removeShare = (id) => {\r\n        API.delete(\"/share/\" + id)\r\n            .then(() => {\r\n                let oldList = this.state.shareList;\r\n                oldList = oldList.filter((value) => {\r\n                    return value.key !== id;\r\n                });\r\n                this.setState({\r\n                    shareList: oldList,\r\n                    total: this.state.total - 1,\r\n                });\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    this.props.t(\"share.shareCanceled\"),\r\n                    \"success\"\r\n                );\r\n                if (oldList.length === 0) {\r\n                    this.loadList(1, this.state.orderBy);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n            });\r\n    };\r\n\r\n    changePermission = (id) => {\r\n        const newPwd = Math.random().toString(36).substr(2).slice(2, 8);\r\n        const oldList = this.state.shareList;\r\n        const shareIndex = oldList.findIndex((value) => {\r\n            return value.key === id;\r\n        });\r\n        API.patch(\"/share/\" + id, {\r\n            prop: \"password\",\r\n            value: oldList[shareIndex].password === \"\" ? newPwd : \"\",\r\n        })\r\n            .then((response) => {\r\n                oldList[shareIndex].password = response.data;\r\n                this.setState({\r\n                    shareList: oldList,\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n            });\r\n    };\r\n\r\n    changePreviewOption = (id) => {\r\n        const oldList = this.state.shareList;\r\n        const shareIndex = oldList.findIndex((value) => {\r\n            return value.key === id;\r\n        });\r\n        API.patch(\"/share/\" + id, {\r\n            prop: \"preview_enabled\",\r\n            value: oldList[shareIndex].preview ? \"false\" : \"true\",\r\n        })\r\n            .then((response) => {\r\n                oldList[shareIndex].preview = response.data;\r\n                this.setState({\r\n                    shareList: oldList,\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n            });\r\n    };\r\n\r\n    loadList = (page, orderBy) => {\r\n        const order = orderBy.split(\" \");\r\n        API.get(\r\n            \"/share?page=\" +\r\n                page +\r\n                \"&order_by=\" +\r\n                order[0] +\r\n                \"&order=\" +\r\n                order[1]\r\n        )\r\n            .then((response) => {\r\n                this.setState({\r\n                    total: response.data.total,\r\n                    shareList: response.data.items,\r\n                });\r\n            })\r\n            .catch(() => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    this.props.t(\"share.listLoadingError\"),\r\n                    \"error\"\r\n                );\r\n            });\r\n    };\r\n\r\n    handlePageChange = (event, value) => {\r\n        this.setState({\r\n            page: value,\r\n        });\r\n        this.loadList(value, this.state.orderBy);\r\n    };\r\n\r\n    handleOrderChange = (event) => {\r\n        this.setState({\r\n            orderBy: event.target.value,\r\n        });\r\n        this.loadList(this.state.page, event.target.value);\r\n    };\r\n\r\n    isExpired = (share) => {\r\n        return share.expire < -1 || share.remain_downloads === 0;\r\n    };\r\n\r\n    render() {\r\n        const { classes, t } = this.props;\r\n\r\n        return (\r\n            <div className={classes.layout}>\r\n                <Grid container>\r\n                    <Grid sm={6} xs={6}>\r\n                        <Typography color=\"textSecondary\" variant=\"h4\">\r\n                            {t(\"share.sharedFiles\")}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid sm={6} xs={6} className={classes.orderSelect}>\r\n                        <FormControl>\r\n                            <Select\r\n                                color={\"secondary\"}\r\n                                onChange={this.handleOrderChange}\r\n                                value={this.state.orderBy}\r\n                            >\r\n                                <MenuItem value={\"created_at DESC\"}>\r\n                                    {t(\"share.createdAtDesc\")}\r\n                                </MenuItem>\r\n                                <MenuItem value={\"created_at ASC\"}>\r\n                                    {t(\"share.createdAtAsc\")}\r\n                                </MenuItem>\r\n                                <MenuItem value={\"downloads DESC\"}>\r\n                                    {t(\"share.downloadsDesc\")}\r\n                                </MenuItem>\r\n                                <MenuItem value={\"downloads ASC\"}>\r\n                                    {t(\"share.downloadsAsc\")}\r\n                                </MenuItem>\r\n                                <MenuItem value={\"views DESC\"}>\r\n                                    {t(\"share.viewsDesc\")}\r\n                                </MenuItem>\r\n                                <MenuItem value={\"views ASC\"}>\r\n                                    {t(\"share.viewsAsc\")}\r\n                                </MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={2} className={classes.gird}>\r\n                    {this.state.shareList.length === 0 && (\r\n                        <Nothing primary={t(\"share.noRecords\")} />\r\n                    )}\r\n                    {this.state.shareList.map((value) => (\r\n                        <Grid\r\n                            item\r\n                            xs={12}\r\n                            sm={6}\r\n                            md={4}\r\n                            key={value.id}\r\n                            className={classes.cardContainer}\r\n                        >\r\n                            <Card className={classes.card}>\r\n                                <CardHeader\r\n                                    avatar={\r\n                                        <div>\r\n                                            {!value.is_dir && (\r\n                                                <TypeIcon\r\n                                                    fileName={\r\n                                                        value.source\r\n                                                            ? value.source.name\r\n                                                            : \"\"\r\n                                                    }\r\n                                                    isUpload\r\n                                                />\r\n                                            )}{\" \"}\r\n                                            {value.is_dir && (\r\n                                                <Avatar\r\n                                                    className={\r\n                                                        classes.avatarFolder\r\n                                                    }\r\n                                                >\r\n                                                    <FolderIcon />\r\n                                                </Avatar>\r\n                                            )}\r\n                                        </div>\r\n                                    }\r\n                                    title={\r\n                                        <Tooltip\r\n                                            placement=\"top\"\r\n                                            title={\r\n                                                value.source\r\n                                                    ? value.source.name\r\n                                                    : t(\"share.sourceNotFound\")\r\n                                            }\r\n                                        >\r\n                                            <Typography\r\n                                                noWrap\r\n                                                className={classes.shareTitle}\r\n                                            >\r\n                                                {value.source\r\n                                                    ? value.source.name\r\n                                                    : t(\"share.sourceNotFound\")}\r\n                                            </Typography>\r\n                                        </Tooltip>\r\n                                    }\r\n                                    subheader={\r\n                                        <span>\r\n                                            {formatLocalTime(value.create_date)}\r\n                                            {this.isExpired(value) && (\r\n                                                <Chip\r\n                                                    size=\"small\"\r\n                                                    className={classes.badge}\r\n                                                    label={t(\"share.expired\")}\r\n                                                />\r\n                                            )}\r\n                                        </span>\r\n                                    }\r\n                                />\r\n                                <Divider />\r\n                                <CardActions\r\n                                    disableActionSpacing\r\n                                    style={{\r\n                                        display: \"block\",\r\n                                        textAlign: \"right\",\r\n                                    }}\r\n                                >\r\n                                    <Tooltip\r\n                                        placement=\"top\"\r\n                                        title={t(\"fileManager.open\")}\r\n                                    >\r\n                                        <IconButton\r\n                                            onClick={() =>\r\n                                                this.props.history.push(\r\n                                                    \"/s/\" +\r\n                                                        value.key +\r\n                                                        (value.password === \"\"\r\n                                                            ? \"\"\r\n                                                            : \"?password=\" +\r\n                                                              value.password)\r\n                                                )\r\n                                            }\r\n                                        >\r\n                                            <OpenIcon fontSize={\"small\"} />\r\n                                        </IconButton>\r\n                                    </Tooltip>{\" \"}\r\n                                    {value.password !== \"\" && (\r\n                                        <>\r\n                                            <Tooltip\r\n                                                placement=\"top\"\r\n                                                title={t(\r\n                                                    \"share.changeToPublic\"\r\n                                                )}\r\n                                                onClick={() =>\r\n                                                    this.changePermission(\r\n                                                        value.key\r\n                                                    )\r\n                                                }\r\n                                            >\r\n                                                <IconButton>\r\n                                                    <LockIcon\r\n                                                        fontSize={\"small\"}\r\n                                                    />\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                            <Tooltip\r\n                                                placement=\"top\"\r\n                                                title={t(\"share.viewPassword\")}\r\n                                                onClick={() =>\r\n                                                    this.showPwd(value.password)\r\n                                                }\r\n                                            >\r\n                                                <IconButton>\r\n                                                    <VpnKey\r\n                                                        fontSize={\"small\"}\r\n                                                    />\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                        </>\r\n                                    )}\r\n                                    {value.password === \"\" && (\r\n                                        <Tooltip\r\n                                            placement=\"top\"\r\n                                            title={t(\"share.changeToPrivate\")}\r\n                                            onClick={() =>\r\n                                                this.changePermission(value.key)\r\n                                            }\r\n                                        >\r\n                                            <IconButton>\r\n                                                <UnlockIcon\r\n                                                    fontSize={\"small\"}\r\n                                                />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    )}\r\n                                    <Tooltip\r\n                                        placement=\"top\"\r\n                                        title={\r\n                                            value.preview\r\n                                                ? t(\"share.disablePreview\")\r\n                                                : t(\"share.enablePreview\")\r\n                                        }\r\n                                        onClick={() =>\r\n                                            this.changePreviewOption(value.key)\r\n                                        }\r\n                                    >\r\n                                        <IconButton>\r\n                                            <ToggleIcon\r\n                                                on={value.preview}\r\n                                                onIcon={\r\n                                                    <EyeIcon\r\n                                                        fontSize={\"small\"}\r\n                                                    />\r\n                                                }\r\n                                                offIcon={\r\n                                                    <VisibilityOff\r\n                                                        fontSize={\"small\"}\r\n                                                    />\r\n                                                }\r\n                                            />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                    <Tooltip\r\n                                        placement=\"top\"\r\n                                        title={t(\"share.cancelShare\")}\r\n                                        onClick={() =>\r\n                                            this.removeShare(value.key)\r\n                                        }\r\n                                    >\r\n                                        <IconButton>\r\n                                            <DeleteIcon fontSize={\"small\"} />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                </CardActions>\r\n                            </Card>\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n                <div className={classes.loadMore}>\r\n                    <Pagination\r\n                        count={Math.ceil(this.state.total / 18)}\r\n                        onChange={this.handlePageChange}\r\n                        color=\"secondary\"\r\n                    />\r\n                </div>{\" \"}\r\n                <Dialog\r\n                    open={this.state.showPwd !== null}\r\n                    onClose={this.handleClose}\r\n                >\r\n                    <DialogTitle> {t(\"share.sharePassword\")} </DialogTitle>{\" \"}\r\n                    <DialogContent>\r\n                        <TextField\r\n                            id=\"standard-name\"\r\n                            value={this.state.showPwd}\r\n                            margin=\"normal\"\r\n                            autoFocus\r\n                        />\r\n                    </DialogContent>{\" \"}\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"default\">\r\n                            {t(\"close\", { ns: \"common\" })}\r\n                        </Button>{\" \"}\r\n                    </DialogActions>{\" \"}\r\n                </Dialog>{\" \"}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst MyShare = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withRouter(withTranslation()(MyShareCompoment))));\r\n\r\nexport default MyShare;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    Button,\r\n    CircularProgress,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    makeStyles,\r\n} from \"@material-ui/core\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { Virtuoso } from \"react-virtuoso\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    contentFix: {\r\n        padding: \"10px 24px 0px 24px\",\r\n    },\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        position: \"relative\",\r\n    },\r\n    buttonProgress: {\r\n        color: theme.palette.secondary.light,\r\n        position: \"absolute\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    },\r\n    content: {\r\n        padding: 0,\r\n    },\r\n    scroll: {\r\n        maxHeight: \"calc(100vh - 200px)\",\r\n    },\r\n}));\r\n\r\nexport default function SelectFileDialog(props) {\r\n    const { t } = useTranslation();\r\n    const [files, setFiles] = useState(props.files);\r\n\r\n    useEffect(() => {\r\n        setFiles(props.files);\r\n    }, [props.files]);\r\n\r\n    const handleChange = (index) => (event) => {\r\n        const filesCopy = [...files];\r\n        // eslint-disable-next-line\r\n        filesCopy.map((v, k) => {\r\n            if (v.index === index) {\r\n                filesCopy[k] = {\r\n                    ...filesCopy[k],\r\n                    selected: event.target.checked ? \"true\" : \"false\",\r\n                };\r\n            }\r\n        });\r\n        setFiles(filesCopy);\r\n    };\r\n\r\n    const submit = () => {\r\n        const index = [];\r\n        // eslint-disable-next-line\r\n        files.map((v) => {\r\n            if (v.selected === \"true\") {\r\n                index.push(parseInt(v.index));\r\n            }\r\n        });\r\n        props.onSubmit(index);\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            onClose={props.onClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n            fullWidth\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\">\r\n                {t(\"download.selectDownloadingFile\")}\r\n            </DialogTitle>\r\n            <DialogContent dividers={\"paper\"} className={classes.content}>\r\n                <Virtuoso\r\n                    style={{ height: 54 * files.length }}\r\n                    className={classes.scroll}\r\n                    data={files}\r\n                    itemContent={(index, v) => (\r\n                        <MenuItem key={index}>\r\n                            <FormGroup row>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox\r\n                                            onChange={handleChange(v.index)}\r\n                                            checked={v.selected === \"true\"}\r\n                                            value=\"checkedA\"\r\n                                        />\r\n                                    }\r\n                                    label={v.path}\r\n                                />\r\n                            </FormGroup>\r\n                        </MenuItem>\r\n                    )}\r\n                />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={props.onClose}>\r\n                    {t(\"cancel\", { ns: \"common\" })}\r\n                </Button>\r\n                <div className={classes.wrapper}>\r\n                    <Button\r\n                        color=\"primary\"\r\n                        onClick={submit}\r\n                        disabled={props.modalsLoading}\r\n                    >\r\n                        {t(\"ok\", { ns: \"common\" })}\r\n                        {props.modalsLoading && (\r\n                            <CircularProgress\r\n                                size={24}\r\n                                className={classes.buttonProgress}\r\n                            />\r\n                        )}\r\n                    </Button>\r\n                </div>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import {\r\n    Card,\r\n    CardContent,\r\n    darken,\r\n    IconButton,\r\n    lighten,\r\n    LinearProgress,\r\n    makeStyles,\r\n    Typography,\r\n    useTheme,\r\n} from \"@material-ui/core\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { ExpandMore, HighlightOff } from \"@material-ui/icons\";\r\nimport PermMediaIcon from \"@material-ui/icons/PermMedia\";\r\nimport classNames from \"classnames\";\r\nimport React, { useCallback, useEffect, useMemo } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport TimeAgo from \"timeago-react\";\r\nimport { toggleSnackbar } from \"../../redux/explorer\";\r\nimport API from \"../../middleware/Api\";\r\nimport { hex2bin, sizeToString } from \"../../utils\";\r\nimport TypeIcon from \"../FileManager/TypeIcon\";\r\nimport SelectFileDialog from \"../Modals/SelectFile\";\r\nimport { useHistory } from \"react-router\";\r\nimport { TableVirtuoso } from \"react-virtuoso\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst ExpansionPanel = withStyles({\r\n    root: {\r\n        maxWidth: \"100%\",\r\n        boxShadow: \"none\",\r\n        \"&:not(:last-child)\": {\r\n            borderBottom: 0,\r\n        },\r\n        \"&:before\": {\r\n            display: \"none\",\r\n        },\r\n        \"&$expanded\": {},\r\n    },\r\n    expanded: {},\r\n})(MuiExpansionPanel);\r\n\r\nconst ExpansionPanelSummary = withStyles({\r\n    root: {\r\n        minHeight: 0,\r\n        padding: 0,\r\n\r\n        \"&$expanded\": {\r\n            minHeight: 56,\r\n        },\r\n    },\r\n    content: {\r\n        maxWidth: \"100%\",\r\n        margin: 0,\r\n        display: \"flex\",\r\n        \"&$expanded\": {\r\n            margin: \"0\",\r\n        },\r\n    },\r\n    expanded: {},\r\n})(MuiExpansionPanelSummary);\r\n\r\nconst ExpansionPanelDetails = withStyles((theme) => ({\r\n    root: {\r\n        display: \"block\",\r\n        padding: theme.spacing(0),\r\n    },\r\n}))(MuiExpansionPanelDetails);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        marginTop: \"20px\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    iconContainer: {\r\n        width: \"90px\",\r\n        height: \"96px\",\r\n        padding: \" 35px 29px 29px 29px\",\r\n        paddingLeft: \"35px\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            display: \"none\",\r\n        },\r\n    },\r\n    content: {\r\n        width: \"100%\",\r\n        minWidth: 0,\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            borderInlineStart: \"1px \" + theme.palette.divider + \" solid\",\r\n        },\r\n    },\r\n    contentSide: {\r\n        minWidth: 0,\r\n        paddingTop: \"24px\",\r\n        paddingRight: \"28px\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            display: \"none\",\r\n        },\r\n    },\r\n    iconBig: {\r\n        fontSize: \"30px\",\r\n    },\r\n    iconMultiple: {\r\n        fontSize: \"30px\",\r\n        color: \"#607D8B\",\r\n    },\r\n    progress: {\r\n        marginTop: 8,\r\n        marginBottom: 4,\r\n    },\r\n    expand: {\r\n        transition: \".15s transform ease-in-out\",\r\n    },\r\n    expanded: {\r\n        transform: \"rotate(180deg)\",\r\n    },\r\n    subFile: {\r\n        width: \"100%\",\r\n        minWidth: 300,\r\n        wordBreak: \"break-all\",\r\n    },\r\n    subFileName: {\r\n        display: \"flex\",\r\n    },\r\n    subFileIcon: {\r\n        marginRight: \"20px\",\r\n    },\r\n    subFileSize: {\r\n        minWidth: 120,\r\n    },\r\n    subFilePercent: {\r\n        minWidth: 105,\r\n    },\r\n    scroll: {\r\n        overflow: \"auto\",\r\n        maxHeight: \"300px\",\r\n    },\r\n    action: {\r\n        padding: theme.spacing(2),\r\n        textAlign: \"right\",\r\n    },\r\n    actionButton: {\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n    info: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    infoTitle: {\r\n        fontWeight: 700,\r\n    },\r\n    infoValue: {\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    bitmap: {\r\n        width: \"100%\",\r\n        height: \"50px\",\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n}));\r\n\r\nexport default function DownloadingCard(props) {\r\n    const { t } = useTranslation(\"application\", { keyPrefix: \"download\" });\r\n    const { t: tGlobal } = useTranslation();\r\n    const canvasRef = React.createRef();\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const history = useHistory();\r\n\r\n    const [expanded, setExpanded] = React.useState(\"\");\r\n    const [task, setTask] = React.useState(props.task);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [selectDialogOpen, setSelectDialogOpen] = React.useState(false);\r\n    const [selectFileOption, setSelectFileOption] = React.useState([]);\r\n\r\n    const handleChange = (panel) => (event, newExpanded) => {\r\n        setExpanded(newExpanded ? panel : false);\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        setTask(props.task);\r\n    }, [props.task]);\r\n\r\n    useEffect(() => {\r\n        if (task.info.bitfield === \"\") {\r\n            return;\r\n        }\r\n        let result = \"\";\r\n        task.info.bitfield.match(/.{1,2}/g).forEach((str) => {\r\n            result += hex2bin(str);\r\n        });\r\n        const canvas = canvasRef.current;\r\n        const context = canvas.getContext(\"2d\");\r\n        context.clearRect(0, 0, canvas.width, canvas.height);\r\n        context.strokeStyle = theme.palette.primary.main;\r\n        for (let i = 0; i < canvas.width; i++) {\r\n            let bit =\r\n                result[\r\n                    Math.round(((i + 1) / canvas.width) * task.info.numPieces)\r\n                ];\r\n            bit = bit ? bit : result.slice(-1);\r\n            if (bit === \"1\") {\r\n                context.beginPath();\r\n                context.moveTo(i, 0);\r\n                context.lineTo(i, canvas.height);\r\n                context.stroke();\r\n            }\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [task.info.bitfield, task.info.numPieces, theme]);\r\n\r\n    const getPercent = (completed, total) => {\r\n        if (total === 0) {\r\n            return 0;\r\n        }\r\n        return (completed / total) * 100;\r\n    };\r\n\r\n    const activeFiles = useCallback(() => {\r\n        return task.info.files.filter((v) => v.selected === \"true\");\r\n    }, [task.info.files]);\r\n\r\n    const deleteFile = (index) => {\r\n        setLoading(true);\r\n        const current = activeFiles();\r\n        const newIndex = [];\r\n        const newFiles = [];\r\n        // eslint-disable-next-line\r\n        current.map((v) => {\r\n            if (v.index !== index && v.selected) {\r\n                newIndex.push(parseInt(v.index));\r\n                newFiles.push({\r\n                    ...v,\r\n                    selected: \"true\",\r\n                });\r\n            } else {\r\n                newFiles.push({\r\n                    ...v,\r\n                    selected: \"false\",\r\n                });\r\n            }\r\n        });\r\n        API.put(\"/aria2/select/\" + task.info.gid, {\r\n            indexes: newIndex,\r\n        })\r\n            .then(() => {\r\n                setTask({\r\n                    ...task,\r\n                    info: {\r\n                        ...task.info,\r\n                        files: newFiles,\r\n                    },\r\n                });\r\n                ToggleSnackbar(\"top\", \"right\", t(\"taskFileDeleted\"), \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const getDownloadName = useCallback(() => {\r\n        if (task.info.bittorrent.info.name !== \"\") {\r\n            return task.info.bittorrent.info.name;\r\n        }\r\n        return task.name === \".\" ? t(\"unknownTaskName\") : task.name;\r\n    }, [task]);\r\n\r\n    const getIcon = useCallback(() => {\r\n        if (task.info.bittorrent.mode === \"multi\") {\r\n            return (\r\n                <Badge badgeContent={activeFiles().length} color=\"secondary\">\r\n                    <PermMediaIcon className={classes.iconMultiple} />\r\n                </Badge>\r\n            );\r\n        } else {\r\n            return (\r\n                <TypeIcon\r\n                    className={classes.iconBig}\r\n                    fileName={getDownloadName(task)}\r\n                />\r\n            );\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [task, classes]);\r\n\r\n    const cancel = () => {\r\n        setLoading(true);\r\n        API.delete(\"/aria2/task/\" + task.info.gid)\r\n            .then(() => {\r\n                ToggleSnackbar(\"top\", \"right\", t(\"taskCanceled\"), \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const changeSelectedFile = (fileIndex) => {\r\n        setLoading(true);\r\n        API.put(\"/aria2/select/\" + task.info.gid, {\r\n            indexes: fileIndex,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    t(\"operationSubmitted\"),\r\n                    \"success\"\r\n                );\r\n                setSelectDialogOpen(false);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const subFileList = useMemo(() => {\r\n        const processStyle = (value) => ({\r\n            background:\r\n                \"linear-gradient(to right, \" +\r\n                (theme.palette.type ===\r\n                    \"dark\"\r\n                    ? darken(\r\n                        theme.palette\r\n                            .primary\r\n                            .main,\r\n                        0.4\r\n                    )\r\n                    : lighten(\r\n                        theme.palette\r\n                            .primary\r\n                            .main,\r\n                        0.85\r\n                    )) +\r\n                \" 0%,\" +\r\n                (theme.palette.type ===\r\n                    \"dark\"\r\n                    ? darken(\r\n                        theme.palette\r\n                            .primary\r\n                            .main,\r\n                        0.4\r\n                    )\r\n                    : lighten(\r\n                        theme.palette\r\n                            .primary\r\n                            .main,\r\n                        0.85\r\n                    )) +\r\n                \" \" +\r\n                getPercent(\r\n                    value.completedLength,\r\n                    value.length\r\n                ).toFixed(0) +\r\n                \"%,\" +\r\n                theme.palette.background\r\n                    .paper +\r\n                \" \" +\r\n                getPercent(\r\n                    value.completedLength,\r\n                    value.length\r\n                ).toFixed(0) +\r\n                \"%,\" +\r\n                theme.palette.background\r\n                    .paper +\r\n                \" 100%)\",\r\n        });\r\n\r\n        const subFileCell = (value) => (\r\n            <>\r\n                <TableCell\r\n                    component=\"th\"\r\n                    scope=\"row\"\r\n                    className={classes.subFile}\r\n                >\r\n                    <Typography\r\n                        className={\r\n                            classes.subFileName\r\n                        }\r\n                    >\r\n                        <TypeIcon\r\n                            className={\r\n                                classes.subFileIcon\r\n                            }\r\n                            fileName={\r\n                                value.path\r\n                            }\r\n                        />\r\n                        {value.path}\r\n                    </Typography>\r\n                </TableCell>\r\n                <TableCell\r\n                    component=\"th\"\r\n                    scope=\"row\"\r\n                    className={classes.subFileSize}\r\n                >\r\n                    <Typography noWrap>\r\n                        {\" \"}\r\n                        {sizeToString(\r\n                            value.length\r\n                        )}\r\n                    </Typography>\r\n                </TableCell>\r\n                <TableCell\r\n                    component=\"th\"\r\n                    scope=\"row\"\r\n                    className={classes.subFilePercent}\r\n                >\r\n                    <Typography noWrap>\r\n                        {getPercent(\r\n                            value.completedLength,\r\n                            value.length\r\n                        ).toFixed(2)}\r\n                        %\r\n                    </Typography>\r\n                </TableCell>\r\n                <TableCell>\r\n                    <Tooltip\r\n                        title={t(\r\n                            \"deleteThisFile\"\r\n                        )}\r\n                    >\r\n                        <IconButton\r\n                            onClick={() =>\r\n                                deleteFile(\r\n                                    value.index\r\n                                )\r\n                            }\r\n                            disabled={loading}\r\n                            size={\"small\"}\r\n                        >\r\n                            <HighlightOff />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </TableCell>\r\n            </>\r\n        );\r\n\r\n        return activeFiles().length > 5 ? (\r\n            <TableVirtuoso\r\n                style={{ height: 43 * activeFiles().length }}\r\n                className={classes.scroll}\r\n                components={{\r\n                    // eslint-disable-next-line react/display-name\r\n                    Table: (props) => <Table {...props} size={\"small\"} />,\r\n                    // eslint-disable-next-line react/display-name\r\n                    TableRow: (props) => {\r\n                        const index = props[\"data-index\"];\r\n                        const value = activeFiles()[index];\r\n                        return (\r\n                            <TableRow\r\n                                {...props}\r\n                                key={index}\r\n                                style={processStyle(value)}\r\n                            />\r\n                        );\r\n                    },\r\n                }}\r\n                data={activeFiles()}\r\n                itemContent={(index, value) => (\r\n                    subFileCell(value)\r\n                )}\r\n            />\r\n        ) : (\r\n            <div className={classes.scroll}>\r\n                <Table size=\"small\">\r\n                    <TableBody>\r\n                        {activeFiles().map((value) => {\r\n                            return (\r\n                                <TableRow\r\n                                    key={value.index}\r\n                                    style={processStyle(value)}\r\n                                >\r\n                                    {subFileCell(value)}\r\n                                </TableRow>\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </div>\r\n        );\r\n    }, [\r\n        classes,\r\n        theme,\r\n        activeFiles,\r\n    ]);\r\n\r\n    return (\r\n        <Card className={classes.card}>\r\n            <SelectFileDialog\r\n                open={selectDialogOpen}\r\n                onClose={() => setSelectDialogOpen(false)}\r\n                modalsLoading={loading}\r\n                files={selectFileOption}\r\n                onSubmit={changeSelectedFile}\r\n            />\r\n            <ExpansionPanel\r\n                square\r\n                expanded={expanded === task.info.gid}\r\n                onChange={handleChange(task.info.gid)}\r\n            >\r\n                <ExpansionPanelSummary\r\n                    aria-controls=\"panel1d-content\"\r\n                    id=\"panel1d-header\"\r\n                >\r\n                    <div className={classes.iconContainer}>{getIcon()}</div>\r\n                    <CardContent className={classes.content}>\r\n                        <Typography color=\"primary\" noWrap>\r\n                            <Tooltip title={getDownloadName()}>\r\n                                <span>{getDownloadName()}</span>\r\n                            </Tooltip>\r\n                        </Typography>\r\n                        <LinearProgress\r\n                            color=\"secondary\"\r\n                            variant=\"determinate\"\r\n                            className={classes.progress}\r\n                            value={getPercent(task.downloaded, task.total)}\r\n                        />\r\n                        <Typography\r\n                            variant=\"body2\"\r\n                            color=\"textSecondary\"\r\n                            noWrap\r\n                        >\r\n                            {task.total > 0 && (\r\n                                <span>\r\n                                    {getPercent(\r\n                                        task.downloaded,\r\n                                        task.total\r\n                                    ).toFixed(2)}\r\n                                    % -{\" \"}\r\n                                    {task.downloaded === 0\r\n                                        ? \"0Bytes\"\r\n                                        : sizeToString(task.downloaded)}\r\n                                    /\r\n                                    {task.total === 0\r\n                                        ? \"0Bytes\"\r\n                                        : sizeToString(task.total)}{\" \"}\r\n                                    -{\" \"}\r\n                                    {task.speed === \"0\"\r\n                                        ? \"0B/s\"\r\n                                        : sizeToString(task.speed) + \"/s\"}\r\n                                </span>\r\n                            )}\r\n                            {task.total === 0 && <span> - </span>}\r\n                        </Typography>\r\n                    </CardContent>\r\n                    <CardContent className={classes.contentSide}>\r\n                        <IconButton>\r\n                            <ExpandMore\r\n                                className={classNames(\r\n                                    {\r\n                                        [classes.expanded]:\r\n                                            expanded === task.info.gid,\r\n                                    },\r\n                                    classes.expand\r\n                                )}\r\n                            />\r\n                        </IconButton>\r\n                    </CardContent>\r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails>\r\n                    <Divider />\r\n                    {task.info.bittorrent.mode === \"multi\" && subFileList}\r\n                    <div className={classes.action}>\r\n                        <Button\r\n                            className={classes.actionButton}\r\n                            variant=\"outlined\"\r\n                            color=\"secondary\"\r\n                            onClick={() =>\r\n                                history.push(\r\n                                    \"/home?path=\" + encodeURIComponent(task.dst)\r\n                                )\r\n                            }\r\n                        >\r\n                            {t(\"openDstFolder\")}\r\n                        </Button>\r\n                        {task.info.bittorrent.mode === \"multi\" && (\r\n                            <Button\r\n                                className={classes.actionButton}\r\n                                variant=\"outlined\"\r\n                                color=\"secondary\"\r\n                                disabled={loading}\r\n                                onClick={() => {\r\n                                    setSelectDialogOpen(true);\r\n                                    setSelectFileOption([\r\n                                        ...props.task.info.files,\r\n                                    ]);\r\n                                }}\r\n                            >\r\n                                {t(\"selectDownloadingFile\")}\r\n                            </Button>\r\n                        )}\r\n                        <Button\r\n                            className={classes.actionButton}\r\n                            onClick={cancel}\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            disabled={loading}\r\n                        >\r\n                            {t(\"cancelTask\")}\r\n                        </Button>\r\n                    </div>\r\n                    <Divider />\r\n                    <div className={classes.info}>\r\n                        {task.info.bitfield !== \"\" && (\r\n                            <canvas\r\n                                width={\"700\"}\r\n                                height={\"100\"}\r\n                                ref={canvasRef}\r\n                                className={classes.bitmap}\r\n                            />\r\n                        )}\r\n\r\n                        <Grid container>\r\n                            <Grid container xs={12} sm={4}>\r\n                                <Grid item xs={5} className={classes.infoTitle}>\r\n                                    {t(\"updatedAt\")}\r\n                                </Grid>\r\n                                <Grid item xs={7} className={classes.infoValue}>\r\n                                    <TimeAgo\r\n                                        datetime={task.update}\r\n                                        locale={tGlobal(\"timeAgoLocaleCode\", {\r\n                                            ns: \"common\",\r\n                                        })}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container xs={12} sm={4}>\r\n                                <Grid item xs={5} className={classes.infoTitle}>\r\n                                    {t(\"uploaded\")}\r\n                                </Grid>\r\n                                <Grid item xs={7} className={classes.infoValue}>\r\n                                    {sizeToString(task.info.uploadLength)}\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container xs={12} sm={4}>\r\n                                <Grid item xs={5} className={classes.infoTitle}>\r\n                                    {t(\"uploadSpeed\")}\r\n                                </Grid>\r\n                                <Grid item xs={7} className={classes.infoValue}>\r\n                                    {sizeToString(task.info.uploadSpeed)} / s\r\n                                </Grid>\r\n                            </Grid>\r\n                            {task.info.bittorrent.mode !== \"\" && (\r\n                                <>\r\n                                    <Grid container xs={12} sm={8}>\r\n                                        <Grid\r\n                                            item\r\n                                            sm={2}\r\n                                            xs={4}\r\n                                            className={classes.infoTitle}\r\n                                        >\r\n                                            {t(\"InfoHash\")}\r\n                                        </Grid>\r\n                                        <Grid\r\n                                            item\r\n                                            sm={10}\r\n                                            xs={8}\r\n                                            style={{\r\n                                                wordBreak: \"break-all\",\r\n                                            }}\r\n                                            className={classes.infoValue}\r\n                                        >\r\n                                            {task.info.infoHash}\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid container xs={12} sm={4}>\r\n                                        <Grid\r\n                                            item\r\n                                            xs={5}\r\n                                            className={classes.infoTitle}\r\n                                        >\r\n                                            {t(\"seederCount\")}\r\n                                        </Grid>\r\n                                        <Grid\r\n                                            item\r\n                                            xs={7}\r\n                                            className={classes.infoValue}\r\n                                        >\r\n                                            {task.info.numSeeders}\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid container xs={12} sm={4}>\r\n                                        <Grid\r\n                                            item\r\n                                            xs={5}\r\n                                            className={classes.infoTitle}\r\n                                        >\r\n                                            {t(\"seeding\")}\r\n                                        </Grid>\r\n                                        <Grid\r\n                                            item\r\n                                            xs={7}\r\n                                            className={classes.infoValue}\r\n                                        >\r\n                                            {task.info.seeder === \"true\"\r\n                                                ? t(\"isSeeding\")\r\n                                                : t(\"notSeeding\")}\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </>\r\n                            )}\r\n                            <Grid container xs={12} sm={4}>\r\n                                <Grid item xs={5} className={classes.infoTitle}>\r\n                                    {t(\"chunkSize\")}\r\n                                </Grid>\r\n                                <Grid item xs={7} className={classes.infoValue}>\r\n                                    {sizeToString(task.info.pieceLength)}\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container xs={12} sm={4}>\r\n                                <Grid item xs={5} className={classes.infoTitle}>\r\n                                    {t(\"chunkNumbers\")}\r\n                                </Grid>\r\n                                <Grid item xs={7} className={classes.infoValue}>\r\n                                    {task.info.numPieces}\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </div>\r\n                </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n        </Card>\r\n    );\r\n}\r\n","import React, { useCallback, useMemo } from \"react\";\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    IconButton,\r\n    makeStyles,\r\n    Typography,\r\n    useTheme,\r\n} from \"@material-ui/core\";\r\nimport { sizeToString } from \"../../utils\";\r\nimport PermMediaIcon from \"@material-ui/icons/PermMedia\";\r\nimport TypeIcon from \"../FileManager/TypeIcon\";\r\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { ExpandMore } from \"@material-ui/icons\";\r\nimport classNames from \"classnames\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport API from \"../../middleware/Api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { formatLocalTime } from \"../../utils/datetime\";\r\nimport { toggleSnackbar } from \"../../redux/explorer\";\r\nimport { TableVirtuoso } from \"react-virtuoso\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst ExpansionPanel = withStyles({\r\n    root: {\r\n        maxWidth: \"100%\",\r\n        boxShadow: \"none\",\r\n        \"&:not(:last-child)\": {\r\n            borderBottom: 0,\r\n        },\r\n        \"&:before\": {\r\n            display: \"none\",\r\n        },\r\n        \"&$expanded\": {},\r\n    },\r\n    expanded: {},\r\n})(MuiExpansionPanel);\r\n\r\nconst ExpansionPanelSummary = withStyles({\r\n    root: {\r\n        minHeight: 0,\r\n        padding: 0,\r\n\r\n        \"&$expanded\": {\r\n            minHeight: 56,\r\n        },\r\n    },\r\n    content: {\r\n        maxWidth: \"100%\",\r\n        margin: 0,\r\n        display: \"flex\",\r\n        \"&$expanded\": {\r\n            margin: \"0\",\r\n        },\r\n    },\r\n    expanded: {},\r\n})(MuiExpansionPanelSummary);\r\n\r\nconst ExpansionPanelDetails = withStyles((theme) => ({\r\n    root: {\r\n        display: \"block\",\r\n        padding: theme.spacing(0),\r\n    },\r\n}))(MuiExpansionPanelDetails);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        marginTop: \"20px\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    iconContainer: {\r\n        width: \"90px\",\r\n        height: \"96px\",\r\n        padding: \" 35px 29px 29px 29px\",\r\n        paddingLeft: \"35px\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            display: \"none\",\r\n        },\r\n    },\r\n    content: {\r\n        width: \"100%\",\r\n        minWidth: 0,\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            borderInlineStart: \"1px \" + theme.palette.divider + \" solid\",\r\n        },\r\n        textAlign: \"left\",\r\n    },\r\n    contentSide: {\r\n        minWidth: 0,\r\n        paddingTop: \"24px\",\r\n        paddingRight: \"28px\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            display: \"none\",\r\n        },\r\n    },\r\n    iconBig: {\r\n        fontSize: \"30px\",\r\n    },\r\n    iconMultiple: {\r\n        fontSize: \"30px\",\r\n        color: \"#607D8B\",\r\n    },\r\n    progress: {\r\n        marginTop: 8,\r\n        marginBottom: 4,\r\n    },\r\n    expand: {\r\n        transition: \".15s transform ease-in-out\",\r\n    },\r\n    expanded: {\r\n        transform: \"rotate(180deg)\",\r\n    },\r\n    subFile: {\r\n        width: \"100%\",\r\n        minWidth: 300,\r\n        wordBreak: \"break-all\",\r\n    },\r\n    subFileName: {\r\n        display: \"flex\",\r\n    },\r\n    subFileIcon: {\r\n        marginRight: \"20px\",\r\n    },\r\n    subFileSize: {\r\n        minWidth: 115,\r\n    },\r\n    subFilePercent: {\r\n        minWidth: 100,\r\n    },\r\n    scroll: {\r\n        overflow: \"auto\",\r\n        maxHeight: \"300px\",\r\n    },\r\n    action: {\r\n        padding: theme.spacing(2),\r\n        textAlign: \"right\",\r\n    },\r\n    actionButton: {\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n    info: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    infoTitle: {\r\n        fontWeight: 700,\r\n    },\r\n    infoValue: {\r\n        color: theme.palette.text.secondary,\r\n    },\r\n}));\r\n\r\nexport default function FinishedCard(props) {\r\n    const { t } = useTranslation(\"application\", { keyPrefix: \"download\" });\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const history = useHistory();\r\n\r\n    const [expanded, setExpanded] = React.useState(false);\r\n    const [loading, setLoading] = React.useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const handleChange = () => (event, newExpanded) => {\r\n        setExpanded(!!newExpanded);\r\n    };\r\n\r\n    const getPercent = (completed, total) => {\r\n        if (total === 0) {\r\n            return 0;\r\n        }\r\n        return (completed / total) * 100;\r\n    };\r\n\r\n    const cancel = () => {\r\n        setLoading(true);\r\n        API.delete(\"/aria2/task/\" + props.task.gid)\r\n            .then(() => {\r\n                ToggleSnackbar(\"top\", \"right\", t(\"taskDeleted\"), \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                window.location.reload();\r\n            });\r\n    };\r\n\r\n    const getDownloadName = useCallback(() => {\r\n        return props.task.name === \".\" ? t(\"unknownTaskName\") : props.task.name;\r\n    }, [props.task.name]);\r\n\r\n    const activeFiles = useCallback(() => {\r\n        return props.task.files.filter((v) => v.selected === \"true\");\r\n    }, [props.task.files]);\r\n\r\n    const getIcon = useCallback(() => {\r\n        if (props.task.files.length > 1) {\r\n            return (\r\n                <Badge badgeContent={activeFiles().length} color=\"secondary\">\r\n                    <PermMediaIcon className={classes.iconMultiple} />\r\n                </Badge>\r\n            );\r\n        } else {\r\n            return (\r\n                <TypeIcon\r\n                    className={classes.iconBig}\r\n                    fileName={getDownloadName(props.task)}\r\n                />\r\n            );\r\n        }\r\n    }, [props.task, classes]);\r\n\r\n    const getTaskError = (error) => {\r\n        try {\r\n            const res = JSON.parse(error);\r\n            return res.msg + \"：\" + res.error;\r\n        } catch (e) {\r\n            return t(\"transferFailed\");\r\n        }\r\n    };\r\n\r\n    const subFileList = useMemo(() => {\r\n        const subFileCell = (value) => (\r\n            <>\r\n                <TableCell\r\n                    component=\"th\"\r\n                    scope=\"row\"\r\n                    className={classes.subFile}\r\n                >\r\n                    <Typography\r\n                        className={\r\n                            classes.subFileName\r\n                        }\r\n                    >\r\n                        <TypeIcon\r\n                            className={\r\n                                classes.subFileIcon\r\n                            }\r\n                            fileName={\r\n                                value.path\r\n                            }\r\n                        />\r\n                        {value.path}\r\n                    </Typography>\r\n                </TableCell>\r\n                <TableCell\r\n                    component=\"th\"\r\n                    scope=\"row\"\r\n                    className={classes.subFileSize}\r\n                >\r\n                    <Typography noWrap>\r\n                        {\" \"}\r\n                        {sizeToString(\r\n                            value.length\r\n                        )}\r\n                    </Typography>\r\n                </TableCell>\r\n                <TableCell\r\n                    component=\"th\"\r\n                    scope=\"row\"\r\n                    className={classes.subFilePercent}\r\n                >\r\n                    <Typography noWrap>\r\n                        {getPercent(\r\n                            value.completedLength,\r\n                            value.length\r\n                        ).toFixed(2)}\r\n                        %\r\n                    </Typography>\r\n                </TableCell>\r\n            </>\r\n        );\r\n\r\n        return activeFiles().length > 5 ? (\r\n            <TableVirtuoso\r\n                style={{ height: 57 * activeFiles().length }}\r\n                className={classes.scroll}\r\n                components={{\r\n                    // eslint-disable-next-line react/display-name\r\n                    Table: (props) => <Table {...props} />,\r\n                }}\r\n                data={activeFiles()}\r\n                itemContent={(index, value) => (\r\n                    subFileCell(value)\r\n                )}\r\n            />\r\n        ) : (\r\n            <div className={classes.scroll}>\r\n                <Table>\r\n                    <TableBody>\r\n                        {activeFiles().map((value) => {\r\n                            return (\r\n                                <TableRow key={value.index}>\r\n                                    {subFileCell(value)}\r\n                                </TableRow>\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </div>\r\n        );\r\n    }, [\r\n        classes,\r\n        activeFiles,\r\n    ]);\r\n\r\n    return (\r\n        <Card className={classes.card}>\r\n            <ExpansionPanel\r\n                square\r\n                expanded={expanded}\r\n                onChange={handleChange(\"\")}\r\n            >\r\n                <ExpansionPanelSummary\r\n                    aria-controls=\"panel1d-content\"\r\n                    id=\"panel1d-header\"\r\n                >\r\n                    <div className={classes.iconContainer}>{getIcon()}</div>\r\n                    <CardContent className={classes.content}>\r\n                        <Typography color=\"primary\" noWrap>\r\n                            <Tooltip title={getDownloadName()}>\r\n                                <span>{getDownloadName()}</span>\r\n                            </Tooltip>\r\n                        </Typography>\r\n                        {props.task.status === 3 && (\r\n                            <Tooltip title={props.task.error}>\r\n                                <Typography\r\n                                    variant=\"body2\"\r\n                                    color=\"error\"\r\n                                    noWrap\r\n                                >\r\n                                    {t(\"downloadFailed\", {\r\n                                        msg: props.task.error,\r\n                                    })}\r\n                                </Typography>\r\n                            </Tooltip>\r\n                        )}\r\n                        {props.task.status === 5 && (\r\n                            <Typography\r\n                                variant=\"body2\"\r\n                                color=\"textSecondary\"\r\n                                noWrap\r\n                            >\r\n                                {t(\"canceledStatus\")}\r\n                                {props.task.error !== \"\" && (\r\n                                    <span>({props.task.error})</span>\r\n                                )}\r\n                            </Typography>\r\n                        )}\r\n                        {props.task.status === 4 &&\r\n                            props.task.task_status === 4 && (\r\n                                <Typography\r\n                                    variant=\"body2\"\r\n                                    style={{\r\n                                        color: theme.palette.success.main,\r\n                                    }}\r\n                                    noWrap\r\n                                >\r\n                                    {t(\"finishedStatus\")}\r\n                                </Typography>\r\n                            )}\r\n                        {props.task.status === 4 &&\r\n                            props.task.task_status === 0 && (\r\n                                <Typography\r\n                                    variant=\"body2\"\r\n                                    style={{\r\n                                        color: theme.palette.success.light,\r\n                                    }}\r\n                                    noWrap\r\n                                >\r\n                                    {t(\"transferring\")}\r\n                                </Typography>\r\n                            )}\r\n                        {props.task.status === 4 &&\r\n                            props.task.task_status === 1 && (\r\n                                <Typography\r\n                                    variant=\"body2\"\r\n                                    style={{\r\n                                        color: theme.palette.success.light,\r\n                                    }}\r\n                                    noWrap\r\n                                >\r\n                                    {t(\"transferring\")}\r\n                                </Typography>\r\n                            )}\r\n                        {props.task.status === 4 &&\r\n                            props.task.task_status === 2 && (\r\n                                <Typography\r\n                                    variant=\"body2\"\r\n                                    color={\"error\"}\r\n                                    noWrap\r\n                                >\r\n                                    {getTaskError(props.task.task_error)}\r\n                                </Typography>\r\n                            )}\r\n                    </CardContent>\r\n                    <CardContent className={classes.contentSide}>\r\n                        <IconButton>\r\n                            <ExpandMore\r\n                                className={classNames(\r\n                                    {\r\n                                        [classes.expanded]: expanded,\r\n                                    },\r\n                                    classes.expand\r\n                                )}\r\n                            />\r\n                        </IconButton>\r\n                    </CardContent>\r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails>\r\n                    <Divider />\r\n                    {props.task.files.length > 1 && subFileList}\r\n                    <div className={classes.action}>\r\n                        <Button\r\n                            className={classes.actionButton}\r\n                            variant=\"outlined\"\r\n                            color=\"secondary\"\r\n                            onClick={() =>\r\n                                history.push(\r\n                                    \"/home?path=\" +\r\n                                        encodeURIComponent(props.task.dst)\r\n                                )\r\n                            }\r\n                        >\r\n                            {t(\"openDstFolder\")}\r\n                        </Button>\r\n                        <Button\r\n                            className={classes.actionButton}\r\n                            onClick={cancel}\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            disabled={loading}\r\n                        >\r\n                            {t(\"deleteRecord\")}\r\n                        </Button>\r\n                    </div>\r\n                    <Divider />\r\n                    <div className={classes.info}>\r\n                        <Grid container>\r\n                            <Grid container xs={12} sm={6}>\r\n                                <Grid item xs={5} className={classes.infoTitle}>\r\n                                    {t(\"createdAt\")}\r\n                                </Grid>\r\n                                <Grid item xs={7} className={classes.infoValue}>\r\n                                    {formatLocalTime(props.task.create)}\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container xs={12} sm={6}>\r\n                                <Grid item xs={5} className={classes.infoTitle}>\r\n                                    {t(\"updatedAt\")}\r\n                                </Grid>\r\n                                <Grid item xs={7} className={classes.infoValue}>\r\n                                    {formatLocalTime(props.task.update)}\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </div>\r\n                </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n        </Card>\r\n    );\r\n}\r\n","import React, { useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport AutoHidden from \"./AutoHidden\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport { Add } from \"@material-ui/icons\";\r\nimport Modals from \"../FileManager/Modals\";\r\nimport { openRemoteDownloadDialog } from \"../../redux/explorer\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    fab: {\r\n        margin: 0,\r\n        top: \"auto\",\r\n        right: 20,\r\n        bottom: 20,\r\n        left: \"auto\",\r\n        zIndex: 5,\r\n        position: \"fixed\",\r\n    },\r\n}));\r\n\r\nexport default function RemoteDownloadButton() {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    const OpenRemoteDownloadDialog = useCallback(\r\n        () => dispatch(openRemoteDownloadDialog()),\r\n        [dispatch]\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <Modals />\r\n            <AutoHidden enable>\r\n                <Fab\r\n                    className={classes.fab}\r\n                    color=\"secondary\"\r\n                    onClick={() => OpenRemoteDownloadDialog()}\r\n                >\r\n                    <Add />\r\n                </Fab>\r\n            </AutoHidden>\r\n        </>\r\n    );\r\n}\r\n","import { Button, IconButton, Typography, withStyles } from \"@material-ui/core\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../redux/explorer\";\r\nimport API from \"../../middleware/Api\";\r\nimport DownloadingCard from \"./DownloadingCard\";\r\nimport FinishedCard from \"./FinishedCard\";\r\nimport RemoteDownloadButton from \"../Dial/Aria2\";\r\nimport Auth from \"../../middleware/Auth\";\r\nimport Nothing from \"../Placeholder/Nothing\";\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\nconst styles = (theme) => ({\r\n    actions: {\r\n        display: \"flex\",\r\n    },\r\n    title: {\r\n        marginTop: \"20px\",\r\n    },\r\n    layout: {\r\n        width: \"auto\",\r\n        marginTop: \"30px\",\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\r\n            width: 700,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n    },\r\n    shareTitle: {\r\n        maxWidth: \"200px\",\r\n    },\r\n    avatarFile: {\r\n        backgroundColor: theme.palette.primary.light,\r\n    },\r\n    avatarFolder: {\r\n        backgroundColor: theme.palette.secondary.light,\r\n    },\r\n    gird: {\r\n        marginTop: \"30px\",\r\n    },\r\n    hide: {\r\n        display: \"none\",\r\n    },\r\n    loadingAnimation: {\r\n        borderRadius: \"6px 6px 0 0\",\r\n    },\r\n    shareFix: {\r\n        marginLeft: \"20px\",\r\n    },\r\n    loadMore: {\r\n        textAlign: \"center\",\r\n        marginTop: \"20px\",\r\n        marginBottom: \"20px\",\r\n    },\r\n    margin: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n});\r\nconst mapStateToProps = () => {\r\n    return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\r\n        },\r\n    };\r\n};\r\n\r\nclass DownloadComponent extends Component {\r\n    page = 0;\r\n    interval = 0;\r\n    previousDownloading = -1;\r\n\r\n    state = {\r\n        downloading: [],\r\n        loading: false,\r\n        finishedList: [],\r\n        continue: true,\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        this.loadDownloading();\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.interval);\r\n    }\r\n\r\n    loadDownloading = () => {\r\n        this.setState({\r\n            loading: true,\r\n        });\r\n        API.get(\"/aria2/downloading\")\r\n            .then((response) => {\r\n                this.setState({\r\n                    downloading: response.data,\r\n                    loading: false,\r\n                });\r\n                // 设定自动更新\r\n                clearTimeout(this.interval);\r\n                if (response.data.length > 0) {\r\n                    this.interval = setTimeout(\r\n                        this.loadDownloading,\r\n                        1000 *\r\n                            response.data.reduce(function (prev, current) {\r\n                                return prev.interval < current.interval\r\n                                    ? prev\r\n                                    : current;\r\n                            }).interval\r\n                    );\r\n                }\r\n\r\n                // 下载中条目变更时刷新已完成列表\r\n                if (response.data.length !== this.previousDownloading) {\r\n                    this.page = 0;\r\n                    this.setState({\r\n                        finishedList: [],\r\n                        continue: true,\r\n                    });\r\n                    this.loadMore();\r\n                }\r\n                this.previousDownloading = response.data.length;\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n            });\r\n    };\r\n\r\n    loadMore = () => {\r\n        this.setState({\r\n            loading: true,\r\n        });\r\n        API.get(\"/aria2/finished?page=\" + ++this.page)\r\n            .then((response) => {\r\n                this.setState({\r\n                    finishedList: [\r\n                        ...this.state.finishedList,\r\n                        ...response.data,\r\n                    ],\r\n                    loading: false,\r\n                    continue: response.data.length >= 10,\r\n                });\r\n            })\r\n            .catch(() => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    this.props.t(\"download.failedToLoad\"),\r\n                    \"error\"\r\n                );\r\n                this.setState({\r\n                    loading: false,\r\n                });\r\n            });\r\n    };\r\n\r\n    render() {\r\n        const { classes, t } = this.props;\r\n        const user = Auth.GetUser();\r\n\r\n        return (\r\n            <div className={classes.layout}>\r\n                {user.group.allowRemoteDownload && <RemoteDownloadButton />}\r\n                <Typography\r\n                    color=\"textSecondary\"\r\n                    variant=\"h4\"\r\n                    className={classes.title}\r\n                >\r\n                    {t(\"download.active\")}\r\n                    <IconButton\r\n                        disabled={this.state.loading}\r\n                        onClick={this.loadDownloading}\r\n                    >\r\n                        <RefreshIcon />\r\n                    </IconButton>\r\n                </Typography>\r\n                {this.state.downloading.length === 0 && (\r\n                    <Nothing primary={t(\"download.activeEmpty\")} />\r\n                )}\r\n                {this.state.downloading.map((value, k) => (\r\n                    <DownloadingCard key={k} task={value} />\r\n                ))}\r\n                <Typography\r\n                    color=\"textSecondary\"\r\n                    variant=\"h4\"\r\n                    className={classes.title}\r\n                >\r\n                    {t(\"download.finished\")}\r\n                </Typography>\r\n                <div className={classes.loadMore}>\r\n                    {this.state.finishedList.length === 0 && (\r\n                        <Nothing primary={t(\"download.finishedEmpty\")} />\r\n                    )}\r\n                    {this.state.finishedList.map((value, k) => {\r\n                        if (value.files) {\r\n                            return <FinishedCard key={k} task={value} />;\r\n                        }\r\n                        return null;\r\n                    })}\r\n                    <Button\r\n                        size=\"large\"\r\n                        className={classes.margin}\r\n                        disabled={!this.state.continue}\r\n                        onClick={this.loadMore}\r\n                    >\r\n                        {t(\"download.loadMore\")}\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst Download = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withTranslation()(DownloadComponent)));\r\n\r\nexport default Download;\r\n","import React from \"react\";\r\nimport { Facebook } from \"react-content-loader\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    loader: {\r\n        width: \"80%\",\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            width: \" 50%\",\r\n        },\r\n\r\n        marginTop: 30,\r\n    },\r\n}));\r\n\r\nconst MyLoader = (props) => {\r\n    return (\r\n        <Facebook\r\n            backgroundColor={props.dark ? \"#333\" : \"#f5f6f7\"}\r\n            foregroundColor={props.dark ? \"#636363\" : \"#eee\"}\r\n            className={props.className}\r\n        />\r\n    );\r\n};\r\n\r\nfunction PageLoading() {\r\n    const theme = useTheme();\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                textAlign: \"center\",\r\n            }}\r\n        >\r\n            <MyLoader\r\n                dark={theme.palette.type === \"dark\"}\r\n                className={classes.loader}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PageLoading;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n    Avatar,\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    CardHeader,\r\n    Divider,\r\n    TextField,\r\n    withStyles,\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router\";\r\nimport { formatLocalTime } from \"../../utils/datetime\";\r\nimport { toggleSnackbar } from \"../../redux/explorer\";\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\nconst styles = (theme) => ({\r\n    card: {\r\n        maxWidth: 400,\r\n        margin: \"0 auto\",\r\n    },\r\n    actions: {\r\n        display: \"flex\",\r\n    },\r\n    layout: {\r\n        width: \"auto\",\r\n        marginTop: \"110px\",\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\r\n            width: 1100,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n    },\r\n    continue: {\r\n        marginLeft: \"auto\",\r\n        marginRight: \"10px\",\r\n        marginRottom: \"10px\",\r\n    },\r\n});\r\nconst mapStateToProps = () => {\r\n    return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\r\n        },\r\n    };\r\n};\r\n\r\nclass LockedFileCompoment extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const query = new URLSearchParams(this.props.location.search);\r\n        this.state = {\r\n            pwd: query.get(\"password\"),\r\n        };\r\n    }\r\n\r\n    handleChange = (name) => (event) => {\r\n        this.setState({ [name]: event.target.value });\r\n    };\r\n\r\n    submit = (e) => {\r\n        e.preventDefault();\r\n        if (this.state.pwd === \"\") {\r\n            return;\r\n        }\r\n        this.props.setPassowrd(this.state.pwd);\r\n    };\r\n\r\n    render() {\r\n        const { classes, t } = this.props;\r\n\r\n        return (\r\n            <div className={classes.layout}>\r\n                <Card className={classes.card}>\r\n                    <CardHeader\r\n                        avatar={\r\n                            <Avatar\r\n                                aria-label=\"Recipe\"\r\n                                src={\r\n                                    \"/api/v3/user/avatar/\" +\r\n                                    this.props.share.creator.key +\r\n                                    \"/l\"\r\n                                }\r\n                            />\r\n                        }\r\n                        title={t(\"share.privateShareTitle\", {\r\n                            nick: this.props.share.creator.nick,\r\n                        })}\r\n                        subheader={formatLocalTime(\r\n                            this.props.share.create_date\r\n                        )}\r\n                    />\r\n                    <Divider />\r\n                    <CardContent>\r\n                        <form onSubmit={this.submit}>\r\n                            <TextField\r\n                                id=\"pwd\"\r\n                                label={t(\"share.enterPassword\")}\r\n                                value={this.state.pwd}\r\n                                onChange={this.handleChange(\"pwd\")}\r\n                                margin=\"normal\"\r\n                                type=\"password\"\r\n                                autoFocus\r\n                                fullWidth\r\n                                color=\"secondary\"\r\n                            />\r\n                        </form>\r\n                    </CardContent>\r\n                    <CardActions\r\n                        className={classes.actions}\r\n                        disableActionSpacing\r\n                    >\r\n                        <Button\r\n                            onClick={this.submit}\r\n                            color=\"secondary\"\r\n                            className={classes.continue}\r\n                            variant=\"contained\"\r\n                            disabled={\r\n                                this.state.pwd === \"\" || this.props.loading\r\n                            }\r\n                        >\r\n                            {t(\"share.continue\")}\r\n                        </Button>\r\n                    </CardActions>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst LockedFile = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withRouter(withTranslation()(LockedFileCompoment))));\r\n\r\nexport default LockedFile;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Avatar, Typography } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { formatLocalTime } from \"../../utils/datetime\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    boxHeader: {\r\n        textAlign: \"center\",\r\n        padding: 24,\r\n    },\r\n    avatar: {\r\n        backgroundColor: theme.palette.secondary.main,\r\n        margin: \"0 auto\",\r\n        width: 50,\r\n        height: 50,\r\n        cursor: \"pointer\",\r\n    },\r\n    shareDes: {\r\n        marginTop: 12,\r\n    },\r\n    shareInfo: {\r\n        color: theme.palette.text.disabled,\r\n        fontSize: 14,\r\n    },\r\n}));\r\n\r\nexport default function Creator(props) {\r\n    const { t } = useTranslation(\"application\", { keyPrefix: \"share\" });\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const getSecondDes = () => {\r\n        if (props.share.expire > 0) {\r\n            if (props.share.expire >= 24 * 3600) {\r\n                return t(\"expireInXDays\", {\r\n                    num: Math.round(props.share.expire / (24 * 3600)),\r\n                });\r\n            }\r\n\r\n            return t(\"expireInXHours\", {\r\n                num: Math.round(props.share.expire / 3600),\r\n            });\r\n        }\r\n        return formatLocalTime(props.share.create_date);\r\n    };\r\n\r\n    const userProfile = () => {\r\n        history.push(\"/profile/\" + props.share.creator.key);\r\n        props.onClose && props.onClose();\r\n    };\r\n\r\n    return (\r\n        <div className={classes.boxHeader}>\r\n            <Avatar\r\n                className={classes.avatar}\r\n                alt={props.share.creator.nick}\r\n                src={\"/api/v3/user/avatar/\" + props.share.creator.key + \"/l\"}\r\n                onClick={() => userProfile()}\r\n            />\r\n            <Typography variant=\"h6\" className={classes.shareDes}>\r\n                {props.isFolder && (\r\n                    <Trans\r\n                        i18nKey=\"share.createdBy\"\r\n                        values={{\r\n                            nick: props.share.creator.nick,\r\n                        }}\r\n                        components={[\r\n                            <Link\r\n                                key={0}\r\n                                onClick={() => userProfile()}\r\n                                href={\"javascript:void(0)\"}\r\n                                color=\"inherit\"\r\n                            />,\r\n                        ]}\r\n                    />\r\n                )}\r\n                {!props.isFolder && (\r\n                    <Trans\r\n                        i18nKey=\"share.sharedBy\"\r\n                        values={{\r\n                            num: 1,\r\n                            nick: props.share.creator.nick,\r\n                        }}\r\n                        components={[\r\n                            <Link\r\n                                key={0}\r\n                                onClick={() => userProfile()}\r\n                                href={\"javascript:void(0)\"}\r\n                                color=\"inherit\"\r\n                            />,\r\n                        ]}\r\n                    />\r\n                )}\r\n            </Typography>\r\n            <Typography className={classes.shareInfo}>\r\n                {t(\"statistics\", {\r\n                    views: props.share.views,\r\n                    downloads: props.share.downloads,\r\n                    time: getSecondDes(),\r\n                })}\r\n            </Typography>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { sizeToString, vhCheck } from \"../../utils\";\r\nimport { isPreviewable } from \"../../config\";\r\nimport { Button, Typography, withStyles } from \"@material-ui/core\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport TypeIcon from \"../FileManager/TypeIcon\";\r\nimport Auth from \"../../middleware/Auth\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Creator from \"./Creator\";\r\nimport pathHelper from \"../../utils/page\";\r\nimport {\r\n    openMusicDialog,\r\n    openResaveDialog,\r\n    setSelectedTarget,\r\n    showImgPreivew,\r\n    toggleSnackbar,\r\n} from \"../../redux/explorer\";\r\nimport { startDownload } from \"../../redux/explorer/action\";\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\nvhCheck();\r\nconst styles = (theme) => ({\r\n    layout: {\r\n        width: \"auto\",\r\n        marginTop: \"90px\",\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\r\n            width: 1100,\r\n            marginTop: \"90px\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            marginTop: 0,\r\n            marginLeft: 0,\r\n            marginRight: 0,\r\n        },\r\n        justifyContent: \"center\",\r\n        display: \"flex\",\r\n    },\r\n    player: {\r\n        borderRadius: \"4px\",\r\n    },\r\n    fileCotainer: {\r\n        width: \"200px\",\r\n        margin: \"0 auto\",\r\n    },\r\n    buttonCotainer: {\r\n        width: \"400px\",\r\n        margin: \"0 auto\",\r\n        textAlign: \"center\",\r\n        marginTop: \"20px\",\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    icon: {\r\n        borderRadius: \"10%\",\r\n        marginTop: 2,\r\n    },\r\n\r\n    box: {\r\n        width: \"100%\",\r\n        maxWidth: 440,\r\n        backgroundColor: theme.palette.background.paper,\r\n        borderRadius: 12,\r\n        boxShadow: \"0 8px 16px rgba(29,39,55,.25)\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            height: \"calc(var(--vh, 100vh) - 56px)\",\r\n            borderRadius: 0,\r\n            maxWidth: 1000,\r\n        },\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n    },\r\n    boxContent: {\r\n        padding: 24,\r\n        display: \"flex\",\r\n        flex: \"1\",\r\n    },\r\n    fileName: {\r\n        marginLeft: 20,\r\n    },\r\n    fileSize: {\r\n        color: theme.palette.text.disabled,\r\n        fontSize: 14,\r\n    },\r\n    boxFooter: {\r\n        display: \"flex\",\r\n        padding: \"20px 16px\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    downloadButton: {\r\n        marginLeft: 8,\r\n    },\r\n});\r\nconst mapStateToProps = () => {\r\n    return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\r\n        },\r\n        openMusicDialog: () => {\r\n            dispatch(openMusicDialog());\r\n        },\r\n        setSelectedTarget: (targets) => {\r\n            dispatch(setSelectedTarget(targets));\r\n        },\r\n        showImgPreivew: (first) => {\r\n            dispatch(showImgPreivew(first));\r\n        },\r\n        openResave: (key) => {\r\n            dispatch(openResaveDialog(key));\r\n        },\r\n        startDownload: (share, file) => {\r\n            dispatch(startDownload(share, file));\r\n        },\r\n    };\r\n};\r\n\r\nconst Modals = React.lazy(() => import(\"../FileManager/Modals\"));\r\nconst ImgPreview = React.lazy(() => import(\"../FileManager/ImgPreview\"));\r\n\r\nclass SharedFileCompoment extends Component {\r\n    state = {\r\n        anchorEl: null,\r\n        open: false,\r\n        purchaseCallback: null,\r\n        loading: false,\r\n    };\r\n\r\n    downloaded = false;\r\n\r\n    // TODO merge into react thunk\r\n    preview = () => {\r\n        if (pathHelper.isSharePage(this.props.location.pathname)) {\r\n            const user = Auth.GetUser();\r\n            if (!Auth.Check() && user && !user.group.shareDownload) {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    this.props.t(\"share.pleaseLogin\"),\r\n                    \"warning\"\r\n                );\r\n                return;\r\n            }\r\n        }\r\n\r\n        switch (isPreviewable(this.props.share.source.name)) {\r\n            case \"img\":\r\n                this.props.showImgPreivew({\r\n                    key: this.props.share.key,\r\n                    name: this.props.share.source.name,\r\n                });\r\n                return;\r\n            case \"msDoc\":\r\n                this.props.history.push(\r\n                    this.props.share.key +\r\n                        \"/doc?name=\" +\r\n                        encodeURIComponent(this.props.share.source.name)\r\n                );\r\n                return;\r\n            case \"audio\":\r\n                this.props.setSelectedTarget([\r\n                    {\r\n                        key: this.props.share.key,\r\n                        type: \"share\",\r\n                    },\r\n                ]);\r\n                this.props.openMusicDialog();\r\n                return;\r\n            case \"video\":\r\n                this.props.history.push(\r\n                    this.props.share.key +\r\n                        \"/video?name=\" +\r\n                        encodeURIComponent(this.props.share.source.name)\r\n                );\r\n                return;\r\n            case \"edit\":\r\n                this.props.history.push(\r\n                    this.props.share.key +\r\n                        \"/text?name=\" +\r\n                        encodeURIComponent(this.props.share.source.name)\r\n                );\r\n                return;\r\n            case \"pdf\":\r\n                this.props.history.push(\r\n                    this.props.share.key +\r\n                        \"/pdf?name=\" +\r\n                        encodeURIComponent(this.props.share.source.name)\r\n                );\r\n                return;\r\n            case \"code\":\r\n                this.props.history.push(\r\n                    this.props.share.key +\r\n                        \"/code?name=\" +\r\n                        encodeURIComponent(this.props.share.source.name)\r\n                );\r\n                return;\r\n            case \"epub\":\r\n                this.props.history.push(\r\n                    this.props.share.key +\r\n                        \"/epub?name=\" +\r\n                        encodeURIComponent(this.props.share.source.name)\r\n                );\r\n                return;\r\n            default:\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    this.props.t(\"share.cannotShare\"),\r\n                    \"warning\"\r\n                );\r\n                return;\r\n        }\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        this.props.setSelectedTarget([]);\r\n    }\r\n\r\n    scoreHandle = (callback) => (event) => {\r\n        callback(event);\r\n    };\r\n\r\n    download = () => {\r\n        this.props.startDownload(this.props.share, null);\r\n    };\r\n\r\n    render() {\r\n        const { classes, t } = this.props;\r\n        return (\r\n            <div className={classes.layout}>\r\n                <Modals />\r\n                <ImgPreview />\r\n                <div className={classes.box}>\r\n                    <Creator share={this.props.share} />\r\n                    <Divider />\r\n                    <div className={classes.boxContent}>\r\n                        <TypeIcon\r\n                            className={classes.icon}\r\n                            isUpload\r\n                            fileName={this.props.share.source.name}\r\n                        />\r\n                        <div className={classes.fileName}>\r\n                            <Typography style={{ wordBreak: \"break-all\" }}>\r\n                                {this.props.share.source.name}\r\n                            </Typography>\r\n                            <Typography className={classes.fileSize}>\r\n                                {sizeToString(this.props.share.source.size)}\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n                    <Divider />\r\n                    <div className={classes.boxFooter}>\r\n                        <div className={classes.actionLeft}>\r\n                            {this.props.share.preview && (\r\n                                <Button\r\n                                    variant=\"outlined\"\r\n                                    color=\"secondary\"\r\n                                    onClick={this.scoreHandle(this.preview)}\r\n                                    disabled={this.state.loading}\r\n                                >\r\n                                    {t(\"share.preview\")}\r\n                                </Button>\r\n                            )}\r\n                        </div>\r\n                        <div className={classes.actions}>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                className={classes.downloadButton}\r\n                                onClick={this.download}\r\n                                disabled={this.state.loading}\r\n                            >\r\n                                {t(\"fileManager.download\")}\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst SharedFile = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withRouter(withTranslation()(SharedFileCompoment))));\r\n\r\nexport default SharedFile;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Typography, withStyles } from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport FileManager from \"../FileManager/FileManager\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport Creator from \"./Creator\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport pathHelper from \"../../utils/page\";\r\nimport {\r\n    openMusicDialog,\r\n    openResaveDialog,\r\n    setSelectedTarget,\r\n    setShareUserPopover,\r\n    showImgPreivew,\r\n    toggleSnackbar,\r\n} from \"../../redux/explorer\";\r\nimport { setShareInfo } from \"../../redux/viewUpdate/action\";\r\n\r\nconst styles = (theme) => ({\r\n    layout: {\r\n        width: \"auto\",\r\n        marginTop: 30,\r\n        marginBottom: 30,\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\r\n            width: 1100,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            marginTop: theme.spacing(2),\r\n            marginLeft: theme.spacing(1),\r\n            marginRight: theme.spacing(1),\r\n        },\r\n    },\r\n    managerContainer: {\r\n        overflowY: \"auto\",\r\n    },\r\n});\r\n\r\nconst ReadMe = React.lazy(() => import(\"./ReadMe\"));\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        anchorEl: state.viewUpdate.shareUserPopoverAnchorEl,\r\n        fileList: state.explorer.fileList,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\r\n        },\r\n        openMusicDialog: () => {\r\n            dispatch(openMusicDialog());\r\n        },\r\n        setSelectedTarget: (targets) => {\r\n            dispatch(setSelectedTarget(targets));\r\n        },\r\n        showImgPreivew: (first) => {\r\n            dispatch(showImgPreivew(first));\r\n        },\r\n        openResave: (key) => {\r\n            dispatch(openResaveDialog(key));\r\n        },\r\n        setShareUserPopover: (e) => {\r\n            dispatch(setShareUserPopover(e));\r\n        },\r\n        setShareInfo: (s) => {\r\n            dispatch(setShareInfo(s));\r\n        },\r\n    };\r\n};\r\n\r\nclass SharedFolderComponent extends Component {\r\n    state = {};\r\n\r\n    UNSAFE_componentWillMount() {\r\n        this.props.setShareInfo(this.props.share);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setShareInfo(null);\r\n        this.props.setSelectedTarget([]);\r\n    }\r\n\r\n    handleClickAway = (e) => {\r\n        const ignore = e && e.clientY && e.clientY <= 64;\r\n        if (!pathHelper.isMobile() && !ignore) {\r\n            this.props.setSelectedTarget([]);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        let readmeShowed = false;\r\n        const id = this.props.anchorEl !== null ? \"simple-popover\" : undefined;\r\n\r\n        return (\r\n            <div className={classes.layout}>\r\n                <ClickAwayListener onClickAway={this.handleClickAway}>\r\n                    <Paper className={classes.managerContainer}>\r\n                        <FileManager isShare share={this.props.share} />\r\n                    </Paper>\r\n                </ClickAwayListener>\r\n                {/* eslint-disable-next-line */}\r\n                {this.props.fileList.map((value) => {\r\n                    if (\r\n                        (value.name.toLowerCase() === \"readme.md\" ||\r\n                            value.name.toLowerCase() === \"readme.txt\") &&\r\n                        !readmeShowed\r\n                    ) {\r\n                        readmeShowed = true;\r\n                        return <ReadMe share={this.props.share} file={value} />;\r\n                    }\r\n                })}\r\n                <Popover\r\n                    id={id}\r\n                    open={this.props.anchorEl !== null}\r\n                    anchorEl={this.props.anchorEl}\r\n                    onClose={() => this.props.setShareUserPopover(null)}\r\n                    anchorOrigin={{\r\n                        vertical: \"bottom\",\r\n                        horizontal: \"center\",\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: \"top\",\r\n                        horizontal: \"center\",\r\n                    }}\r\n                >\r\n                    <Typography>\r\n                        <Creator\r\n                            isFolder\r\n                            onClose={() => this.props.setShareUserPopover(null)}\r\n                            share={this.props.share}\r\n                        />\r\n                    </Typography>\r\n                </Popover>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst SharedFolder = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withRouter(SharedFolderComponent)));\r\n\r\nexport default SharedFolder;\r\n","import React, { Suspense, useCallback, useEffect, useState } from \"react\";\r\nimport PageLoading from \"../Placeholder/PageLoading\";\r\nimport { useParams } from \"react-router\";\r\nimport API from \"../../middleware/Api\";\r\nimport { changeSubTitle } from \"../../redux/viewUpdate/action\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Notice from \"./NotFound\";\r\nimport LockedFile from \"./LockedFile\";\r\nimport SharedFile from \"./SharedFile\";\r\nimport SharedFolder from \"./SharedFolder\";\r\nimport { toggleSnackbar } from \"../../redux/explorer\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nexport default function SharePreload() {\r\n    const { t } = useTranslation(\"application\", { keyPrefix: \"share\" });\r\n    const dispatch = useDispatch();\r\n    const { id } = useParams();\r\n\r\n    const [share, setShare] = useState(undefined);\r\n    const [loading, setLoading] = useState(false);\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const SetSubTitle = useCallback(\r\n        (title) => dispatch(changeSubTitle(title)),\r\n        [dispatch]\r\n    );\r\n\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (share) {\r\n            if (share.locked) {\r\n                SetSubTitle(\r\n                    t(\"privateShareTitle\", { nick: share.creator.nick })\r\n                );\r\n                if (password !== \"\") {\r\n                    ToggleSnackbar(\r\n                        \"top\",\r\n                        \"right\",\r\n                        t(\"incorrectPassword\"),\r\n                        \"warning\"\r\n                    );\r\n                }\r\n            } else {\r\n                SetSubTitle(share.source.name);\r\n            }\r\n        } else {\r\n            SetSubTitle();\r\n        }\r\n    }, [share, SetSubTitle, ToggleSnackbar]);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            SetSubTitle();\r\n        };\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        let withPassword = \"\";\r\n        if (password !== \"\") {\r\n            withPassword = \"?password=\" + password;\r\n        }\r\n        API.get(\"/share/info/\" + id + withPassword)\r\n            .then((response) => {\r\n                setShare(response.data);\r\n                setLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                setLoading(false);\r\n                if (error.code === 404) {\r\n                    setShare(null);\r\n                } else {\r\n                    ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n                }\r\n            });\r\n    }, [id, password, ToggleSnackbar]);\r\n\r\n    return (\r\n        <Suspense fallback={<PageLoading />}>\r\n            {share === undefined && <PageLoading />}\r\n            {share === null && <Notice msg={t(\"shareNotExist\")} />}\r\n            {share && share.locked && (\r\n                <LockedFile\r\n                    loading={loading}\r\n                    setPassowrd={setPassword}\r\n                    share={share}\r\n                />\r\n            )}\r\n            {share && !share.locked && !share.is_dir && (\r\n                <SharedFile share={share} />\r\n            )}\r\n            {share && !share.locked && share.is_dir && (\r\n                <SharedFolder share={share} />\r\n            )}\r\n        </Suspense>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useLocation, useParams, useRouteMatch } from \"react-router\";\r\nimport API from \"../../middleware/Api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport pathHelper from \"../../utils/page\";\r\nimport { toggleSnackbar } from \"../../redux/explorer\";\r\nimport UseFileSubTitle from \"../../hooks/fileSubtitle\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    layout: {\r\n        width: \"auto\",\r\n    },\r\n\r\n    container: {\r\n        border: \"none\",\r\n        width: \"100%\",\r\n        height: \"calc(100vh - 64px)\",\r\n        marginBottom: -10,\r\n    },\r\n}));\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nexport default function DocViewer() {\r\n    const [url, setURL] = useState(\"\");\r\n    const math = useRouteMatch();\r\n    const location = useLocation();\r\n    const query = useQuery();\r\n    const { id } = useParams();\r\n    UseFileSubTitle(query, math, location);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        let requestURL = \"/file/doc/\" + query.get(\"id\");\r\n        if (pathHelper.isSharePage(location.pathname)) {\r\n            requestURL = \"/share/doc/\" + id;\r\n            if (query.get(\"share_path\") !== \"\") {\r\n                requestURL +=\r\n                    \"?path=\" + encodeURIComponent(query.get(\"share_path\"));\r\n            }\r\n        }\r\n        API.get(requestURL)\r\n            .then((response) => {\r\n                setURL(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n        // eslint-disable-next-line\r\n    }, [math.params[0], location]);\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.layout}>\r\n            {url !== \"\" && (\r\n                <iframe title={\"ms\"} className={classes.container} src={url} />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Dialog, makeStyles } from \"@material-ui/core\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { FolderOpenOutlined, LabelOutlined } from \"@material-ui/icons\";\r\nimport PathSelector from \"../FileManager/PathSelector\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formGroup: {\r\n        display: \"flex\",\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    formIcon: {\r\n        marginTop: 21,\r\n        marginRight: 19,\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    input: {\r\n        width: 250,\r\n    },\r\n    dialogContent: {\r\n        paddingTop: 24,\r\n        paddingRight: 24,\r\n        paddingBottom: 8,\r\n        paddingLeft: 24,\r\n    },\r\n    button: {\r\n        marginTop: 8,\r\n    },\r\n}));\r\n\r\nexport default function CreateWebDAVAccount(props) {\r\n    const { t } = useTranslation();\r\n    const [value, setValue] = useState({\r\n        name: \"\",\r\n        path: \"/\",\r\n    });\r\n    const [pathSelectDialog, setPathSelectDialog] = React.useState(false);\r\n    const [selectedPath, setSelectedPath] = useState(\"\");\r\n    // eslint-disable-next-line\r\n    const [selectedPathName, setSelectedPathName] = useState(\"\");\r\n    const classes = useStyles();\r\n\r\n    const setMoveTarget = (folder) => {\r\n        const path =\r\n            folder.path === \"/\"\r\n                ? folder.path + folder.name\r\n                : folder.path + \"/\" + folder.name;\r\n        setSelectedPath(path);\r\n        setSelectedPathName(folder.name);\r\n    };\r\n\r\n    const handleInputChange = (name) => (e) => {\r\n        setValue({\r\n            ...value,\r\n            [name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const selectPath = () => {\r\n        setValue({\r\n            ...value,\r\n            path: selectedPath === \"//\" ? \"/\" : selectedPath,\r\n        });\r\n        setPathSelectDialog(false);\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            onClose={props.onClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n        >\r\n            <Dialog\r\n                open={pathSelectDialog}\r\n                onClose={() => setPathSelectDialog(false)}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">\r\n                    {t(\"navbar.addTagDialog.selectFolder\")}\r\n                </DialogTitle>\r\n                <PathSelector\r\n                    presentPath=\"/\"\r\n                    selected={[]}\r\n                    onSelect={setMoveTarget}\r\n                />\r\n\r\n                <DialogActions>\r\n                    <Button onClick={() => setPathSelectDialog(false)}>\r\n                        {t(\"cancel\", { ns: \"common\" })}\r\n                    </Button>\r\n                    <Button\r\n                        onClick={selectPath}\r\n                        color=\"primary\"\r\n                        disabled={selectedPath === \"\"}\r\n                    >\r\n                        {t(\"ok\", { ns: \"common\" })}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <div className={classes.dialogContent}>\r\n                <div className={classes.formContainer}>\r\n                    <div className={classes.formGroup}>\r\n                        <div className={classes.formIcon}>\r\n                            <LabelOutlined />\r\n                        </div>\r\n\r\n                        <TextField\r\n                            className={classes.input}\r\n                            value={value.name}\r\n                            onChange={handleInputChange(\"name\")}\r\n                            label={t(\"setting.annotation\")}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.formGroup}>\r\n                        <div className={classes.formIcon}>\r\n                            <FolderOpenOutlined />\r\n                        </div>\r\n                        <div>\r\n                            <TextField\r\n                                value={value.path}\r\n                                onChange={handleInputChange(\"path\")}\r\n                                className={classes.input}\r\n                                label={t(\"setting.rootFolder\")}\r\n                            />\r\n                            <br />\r\n                            <Button\r\n                                className={classes.button}\r\n                                color=\"primary\"\r\n                                onClick={() => setPathSelectDialog(true)}\r\n                            >\r\n                                {t(\"navbar.addTagDialog.selectFolder\")}\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <DialogActions>\r\n                <Button onClick={props.onClose}>\r\n                    {t(\"cancel\", { ns: \"common\" })}\r\n                </Button>\r\n                <Button\r\n                    disabled={value.path === \"\" || value.name === \"\"}\r\n                    color=\"primary\"\r\n                    onClick={() => props.callback(value)}\r\n                >\r\n                    {t(\"ok\", { ns: \"common\" })}\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { makeStyles, Typography } from \"@material-ui/core\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Auth from \"../../middleware/Auth\";\r\nimport API from \"../../middleware/Api\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { Delete } from \"@material-ui/icons\";\r\nimport CreateWebDAVAccount from \"../Modals/CreateWebDAVAccount\";\r\nimport TimeAgo from \"timeago-react\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { toggleSnackbar } from \"../../redux/explorer\";\r\nimport Nothing from \"../Placeholder/Nothing\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    layout: {\r\n        width: \"auto\",\r\n        marginTop: \"50px\",\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\r\n            width: 1100,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n        marginBottom: \"50px\",\r\n    },\r\n    content: {\r\n        marginTop: theme.spacing(4),\r\n    },\r\n    cardContent: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    tableContainer: {\r\n        overflowX: \"auto\",\r\n    },\r\n    create: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    copy: {\r\n        marginLeft: 10,\r\n    },\r\n}));\r\n\r\nexport default function WebDAV() {\r\n    const { t } = useTranslation();\r\n    const [tab, setTab] = useState(0);\r\n    const [create, setCreate] = useState(false);\r\n    const [accounts, setAccounts] = useState([]);\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const copyToClipboard = (text) => {\r\n        if (navigator.clipboard) {\r\n            navigator.clipboard.writeText(text);\r\n            ToggleSnackbar(\"top\", \"center\", t(\"setting.copied\"), \"success\");\r\n        } else {\r\n            ToggleSnackbar(\r\n                \"top\",\r\n                \"center\",\r\n                t(\"setting.pleaseManuallyCopy\"),\r\n                \"warning\"\r\n            );\r\n        }\r\n    };\r\n\r\n    const loadList = () => {\r\n        API.get(\"/webdav/accounts\")\r\n            .then((response) => {\r\n                setAccounts(response.data.accounts);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n    useEffect(() => {\r\n        loadList();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const deleteAccount = (id) => {\r\n        const account = accounts[id];\r\n        API.delete(\"/webdav/accounts/\" + account.ID)\r\n            .then(() => {\r\n                let accountCopy = [...accounts];\r\n                accountCopy = accountCopy.filter((v, i) => {\r\n                    return i !== id;\r\n                });\r\n                setAccounts(accountCopy);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    const addAccount = (account) => {\r\n        setCreate(false);\r\n        API.post(\"/webdav/accounts\", {\r\n            path: account.path,\r\n            name: account.name,\r\n        })\r\n            .then((response) => {\r\n                setAccounts([\r\n                    {\r\n                        ID: response.data.id,\r\n                        Password: response.data.password,\r\n                        CreatedAt: response.data.created_at,\r\n                        Name: account.name,\r\n                        Root: account.path,\r\n                    },\r\n                    ...accounts,\r\n                ]);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    const classes = useStyles();\r\n    const user = Auth.GetUser();\r\n\r\n    return (\r\n        <div className={classes.layout}>\r\n            <CreateWebDAVAccount\r\n                callback={addAccount}\r\n                open={create}\r\n                onClose={() => setCreate(false)}\r\n            />\r\n            <Typography color=\"textSecondary\" variant=\"h4\">\r\n                {t(\"navbar.connect\")}\r\n            </Typography>\r\n            <Paper elevation={3} className={classes.content}>\r\n                <Tabs\r\n                    value={tab}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    onChange={(event, newValue) => setTab(newValue)}\r\n                    aria-label=\"disabled tabs example\"\r\n                >\r\n                    <Tab label={t(\"setting.webdavAccounts\")} />\r\n                </Tabs>\r\n                <div className={classes.cardContent}>\r\n                    {tab === 0 && (\r\n                        <div>\r\n                            <Alert severity=\"info\">\r\n                                {t(\"setting.webdavHint\", {\r\n                                    url: window.location.origin + \"/dav\",\r\n                                    name: user.user_name,\r\n                                })}\r\n                            </Alert>\r\n                            <TableContainer className={classes.tableContainer}>\r\n                                <Table\r\n                                    className={classes.table}\r\n                                    aria-label=\"simple table\"\r\n                                >\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell>\r\n                                                {t(\"setting.annotation\")}\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                {t(\"login.password\")}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">\r\n                                                {t(\"setting.rootFolder\")}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">\r\n                                                {t(\"setting.createdAt\")}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">\r\n                                                {t(\"setting.action\")}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {accounts.map((row, id) => (\r\n                                            <TableRow key={id}>\r\n                                                <TableCell\r\n                                                    component=\"th\"\r\n                                                    scope=\"row\"\r\n                                                >\r\n                                                    {row.Name}\r\n                                                </TableCell>\r\n                                                <TableCell>\r\n                                                    {row.Password}\r\n                                                    <Link\r\n                                                        className={classes.copy}\r\n                                                        onClick={() =>\r\n                                                            copyToClipboard(\r\n                                                                row.Password\r\n                                                            )\r\n                                                        }\r\n                                                        href={\"javascript:void\"}\r\n                                                    >\r\n                                                        {t(\"copy\", {\r\n                                                            ns: \"common\",\r\n                                                        })}\r\n                                                    </Link>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"right\">\r\n                                                    {row.Root}\r\n                                                </TableCell>\r\n                                                <TableCell align=\"right\">\r\n                                                    <TimeAgo\r\n                                                        datetime={row.CreatedAt}\r\n                                                        locale={t(\r\n                                                            \"timeAgoLocaleCode\",\r\n                                                            {\r\n                                                                ns: \"common\",\r\n                                                            }\r\n                                                        )}\r\n                                                    />\r\n                                                </TableCell>\r\n                                                <TableCell align=\"right\">\r\n                                                    <IconButton\r\n                                                        size={\"small\"}\r\n                                                        onClick={() =>\r\n                                                            deleteAccount(id)\r\n                                                        }\r\n                                                    >\r\n                                                        <Delete />\r\n                                                    </IconButton>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                                {accounts.length === 0 && (\r\n                                    <Nothing primary={t(\"setting.listEmpty\")} />\r\n                                )}\r\n                            </TableContainer>\r\n                            <Button\r\n                                onClick={() => setCreate(true)}\r\n                                className={classes.create}\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                            >\r\n                                {t(\"setting.createNewAccount\")}\r\n                            </Button>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { makeStyles, Typography } from \"@material-ui/core\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport API from \"../../middleware/Api\";\r\nimport { getTaskProgress, getTaskStatus, getTaskType } from \"../../config\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport { formatLocalTime } from \"../../utils/datetime\";\r\nimport { toggleSnackbar } from \"../../redux/explorer\";\r\nimport Nothing from \"../Placeholder/Nothing\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    layout: {\r\n        width: \"auto\",\r\n        marginTop: \"50px\",\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\r\n            width: 1100,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n        marginBottom: \"50px\",\r\n    },\r\n    content: {\r\n        marginTop: theme.spacing(4),\r\n        overflowX: \"auto\",\r\n    },\r\n    cardContent: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    tableContainer: {\r\n        overflowX: \"auto\",\r\n    },\r\n    create: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    noWrap: {\r\n        wordBreak: \"keepAll\",\r\n    },\r\n    footer: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function Tasks() {\r\n    const { t } = useTranslation();\r\n    const [tasks, setTasks] = useState([]);\r\n    const [total, setTotal] = useState(0);\r\n    const [page, setPage] = useState(1);\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const loadList = (page) => {\r\n        API.get(\"/user/setting/tasks?page=\" + page)\r\n            .then((response) => {\r\n                setTasks(response.data.tasks);\r\n                setTotal(response.data.total);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadList(page);\r\n        // eslint-disable-next-line\r\n    }, [page]);\r\n\r\n    const getError = (error) => {\r\n        if (error === \"\") {\r\n            return \"-\";\r\n        }\r\n        try {\r\n            const res = JSON.parse(error);\r\n            return `${res.msg}: ${res.error}`;\r\n        } catch (e) {\r\n            return t(\"uploader.unknownStatus\");\r\n        }\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.layout}>\r\n            <Typography color=\"textSecondary\" variant=\"h4\">\r\n                {t(\"navbar.taskQueue\")}\r\n            </Typography>\r\n            <Paper elevation={3} className={classes.content}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell nowrap=\"nowrap\">\r\n                                {t(\"setting.createdAt\")}\r\n                            </TableCell>\r\n                            <TableCell nowrap=\"nowrap\" align=\"right\">\r\n                                {t(\"setting.taskType\")}\r\n                            </TableCell>\r\n                            <TableCell nowrap=\"nowrap\" align=\"right\">\r\n                                {t(\"setting.taskStatus\")}\r\n                            </TableCell>\r\n                            <TableCell nowrap=\"nowrap\" align=\"right\">\r\n                                {t(\"setting.lastProgress\")}\r\n                            </TableCell>\r\n                            <TableCell nowrap=\"nowrap\">\r\n                                {t(\"setting.errorDetails\")}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {tasks.map((row, id) => (\r\n                            <TableRow key={id}>\r\n                                <TableCell\r\n                                    nowrap=\"nowrap\"\r\n                                    component=\"th\"\r\n                                    scope=\"row\"\r\n                                >\r\n                                    {formatLocalTime(row.create_date)}\r\n                                </TableCell>\r\n                                <TableCell nowrap=\"nowrap\" align=\"right\">\r\n                                    {getTaskType(row.type)}\r\n                                </TableCell>\r\n                                <TableCell nowrap=\"nowrap\" align=\"right\">\r\n                                    {getTaskStatus(row.status)}\r\n                                </TableCell>\r\n                                <TableCell nowrap=\"nowrap\" align=\"right\">\r\n                                    {getTaskProgress(row.type, row.progress)}\r\n                                </TableCell>\r\n                                <TableCell className={classes.noWrap}>\r\n                                    {getError(row.error)}\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n                {tasks.length === 0 && (\r\n                    <Nothing primary={t(\"setting.listEmpty\")} />\r\n                )}\r\n                <div className={classes.footer}>\r\n                    <Pagination\r\n                        count={Math.ceil(total / 10)}\r\n                        onChange={(e, v) => setPage(v)}\r\n                        color=\"secondary\"\r\n                    />\r\n                </div>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport API from \"../../middleware/Api\";\r\n\r\nimport {\r\n    Avatar,\r\n    Grid,\r\n    Paper,\r\n    Tab,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n    Tabs,\r\n    Typography,\r\n    withStyles,\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport { formatLocalTime } from \"../../utils/datetime\";\r\nimport { toggleSnackbar } from \"../../redux/explorer\";\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\nconst styles = (theme) => ({\r\n    layout: {\r\n        width: \"auto\",\r\n        marginTop: \"50px\",\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        marginBottom: \"30px\",\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            width: 700,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n    },\r\n    userNav: {\r\n        height: \"270px\",\r\n        backgroundColor: theme.palette.primary.main,\r\n        padding: \"20px 20px 2em\",\r\n        backgroundImage:\r\n            \"url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1600 900'%3E%3Cpolygon fill='\" +\r\n            theme.palette.primary.light.replace(\"#\", \"%23\") +\r\n            \"' points='957 450 539 900 1396 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.primary.dark.replace(\"#\", \"%23\") +\r\n            \"' points='957 450 872.9 900 1396 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\r\n            \"' points='-60 900 398 662 816 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\r\n            \"' points='337 900 398 662 816 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.secondary.light.replace(\"#\", \"%23\") +\r\n            \"' points='1203 546 1552 900 876 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\r\n            \"' points='1203 546 1552 900 1162 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.primary.dark.replace(\"#\", \"%23\") +\r\n            \"' points='641 695 886 900 367 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.primary.main.replace(\"#\", \"%23\") +\r\n            \"' points='587 900 641 695 886 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.secondary.light.replace(\"#\", \"%23\") +\r\n            \"' points='1710 900 1401 632 1096 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\r\n            \"' points='1710 900 1401 632 1365 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\r\n            \"' points='1210 900 971 687 725 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\r\n            \"' points='943 900 1210 900 971 687'/%3E%3C/svg%3E\\\")\",\r\n        backgroundSize: \"cover\",\r\n        backgroundPosition: \"bottom\",\r\n    },\r\n    avatarContainer: {\r\n        height: \"80px\",\r\n        width: \"80px\",\r\n        borderRaidus: \"50%\",\r\n        margin: \"auto\",\r\n        marginTop: \"50px\",\r\n        boxShadow:\r\n            \"0 2px 5px 0 rgba(0,0,0,0.16), 0 2px 10px 0 rgba(0,0,0,0.12)\",\r\n        border: \"2px solid #fff\",\r\n    },\r\n    nickName: {\r\n        width: \"200px\",\r\n        margin: \"auto\",\r\n        textAlign: \"center\",\r\n        marginTop: \"1px\",\r\n        fontSize: \"25px\",\r\n        color: \"#ffffff\",\r\n        opacity: \"0.81\",\r\n    },\r\n    th: {\r\n        minWidth: \"106px\",\r\n    },\r\n    mobileHide: {\r\n        [theme.breakpoints.down(\"md\")]: {\r\n            display: \"none\",\r\n        },\r\n    },\r\n    tableLink: {\r\n        cursor: \"pointer\",\r\n    },\r\n    navigator: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    pageInfo: {\r\n        marginTop: \"14px\",\r\n        marginLeft: \"23px\",\r\n    },\r\n    infoItem: {\r\n        paddingLeft: \"46px!important\",\r\n        paddingBottom: \"20px!important\",\r\n    },\r\n    infoContainer: {\r\n        marginTop: \"30px\",\r\n    },\r\n    tableContainer: {\r\n        overflowX: \"auto\",\r\n    },\r\n});\r\nconst mapStateToProps = () => {\r\n    return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\r\n        },\r\n    };\r\n};\r\n\r\nclass ProfileCompoment extends Component {\r\n    state = {\r\n        listType: 0,\r\n        shareList: [],\r\n        page: 1,\r\n        user: null,\r\n        total: 0,\r\n    };\r\n\r\n    handleChange = (event, listType) => {\r\n        this.setState({ listType });\r\n        if (listType === 1) {\r\n            this.loadList(1, \"hot\");\r\n        } else if (listType === 0) {\r\n            this.loadList(1, \"default\");\r\n        }\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        this.loadList(1, \"default\");\r\n    };\r\n\r\n    loadList = (page, order) => {\r\n        API.get(\r\n            \"/user/profile/\" +\r\n                this.props.match.params.id +\r\n                \"?page=\" +\r\n                page +\r\n                \"&type=\" +\r\n                order\r\n        )\r\n            .then((response) => {\r\n                this.setState({\r\n                    shareList: response.data.items,\r\n                    user: response.data.user,\r\n                    total: response.data.total,\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n            });\r\n    };\r\n\r\n    loadNext = () => {\r\n        this.loadList(\r\n            this.state.page + 1,\r\n            this.state.listType === 0 ? \"default\" : \"hot\"\r\n        );\r\n    };\r\n\r\n    loadPrev = () => {\r\n        this.loadList(\r\n            this.state.page - 1,\r\n            this.state.listType === 0 ? \"default\" : \"hot\"\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const { classes, t } = this.props;\r\n\r\n        return (\r\n            <div className={classes.layout}>\r\n                {this.state.user === null && <div></div>}\r\n                {this.state.user !== null && (\r\n                    <Paper square>\r\n                        <div className={classes.userNav}>\r\n                            <div>\r\n                                <Avatar\r\n                                    className={classes.avatarContainer}\r\n                                    src={\r\n                                        \"/api/v3/user/avatar/\" +\r\n                                        this.state.user.id +\r\n                                        \"/l\"\r\n                                    }\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <Typography className={classes.nickName} noWrap>\r\n                                    {this.state.user.nick}\r\n                                </Typography>\r\n                            </div>\r\n                        </div>\r\n                        <Tabs\r\n                            value={this.state.listType}\r\n                            indicatorColor=\"primary\"\r\n                            textColor=\"primary\"\r\n                            onChange={this.handleChange}\r\n                            centered\r\n                        >\r\n                            <Tab label={t(\"setting.allShares\")} />\r\n                            <Tab label={t(\"setting.trendingShares\")} />\r\n                            <Tab label={t(\"setting.profile\")} />\r\n                        </Tabs>\r\n                        {this.state.listType === 2 && (\r\n                            <div className={classes.infoContainer}>\r\n                                <Grid container spacing={24}>\r\n                                    <Grid\r\n                                        item\r\n                                        md={4}\r\n                                        xs={12}\r\n                                        className={classes.infoItem}\r\n                                    >\r\n                                        <Typography\r\n                                            color=\"textSecondary\"\r\n                                            variant=\"h6\"\r\n                                        >\r\n                                            {t(\"setting.uid\")}\r\n                                        </Typography>\r\n                                        <Typography>\r\n                                            {this.state.user.id}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid\r\n                                        item\r\n                                        md={4}\r\n                                        xs={12}\r\n                                        className={classes.infoItem}\r\n                                    >\r\n                                        <Typography\r\n                                            color=\"textSecondary\"\r\n                                            variant=\"h6\"\r\n                                        >\r\n                                            {t(\"setting.nickname\")}\r\n                                        </Typography>\r\n                                        <Typography>\r\n                                            {this.state.user.nick}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid\r\n                                        item\r\n                                        md={4}\r\n                                        xs={12}\r\n                                        className={classes.infoItem}\r\n                                    >\r\n                                        <Typography\r\n                                            color=\"textSecondary\"\r\n                                            variant=\"h6\"\r\n                                        >\r\n                                            {t(\"setting.group\")}\r\n                                        </Typography>\r\n                                        <Typography>\r\n                                            {this.state.user.group}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid\r\n                                        item\r\n                                        md={4}\r\n                                        xs={12}\r\n                                        className={classes.infoItem}\r\n                                    >\r\n                                        <Typography\r\n                                            color=\"textSecondary\"\r\n                                            variant=\"h6\"\r\n                                        >\r\n                                            {t(\"setting.totalShares\")}\r\n                                        </Typography>\r\n                                        <Typography>\r\n                                            {this.state.total}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid\r\n                                        item\r\n                                        md={4}\r\n                                        xs={12}\r\n                                        className={classes.infoItem}\r\n                                    >\r\n                                        <Typography\r\n                                            color=\"textSecondary\"\r\n                                            variant=\"h6\"\r\n                                        >\r\n                                            {t(\"setting.regTime\")}\r\n                                        </Typography>\r\n                                        <Typography>\r\n                                            {this.state.user.date}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </div>\r\n                        )}\r\n                        {(this.state.listType === 0 ||\r\n                            this.state.listType === 1) && (\r\n                            <div>\r\n                                <div className={classes.tableContainer}>\r\n                                    <Table className={classes.table}>\r\n                                        <TableHead>\r\n                                            <TableRow>\r\n                                                <TableCell>\r\n                                                    {t(\"setting.fileName\")}\r\n                                                </TableCell>\r\n                                                <TableCell\r\n                                                    className={\r\n                                                        classes.mobileHide\r\n                                                    }\r\n                                                >\r\n                                                    {t(\"setting.shareDate\")}\r\n                                                </TableCell>\r\n                                                <TableCell\r\n                                                    className={[\r\n                                                        classes.th,\r\n                                                        classes.mobileHide,\r\n                                                    ]}\r\n                                                >\r\n                                                    {t(\r\n                                                        \"setting.downloadNumber\"\r\n                                                    )}\r\n                                                </TableCell>\r\n                                                <TableCell\r\n                                                    className={[\r\n                                                        classes.th,\r\n                                                        classes.mobileHide,\r\n                                                    ]}\r\n                                                >\r\n                                                    {t(\"setting.viewNumber\")}\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {this.state.shareList.map(\r\n                                                (row, id) => (\r\n                                                    <TableRow\r\n                                                        key={id}\r\n                                                        className={\r\n                                                            classes.tableLink\r\n                                                        }\r\n                                                        onClick={() =>\r\n                                                            this.props.history.push(\r\n                                                                \"/s/\" + row.key\r\n                                                            )\r\n                                                        }\r\n                                                    >\r\n                                                        <TableCell>\r\n                                                            <Typography>\r\n                                                                {row.source\r\n                                                                    ? row.source\r\n                                                                          .name\r\n                                                                    : \"[\" +\r\n                                                                      t(\r\n                                                                          \"share.expired\"\r\n                                                                      ) +\r\n                                                                      \"]\"}\r\n                                                            </Typography>\r\n                                                        </TableCell>\r\n                                                        <TableCell\r\n                                                            nowrap={\"nowrap\"}\r\n                                                            className={\r\n                                                                classes.mobileHide\r\n                                                            }\r\n                                                        >\r\n                                                            {formatLocalTime(\r\n                                                                row.create_date\r\n                                                            )}\r\n                                                        </TableCell>\r\n                                                        <TableCell\r\n                                                            className={\r\n                                                                classes.mobileHide\r\n                                                            }\r\n                                                        >\r\n                                                            {row.downloads}\r\n                                                        </TableCell>\r\n                                                        <TableCell\r\n                                                            className={\r\n                                                                classes.mobileHide\r\n                                                            }\r\n                                                        >\r\n                                                            {row.views}\r\n                                                        </TableCell>\r\n                                                    </TableRow>\r\n                                                )\r\n                                            )}\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </div>\r\n                                {this.state.shareList.length !== 0 &&\r\n                                    this.state.listType === 0 && (\r\n                                        <div className={classes.navigator}>\r\n                                            <Pagination\r\n                                                count={Math.ceil(\r\n                                                    this.state.total / 10\r\n                                                )}\r\n                                                onChange={(e, v) =>\r\n                                                    this.loadList(\r\n                                                        v,\r\n                                                        this.state.listType ===\r\n                                                            0\r\n                                                            ? \"default\"\r\n                                                            : \"hot\"\r\n                                                    )\r\n                                                }\r\n                                                color=\"secondary\"\r\n                                            />\r\n                                        </div>\r\n                                    )}\r\n                            </div>\r\n                        )}\r\n                    </Paper>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst Profile = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withRouter(withTranslation()(ProfileCompoment))));\r\n\r\nexport default Profile;\r\n","import React, { useCallback, useState } from \"react\";\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Divider,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemSecondaryAction,\r\n    ListItemText,\r\n    makeStyles,\r\n    Paper,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport RightIcon from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport { Add, Fingerprint, HighlightOff } from \"@material-ui/icons\";\r\nimport API from \"../../middleware/Api\";\r\nimport { bufferDecode, bufferEncode } from \"../../utils\";\r\nimport { toggleSnackbar } from \"../../redux/explorer\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    sectionTitle: {\r\n        paddingBottom: \"10px\",\r\n        paddingTop: \"30px\",\r\n    },\r\n    rightIcon: {\r\n        marginTop: \"4px\",\r\n        marginRight: \"10px\",\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    desenList: {\r\n        paddingTop: 0,\r\n        paddingBottom: 0,\r\n    },\r\n    iconFix: {\r\n        marginRight: \"11px\",\r\n        marginLeft: \"7px\",\r\n        minWidth: 40,\r\n    },\r\n    flexContainer: {\r\n        display: \"flex\",\r\n    },\r\n}));\r\n\r\nexport default function Authn(props) {\r\n    const { t } = useTranslation();\r\n    const [selected, setSelected] = useState(\"\");\r\n    const [confirm, setConfirm] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const deleteCredential = (id) => {\r\n        API.patch(\"/user/setting/authn\", {\r\n            id: id,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    t(\"setting.authenticatorRemoved\"),\r\n                    \"success\"\r\n                );\r\n                props.remove(id);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setConfirm(false);\r\n            });\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    const addCredential = () => {\r\n        if (!navigator.credentials) {\r\n            ToggleSnackbar(\r\n                \"top\",\r\n                \"right\",\r\n                t(\"setting.browserNotSupported\"),\r\n                \"warning\"\r\n            );\r\n\r\n            return;\r\n        }\r\n        API.put(\"/user/authn\", {})\r\n            .then((response) => {\r\n                const credentialCreationOptions = response.data;\r\n                credentialCreationOptions.publicKey.challenge = bufferDecode(\r\n                    credentialCreationOptions.publicKey.challenge\r\n                );\r\n                credentialCreationOptions.publicKey.user.id = bufferDecode(\r\n                    credentialCreationOptions.publicKey.user.id\r\n                );\r\n                if (credentialCreationOptions.publicKey.excludeCredentials) {\r\n                    for (\r\n                        let i = 0;\r\n                        i <\r\n                        credentialCreationOptions.publicKey.excludeCredentials\r\n                            .length;\r\n                        i++\r\n                    ) {\r\n                        credentialCreationOptions.publicKey.excludeCredentials[\r\n                            i\r\n                        ].id = bufferDecode(\r\n                            credentialCreationOptions.publicKey\r\n                                .excludeCredentials[i].id\r\n                        );\r\n                    }\r\n                }\r\n\r\n                return navigator.credentials.create({\r\n                    publicKey: credentialCreationOptions.publicKey,\r\n                });\r\n            })\r\n            .then((credential) => {\r\n                const attestationObject = credential.response.attestationObject;\r\n                const clientDataJSON = credential.response.clientDataJSON;\r\n                const rawId = credential.rawId;\r\n                return API.put(\r\n                    \"/user/authn/finish\",\r\n                    JSON.stringify({\r\n                        id: credential.id,\r\n                        rawId: bufferEncode(rawId),\r\n                        type: credential.type,\r\n                        response: {\r\n                            attestationObject: bufferEncode(attestationObject),\r\n                            clientDataJSON: bufferEncode(clientDataJSON),\r\n                        },\r\n                    })\r\n                );\r\n            })\r\n            .then((response) => {\r\n                props.add(response.data);\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    t(\"setting.authenticatorAdded\"),\r\n                    \"success\"\r\n                );\r\n                return;\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={confirm} onClose={() => setConfirm(false)}>\r\n                <DialogTitle>{t(\"setting.removedAuthenticator\")}</DialogTitle>\r\n                <DialogContent>\r\n                    {t(\"setting.removedAuthenticatorConfirm\")}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setConfirm(false)} color=\"default\">\r\n                        {t(\"cancel\", { ns: \"common\" })}\r\n                    </Button>\r\n                    <Button\r\n                        onClick={() => deleteCredential(selected)}\r\n                        color=\"primary\"\r\n                    >\r\n                        {t(\"ok\", { ns: \"common\" })}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Typography className={classes.sectionTitle} variant=\"subtitle2\">\r\n                {t(\"setting.hardwareAuthenticator\")}\r\n            </Typography>\r\n            <Paper>\r\n                <List className={classes.desenList}>\r\n                    {props.list.map((v) => (\r\n                        <>\r\n                            <ListItem\r\n                                button\r\n                                style={{\r\n                                    paddingRight: 60,\r\n                                }}\r\n                                onClick={() => {\r\n                                    setConfirm(true);\r\n                                    setSelected(v.id);\r\n                                }}\r\n                            >\r\n                                <ListItemIcon className={classes.iconFix}>\r\n                                    <Fingerprint />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={v.fingerprint} />\r\n\r\n                                <ListItemSecondaryAction\r\n                                    onClick={() => deleteCredential(v.id)}\r\n                                    className={classes.flexContainer}\r\n                                >\r\n                                    <HighlightOff\r\n                                        className={classes.rightIcon}\r\n                                    />\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider />\r\n                        </>\r\n                    ))}\r\n                    <ListItem button onClick={() => addCredential()}>\r\n                        <ListItemIcon className={classes.iconFix}>\r\n                            <Add />\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                            primary={t(\"setting.addNewAuthenticator\")}\r\n                        />\r\n\r\n                        <ListItemSecondaryAction\r\n                            className={classes.flexContainer}\r\n                        >\r\n                            <RightIcon className={classes.rightIcon} />\r\n                        </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                </List>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useCallback, useState } from \"react\";\r\nimport {\r\n    Button,\r\n    CircularProgress,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    makeStyles,\r\n} from \"@material-ui/core\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {\r\n    refreshTimeZone,\r\n    timeZone,\r\n    validateTimeZone,\r\n} from \"../../utils/datetime\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Auth from \"../../middleware/Auth\";\r\nimport { toggleSnackbar } from \"../../redux/explorer\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({}));\r\n\r\nexport default function TimeZoneDialog(props) {\r\n    const { t } = useTranslation();\r\n    const [timeZoneValue, setTimeZoneValue] = useState(timeZone);\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const saveZoneInfo = () => {\r\n        if (!validateTimeZone(timeZoneValue)) {\r\n            ToggleSnackbar(\"top\", \"right\", \"无效的时区名称\", \"warning\");\r\n            return;\r\n        }\r\n        Auth.SetPreference(\"timeZone\", timeZoneValue);\r\n        refreshTimeZone();\r\n        props.onClose();\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            onClose={props.onClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\">\r\n                {t(\"setting.timeZone\")}\r\n            </DialogTitle>\r\n\r\n            <DialogContent>\r\n                <FormControl>\r\n                    <TextField\r\n                        label={t(\"setting.timeZoneCode\")}\r\n                        value={timeZoneValue}\r\n                        onChange={(e) => setTimeZoneValue(e.target.value)}\r\n                    />\r\n                </FormControl>\r\n            </DialogContent>\r\n\r\n            <DialogActions>\r\n                <Button onClick={props.onClose}>\r\n                    {t(\"cancel\", { ns: \"common\" })}\r\n                </Button>\r\n                <div className={classes.wrapper}>\r\n                    <Button\r\n                        color=\"primary\"\r\n                        disabled={timeZoneValue === \"\"}\r\n                        onClick={() => saveZoneInfo()}\r\n                    >\r\n                        {t(\"ok\", { ns: \"common\" })}\r\n                        {props.modalsLoading && (\r\n                            <CircularProgress\r\n                                size={24}\r\n                                className={classes.buttonProgress}\r\n                            />\r\n                        )}\r\n                    </Button>\r\n                </div>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PhotoIcon from \"@material-ui/icons/InsertPhoto\";\r\nimport GroupIcon from \"@material-ui/icons/Group\";\r\nimport DateIcon from \"@material-ui/icons/DateRange\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport LinkIcon from \"@material-ui/icons/Phonelink\";\r\nimport InputIcon from \"@material-ui/icons/Input\";\r\nimport SecurityIcon from \"@material-ui/icons/Security\";\r\nimport NickIcon from \"@material-ui/icons/PermContactCalendar\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport VerifyIcon from \"@material-ui/icons/VpnKey\";\r\nimport ColorIcon from \"@material-ui/icons/Palette\";\r\nimport axios from \"axios\";\r\nimport FingerprintIcon from \"@material-ui/icons/Fingerprint\";\r\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\r\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\r\nimport RightIcon from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport {\r\n    ListItemIcon,\r\n    withStyles,\r\n    Button,\r\n    Divider,\r\n    TextField,\r\n    Avatar,\r\n    Paper,\r\n    Typography,\r\n    List,\r\n    ListItem,\r\n    ListItemSecondaryAction,\r\n    ListItemText,\r\n    ListItemAvatar,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Switch,\r\n} from \"@material-ui/core\";\r\nimport { blue, green, yellow } from \"@material-ui/core/colors\";\r\nimport API from \"../../middleware/Api\";\r\nimport Auth from \"../../middleware/Auth\";\r\nimport { withRouter } from \"react-router\";\r\nimport QRCode from \"qrcode-react\";\r\nimport {\r\n    Brightness3,\r\n    GitHub,\r\n    Home,\r\n    ListAlt,\r\n    PermContactCalendar,\r\n    Schedule,\r\n    Translate,\r\n} from \"@material-ui/icons\";\r\nimport Authn from \"./Authn\";\r\nimport { formatLocalTime, timeZone } from \"../../utils/datetime\";\r\nimport TimeZoneDialog from \"../Modals/TimeZone\";\r\nimport {\r\n    applyThemes,\r\n    changeViewMethod,\r\n    toggleDaylightMode,\r\n    toggleSnackbar,\r\n} from \"../../redux/explorer\";\r\nimport { Trans, withTranslation } from \"react-i18next\";\r\nimport { selectLanguage } from \"../../redux/viewUpdate/action\";\r\nimport OptionSelector from \"../Modals/OptionSelector\";\r\n\r\nconst styles = (theme) => ({\r\n    layout: {\r\n        width: \"auto\",\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\r\n            width: 700,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n    },\r\n    sectionTitle: {\r\n        paddingBottom: \"10px\",\r\n        paddingTop: \"30px\",\r\n    },\r\n    rightIcon: {\r\n        marginTop: \"4px\",\r\n        marginRight: \"10px\",\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    uploadFromFile: {\r\n        backgroundColor: blue[100],\r\n        color: blue[600],\r\n    },\r\n    userGravatar: {\r\n        backgroundColor: yellow[100],\r\n        color: yellow[800],\r\n    },\r\n    policySelected: {\r\n        backgroundColor: green[100],\r\n        color: green[800],\r\n    },\r\n    infoText: {\r\n        marginRight: \"17px\",\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            maxWidth: 100,\r\n            textOverflow: \"ellipsis\",\r\n            whiteSpace: \"nowrap\",\r\n            overflow: \"hidden\",\r\n        },\r\n    },\r\n    infoTextWithIcon: {\r\n        marginRight: \"17px\",\r\n        marginTop: \"1px\",\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            maxWidth: 100,\r\n            textOverflow: \"ellipsis\",\r\n            whiteSpace: \"nowrap\",\r\n            overflow: \"hidden\",\r\n        },\r\n    },\r\n    rightIconWithText: {\r\n        marginTop: \"0px\",\r\n        marginRight: \"10px\",\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    iconFix: {\r\n        marginRight: \"11px\",\r\n        marginLeft: \"7px\",\r\n        minWidth: 40,\r\n    },\r\n    flexContainer: {\r\n        display: \"flex\",\r\n    },\r\n    desenList: {\r\n        paddingTop: 0,\r\n        paddingBottom: 0,\r\n    },\r\n    flexContainerResponse: {\r\n        display: \"flex\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            display: \"initial\",\r\n        },\r\n    },\r\n    desText: {\r\n        marginTop: \"10px\",\r\n    },\r\n    secondColor: {\r\n        height: \"20px\",\r\n        width: \"20px\",\r\n        backgroundColor: theme.palette.secondary.main,\r\n        borderRadius: \"50%\",\r\n        marginRight: \"17px\",\r\n    },\r\n    firstColor: {\r\n        height: \"20px\",\r\n        width: \"20px\",\r\n        backgroundColor: theme.palette.primary.main,\r\n        borderRadius: \"50%\",\r\n        marginRight: \"6px\",\r\n    },\r\n    themeBlock: {\r\n        height: \"20px\",\r\n        width: \"20px\",\r\n    },\r\n    paddingBottom: {\r\n        marginBottom: \"30px\",\r\n    },\r\n    paddingText: {\r\n        paddingRight: theme.spacing(2),\r\n    },\r\n    qrcode: {\r\n        width: 128,\r\n        marginTop: 16,\r\n        marginRight: 16,\r\n    },\r\n});\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        title: state.siteConfig.title,\r\n        authn: state.siteConfig.authn,\r\n        viewMethod: state.viewUpdate.explorerViewMethod,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\r\n        },\r\n        applyThemes: (color) => {\r\n            dispatch(applyThemes(color));\r\n        },\r\n        toggleDaylightMode: () => {\r\n            dispatch(toggleDaylightMode());\r\n        },\r\n        changeView: (method) => {\r\n            dispatch(changeViewMethod(method));\r\n        },\r\n        selectLanguage: () => {\r\n            dispatch(selectLanguage());\r\n        },\r\n    };\r\n};\r\n\r\nclass UserSettingCompoment extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.fileInput = React.createRef();\r\n    }\r\n\r\n    state = {\r\n        avatarModal: false,\r\n        nickModal: false,\r\n        changePassword: false,\r\n        loading: \"\",\r\n        oldPwd: \"\",\r\n        newPwd: \"\",\r\n        webdavPwd: \"\",\r\n        newPwdRepeat: \"\",\r\n        twoFactor: false,\r\n        authCode: \"\",\r\n        changeTheme: false,\r\n        chosenTheme: null,\r\n        showWebDavUrl: false,\r\n        showWebDavUserName: false,\r\n        changeWebDavPwd: false,\r\n        groupBackModal: false,\r\n        changePolicy: false,\r\n        changeTimeZone: false,\r\n        settings: {\r\n            uid: 0,\r\n            group_expires: 0,\r\n            policy: {\r\n                current: {\r\n                    name: \"-\",\r\n                    id: \"\",\r\n                },\r\n                options: [],\r\n            },\r\n            qq: \"\",\r\n            homepage: true,\r\n            two_factor: \"\",\r\n            two_fa_secret: \"\",\r\n            prefer_theme: \"\",\r\n            themes: {},\r\n            authn: [],\r\n        },\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            avatarModal: false,\r\n            nickModal: false,\r\n            changePassword: false,\r\n            loading: \"\",\r\n            twoFactor: false,\r\n            changeTheme: false,\r\n            showWebDavUrl: false,\r\n            showWebDavUserName: false,\r\n            changeWebDavPwd: false,\r\n            groupBackModal: false,\r\n            changePolicy: false,\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.loadSetting();\r\n    }\r\n\r\n    toggleViewMethod = () => {\r\n        const newMethod =\r\n            this.props.viewMethod === \"icon\"\r\n                ? \"list\"\r\n                : this.props.viewMethod === \"list\"\r\n                ? \"smallIcon\"\r\n                : \"icon\";\r\n        Auth.SetPreference(\"view_method\", newMethod);\r\n        this.props.changeView(newMethod);\r\n    };\r\n\r\n    loadSetting = () => {\r\n        API.get(\"/user/setting\")\r\n            .then((response) => {\r\n                const theme = JSON.parse(response.data.themes);\r\n                response.data.themes = theme;\r\n                this.setState({\r\n                    settings: response.data,\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n            });\r\n    };\r\n\r\n    useGravatar = () => {\r\n        this.setState({\r\n            loading: \"gravatar\",\r\n        });\r\n        API.put(\"/user/setting/avatar\")\r\n            .then(() => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    this.props.t(\"setting.avatarUpdated\"),\r\n                    \"success\"\r\n                );\r\n                this.setState({\r\n                    loading: \"\",\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n                this.setState({\r\n                    loading: \"\",\r\n                });\r\n            });\r\n    };\r\n\r\n    changeNick = () => {\r\n        this.setState({\r\n            loading: \"nick\",\r\n        });\r\n        API.patch(\"/user/setting/nick\", {\r\n            nick: this.state.nick,\r\n        })\r\n            .then(() => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    this.props.t(\"nickChanged\"),\r\n                    \"success\"\r\n                );\r\n                this.setState({\r\n                    loading: \"\",\r\n                });\r\n                this.handleClose();\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n                this.setState({\r\n                    loading: \"\",\r\n                });\r\n            });\r\n    };\r\n\r\n    uploadAvatar = () => {\r\n        this.setState({\r\n            loading: \"avatar\",\r\n        });\r\n        const formData = new FormData();\r\n        formData.append(\"avatar\", this.fileInput.current.files[0]);\r\n        API.post(\"/user/setting/avatar\", formData, {\r\n            headers: {\r\n                \"Content-Type\": \"multipart/form-data\",\r\n            },\r\n        })\r\n            .then(() => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    this.props.t(\"setting.avatarUpdated\"),\r\n                    \"success\"\r\n                );\r\n                this.setState({\r\n                    loading: \"\",\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n                this.setState({\r\n                    loading: \"\",\r\n                });\r\n            });\r\n    };\r\n\r\n    handleToggle = () => {\r\n        API.patch(\"/user/setting/homepage\", {\r\n            status: !this.state.settings.homepage,\r\n        })\r\n            .then(() => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    this.props.t(\"setting.settingSaved\"),\r\n                    \"success\"\r\n                );\r\n                this.setState({\r\n                    settings: {\r\n                        ...this.state.settings,\r\n                        homepage: !this.state.settings.homepage,\r\n                    },\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n            });\r\n    };\r\n\r\n    changhePwd = () => {\r\n        if (this.state.newPwd !== this.state.newPwdRepeat) {\r\n            this.props.toggleSnackbar(\r\n                \"top\",\r\n                \"right\",\r\n                this.props.t(\"login.passwordNotMatch\"),\r\n                \"warning\"\r\n            );\r\n            return;\r\n        }\r\n        this.setState({\r\n            loading: \"changePassword\",\r\n        });\r\n        API.patch(\"/user/setting/password\", {\r\n            old: this.state.oldPwd,\r\n            new: this.state.newPwd,\r\n        })\r\n            .then(() => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    this.props.t(\"login.passwordReset\"),\r\n                    \"success\"\r\n                );\r\n                this.setState({\r\n                    loading: \"\",\r\n                });\r\n                this.handleClose();\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n                this.setState({\r\n                    loading: \"\",\r\n                });\r\n            });\r\n    };\r\n\r\n    changeTheme = () => {\r\n        this.setState({\r\n            loading: \"changeTheme\",\r\n        });\r\n        API.patch(\"/user/setting/theme\", {\r\n            theme: this.state.chosenTheme,\r\n        })\r\n            .then(() => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    this.props.t(\"setting.themeColorChanged\"),\r\n                    \"success\"\r\n                );\r\n                this.props.applyThemes(this.state.chosenTheme);\r\n                this.setState({\r\n                    loading: \"\",\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n                this.setState({\r\n                    loading: \"\",\r\n                });\r\n            });\r\n    };\r\n\r\n    changheWebdavPwd = () => {\r\n        this.setState({\r\n            loading: \"changheWebdavPwd\",\r\n        });\r\n        axios\r\n            .post(\"/Member/setWebdavPwd\", {\r\n                pwd: this.state.webdavPwd,\r\n            })\r\n            .then((response) => {\r\n                if (response.data.error === \"1\") {\r\n                    this.props.toggleSnackbar(\r\n                        \"top\",\r\n                        \"right\",\r\n                        response.data.msg,\r\n                        \"error\"\r\n                    );\r\n                    this.setState({\r\n                        loading: \"\",\r\n                    });\r\n                } else {\r\n                    this.props.toggleSnackbar(\r\n                        \"top\",\r\n                        \"right\",\r\n                        response.data.msg,\r\n                        \"success\"\r\n                    );\r\n                    this.setState({\r\n                        loading: \"\",\r\n                        changeWebDavPwd: false,\r\n                    });\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n                this.setState({\r\n                    loading: \"\",\r\n                });\r\n            });\r\n    };\r\n\r\n    init2FA = () => {\r\n        if (this.state.settings.two_factor) {\r\n            this.setState({ twoFactor: true });\r\n            return;\r\n        }\r\n        API.get(\"/user/setting/2fa\")\r\n            .then((response) => {\r\n                this.setState({\r\n                    two_fa_secret: response.data,\r\n                    twoFactor: true,\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n            });\r\n    };\r\n\r\n    twoFactor = () => {\r\n        this.setState({\r\n            loading: \"twoFactor\",\r\n        });\r\n        API.patch(\"/user/setting/2fa\", {\r\n            code: this.state.authCode,\r\n        })\r\n            .then(() => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    this.props.t(\"setting.settingSaved\"),\r\n                    \"success\"\r\n                );\r\n                this.setState({\r\n                    loading: \"\",\r\n                    settings: {\r\n                        ...this.state.settings,\r\n                        two_factor: !this.state.settings.two_factor,\r\n                    },\r\n                });\r\n                this.handleClose();\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n                this.setState({\r\n                    loading: \"\",\r\n                });\r\n            });\r\n    };\r\n\r\n    handleChange = (name) => (event) => {\r\n        this.setState({ [name]: event.target.value });\r\n    };\r\n\r\n    handleAlignment = (event, chosenTheme) => this.setState({ chosenTheme });\r\n\r\n    toggleThemeMode = (current) => {\r\n        const newMode =\r\n            current === null ? \"light\" : current === \"light\" ? \"dark\" : null;\r\n        this.props.toggleDaylightMode();\r\n        Auth.SetPreference(\"theme_mode\", newMode);\r\n    };\r\n\r\n    render() {\r\n        const { classes, t } = this.props;\r\n        const user = Auth.GetUser();\r\n        const dark = Auth.GetPreference(\"theme_mode\");\r\n\r\n        return (\r\n            <div>\r\n                <div className={classes.layout}>\r\n                    <Typography\r\n                        className={classes.sectionTitle}\r\n                        variant=\"subtitle2\"\r\n                    >\r\n                        {t(\"setting.profile\")}\r\n                    </Typography>\r\n                    <Paper>\r\n                        <List className={classes.desenList}>\r\n                            <ListItem\r\n                                button\r\n                                onClick={() =>\r\n                                    this.setState({ avatarModal: true })\r\n                                }\r\n                            >\r\n                                <ListItemAvatar>\r\n                                    <Avatar\r\n                                        src={\r\n                                            \"/api/v3/user/avatar/\" +\r\n                                            user.id +\r\n                                            \"/l\"\r\n                                        }\r\n                                    />\r\n                                </ListItemAvatar>\r\n                                <ListItemText primary={t(\"setting.avatar\")} />\r\n                                <ListItemSecondaryAction>\r\n                                    <RightIcon className={classes.rightIcon} />\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider />\r\n                            <ListItem button>\r\n                                <ListItemIcon className={classes.iconFix}>\r\n                                    <PermContactCalendar />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t(\"setting.uid\")} />\r\n\r\n                                <ListItemSecondaryAction>\r\n                                    <Typography\r\n                                        className={classes.infoTextWithIcon}\r\n                                        color=\"textSecondary\"\r\n                                    >\r\n                                        {this.state.settings.uid}\r\n                                    </Typography>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider />\r\n                            <ListItem\r\n                                button\r\n                                onClick={() =>\r\n                                    this.setState({ nickModal: true })\r\n                                }\r\n                            >\r\n                                <ListItemIcon className={classes.iconFix}>\r\n                                    <NickIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t(\"setting.nickname\")} />\r\n\r\n                                <ListItemSecondaryAction\r\n                                    onClick={() =>\r\n                                        this.setState({ nickModal: true })\r\n                                    }\r\n                                    className={classes.flexContainer}\r\n                                >\r\n                                    <Typography\r\n                                        className={classes.infoTextWithIcon}\r\n                                        color=\"textSecondary\"\r\n                                    >\r\n                                        {user.nickname}\r\n                                    </Typography>\r\n                                    <RightIcon\r\n                                        className={classes.rightIconWithText}\r\n                                    />\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider />\r\n                            <ListItem button>\r\n                                <ListItemIcon className={classes.iconFix}>\r\n                                    <EmailIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t(\"login.email\")} />\r\n\r\n                                <ListItemSecondaryAction>\r\n                                    <Typography\r\n                                        className={classes.infoText}\r\n                                        color=\"textSecondary\"\r\n                                    >\r\n                                        {user.user_name}\r\n                                    </Typography>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider />\r\n                            <ListItem button>\r\n                                <ListItemIcon className={classes.iconFix}>\r\n                                    <GroupIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t(\"setting.group\")} />\r\n\r\n                                <ListItemSecondaryAction>\r\n                                    <Typography\r\n                                        className={classes.infoText}\r\n                                        color=\"textSecondary\"\r\n                                    >\r\n                                        {user.group.name}\r\n                                    </Typography>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider />\r\n                            <ListItem button>\r\n                                <ListItemIcon className={classes.iconFix}>\r\n                                    <DateIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t(\"setting.regTime\")} />\r\n\r\n                                <ListItemSecondaryAction>\r\n                                    <Typography\r\n                                        className={classes.infoText}\r\n                                        color=\"textSecondary\"\r\n                                    >\r\n                                        {formatLocalTime(user.created_at)}\r\n                                    </Typography>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                        </List>\r\n                    </Paper>\r\n                    <Typography\r\n                        className={classes.sectionTitle}\r\n                        variant=\"subtitle2\"\r\n                    >\r\n                        {t(\"setting.privacyAndSecurity\")}\r\n                    </Typography>\r\n                    <Paper>\r\n                        <List className={classes.desenList}>\r\n                            <ListItem button>\r\n                                <ListItemIcon className={classes.iconFix}>\r\n                                    <HomeIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText\r\n                                    primary={t(\"setting.profilePage\")}\r\n                                />\r\n\r\n                                <ListItemSecondaryAction>\r\n                                    <Switch\r\n                                        onChange={this.handleToggle}\r\n                                        checked={this.state.settings.homepage}\r\n                                    />\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider />\r\n                            <ListItem\r\n                                button\r\n                                onClick={() =>\r\n                                    this.setState({ changePassword: true })\r\n                                }\r\n                            >\r\n                                <ListItemIcon className={classes.iconFix}>\r\n                                    <LockIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText\r\n                                    primary={t(\"setting.accountPassword\")}\r\n                                />\r\n\r\n                                <ListItemSecondaryAction\r\n                                    className={classes.flexContainer}\r\n                                >\r\n                                    <RightIcon className={classes.rightIcon} />\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider />\r\n                            <ListItem button onClick={() => this.init2FA()}>\r\n                                <ListItemIcon className={classes.iconFix}>\r\n                                    <VerifyIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t(\"setting.2fa\")} />\r\n\r\n                                <ListItemSecondaryAction\r\n                                    className={classes.flexContainer}\r\n                                >\r\n                                    <Typography\r\n                                        className={classes.infoTextWithIcon}\r\n                                        color=\"textSecondary\"\r\n                                    >\r\n                                        {!this.state.settings.two_factor\r\n                                            ? t(\"setting.disabled\")\r\n                                            : t(\"setting.enabled\")}\r\n                                    </Typography>\r\n                                    <RightIcon\r\n                                        className={classes.rightIconWithText}\r\n                                    />\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                        </List>\r\n                    </Paper>\r\n\r\n                    <Authn\r\n                        list={this.state.settings.authn}\r\n                        add={(credential) => {\r\n                            this.setState({\r\n                                settings: {\r\n                                    ...this.state.settings,\r\n                                    authn: [\r\n                                        ...this.state.settings.authn,\r\n                                        credential,\r\n                                    ],\r\n                                },\r\n                            });\r\n                        }}\r\n                        remove={(id) => {\r\n                            let credentials = [...this.state.settings.authn];\r\n                            credentials = credentials.filter((v) => {\r\n                                return v.id !== id;\r\n                            });\r\n                            this.setState({\r\n                                settings: {\r\n                                    ...this.state.settings,\r\n                                    authn: credentials,\r\n                                },\r\n                            });\r\n                        }}\r\n                    />\r\n\r\n                    <Typography\r\n                        className={classes.sectionTitle}\r\n                        variant=\"subtitle2\"\r\n                    >\r\n                        {t(\"setting.appearance\")}\r\n                    </Typography>\r\n                    <Paper>\r\n                        <List className={classes.desenList}>\r\n                            <ListItem\r\n                                button\r\n                                onClick={() =>\r\n                                    this.setState({ changeTheme: true })\r\n                                }\r\n                            >\r\n                                <ListItemIcon className={classes.iconFix}>\r\n                                    <ColorIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText\r\n                                    primary={t(\"setting.themeColor\")}\r\n                                />\r\n\r\n                                <ListItemSecondaryAction\r\n                                    className={classes.flexContainer}\r\n                                >\r\n                                    <div className={classes.firstColor} />\r\n                                    <div className={classes.secondColor} />\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider />\r\n                            <ListItem\r\n                                button\r\n                                onClick={() => this.toggleThemeMode(dark)}\r\n                            >\r\n                                <ListItemIcon className={classes.iconFix}>\r\n                                    <Brightness3 />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t(\"setting.darkMode\")} />\r\n\r\n                                <ListItemSecondaryAction\r\n                                    className={classes.flexContainer}\r\n                                >\r\n                                    <Typography\r\n                                        className={classes.infoTextWithIcon}\r\n                                        color=\"textSecondary\"\r\n                                    >\r\n                                        {dark &&\r\n                                            (dark === \"dark\"\r\n                                                ? t(\"setting.enabled\")\r\n                                                : t(\"setting.disabled\"))}\r\n                                        {dark === null &&\r\n                                            t(\"setting.syncWithSystem\")}\r\n                                    </Typography>\r\n                                    <RightIcon\r\n                                        className={classes.rightIconWithText}\r\n                                    />\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider />\r\n                            <ListItem\r\n                                button\r\n                                onClick={() => this.toggleViewMethod()}\r\n                            >\r\n                                <ListItemIcon className={classes.iconFix}>\r\n                                    <ListAlt />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t(\"setting.fileList\")} />\r\n\r\n                                <ListItemSecondaryAction\r\n                                    className={classes.flexContainer}\r\n                                >\r\n                                    <Typography\r\n                                        className={classes.infoTextWithIcon}\r\n                                        color=\"textSecondary\"\r\n                                    >\r\n                                        {this.props.viewMethod === \"icon\" &&\r\n                                            t(\"fileManager.gridViewLarge\")}\r\n                                        {this.props.viewMethod === \"list\" &&\r\n                                            t(\"fileManager.listView\")}\r\n                                        {this.props.viewMethod ===\r\n                                            \"smallIcon\" &&\r\n                                            t(\"fileManager.gridViewSmall\")}\r\n                                    </Typography>\r\n                                    <RightIcon\r\n                                        className={classes.rightIconWithText}\r\n                                    />\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider />\r\n                            <ListItem\r\n                                onClick={() =>\r\n                                    this.setState({ changeTimeZone: true })\r\n                                }\r\n                                button\r\n                            >\r\n                                <ListItemIcon className={classes.iconFix}>\r\n                                    <Schedule />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t(\"setting.timeZone\")} />\r\n\r\n                                <ListItemSecondaryAction\r\n                                    className={classes.flexContainer}\r\n                                >\r\n                                    <Typography\r\n                                        className={classes.infoTextWithIcon}\r\n                                        color=\"textSecondary\"\r\n                                    >\r\n                                        {timeZone}\r\n                                    </Typography>\r\n                                    <RightIcon\r\n                                        className={classes.rightIconWithText}\r\n                                    />\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                        </List>\r\n                    </Paper>\r\n                    {user.group.webdav && (\r\n                        <div>\r\n                            <Typography\r\n                                className={classes.sectionTitle}\r\n                                variant=\"subtitle2\"\r\n                            >\r\n                                WebDAV\r\n                            </Typography>\r\n                            <Paper>\r\n                                <List className={classes.desenList}>\r\n                                    <ListItem\r\n                                        button\r\n                                        onClick={() =>\r\n                                            this.setState({\r\n                                                showWebDavUrl: true,\r\n                                            })\r\n                                        }\r\n                                    >\r\n                                        <ListItemIcon\r\n                                            className={classes.iconFix}\r\n                                        >\r\n                                            <LinkIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText\r\n                                            primary={t(\"setting.webdavServer\")}\r\n                                        />\r\n\r\n                                        <ListItemSecondaryAction\r\n                                            className={classes.flexContainer}\r\n                                        >\r\n                                            <RightIcon\r\n                                                className={classes.rightIcon}\r\n                                            />\r\n                                        </ListItemSecondaryAction>\r\n                                    </ListItem>\r\n                                    <Divider />\r\n                                    <ListItem\r\n                                        button\r\n                                        onClick={() =>\r\n                                            this.setState({\r\n                                                showWebDavUserName: true,\r\n                                            })\r\n                                        }\r\n                                    >\r\n                                        <ListItemIcon\r\n                                            className={classes.iconFix}\r\n                                        >\r\n                                            <InputIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText\r\n                                            primary={t(\"setting.userName\")}\r\n                                        />\r\n\r\n                                        <ListItemSecondaryAction\r\n                                            className={classes.flexContainer}\r\n                                        >\r\n                                            <RightIcon\r\n                                                className={classes.rightIcon}\r\n                                            />\r\n                                        </ListItemSecondaryAction>\r\n                                    </ListItem>\r\n                                    <Divider />\r\n                                    <ListItem\r\n                                        button\r\n                                        onClick={() =>\r\n                                            this.props.history.push(\"/webdav?\")\r\n                                        }\r\n                                    >\r\n                                        <ListItemIcon\r\n                                            className={classes.iconFix}\r\n                                        >\r\n                                            <SecurityIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText\r\n                                            primary={t(\"setting.manageAccount\")}\r\n                                        />\r\n\r\n                                        <ListItemSecondaryAction\r\n                                            className={classes.flexContainer}\r\n                                        >\r\n                                            <RightIcon\r\n                                                className={classes.rightIcon}\r\n                                            />\r\n                                        </ListItemSecondaryAction>\r\n                                    </ListItem>\r\n                                </List>\r\n                            </Paper>\r\n                        </div>\r\n                    )}\r\n\r\n                    <Typography\r\n                        className={classes.sectionTitle}\r\n                        variant=\"subtitle2\"\r\n                    >\r\n                        关于 Tsuki\r\n                    </Typography>\r\n                    <Paper>\r\n                        <List className={classes.desenList}>\r\n                            <ListItem\r\n                                button\r\n                                onClick={() =>\r\n                                    window.open(\r\n                                        \"https://tsuki.icu\"\r\n                                    )\r\n                                }\r\n                            >\r\n                                <ListItemIcon className={classes.iconFix}>\r\n                                    <GitHub />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"GitHub 仓库\" />\r\n\r\n                                <ListItemSecondaryAction\r\n                                    className={classes.flexContainer}\r\n                                >\r\n                                    <RightIcon\r\n                                        className={classes.rightIconWithText}\r\n                                    />\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider />\r\n                            <ListItem\r\n                                button\r\n                                onClick={() =>\r\n                                    window.open(\"https:/tsuki.icu\")\r\n                                }\r\n                            >\r\n                                <ListItemIcon className={classes.iconFix}>\r\n                                    <Home />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"主页\" />\r\n\r\n                                <ListItemSecondaryAction\r\n                                    className={classes.flexContainer}\r\n                                >\r\n                                    <RightIcon\r\n                                        className={classes.rightIconWithText}\r\n                                    />\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider />\r\n                            <ListItem\r\n                                onClick={() => this.props.selectLanguage()}\r\n                                button\r\n                            >\r\n                                <ListItemIcon className={classes.iconFix}>\r\n                                    <Translate />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t(\"setting.language\")} />\r\n\r\n                                <ListItemSecondaryAction\r\n                                    className={classes.flexContainer}\r\n                                >\r\n                                    <RightIcon\r\n                                        className={classes.rightIconWithText}\r\n                                    />\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                        </List>\r\n                    </Paper>\r\n\r\n                    <div className={classes.paddingBottom} />\r\n                </div>\r\n                <TimeZoneDialog\r\n                    onClose={() => this.setState({ changeTimeZone: false })}\r\n                    open={this.state.changeTimeZone}\r\n                />\r\n                <Dialog\r\n                    open={this.state.avatarModal}\r\n                    onClose={this.handleClose}\r\n                >\r\n                    <DialogTitle>{t(\"setting.avatar\")}</DialogTitle>\r\n                    <List>\r\n                        <ListItem\r\n                            button\r\n                            component=\"label\"\r\n                            disabled={this.state.loading === \"avatar\"}\r\n                        >\r\n                            <input\r\n                                type=\"file\"\r\n                                accept=\"image/*\"\r\n                                style={{ display: \"none\" }}\r\n                                ref={this.fileInput}\r\n                                onChange={this.uploadAvatar}\r\n                            />\r\n                            <ListItemAvatar>\r\n                                <Avatar className={classes.uploadFromFile}>\r\n                                    <PhotoIcon />\r\n                                </Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText primary={t(\"setting.uploadImage\")} />\r\n                        </ListItem>\r\n                        <ListItem\r\n                            button\r\n                            onClick={this.useGravatar}\r\n                            disabled={this.state.loading === \"gravatar\"}\r\n                        >\r\n                            <ListItemAvatar>\r\n                                <Avatar className={classes.userGravatar}>\r\n                                    <FingerprintIcon />\r\n                                </Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText\r\n                                className={classes.paddingText}\r\n                                primary={t(\"setting.useGravatar\")}\r\n                            />\r\n                        </ListItem>\r\n                    </List>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            {t(\"cancel\", { ns: \"common\" })}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog open={this.state.nickModal} onClose={this.handleClose}>\r\n                    <DialogTitle>{t(\"setting.changeNick\")}</DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField\r\n                            id=\"standard-name\"\r\n                            label={t(\"setting.nickname\")}\r\n                            className={classes.textField}\r\n                            value={this.state.nick}\r\n                            onChange={this.handleChange(\"nick\")}\r\n                            margin=\"normal\"\r\n                            autoFocus\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"default\">\r\n                            {t(\"cancel\", { ns: \"common\" })}\r\n                        </Button>\r\n                        <Button\r\n                            onClick={this.changeNick}\r\n                            color=\"primary\"\r\n                            disabled={\r\n                                this.state.loading === \"nick\" ||\r\n                                this.state.nick === \"\"\r\n                            }\r\n                        >\r\n                            {t(\"ok\", { ns: \"common\" })}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog\r\n                    open={this.state.changePassword}\r\n                    onClose={this.handleClose}\r\n                >\r\n                    <DialogTitle>{t(\"login.resetPassword\")}</DialogTitle>\r\n                    <DialogContent>\r\n                        <div>\r\n                            <TextField\r\n                                id=\"standard-name\"\r\n                                label={t(\"setting.originalPassword\")}\r\n                                type=\"password\"\r\n                                className={classes.textField}\r\n                                value={this.state.oldPwd}\r\n                                onChange={this.handleChange(\"oldPwd\")}\r\n                                margin=\"normal\"\r\n                                autoFocus\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <TextField\r\n                                id=\"standard-name\"\r\n                                label={t(\"login.newPassword\")}\r\n                                type=\"password\"\r\n                                className={classes.textField}\r\n                                value={this.state.newPwd}\r\n                                onChange={this.handleChange(\"newPwd\")}\r\n                                margin=\"normal\"\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <TextField\r\n                                id=\"standard-name\"\r\n                                label={t(\"login.repeatNewPassword\")}\r\n                                type=\"password\"\r\n                                className={classes.textField}\r\n                                value={this.state.newPwdRepeat}\r\n                                onChange={this.handleChange(\"newPwdRepeat\")}\r\n                                margin=\"normal\"\r\n                            />\r\n                        </div>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"default\">\r\n                            {t(\"cancel\", { ns: \"common\" })}\r\n                        </Button>\r\n                        <Button\r\n                            onClick={this.changhePwd}\r\n                            color=\"primary\"\r\n                            disabled={\r\n                                this.state.loading === \"changePassword\" ||\r\n                                this.state.oldPwd === \"\" ||\r\n                                this.state.newPwdRepeat === \"\" ||\r\n                                this.state.newPwd === \"\"\r\n                            }\r\n                        >\r\n                            {t(\"ok\", { ns: \"common\" })}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog open={this.state.twoFactor} onClose={this.handleClose}>\r\n                    <DialogTitle>\r\n                        {this.state.settings.two_factor\r\n                            ? t(\"setting.disable2FA\")\r\n                            : t(\"setting.enable2FA\")}\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <div className={classes.flexContainerResponse}>\r\n                            {!this.state.settings.two_factor && (\r\n                                <div className={classes.qrcode}>\r\n                                    <QRCode\r\n                                        value={\r\n                                            \"otpauth://totp/\" +\r\n                                            this.props.title +\r\n                                            \"?secret=\" +\r\n                                            this.state.two_fa_secret\r\n                                        }\r\n                                    />\r\n                                </div>\r\n                            )}\r\n\r\n                            <div className={classes.desText}>\r\n                                {!this.state.settings.two_factor && (\r\n                                    <Typography>\r\n                                        {t(\"setting.2faDescription\")}\r\n                                    </Typography>\r\n                                )}\r\n                                {this.state.settings.two_factor && (\r\n                                    <Typography>\r\n                                        {t(\"setting.inputCurrent2FACode\")}\r\n                                    </Typography>\r\n                                )}\r\n                                <TextField\r\n                                    id=\"standard-name\"\r\n                                    label={t(\"login.input2FACode\")}\r\n                                    type=\"number\"\r\n                                    className={classes.textField}\r\n                                    value={this.state.authCode}\r\n                                    onChange={this.handleChange(\"authCode\")}\r\n                                    margin=\"normal\"\r\n                                    autoFocus\r\n                                    fullWidth\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"default\">\r\n                            {t(\"cancel\", { ns: \"common\" })}\r\n                        </Button>\r\n                        <Button\r\n                            onClick={this.twoFactor}\r\n                            color=\"primary\"\r\n                            disabled={\r\n                                this.state.loading === \"twoFactor\" ||\r\n                                this.state.authCode === \"\"\r\n                            }\r\n                        >\r\n                            {this.state.settings.two_factor\r\n                                ? t(\"setting.disable2FA\")\r\n                                : t(\"setting.enable2FA\")}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog\r\n                    open={this.state.changeTheme}\r\n                    onClose={this.handleClose}\r\n                >\r\n                    <DialogTitle>{t(\"setting.themeColor\")}</DialogTitle>\r\n                    <DialogContent>\r\n                        <ToggleButtonGroup\r\n                            value={this.state.chosenTheme}\r\n                            exclusive\r\n                            onChange={this.handleAlignment}\r\n                        >\r\n                            {Object.keys(this.state.settings.themes).map(\r\n                                (value, key) => (\r\n                                    <ToggleButton value={value} key={key}>\r\n                                        <div\r\n                                            className={classes.themeBlock}\r\n                                            style={{ backgroundColor: value }}\r\n                                        />\r\n                                    </ToggleButton>\r\n                                )\r\n                            )}\r\n                        </ToggleButtonGroup>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"default\">\r\n                            {t(\"cancel\", { ns: \"common\" })}\r\n                        </Button>\r\n                        <Button\r\n                            onClick={this.changeTheme}\r\n                            color=\"primary\"\r\n                            disabled={\r\n                                this.state.loading === \"changeTheme\" ||\r\n                                this.state.chosenTheme === null\r\n                            }\r\n                        >\r\n                            {t(\"ok\", { ns: \"common\" })}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog\r\n                    open={this.state.showWebDavUrl}\r\n                    onClose={this.handleClose}\r\n                >\r\n                    <DialogTitle>{t(\"setting.webdavServer\")}</DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField\r\n                            id=\"standard-name\"\r\n                            className={classes.textField}\r\n                            value={window.location.origin + \"/dav\"}\r\n                            margin=\"normal\"\r\n                            autoFocus\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"default\">\r\n                            {t(\"close\", { ns: \"common\" })}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog\r\n                    open={this.state.showWebDavUserName}\r\n                    onClose={this.handleClose}\r\n                >\r\n                    <DialogTitle>{t(\"setting.userName\")}</DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField\r\n                            id=\"standard-name\"\r\n                            className={classes.textField}\r\n                            value={user.user_name}\r\n                            margin=\"normal\"\r\n                            autoFocus\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"default\">\r\n                            {t(\"close\", { ns: \"common\" })}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <OptionSelector />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst UserSetting = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withRouter(withTranslation()(UserSettingCompoment))));\r\n\r\nexport default UserSetting;\r\n","import React, { useCallback, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport RegIcon from \"@material-ui/icons/AssignmentIndOutlined\";\r\nimport {\r\n    Avatar,\r\n    Button,\r\n    Divider,\r\n    FormControl,\r\n    Input,\r\n    InputLabel,\r\n    Link,\r\n    makeStyles,\r\n    Paper,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport { Link as RouterLink, useHistory } from \"react-router-dom\";\r\nimport API from \"../../middleware/Api\";\r\nimport EmailIcon from \"@material-ui/icons/EmailOutlined\";\r\nimport { useCaptcha } from \"../../hooks/useCaptcha\";\r\nimport { toggleSnackbar } from \"../../redux/explorer\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    layout: {\r\n        width: \"auto\",\r\n        marginTop: \"110px\",\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            width: 400,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n        marginBottom: 110,\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\r\n            3\r\n        )}px`,\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    link: {\r\n        marginTop: \"20px\",\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    buttonContainer: {\r\n        display: \"flex\",\r\n    },\r\n    authnLink: {\r\n        textAlign: \"center\",\r\n        marginTop: 16,\r\n    },\r\n    avatarSuccess: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n}));\r\n\r\nfunction Register() {\r\n    const { t } = useTranslation();\r\n\r\n    const [input, setInput] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n        password_repeat: \"\",\r\n    });\r\n    const [loading, setLoading] = useState(false);\r\n    const [emailActive, setEmailActive] = useState(false);\r\n\r\n    const title = useSelector((state) => state.siteConfig.title);\r\n    const regCaptcha = useSelector((state) => state.siteConfig.regCaptcha);\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n    const history = useHistory();\r\n\r\n    const handleInputChange = (name) => (e) => {\r\n        setInput({\r\n            ...input,\r\n            [name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const {\r\n        captchaLoading,\r\n        isValidate,\r\n        validate,\r\n        CaptchaRender,\r\n        captchaRefreshRef,\r\n        captchaParamsRef,\r\n    } = useCaptcha();\r\n    const classes = useStyles();\r\n\r\n    const register = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (input.password !== input.password_repeat) {\r\n            ToggleSnackbar(\r\n                \"top\",\r\n                \"right\",\r\n                t(\"login.passwordNotMatch\"),\r\n                \"warning\"\r\n            );\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        if (!isValidate.current.isValidate && regCaptcha) {\r\n            validate(() => register(e), setLoading);\r\n            return;\r\n        }\r\n        API.post(\"/user\", {\r\n            userName: input.email,\r\n            Password: input.password,\r\n            ...captchaParamsRef.current,\r\n        })\r\n            .then((response) => {\r\n                setLoading(false);\r\n                if (response.rawData.code === 203) {\r\n                    setEmailActive(true);\r\n                } else {\r\n                    history.push(\"/login?username=\" + input.email);\r\n                    ToggleSnackbar(\r\n                        \"top\",\r\n                        \"right\",\r\n                        t(\"login.signUpSuccess\"),\r\n                        \"success\"\r\n                    );\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                setLoading(false);\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\r\n                captchaRefreshRef.current();\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className={classes.layout}>\r\n            <>\r\n                {!emailActive && (\r\n                    <Paper className={classes.paper}>\r\n                        <Avatar className={classes.avatar}>\r\n                            <RegIcon />\r\n                        </Avatar>\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            {t(\"login.sinUpTitle\", { title })}\r\n                        </Typography>\r\n\r\n                        <form className={classes.form} onSubmit={register}>\r\n                            <FormControl margin=\"normal\" required fullWidth>\r\n                                <InputLabel htmlFor=\"email\">\r\n                                    {t(\"login.email\")}\r\n                                </InputLabel>\r\n                                <Input\r\n                                    id=\"email\"\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    onChange={handleInputChange(\"email\")}\r\n                                    autoComplete\r\n                                    value={input.email}\r\n                                    autoFocus\r\n                                />\r\n                            </FormControl>\r\n                            <FormControl margin=\"normal\" required fullWidth>\r\n                                <InputLabel htmlFor=\"password\">\r\n                                    {t(\"login.password\")}\r\n                                </InputLabel>\r\n                                <Input\r\n                                    name=\"password\"\r\n                                    onChange={handleInputChange(\"password\")}\r\n                                    type=\"password\"\r\n                                    id=\"password\"\r\n                                    value={input.password}\r\n                                    autoComplete\r\n                                />\r\n                            </FormControl>\r\n                            <FormControl margin=\"normal\" required fullWidth>\r\n                                <InputLabel htmlFor=\"password\">\r\n                                    {t(\"login.repeatPassword\")}\r\n                                </InputLabel>\r\n                                <Input\r\n                                    name=\"pwdRepeat\"\r\n                                    onChange={handleInputChange(\r\n                                        \"password_repeat\"\r\n                                    )}\r\n                                    type=\"password\"\r\n                                    id=\"pwdRepeat\"\r\n                                    value={input.password_repeat}\r\n                                    autoComplete\r\n                                />\r\n                            </FormControl>\r\n                            {regCaptcha && <CaptchaRender />}\r\n\r\n                            <Button\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                disabled={\r\n                                    loading ||\r\n                                    (regCaptcha ? captchaLoading : false)\r\n                                }\r\n                                className={classes.submit}\r\n                            >\r\n                                {t(\"login.signUp\")}\r\n                            </Button>\r\n                        </form>\r\n\r\n                        <Divider />\r\n                        <div className={classes.link}>\r\n                            <div>\r\n                                <Link component={RouterLink} to={\"/login\"}>\r\n                                    {t(\"login.backToSingIn\")}\r\n                                </Link>\r\n                            </div>\r\n                            <div>\r\n                                <Link component={RouterLink} to={\"/forget\"}>\r\n                                    {t(\"login.forgetPassword\")}\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </Paper>\r\n                )}\r\n                {emailActive && (\r\n                    <Paper className={classes.paper}>\r\n                        <Avatar className={classes.avatarSuccess}>\r\n                            <EmailIcon />\r\n                        </Avatar>\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            {t(\"login.activateTitle\")}\r\n                        </Typography>\r\n                        <Typography style={{ marginTop: \"10px\" }}>\r\n                            {t(\"login.activateDescription\")}\r\n                        </Typography>\r\n                    </Paper>\r\n                )}\r\n            </>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Register;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n    Avatar,\r\n    Button,\r\n    makeStyles,\r\n    Paper,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport API from \"../../middleware/Api\";\r\nimport EmailIcon from \"@material-ui/icons/EmailOutlined\";\r\nimport { useLocation } from \"react-router\";\r\nimport { toggleSnackbar } from \"../../redux/explorer\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    layout: {\r\n        width: \"auto\",\r\n        marginTop: \"110px\",\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            width: 400,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n        marginBottom: 110,\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\r\n            3\r\n        )}px`,\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    submit: {\r\n        marginTop: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nfunction Activation() {\r\n    const { t } = useTranslation();\r\n    const query = useQuery();\r\n    const location = useLocation();\r\n\r\n    const [success, setSuccess] = useState(false);\r\n    const [email, setEmail] = useState(\"\");\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n    const history = useHistory();\r\n\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        API.get(\r\n            \"/user/activate/\" + query.get(\"id\") + \"?sign=\" + query.get(\"sign\")\r\n        )\r\n            .then((response) => {\r\n                setEmail(response.data);\r\n                setSuccess(true);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\r\n                history.push(\"/login\");\r\n            });\r\n        // eslint-disable-next-line\r\n    }, [location]);\r\n\r\n    return (\r\n        <div className={classes.layout}>\r\n            {success && (\r\n                <Paper className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <EmailIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        {t(\"login.activateSuccess\")}\r\n                    </Typography>\r\n                    <Typography style={{ marginTop: \"20px\" }}>\r\n                        {t(\"login.accountActivated\")}\r\n                    </Typography>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        onClick={() => history.push(\"/login?username=\" + email)}\r\n                    >\r\n                        {t(\"login.backToSingIn\")}\r\n                    </Button>\r\n                </Paper>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Activation;\r\n","import React, { useCallback, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    Avatar,\r\n    Button,\r\n    Divider,\r\n    FormControl,\r\n    Input,\r\n    InputLabel,\r\n    Link,\r\n    makeStyles,\r\n    Paper,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport { Link as RouterLink, useHistory } from \"react-router-dom\";\r\nimport API from \"../../middleware/Api\";\r\nimport { useLocation } from \"react-router\";\r\nimport KeyIcon from \"@material-ui/icons/VpnKeyOutlined\";\r\nimport { toggleSnackbar } from \"../../redux/explorer\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    layout: {\r\n        width: \"auto\",\r\n        marginTop: \"110px\",\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            width: 400,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n        marginBottom: 110,\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\r\n            3\r\n        )}px`,\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    submit: {\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    link: {\r\n        marginTop: \"20px\",\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n}));\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nfunction ResetForm() {\r\n    const { t } = useTranslation();\r\n    const query = useQuery();\r\n    const [input, setInput] = useState({\r\n        password: \"\",\r\n        password_repeat: \"\",\r\n    });\r\n    const [loading, setLoading] = useState(false);\r\n    const registerEnabled = useSelector(\r\n        (state) => state.siteConfig.registerEnabled\r\n    );\r\n    const handleInputChange = (name) => (e) => {\r\n        setInput({\r\n            ...input,\r\n            [name]: e.target.value,\r\n        });\r\n    };\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n    const history = useHistory();\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        if (input.password !== input.password_repeat) {\r\n            ToggleSnackbar(\r\n                \"top\",\r\n                \"right\",\r\n                t(\"login.passwordNotMatch\"),\r\n                \"warning\"\r\n            );\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        API.patch(\"/user/reset\", {\r\n            secret: query.get(\"sign\"),\r\n            id: query.get(\"id\"),\r\n            Password: input.password,\r\n        })\r\n            .then(() => {\r\n                setLoading(false);\r\n                history.push(\"/login\");\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    t(\"login.passwordReset\"),\r\n                    \"success\"\r\n                );\r\n            })\r\n            .catch((error) => {\r\n                setLoading(false);\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\r\n            });\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.layout}>\r\n            <Paper className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <KeyIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    {t(\"login.findMyPassword\")}\r\n                </Typography>\r\n                <form className={classes.form} onSubmit={submit}>\r\n                    <FormControl margin=\"normal\" required fullWidth>\r\n                        <InputLabel htmlFor=\"email\">\r\n                            {t(\"login.newPassword\")}\r\n                        </InputLabel>\r\n                        <Input\r\n                            id=\"pwd\"\r\n                            type=\"password\"\r\n                            name=\"pwd\"\r\n                            onChange={handleInputChange(\"password\")}\r\n                            autoComplete\r\n                            value={input.password}\r\n                            autoFocus\r\n                        />\r\n                    </FormControl>\r\n                    <FormControl margin=\"normal\" required fullWidth>\r\n                        <InputLabel htmlFor=\"email\">\r\n                            {t(\"login.repeatNewPassword\")}\r\n                        </InputLabel>\r\n                        <Input\r\n                            id=\"pwdRepeat\"\r\n                            type=\"password\"\r\n                            name=\"pwdRepeat\"\r\n                            onChange={handleInputChange(\"password_repeat\")}\r\n                            autoComplete\r\n                            value={input.password_repeat}\r\n                            autoFocus\r\n                        />\r\n                    </FormControl>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={loading}\r\n                        className={classes.submit}\r\n                    >\r\n                        {t(\"login.resetPassword\")}\r\n                    </Button>{\" \"}\r\n                </form>{\" \"}\r\n                <Divider />\r\n                <div className={classes.link}>\r\n                    <div>\r\n                        <Link component={RouterLink} to={\"/login\"}>\r\n                            {t(\"login.backToSingIn\")}\r\n                        </Link>\r\n                    </div>\r\n                    <div>\r\n                        {registerEnabled && (\r\n                            <Link component={RouterLink} to={\"/signup\"}>\r\n                                {t(\"login.signUpAccount\")}\r\n                            </Link>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ResetForm;\r\n","import React, { useCallback, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    Avatar,\r\n    Button,\r\n    Divider,\r\n    FormControl,\r\n    Input,\r\n    InputLabel,\r\n    Link,\r\n    makeStyles,\r\n    Paper,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport API from \"../../middleware/Api\";\r\nimport KeyIcon from \"@material-ui/icons/VpnKeyOutlined\";\r\nimport { useCaptcha } from \"../../hooks/useCaptcha\";\r\nimport { toggleSnackbar } from \"../../redux/explorer\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    layout: {\r\n        width: \"auto\",\r\n        marginTop: \"110px\",\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            width: 400,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n        marginBottom: 110,\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\r\n            3\r\n        )}px`,\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    submit: {\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    link: {\r\n        marginTop: \"20px\",\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n}));\r\n\r\nfunction Reset() {\r\n    const { t } = useTranslation();\r\n\r\n    const [input, setInput] = useState({\r\n        email: \"\",\r\n    });\r\n    const [loading, setLoading] = useState(false);\r\n    const forgetCaptcha = useSelector(\r\n        (state) => state.siteConfig.forgetCaptcha\r\n    );\r\n    const registerEnabled = useSelector(\r\n        (state) => state.siteConfig.registerEnabled\r\n    );\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n    const handleInputChange = (name) => (e) => {\r\n        setInput({\r\n            ...input,\r\n            [name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const {\r\n        captchaLoading,\r\n        isValidate,\r\n        validate,\r\n        CaptchaRender,\r\n        captchaRefreshRef,\r\n        captchaParamsRef,\r\n    } = useCaptcha();\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        if (!isValidate.current.isValidate && forgetCaptcha) {\r\n            validate(() => submit(e), setLoading);\r\n            return;\r\n        }\r\n        API.post(\"/user/reset\", {\r\n            userName: input.email,\r\n            ...captchaParamsRef.current,\r\n        })\r\n            .then(() => {\r\n                setLoading(false);\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    t(\"login.resetEmailSent\"),\r\n                    \"success\"\r\n                );\r\n            })\r\n            .catch((error) => {\r\n                setLoading(false);\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\r\n                captchaRefreshRef.current();\r\n            });\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.layout}>\r\n            <Paper className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <KeyIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    {t(\"login.findMyPassword\")}\r\n                </Typography>\r\n                <form className={classes.form} onSubmit={submit}>\r\n                    <FormControl margin=\"normal\" required fullWidth>\r\n                        <InputLabel htmlFor=\"email\">\r\n                            {t(\"login.email\")}\r\n                        </InputLabel>\r\n                        <Input\r\n                            id=\"email\"\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            onChange={handleInputChange(\"email\")}\r\n                            autoComplete\r\n                            value={input.email}\r\n                            autoFocus\r\n                        />\r\n                    </FormControl>\r\n                    {forgetCaptcha && <CaptchaRender />}\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={\r\n                            loading || (forgetCaptcha ? captchaLoading : false)\r\n                        }\r\n                        className={classes.submit}\r\n                    >\r\n                        {t(\"login.sendMeAnEmail\")}\r\n                    </Button>{\" \"}\r\n                </form>{\" \"}\r\n                <Divider />\r\n                <div className={classes.link}>\r\n                    <div>\r\n                        <Link component={RouterLink} to={\"/login\"}>\r\n                            {t(\"login.backToSingIn\")}\r\n                        </Link>\r\n                    </div>\r\n                    <div>\r\n                        {registerEnabled && (\r\n                            <Link component={RouterLink} to={\"/signup\"}>\r\n                                {t(\"login.signUpAccount\")}\r\n                            </Link>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Reset;\r\n","import {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Grid,\r\n    List,\r\n    Slider,\r\n    withStyles,\r\n} from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MusicNote from \"@material-ui/icons/MusicNote\";\r\nimport PlayArrow from \"@material-ui/icons/PlayArrow\";\r\nimport PlayNext from \"@material-ui/icons/SkipNext\";\r\nimport PlayPrev from \"@material-ui/icons/SkipPrevious\";\r\nimport Pause from \"@material-ui/icons/Pause\";\r\nimport { Repeat, RepeatOne, Shuffle } from \"@material-ui/icons\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport { audioPreviewSuffix } from \"../../config\";\r\nimport { baseURL } from \"../../middleware/Api\";\r\nimport * as explorer from \"../../redux/explorer/reducer\";\r\nimport pathHelper from \"../../utils/page\";\r\nimport {\r\n    audioPreviewSetIsOpen,\r\n    audioPreviewSetPlaying,\r\n    showAudioPreview,\r\n} from \"../../redux/explorer\";\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\nconst styles = (theme) => ({\r\n    list: {\r\n        //maxWidth: 360,\r\n        backgroundColor: theme.palette.background.paper,\r\n        position: \"relative\",\r\n        overflow: \"auto\",\r\n        maxHeight: 300,\r\n    },\r\n    slider_root: {\r\n        \"vertical-align\": \"middle\",\r\n    },\r\n});\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        first: state.explorer.audioPreview.first,\r\n        other: state.explorer.audioPreview.other,\r\n        isOpen: state.explorer.audioPreview.isOpen,\r\n        playingName: state.explorer.audioPreview.playingName,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        showAudioPreview: (first) => {\r\n            dispatch(showAudioPreview(first));\r\n        },\r\n        audioPreviewSetIsOpen: (first) => {\r\n            dispatch(audioPreviewSetIsOpen(first));\r\n        },\r\n        audioPreviewSetPlaying: (playingName, paused) => {\r\n            dispatch(audioPreviewSetPlaying(playingName, paused));\r\n        },\r\n    };\r\n};\r\n\r\nclass MusicPlayerComponent extends Component {\r\n    state = {\r\n        items: [],\r\n        currentIndex: 0,\r\n        //isOpen: false,\r\n        //isPlay:false,\r\n        currentTime: 0,\r\n        duration: 0,\r\n        progressText: \"00:00/00:00\",\r\n        looptype: 0,\r\n    };\r\n    myAudioRef = React.createRef();\r\n\r\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\r\n        const items = [];\r\n        let firstOne = 0;\r\n        if (nextProps.first.id !== \"\") {\r\n            if (\r\n                pathHelper.isSharePage(this.props.location.pathname) &&\r\n                !nextProps.first.path\r\n            ) {\r\n                const newItem = {\r\n                    intro: nextProps.first.name,\r\n                    src: baseURL + \"/share/preview/\" + nextProps.first.key,\r\n                };\r\n                firstOne = 0;\r\n                items.push(newItem);\r\n                this.setState({\r\n                    currentIndex: firstOne,\r\n                    items: items,\r\n                    //isOpen: true,\r\n                });\r\n                this.props.audioPreviewSetIsOpen(true);\r\n                return;\r\n            }\r\n            // eslint-disable-next-line\r\n            nextProps.other.map((value) => {\r\n                const fileType = value.name.split(\".\").pop().toLowerCase();\r\n                if (audioPreviewSuffix.indexOf(fileType) !== -1) {\r\n                    let src = \"\";\r\n                    if (pathHelper.isSharePage(this.props.location.pathname)) {\r\n                        src = baseURL + \"/share/preview/\" + value.key;\r\n                        src =\r\n                            src +\r\n                            \"?path=\" +\r\n                            encodeURIComponent(\r\n                                value.path === \"/\"\r\n                                    ? value.path + value.name\r\n                                    : value.path + \"/\" + value.name\r\n                            );\r\n                    } else {\r\n                        src = baseURL + \"/file/preview/\" + value.id;\r\n                    }\r\n                    const newItem = {\r\n                        intro: value.name,\r\n                        src: src,\r\n                    };\r\n                    if (\r\n                        value.path === nextProps.first.path &&\r\n                        value.name === nextProps.first.name\r\n                    ) {\r\n                        firstOne = items.length;\r\n                    }\r\n                    items.push(newItem);\r\n                }\r\n            });\r\n            this.setState({\r\n                currentIndex: firstOne,\r\n                items: items,\r\n                //isOpen: true,\r\n            });\r\n            this.props.audioPreviewSetIsOpen(true);\r\n            this.props.showAudioPreview(explorer.initState.audioPreview.first);\r\n        }\r\n    };\r\n\r\n    handleItemClick = (currentIndex) => () => {\r\n        this.setState({\r\n            currentIndex: currentIndex,\r\n        });\r\n    };\r\n\r\n    handleClose = () => {\r\n        /*this.setState({\r\n            isOpen: false,\r\n        });*/\r\n        this.setState({\r\n            currentIndex: -1,\r\n        });\r\n        this.pause();\r\n        this.props.audioPreviewSetPlaying(null, false);\r\n        this.props.audioPreviewSetIsOpen(false);\r\n    };\r\n    backgroundPlay = () => {\r\n        this.props.audioPreviewSetIsOpen(false);\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (this.myAudioRef.current) {\r\n            this.bindEvents(this.myAudioRef.current);\r\n        }\r\n    }\r\n    componentDidUpdate() {\r\n        if (this.myAudioRef.current) {\r\n            this.bindEvents(this.myAudioRef.current);\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        this.unbindEvents(this.myAudioRef.current);\r\n    }\r\n\r\n    bindEvents = (ele) => {\r\n        if (ele) {\r\n            ele.addEventListener(\"canplay\", this.readyPlay);\r\n            ele.addEventListener(\"ended\", this.loopnext);\r\n            ele.addEventListener(\"timeupdate\", this.timeUpdate);\r\n        }\r\n    };\r\n\r\n    unbindEvents = (ele) => {\r\n        if (ele) {\r\n            ele.removeEventListener(\"canplay\", this.readyPlay);\r\n            ele.removeEventListener(\"ended\", this.loopnext);\r\n            ele.removeEventListener(\"timeupdate\", this.timeUpdate);\r\n        }\r\n    };\r\n\r\n    readyPlay = () => {\r\n        this.play();\r\n    };\r\n\r\n    formatTime = (s) => {\r\n        if (isNaN(s)) return \"00:00\";\r\n        const minute = Math.floor(s / 60);\r\n        const second = Math.floor(s % 60);\r\n        return (\r\n            `${minute}`.padStart(2, \"0\") + \":\" + `${second}`.padStart(2, \"0\")\r\n        );\r\n    };\r\n\r\n    timeUpdate = () => {\r\n        const currentTime = Math.floor(this.myAudioRef.current.currentTime); //this.myAudioRef.current.currentTime;//\r\n        this.setState({\r\n            currentTime: currentTime,\r\n            duration: this.myAudioRef.current.duration,\r\n            progressText:\r\n                this.formatTime(currentTime) +\r\n                \"/\" +\r\n                this.formatTime(this.myAudioRef.current.duration),\r\n        });\r\n    };\r\n\r\n    play = () => {\r\n        this.myAudioRef.current.play();\r\n        /*this.setState({\r\n            isPlay: true\r\n        });*/\r\n        this.props.audioPreviewSetPlaying(\r\n            this.state.items[this.state.currentIndex].intro,\r\n            false\r\n        );\r\n    };\r\n\r\n    pause = () => {\r\n        if (this.myAudioRef.current) {\r\n            this.myAudioRef.current.pause();\r\n        }\r\n        /*this.setState({\r\n            isPlay: false\r\n        })*/\r\n        this.props.audioPreviewSetPlaying(\r\n            this.state.items[this.state.currentIndex]?.intro,\r\n            true\r\n        );\r\n    };\r\n\r\n    playOrPaues = () => {\r\n        if (this.state.isPlay) {\r\n            this.pause();\r\n        } else {\r\n            this.play();\r\n        }\r\n    };\r\n    changeLoopType = () => {\r\n        let lt = this.state.looptype + 1;\r\n        if (lt >= 3) {\r\n            lt = 0;\r\n        }\r\n        this.setState({\r\n            looptype: lt,\r\n        });\r\n    };\r\n    loopnext = () => {\r\n        let index = this.state.currentIndex;\r\n        if (this.state.looptype == 0) {\r\n            //all\r\n            index = index + 1;\r\n            if (index >= this.state.items.length) {\r\n                index = 0;\r\n            }\r\n        } else if (this.state.looptype == 1) {\r\n            //single\r\n            //index=index;\r\n        } else if (this.state.looptype == 2) {\r\n            //random\r\n            if (this.state.items.length <= 2) {\r\n                index = index + 1;\r\n                if (index >= this.state.items.length) {\r\n                    index = 0;\r\n                }\r\n            } else {\r\n                while (index == this.state.currentIndex) {\r\n                    index = Math.floor(Math.random() * this.state.items.length);\r\n                }\r\n            }\r\n        }\r\n        if (this.state.currentIndex == index) {\r\n            this.myAudioRef.current.currentTime = 0;\r\n            this.play();\r\n        }\r\n        this.setState({\r\n            currentIndex: index,\r\n        });\r\n    };\r\n\r\n    prev = () => {\r\n        let index = this.state.currentIndex - 1;\r\n        if (index < 0) {\r\n            index = this.state.items.length - 1;\r\n        }\r\n        this.setState({\r\n            currentIndex: index,\r\n        });\r\n    };\r\n\r\n    next = () => {\r\n        let index = this.state.currentIndex + 1;\r\n        if (index >= this.state.items.length) {\r\n            index = 0;\r\n        }\r\n        this.setState({\r\n            currentIndex: index,\r\n        });\r\n    };\r\n\r\n    handleProgress = (e, newValue) => {\r\n        this.myAudioRef.current.currentTime = newValue;\r\n    };\r\n\r\n    render() {\r\n        const { currentIndex, items } = this.state;\r\n        const { isOpen, classes, t } = this.props;\r\n        return (\r\n            <Dialog\r\n                open={isOpen}\r\n                onClose={this.backgroundPlay}\r\n                aria-labelledby=\"form-dialog-title\"\r\n                maxWidth=\"xs\"\r\n                fullWidth\r\n                keepMounted\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">\r\n                    {t(\"fileManager.musicPlayer\")}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <List className={classes.list} dense>\r\n                        {items.map((value, idx) => {\r\n                            const labelId = `label-${value.intro}`;\r\n                            return (\r\n                                <ListItem\r\n                                    key={value.src}\r\n                                    dense\r\n                                    button\r\n                                    onClick={this.handleItemClick(idx)}\r\n                                    selected={idx === currentIndex}\r\n                                >\r\n                                    <ListItemIcon>\r\n                                        {idx === currentIndex ? (\r\n                                            <PlayArrow />\r\n                                        ) : (\r\n                                            <MusicNote />\r\n                                        )}\r\n                                    </ListItemIcon>\r\n                                    <ListItemText\r\n                                        id={labelId}\r\n                                        primary={`${value.intro}`}\r\n                                    />\r\n                                </ListItem>\r\n                            );\r\n                        })}\r\n                    </List>\r\n                    <audio\r\n                        ref={this.myAudioRef}\r\n                        src={items[currentIndex]?.src}\r\n                    />\r\n                    <div style={{ \"padding-top\": 8 }} />\r\n                    <Grid container spacing={2} alignItems=\"center\">\r\n                        <Grid item xs>\r\n                            <Slider\r\n                                classes={{ root: classes.slider_root }}\r\n                                value={this.state.currentTime}\r\n                                onChange={this.handleProgress}\r\n                                step={1}\r\n                                min={0}\r\n                                max={this.state.duration}\r\n                                aria-labelledby=\"continuous-slider\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>{this.state.progressText}</Grid>\r\n                    </Grid>\r\n                    <Grid\r\n                        container\r\n                        spacing={2}\r\n                        justifyContent=\"center\"\r\n                        justify=\"center\"\r\n                    >\r\n                        <Grid item>\r\n                            <IconButton\r\n                                edge=\"end\"\r\n                                aria-label=\"\"\r\n                                onClick={this.changeLoopType}\r\n                            >\r\n                                {this.state.looptype === 0 ? (\r\n                                    <Repeat />\r\n                                ) : this.state.looptype === 1 ? (\r\n                                    <RepeatOne />\r\n                                ) : (\r\n                                    <Shuffle />\r\n                                )}\r\n                            </IconButton>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <IconButton\r\n                                edge=\"end\"\r\n                                aria-label=\"\"\r\n                                onClick={this.prev}\r\n                            >\r\n                                <PlayPrev />\r\n                            </IconButton>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <IconButton\r\n                                edge=\"end\"\r\n                                aria-label=\"\"\r\n                                onClick={this.pause}\r\n                            >\r\n                                <Pause />\r\n                            </IconButton>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <IconButton\r\n                                edge=\"end\"\r\n                                aria-label=\"\"\r\n                                onClick={this.play}\r\n                            >\r\n                                <PlayArrow />\r\n                            </IconButton>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <IconButton\r\n                                edge=\"end\"\r\n                                aria-label=\"\"\r\n                                onClick={this.next}\r\n                            >\r\n                                <PlayNext />\r\n                            </IconButton>\r\n                        </Grid>\r\n                    </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleClose}>\r\n                        {t(\"fileManager.closeAndStop\")}\r\n                    </Button>\r\n                    <Button onClick={this.backgroundPlay}>\r\n                        {t(\"fileManager.playInBackground\")}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nMusicPlayerComponent.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst MusicPlayer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withRouter(withTranslation()(MusicPlayerComponent))));\r\n\r\nexport default MusicPlayer;\r\n","import React, { Suspense, useCallback, useMemo, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useLocation, useParams, useRouteMatch } from \"react-router\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../redux/explorer\";\r\nimport UseFileSubTitle from \"../../hooks/fileSubtitle\";\r\nimport { getPreviewURL } from \"../../middleware/Api\";\r\nimport pathHelper from \"../../utils/page\";\r\nimport TextLoading from \"../Placeholder/TextLoading\";\r\n\r\nconst ReactReader = React.lazy(() =>\r\n    import(/* webpackChunkName: \"ReactReader\" */ \"react-reader\").then((m) => ({\r\n        default: m.ReactReader,\r\n    }))\r\n);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    layout: {\r\n        height: \"calc(100vh - 64px)\",\r\n    },\r\n    paper: {\r\n        marginBottom: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nexport default function EpubViewer() {\r\n    const math = useRouteMatch();\r\n    const location = useLocation();\r\n    const query = useQuery();\r\n    const { id } = useParams();\r\n    const { path } = UseFileSubTitle(query, math, location);\r\n    const isShare = pathHelper.isSharePage(location.pathname);\r\n\r\n    const [currentLocation, setLocation] = useState(null);\r\n    const locationChanged = (epubcifi) => {\r\n        setLocation(epubcifi);\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const fileUrl = useMemo(\r\n        () =>\r\n            getPreviewURL(\r\n                isShare,\r\n                id,\r\n                query.get(\"id\"),\r\n                query.get(\"share_path\")\r\n            ),\r\n        [id, location, path]\r\n    );\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.layout}>\r\n            <Suspense fallback={<TextLoading />}>\r\n                <ReactReader\r\n                    location={currentLocation}\r\n                    locationChanged={locationChanged}\r\n                    epubInitOptions={{\r\n                        openAs: \"epub\",\r\n                    }}\r\n                    showToc={false}\r\n                    className={classes.container}\r\n                    url={fileUrl}\r\n                />\r\n            </Suspense>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Suspense } from \"react\";\r\nimport AuthRoute from \"./middleware/AuthRoute\";\r\nimport NoAuthRoute from \"./middleware/NoAuthRoute\";\r\nimport Navbar from \"./component/Navbar/Navbar.js\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport AlertBar from \"./component/Common/Snackbar\";\r\nimport { createMuiTheme, lighten } from \"@material-ui/core/styles\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Redirect, Route, Switch, useRouteMatch } from \"react-router-dom\";\r\nimport Auth from \"./middleware/Auth\";\r\nimport { CssBaseline, makeStyles, ThemeProvider } from \"@material-ui/core\";\r\nimport { changeThemeColor } from \"./utils\";\r\nimport NotFound from \"./component/Share/NotFound\";\r\n// Lazy loads\r\nimport LoginForm from \"./component/Login/LoginForm\";\r\nimport FileManager from \"./component/FileManager/FileManager.js\";\r\nimport VideoPreview from \"./component/Viewer/Video.js\";\r\nimport SearchResult from \"./component/Share/SearchResult\";\r\nimport MyShare from \"./component/Share/MyShare\";\r\nimport Download from \"./component/Download/Download\";\r\nimport SharePreload from \"./component/Share/SharePreload\";\r\nimport DocViewer from \"./component/Viewer/Doc\";\r\nimport TextViewer from \"./component/Viewer/Text\";\r\nimport WebDAV from \"./component/Setting/WebDAV\";\r\nimport Tasks from \"./component/Setting/Tasks\";\r\nimport Profile from \"./component/Setting/Profile\";\r\nimport UserSetting from \"./component/Setting/UserSetting\";\r\nimport Register from \"./component/Login/Register\";\r\nimport Activation from \"./component/Login/Activication\";\r\nimport ResetForm from \"./component/Login/ResetForm\";\r\nimport Reset from \"./component/Login/Reset\";\r\nimport PageLoading from \"./component/Placeholder/PageLoading\";\r\nimport CodeViewer from \"./component/Viewer/Code\";\r\nimport MusicPlayer from \"./component/FileManager/MusicPlayer\";\r\nimport EpubViewer from \"./component/Viewer/Epub\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst PDFViewer = React.lazy(() =>\r\n    import(/* webpackChunkName: \"pdf\" */ \"./component/Viewer/PDF\")\r\n);\r\n\r\nexport default function App() {\r\n    const themeConfig = useSelector((state) => state.siteConfig.theme);\r\n    const isLogin = useSelector((state) => state.viewUpdate.isLogin);\r\n    const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\r\n    const { t } = useTranslation();\r\n\r\n    const theme = React.useMemo(() => {\r\n        themeConfig.palette.type = prefersDarkMode ? \"dark\" : \"light\";\r\n        const prefer = Auth.GetPreference(\"theme_mode\");\r\n        if (prefer) {\r\n            themeConfig.palette.type = prefer;\r\n        }\r\n        const theme = createMuiTheme({\r\n            ...themeConfig,\r\n            palette: {\r\n                ...themeConfig.palette,\r\n                primary: {\r\n                    ...themeConfig.palette.primary,\r\n                    main:\r\n                        themeConfig.palette.type === \"dark\"\r\n                            ? lighten(themeConfig.palette.primary.main, 0.3)\r\n                            : themeConfig.palette.primary.main,\r\n                },\r\n            },\r\n            overrides: {\r\n                MuiButton: {\r\n                    root: {\r\n                        textTransform: \"none\",\r\n                    },\r\n                },\r\n                MuiTab: {\r\n                    root: {\r\n                        textTransform: \"none\",\r\n                    },\r\n                },\r\n            },\r\n        });\r\n        changeThemeColor(\r\n            themeConfig.palette.type === \"dark\"\r\n                ? theme.palette.background.default\r\n                : theme.palette.primary.main\r\n        );\r\n        return theme;\r\n    }, [prefersDarkMode, themeConfig]);\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            display: \"flex\",\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            padding: theme.spacing(0),\r\n            minWidth: 0,\r\n        },\r\n        toolbar: theme.mixins.toolbar,\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    const { path } = useRouteMatch();\r\n    return (\r\n        <React.Fragment>\r\n            <ThemeProvider theme={theme}>\r\n                <div className={classes.root} id=\"container\">\r\n                    <CssBaseline />\r\n                    <AlertBar />\r\n                    <Navbar />\r\n                    <main className={classes.content}>\r\n                        <div className={classes.toolbar} />\r\n                        <Switch>\r\n                            <AuthRoute exact path={path} isLogin={isLogin}>\r\n                                <Redirect\r\n                                    to={{\r\n                                        pathname: \"/home\",\r\n                                    }}\r\n                                />\r\n                            </AuthRoute>\r\n\r\n                            <AuthRoute path={`${path}home`} isLogin={isLogin}>\r\n                                <FileManager />\r\n                            </AuthRoute>\r\n\r\n                            <AuthRoute path={`${path}video`} isLogin={isLogin}>\r\n                                <VideoPreview />\r\n                            </AuthRoute>\r\n\r\n                            <AuthRoute path={`${path}text`} isLogin={isLogin}>\r\n                                <TextViewer />\r\n                            </AuthRoute>\r\n\r\n                            <AuthRoute path={`${path}doc`} isLogin={isLogin}>\r\n                                <DocViewer />\r\n                            </AuthRoute>\r\n\r\n                            <AuthRoute path={`${path}pdf`} isLogin={isLogin}>\r\n                                <Suspense fallback={<PageLoading />}>\r\n                                    <PDFViewer />\r\n                                </Suspense>\r\n                            </AuthRoute>\r\n\r\n                            <AuthRoute path={`${path}code`} isLogin={isLogin}>\r\n                                <CodeViewer />\r\n                            </AuthRoute>\r\n\r\n                            <AuthRoute path={`${path}epub`} isLogin={isLogin}>\r\n                                <EpubViewer />\r\n                            </AuthRoute>\r\n\r\n                            <AuthRoute path={`${path}aria2`} isLogin={isLogin}>\r\n                                <Download />\r\n                            </AuthRoute>\r\n\r\n                            <AuthRoute path={`${path}shares`} isLogin={isLogin}>\r\n                                <MyShare />\r\n                            </AuthRoute>\r\n\r\n                            <Route path={`${path}search`} isLogin={isLogin}>\r\n                                <SearchResult />\r\n                            </Route>\r\n\r\n                            <Route path={`${path}setting`} isLogin={isLogin}>\r\n                                <UserSetting />\r\n                            </Route>\r\n\r\n                            <AuthRoute\r\n                                path={`${path}profile/:id`}\r\n                                isLogin={isLogin}\r\n                            >\r\n                                <Profile />\r\n                            </AuthRoute>\r\n\r\n                            <AuthRoute path={`${path}webdav`} isLogin={isLogin}>\r\n                                <WebDAV />\r\n                            </AuthRoute>\r\n\r\n                            <AuthRoute path={`${path}tasks`} isLogin={isLogin}>\r\n                                <Tasks />\r\n                            </AuthRoute>\r\n\r\n                            <NoAuthRoute\r\n                                exact\r\n                                path={`${path}login`}\r\n                                isLogin={isLogin}\r\n                            >\r\n                                <LoginForm />\r\n                            </NoAuthRoute>\r\n\r\n                            <NoAuthRoute\r\n                                exact\r\n                                path={`${path}signup`}\r\n                                isLogin={isLogin}\r\n                            >\r\n                                <Register />\r\n                            </NoAuthRoute>\r\n\r\n                            <Route path={`${path}activate`} exact>\r\n                                <Activation />\r\n                            </Route>\r\n\r\n                            <Route path={`${path}reset`} exact>\r\n                                <ResetForm />\r\n                            </Route>\r\n\r\n                            <Route path={`${path}forget`} exact>\r\n                                <Reset />\r\n                            </Route>\r\n\r\n                            <Route exact path={`${path}s/:id`}>\r\n                                <SharePreload />\r\n                            </Route>\r\n\r\n                            <Route path={`${path}s/:id/video(/)*`}>\r\n                                <VideoPreview />\r\n                            </Route>\r\n\r\n                            <Route path={`${path}s/:id/doc(/)*`}>\r\n                                <DocViewer />\r\n                            </Route>\r\n\r\n                            <Route path={`${path}s/:id/text(/)*`}>\r\n                                <TextViewer />\r\n                            </Route>\r\n\r\n                            <Route path={`${path}s/:id/pdf(/)*`}>\r\n                                <Suspense fallback={<PageLoading />}>\r\n                                    <PDFViewer />\r\n                                </Suspense>\r\n                            </Route>\r\n\r\n                            <Route path={`${path}s/:id/code(/)*`}>\r\n                                <CodeViewer />\r\n                            </Route>\r\n\r\n                            <Route path={`${path}s/:id/epub(/)*`}>\r\n                                <EpubViewer />\r\n                            </Route>\r\n\r\n                            <Route path=\"*\">\r\n                                <NotFound\r\n                                    msg={t(\"pageNotFound\", { ns: \"common\" })}\r\n                                />\r\n                            </Route>\r\n                        </Switch>\r\n                    </main>\r\n                    <MusicPlayer />\r\n                </div>\r\n            </ThemeProvider>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import API from \"./Api\";\r\nimport Auth from \"./Auth\";\r\nimport pathHelper from \"../utils/page\";\r\nimport {\r\n    changeViewMethod,\r\n    setSiteConfig,\r\n    toggleSnackbar,\r\n} from \"../redux/explorer\";\r\nimport i18next from \"../i18n\";\r\n\r\nconst initUserConfig = (siteConfig) => {\r\n    if (siteConfig.user !== undefined && !siteConfig.user.anonymous) {\r\n        const themes = JSON.parse(siteConfig.themes);\r\n        const user = siteConfig.user;\r\n        delete siteConfig.user;\r\n\r\n        //更换用户自定配色\r\n        if (\r\n            user[\"preferred_theme\"] !== \"\" &&\r\n            themes[user[\"preferred_theme\"]] !== undefined\r\n        ) {\r\n            siteConfig.theme = themes[user[\"preferred_theme\"]];\r\n        }\r\n\r\n        // 更新登录态\r\n        Auth.authenticate(user);\r\n    }\r\n    if (siteConfig.user !== undefined && siteConfig.user.anonymous) {\r\n        Auth.SetUser(siteConfig.user);\r\n    }\r\n    return siteConfig;\r\n};\r\n\r\nexport const InitSiteConfig = (rawStore) => {\r\n    // 从缓存获取默认配置\r\n    const configCache = JSON.parse(localStorage.getItem(\"siteConfigCache\"));\r\n    if (configCache != null) {\r\n        rawStore.siteConfig = configCache;\r\n    }\r\n    // 检查是否有path参数\r\n    const url = new URL(window.location.href);\r\n    const c = url.searchParams.get(\"path\");\r\n    rawStore.navigator.path = c === null ? \"/\" : c;\r\n    // 初始化用户个性配置\r\n    rawStore.siteConfig = initUserConfig(rawStore.siteConfig);\r\n\r\n    // 更改站点标题\r\n    document.title = rawStore.siteConfig.title;\r\n    return rawStore;\r\n};\r\n\r\nexport async function UpdateSiteConfig(store) {\r\n    API.get(\"/site/config\")\r\n        .then(function (response) {\r\n            const themes = JSON.parse(response.data.themes);\r\n            response.data.theme = themes[response.data.defaultTheme];\r\n            response.data = initUserConfig(response.data);\r\n            store.dispatch(setSiteConfig(response.data));\r\n            localStorage.setItem(\r\n                \"siteConfigCache\",\r\n                JSON.stringify(response.data)\r\n            );\r\n\r\n            // 偏爱的列表样式\r\n            const preferListMethod = Auth.GetPreference(\"view_method\");\r\n            if (preferListMethod) {\r\n                store.dispatch(changeViewMethod(preferListMethod));\r\n            } else {\r\n                if (pathHelper.isSharePage(window.location.pathname)) {\r\n                    store.dispatch(\r\n                        changeViewMethod(response.data.share_view_method)\r\n                    );\r\n                } else {\r\n                    store.dispatch(\r\n                        changeViewMethod(response.data.home_view_method)\r\n                    );\r\n                }\r\n            }\r\n        })\r\n        .catch(function (error) {\r\n            store.dispatch(\r\n                toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    i18next.t(\"errLoadingSiteConfig\", { ns: \"common\" }) +\r\n                        error.message,\r\n                    \"error\"\r\n                )\r\n            );\r\n        });\r\n}\r\n","import { AnyAction } from \"redux\";\r\nimport Auth from \"../../middleware/Auth\";\r\nimport { SortMethod } from \"../../types\";\r\n\r\nexport interface ViewUpdateState {\r\n    isLogin: boolean;\r\n    open: boolean;\r\n    explorerViewMethod: string;\r\n    sortMethod: SortMethod;\r\n    subTitle: string | null;\r\n    contextType: string;\r\n    contextOpen: boolean;\r\n    menuOpen: boolean;\r\n    navigatorLoading: boolean;\r\n    navigatorError: boolean;\r\n    navigatorErrorMsg: string | null;\r\n    modalsLoading: boolean;\r\n    storageRefresh: boolean;\r\n    userPopoverAnchorEl: any;\r\n    shareUserPopoverAnchorEl: any;\r\n    modals: {\r\n        createNewFolder: boolean;\r\n        createNewFile: boolean;\r\n        rename: boolean;\r\n        move: boolean;\r\n        remove: boolean;\r\n        share: boolean;\r\n        music: boolean;\r\n        remoteDownload: boolean;\r\n        torrentDownload: boolean;\r\n        getSource: string;\r\n        copy: boolean;\r\n        resave: boolean;\r\n        compress: boolean;\r\n        decompress: boolean;\r\n        loading: boolean;\r\n        loadingText: string;\r\n        directoryDownloading: boolean;\r\n        directoryDownloadLog: string;\r\n        directoryDownloadDone: boolean;\r\n        option?: {\r\n            options: {\r\n                open: boolean;\r\n                key: string;\r\n                name: string;\r\n                description?: string;\r\n            }[];\r\n            title: string;\r\n            callback: any;\r\n            onClose: any;\r\n        };\r\n    };\r\n    snackbar: {\r\n        toggle: boolean;\r\n        vertical: string;\r\n        horizontal: string;\r\n        msg: string;\r\n        color: string;\r\n    };\r\n    pagination: {\r\n        page: number;\r\n        size: number;\r\n    };\r\n    openFileSelector: number;\r\n    openFolderSelector: number;\r\n    shareInfo: any;\r\n}\r\nexport const initState: ViewUpdateState = {\r\n    // 是否登录\r\n    isLogin: Auth.Check(),\r\n    open: false,\r\n    explorerViewMethod: \"icon\",\r\n    sortMethod: Auth.GetPreferenceWithDefault(\"sort\", \"timePos\"),\r\n    subTitle: null,\r\n    contextType: \"none\",\r\n    contextOpen: false,\r\n    menuOpen: false,\r\n    navigatorLoading: true,\r\n    navigatorError: false,\r\n    navigatorErrorMsg: null,\r\n    modalsLoading: false,\r\n    storageRefresh: false,\r\n    userPopoverAnchorEl: null,\r\n    shareUserPopoverAnchorEl: null,\r\n    modals: {\r\n        createNewFolder: false,\r\n        createNewFile: false,\r\n        rename: false,\r\n        move: false,\r\n        remove: false,\r\n        share: false,\r\n        music: false,\r\n        remoteDownload: false,\r\n        torrentDownload: false,\r\n        getSource: \"\",\r\n        copy: false,\r\n        resave: false,\r\n        compress: false,\r\n        decompress: false,\r\n        loading: false,\r\n        loadingText: \"\",\r\n        directoryDownloading: false,\r\n        directoryDownloadLog: \"\",\r\n        directoryDownloadDone: false,\r\n    },\r\n    snackbar: {\r\n        toggle: false,\r\n        vertical: \"top\",\r\n        horizontal: \"center\",\r\n        msg: \"\",\r\n        color: \"\",\r\n    },\r\n    pagination: {\r\n        page: 1,\r\n        size: Auth.GetPreferenceWithDefault(\"pagination\", 100),\r\n    },\r\n    openFileSelector: 0,\r\n    openFolderSelector: 0,\r\n    shareInfo: null,\r\n};\r\nconst viewUpdate = (state: ViewUpdateState = initState, action: AnyAction) => {\r\n    switch (action.type) {\r\n        case \"DRAWER_TOGGLE\":\r\n            return Object.assign({}, state, {\r\n                open: action.open,\r\n            });\r\n        case \"CHANGE_VIEW_METHOD\":\r\n            return Object.assign({}, state, {\r\n                explorerViewMethod: action.method,\r\n            });\r\n        case \"SET_NAVIGATOR_LOADING_STATUE\":\r\n            return Object.assign({}, state, {\r\n                navigatorLoading: action.status,\r\n            });\r\n        case \"SET_NAVIGATOR_ERROR\":\r\n            return Object.assign({}, state, {\r\n                navigatorError: action.status,\r\n                navigatorErrorMsg: action.msg,\r\n            });\r\n        case \"OPEN_CREATE_FOLDER_DIALOG\":\r\n            return Object.assign({}, state, {\r\n                modals: Object.assign({}, state.modals, {\r\n                    createNewFolder: true,\r\n                }),\r\n                contextOpen: false,\r\n            });\r\n        case \"OPEN_CREATE_FILE_DIALOG\":\r\n            return Object.assign({}, state, {\r\n                modals: Object.assign({}, state.modals, {\r\n                    createNewFile: true,\r\n                }),\r\n                contextOpen: false,\r\n            });\r\n        case \"OPEN_RENAME_DIALOG\":\r\n            return Object.assign({}, state, {\r\n                modals: Object.assign({}, state.modals, {\r\n                    rename: true,\r\n                }),\r\n                contextOpen: false,\r\n            });\r\n        case \"OPEN_REMOVE_DIALOG\":\r\n            return Object.assign({}, state, {\r\n                modals: Object.assign({}, state.modals, {\r\n                    remove: true,\r\n                }),\r\n                contextOpen: false,\r\n            });\r\n        case \"OPEN_MOVE_DIALOG\":\r\n            return Object.assign({}, state, {\r\n                modals: Object.assign({}, state.modals, {\r\n                    move: true,\r\n                }),\r\n                contextOpen: false,\r\n            });\r\n        case \"OPEN_RESAVE_DIALOG\":\r\n            // window.shareKey = action.key;\r\n            return Object.assign({}, state, {\r\n                modals: Object.assign({}, state.modals, {\r\n                    resave: true,\r\n                }),\r\n                contextOpen: false,\r\n            });\r\n        case \"SET_USER_POPOVER\":\r\n            return Object.assign({}, state, {\r\n                userPopoverAnchorEl: action.anchor,\r\n            });\r\n        case \"SET_SHARE_USER_POPOVER\":\r\n            return Object.assign({}, state, {\r\n                shareUserPopoverAnchorEl: action.anchor,\r\n            });\r\n        case \"OPEN_SHARE_DIALOG\":\r\n            return Object.assign({}, state, {\r\n                modals: Object.assign({}, state.modals, {\r\n                    share: true,\r\n                }),\r\n                contextOpen: false,\r\n            });\r\n        case \"OPEN_MUSIC_DIALOG\":\r\n            return Object.assign({}, state, {\r\n                modals: Object.assign({}, state.modals, {\r\n                    music: true,\r\n                }),\r\n                contextOpen: false,\r\n            });\r\n        case \"OPEN_REMOTE_DOWNLOAD_DIALOG\":\r\n            return Object.assign({}, state, {\r\n                modals: Object.assign({}, state.modals, {\r\n                    remoteDownload: true,\r\n                }),\r\n                contextOpen: false,\r\n            });\r\n        case \"OPEN_TORRENT_DOWNLOAD_DIALOG\":\r\n            return Object.assign({}, state, {\r\n                modals: Object.assign({}, state.modals, {\r\n                    torrentDownload: true,\r\n                }),\r\n                contextOpen: false,\r\n            });\r\n        case \"OPEN_DECOMPRESS_DIALOG\":\r\n            return Object.assign({}, state, {\r\n                modals: Object.assign({}, state.modals, {\r\n                    decompress: true,\r\n                }),\r\n                contextOpen: false,\r\n            });\r\n        case \"OPEN_COMPRESS_DIALOG\":\r\n            return Object.assign({}, state, {\r\n                modals: Object.assign({}, state.modals, {\r\n                    compress: true,\r\n                }),\r\n                contextOpen: false,\r\n            });\r\n        case \"OPEN_GET_SOURCE_DIALOG\":\r\n            return Object.assign({}, state, {\r\n                modals: Object.assign({}, state.modals, {\r\n                    getSource: action.source,\r\n                }),\r\n                contextOpen: false,\r\n            });\r\n        case \"OPEN_COPY_DIALOG\":\r\n            return Object.assign({}, state, {\r\n                modals: Object.assign({}, state.modals, {\r\n                    copy: true,\r\n                }),\r\n                contextOpen: false,\r\n            });\r\n        case \"OPEN_LOADING_DIALOG\":\r\n            return Object.assign({}, state, {\r\n                modals: Object.assign({}, state.modals, {\r\n                    loading: true,\r\n                    loadingText: action.text,\r\n                }),\r\n                contextOpen: false,\r\n            });\r\n        case \"OPEN_DIRECTORY_DOWNLOAD_DIALOG\":\r\n            return Object.assign({}, state, {\r\n                modals: Object.assign({}, state.modals, {\r\n                    directoryDownloading: action.downloading,\r\n                    directoryDownloadLog: action.log,\r\n                    directoryDownloadDone: action.done,\r\n                }),\r\n                contextOpen: false,\r\n            });\r\n        case \"CLOSE_CONTEXT_MENU\":\r\n            return Object.assign({}, state, {\r\n                contextOpen: false,\r\n            });\r\n        case \"CLOSE_ALL_MODALS\":\r\n            return Object.assign({}, state, {\r\n                modals: Object.assign({}, state.modals, {\r\n                    createNewFolder: false,\r\n                    createNewFile: false,\r\n                    rename: false,\r\n                    move: false,\r\n                    remove: false,\r\n                    share: false,\r\n                    music: false,\r\n                    remoteDownload: false,\r\n                    torrentDownload: false,\r\n                    getSource: \"\",\r\n                    resave: false,\r\n                    copy: false,\r\n                    loading: false,\r\n                    compress: false,\r\n                    decompress: false,\r\n                    option: undefined,\r\n                    directoryDownloading: false,\r\n                    directoryDownloadLog: \"\",\r\n                    directoryDownloadDone: false,\r\n                }),\r\n            });\r\n        case \"TOGGLE_SNACKBAR\":\r\n            return Object.assign({}, state, {\r\n                snackbar: {\r\n                    toggle: !state.snackbar.toggle,\r\n                    vertical: action.vertical,\r\n                    horizontal: action.horizontal,\r\n                    msg: action.msg,\r\n                    color: action.color,\r\n                },\r\n            });\r\n        case \"SET_MODALS_LOADING\":\r\n            return Object.assign({}, state, {\r\n                modalsLoading: action.status,\r\n            });\r\n        case \"SET_SESSION_STATUS\":\r\n            return {\r\n                ...state,\r\n                isLogin: action.status,\r\n            };\r\n        case \"REFRESH_STORAGE\":\r\n            return Object.assign({}, state, {\r\n                storageRefresh: !state.storageRefresh,\r\n            });\r\n        case \"SEARCH_MY_FILE\":\r\n            return Object.assign({}, state, {\r\n                contextOpen: false,\r\n                navigatorError: false,\r\n                navigatorLoading: true,\r\n            });\r\n        case \"CHANGE_CONTEXT_MENU\":\r\n            if (state.contextOpen && action.open) {\r\n                return Object.assign({}, state);\r\n            }\r\n            return Object.assign({}, state, {\r\n                contextOpen: action.open,\r\n                contextType: action.menuType,\r\n            });\r\n        case \"SET_SUBTITLE\":\r\n            return Object.assign({}, state, {\r\n                subTitle: action.title,\r\n            });\r\n        case \"SET_SORT_METHOD\":\r\n            return {\r\n                ...state,\r\n                sortMethod: action.method,\r\n            };\r\n        case \"SET_NAVIGATOR\":\r\n            return {\r\n                ...state,\r\n                contextOpen: false,\r\n                navigatorError: false,\r\n                navigatorLoading: action.navigatorLoading,\r\n            };\r\n        case \"SET_OPTION_MODAL\":\r\n            return Object.assign({}, state, {\r\n                modals: Object.assign({}, state.modals, {\r\n                    option: action.option,\r\n                }),\r\n                contextOpen: false,\r\n            });\r\n        case \"OPEN_FILE_SELECTOR\":\r\n            return {\r\n                ...state,\r\n                openFileSelector: state.openFileSelector + 1,\r\n                contextOpen: false,\r\n            };\r\n        case \"OPEN_FOLDER_SELECTOR\":\r\n            return {\r\n                ...state,\r\n                openFolderSelector: state.openFolderSelector + 1,\r\n                contextOpen: false,\r\n            };\r\n        case \"SET_PAGINATION\":\r\n            return {\r\n                ...state,\r\n                pagination: action.pagination,\r\n            };\r\n        case \"SET_SHARE_INFO\":\r\n            return {\r\n                ...state,\r\n                shareInfo: action.shareInfo,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default viewUpdate;\r\n","/* eslint-disable no-case-declarations */\r\nimport { InitSiteConfig } from \"../middleware/Init\";\r\nimport { combineReducers } from \"../redux/combineReducers\";\r\nimport viewUpdate from \"../redux/viewUpdate/reducer\";\r\nimport explorer from \"../redux/explorer/reducer\";\r\nimport { connectRouter } from \"connected-react-router\";\r\nimport i18next from \"../i18n\";\r\n\r\nconst doNavigate = (path, state) => {\r\n    window.currntPath = path;\r\n    return Object.assign({}, state, {\r\n        navigator: Object.assign({}, state.navigator, {\r\n            path: path,\r\n        }),\r\n    });\r\n};\r\n\r\nexport const initState = {\r\n    siteConfig: {\r\n        title: window.subTitle,\r\n        siteICPId: \"\",\r\n        loginCaptcha: false,\r\n        regCaptcha: false,\r\n        forgetCaptcha: false,\r\n        emailActive: false,\r\n        QQLogin: false,\r\n        themes: null,\r\n        authn: false,\r\n        theme: {\r\n            palette: {\r\n                common: { black: \"#000\", white: \"#fff\" },\r\n                background: { paper: \"#fff\", default: \"#fafafa\" },\r\n                primary: {\r\n                    light: \"#7986cb\",\r\n                    main: \"#3f51b5\",\r\n                    dark: \"#303f9f\",\r\n                    contrastText: \"#fff\",\r\n                },\r\n                secondary: {\r\n                    light: \"#ff4081\",\r\n                    main: \"#f50057\",\r\n                    dark: \"#c51162\",\r\n                    contrastText: \"#fff\",\r\n                },\r\n                error: {\r\n                    light: \"#e57373\",\r\n                    main: \"#f44336\",\r\n                    dark: \"#d32f2f\",\r\n                    contrastText: \"#fff\",\r\n                },\r\n                text: {\r\n                    primary: \"rgba(0, 0, 0, 0.87)\",\r\n                    secondary: \"rgba(0, 0, 0, 0.54)\",\r\n                    disabled: \"rgba(0, 0, 0, 0.38)\",\r\n                    hint: \"rgba(0, 0, 0, 0.38)\",\r\n                },\r\n                explorer: {\r\n                    filename: \"#474849\",\r\n                    icon: \"#8f8f8f\",\r\n                    bgSelected: \"#D5DAF0\",\r\n                    emptyIcon: \"#e8e8e8\",\r\n                },\r\n            },\r\n        },\r\n        captcha_ReCaptchaKey: \"defaultKey\",\r\n        captcha_type: \"normal\",\r\n        tcaptcha_captcha_app_id: \"\",\r\n    },\r\n    navigator: {\r\n        path: \"/\",\r\n        refresh: true,\r\n    },\r\n};\r\n\r\nconst defaultStatus = InitSiteConfig(initState);\r\n\r\n// TODO: 将cloureveApp切分成小的reducer\r\nconst cloudreveApp = (state = defaultStatus, action) => {\r\n    switch (action.type) {\r\n        case \"SET_NAVIGATOR\":\r\n            return doNavigate(action.path, state);\r\n        case \"TOGGLE_DAYLIGHT_MODE\": {\r\n            const copy = Object.assign({}, state);\r\n            if (\r\n                copy.siteConfig.theme.palette.type === undefined ||\r\n                copy.siteConfig.theme.palette.type === \"light\"\r\n            ) {\r\n                return {\r\n                    ...state,\r\n                    siteConfig: {\r\n                        ...state.siteConfig,\r\n                        theme: {\r\n                            ...state.siteConfig.theme,\r\n                            palette: {\r\n                                ...state.siteConfig.theme.palette,\r\n                                type: \"dark\",\r\n                            },\r\n                        },\r\n                    },\r\n                };\r\n            }\r\n            return {\r\n                ...state,\r\n                siteConfig: {\r\n                    ...state.siteConfig,\r\n                    theme: {\r\n                        ...state.siteConfig.theme,\r\n                        palette: {\r\n                            ...state.siteConfig.theme.palette,\r\n                            type: \"light\",\r\n                        },\r\n                    },\r\n                },\r\n            };\r\n        }\r\n        case \"APPLY_THEME\":\r\n            if (state.siteConfig.themes !== null) {\r\n                const themes = JSON.parse(state.siteConfig.themes);\r\n                if (themes[action.theme] === undefined) {\r\n                    return state;\r\n                }\r\n                return Object.assign({}, state, {\r\n                    siteConfig: Object.assign({}, state.siteConfig, {\r\n                        theme: themes[action.theme],\r\n                    }),\r\n                });\r\n            }\r\n            break;\r\n        case \"NAVIGATOR_UP\":\r\n            return doNavigate(action.path, state);\r\n        case \"SET_SITE_CONFIG\":\r\n            return Object.assign({}, state, {\r\n                siteConfig: action.config,\r\n            });\r\n        case \"REFRESH_FILE_LIST\":\r\n            return Object.assign({}, state, {\r\n                navigator: Object.assign({}, state.navigator, {\r\n                    refresh: !state.navigator.refresh,\r\n                }),\r\n            });\r\n        case \"SEARCH_MY_FILE\":\r\n            return Object.assign({}, state, {\r\n                navigator: Object.assign({}, state.navigator, {\r\n                    path: \"/\" + i18next.t(\"fileManager.searchResult\"),\r\n                    refresh: !state.explorer.search\r\n                        ? state.navigator.refresh\r\n                        : !state.navigator.refresh,\r\n                }),\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default (history) => (state, action) => {\r\n    const { viewUpdate: viewUpdateState, explorer: explorerState } =\r\n        state || {};\r\n    const appState = cloudreveApp(state, action);\r\n    const combinedState = combineReducers({\r\n        viewUpdate,\r\n        explorer,\r\n        router: connectRouter(history),\r\n    })({ viewUpdate: viewUpdateState, explorer: explorerState }, action);\r\n    return {\r\n        ...appState,\r\n        ...combinedState,\r\n    };\r\n};\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\nconst styles = {\r\n    h1: {\r\n        color: \"#a4a4a4\",\r\n        margin: \"5px 0px\",\r\n    },\r\n    h2: {\r\n        margin: \"15px 0px\",\r\n    },\r\n};\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { hasError: false, error: null, errorInfo: null };\r\n    }\r\n\r\n    static getDerivedStateFromError() {\r\n        return { hasError: true };\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        this.setState({\r\n            error: error,\r\n            errorInfo: errorInfo,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { classes, t } = this.props;\r\n        if (this.state.hasError) {\r\n            return (\r\n                <>\r\n                    <h1 className={classes.h1}>:(</h1>\r\n                    <h2 className={classes.h2}>{t(\"renderError\")}</h2>\r\n                    {this.state.error &&\r\n                        this.state.errorInfo &&\r\n                        this.state.errorInfo.componentStack && (\r\n                            <details>\r\n                                <summary>{t(\"errorDetails\")}</summary>\r\n                                <pre>\r\n                                    <code>{this.state.error.toString()}</code>\r\n                                </pre>\r\n                                <pre>\r\n                                    <code>\r\n                                        {this.state.errorInfo.componentStack}\r\n                                    </code>\r\n                                </pre>\r\n                            </details>\r\n                        )}\r\n                </>\r\n            );\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default withTranslation([\"common\"])(withStyles(styles)(ErrorBoundary));\r\n","import React, { Suspense } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport App from \"./App\";\r\nimport cloureveApp from \"./reducers\";\r\nimport { UpdateSiteConfig } from \"./middleware/Init\";\r\nimport ErrorBoundary from \"./component/Placeholder/ErrorBoundary\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport { ConnectedRouter, routerMiddleware } from \"connected-react-router\";\r\nimport i18next from \"./i18n\";\r\nimport PageLoading from \"./component/Placeholder/PageLoading\";\r\n\r\nconst Admin = React.lazy(() => import(\"./Admin\"));\r\n\r\nif (window.location.hash !== \"\") {\r\n    window.location.href = window.location.hash.split(\"#\")[1];\r\n}\r\nserviceWorker.register({\r\n    onUpdate: (registration) => {\r\n        alert(i18next.t(\"newVersionRefresh\", { ns: \"common\" }));\r\n        if (registration && registration.waiting) {\r\n            registration.waiting.postMessage({ type: \"SKIP_WAITING\" });\r\n        }\r\n        window.location.reload();\r\n    },\r\n});\r\n\r\nexport const history = createBrowserHistory();\r\nlet reduxEnhance = applyMiddleware(routerMiddleware(history), thunk);\r\nif (\r\n    process.env.NODE_ENV === \"development\" &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION__\r\n) {\r\n    reduxEnhance = compose(reduxEnhance, window.__REDUX_DEVTOOLS_EXTENSION__());\r\n}\r\n\r\nconst store = createStore(cloureveApp(history), reduxEnhance);\r\nUpdateSiteConfig(store);\r\n\r\nReactDOM.render(\r\n    <Suspense fallback={<PageLoading />}>\r\n        <ErrorBoundary>\r\n            <Provider store={store}>\r\n                <ConnectedRouter history={history}>\r\n                    <Switch>\r\n                        <Route path=\"/admin\">\r\n                            <Admin />\r\n                        </Route>\r\n                        <Route exact path=\"\">\r\n                            <App />\r\n                        </Route>\r\n                    </Switch>\r\n                </ConnectedRouter>\r\n            </Provider>\r\n        </ErrorBoundary>\r\n    </Suspense>,\r\n    document.getElementById(\"root\")\r\n);\r\n","import {\r\n    combineReducers as combine,\r\n    ReducersMapObject,\r\n    AnyAction,\r\n} from \"redux\";\r\nimport invariant from \"invariant\";\r\n\r\nexport const combineReducers = (reducers: ReducersMapObject) => {\r\n    const combinedReducer = combine(reducers);\r\n    // TODO: define state type\r\n    return (state: any, action: AnyAction) => {\r\n        if (\r\n            action.type &&\r\n            !action.type.startsWith(\"@@\") &&\r\n            action.type.split(\"/\").length > 1\r\n        ) {\r\n            const namespace = action.type.split(\"/\")[0];\r\n            const reducer = reducers[namespace];\r\n            invariant(!!reducer, `reducer ${namespace} doesn't exist`);\r\n            return reducer && reducer(state, action);\r\n        }\r\n        return combinedReducer(state, action);\r\n    };\r\n};\r\n","import React from \"react\";\r\nimport { PackageVariant } from \"mdi-material-ui\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    emptyContainer: {\r\n        bottom: \"0\",\r\n\r\n        color: theme.palette.action.disabled,\r\n        textAlign: \"center\",\r\n        paddingTop: \"20px\",\r\n    },\r\n    emptyInfoBig: {\r\n        fontSize: \"25px\",\r\n        color: theme.palette.action.disabled,\r\n    },\r\n    emptyInfoSmall: {\r\n        color: theme.palette.action.disabled,\r\n    },\r\n}));\r\n\r\nexport default function Nothing({ primary, secondary, top = 20, size = 1 }) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div\r\n            style={{\r\n                margin: `${50 * size}px auto`,\r\n                paddingTop: top,\r\n            }}\r\n            className={classes.emptyContainer}\r\n        >\r\n            <PackageVariant\r\n                style={{\r\n                    fontSize: 160 * size,\r\n                }}\r\n            />\r\n            <div\r\n                style={{\r\n                    fontSize: 25 * size,\r\n                }}\r\n                className={classes.emptyInfoBig}\r\n            >\r\n                {primary}\r\n            </div>\r\n            {secondary !== \"\" && (\r\n                <div className={classes.emptyInfoSmall}>{secondary}</div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport FolderIcon from \"@material-ui/icons/Folder\";\r\nimport RightIcon from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport UpIcon from \"@material-ui/icons/ArrowUpward\";\r\nimport { connect } from \"react-redux\";\r\nimport classNames from \"classnames\";\r\n\r\nimport {\r\n    IconButton,\r\n    ListItemIcon,\r\n    ListItemSecondaryAction,\r\n    ListItemText,\r\n    MenuItem,\r\n    MenuList,\r\n    withStyles,\r\n} from \"@material-ui/core\";\r\nimport API from \"../../middleware/Api\";\r\nimport { toggleSnackbar } from \"../../redux/explorer\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        search: state.explorer.search,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\r\n        },\r\n    };\r\n};\r\n\r\nconst styles = (theme) => ({\r\n    iconWhite: {\r\n        color: theme.palette.common.white,\r\n    },\r\n    selected: {\r\n        backgroundColor: theme.palette.primary.main + \"!important\",\r\n        \"& $primary, & $icon\": {\r\n            color: theme.palette.common.white,\r\n        },\r\n    },\r\n    primary: {},\r\n    icon: {},\r\n    buttonIcon: {},\r\n    selector: {\r\n        minWidth: \"300px\",\r\n    },\r\n    container: {\r\n        maxHeight: \"330px\",\r\n        overflowY: \" auto\",\r\n    },\r\n});\r\n\r\nclass PathSelectorCompoment extends Component {\r\n    state = {\r\n        presentPath: \"/\",\r\n        dirList: [],\r\n        selectedTarget: null,\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        const toBeLoad = this.props.presentPath;\r\n        this.enterFolder(!this.props.search ? toBeLoad : \"/\");\r\n    };\r\n\r\n    back = () => {\r\n        const paths = this.state.presentPath.split(\"/\");\r\n        paths.pop();\r\n        const toBeLoad = paths.join(\"/\");\r\n        this.enterFolder(toBeLoad === \"\" ? \"/\" : toBeLoad);\r\n    };\r\n\r\n    enterFolder = (toBeLoad) => {\r\n        API.get(\r\n            (this.props.api ? this.props.api : \"/directory\") +\r\n                encodeURIComponent(toBeLoad)\r\n        )\r\n            .then((response) => {\r\n                const dirList = response.data.objects.filter((x) => {\r\n                    return (\r\n                        x.type === \"dir\" &&\r\n                        this.props.selected.findIndex((value) => {\r\n                            return (\r\n                                value.name === x.name && value.path === x.path\r\n                            );\r\n                        }) === -1\r\n                    );\r\n                });\r\n                if (toBeLoad === \"/\") {\r\n                    dirList.unshift({ name: \"/\", path: \"\" });\r\n                }\r\n                this.setState({\r\n                    presentPath: toBeLoad,\r\n                    dirList: dirList,\r\n                    selectedTarget: null,\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"warning\"\r\n                );\r\n            });\r\n    };\r\n\r\n    handleSelect = (index) => {\r\n        this.setState({ selectedTarget: index });\r\n        this.props.onSelect(this.state.dirList[index]);\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n                <MenuList className={classes.selector}>\r\n                    {this.state.presentPath !== \"/\" && (\r\n                        <MenuItem onClick={this.back}>\r\n                            <ListItemIcon>\r\n                                <UpIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"返回上一层\" />\r\n                        </MenuItem>\r\n                    )}\r\n                    {this.state.dirList.map((value, index) => (\r\n                        <MenuItem\r\n                            classes={{\r\n                                selected: classes.selected,\r\n                            }}\r\n                            key={index}\r\n                            selected={this.state.selectedTarget === index}\r\n                            onClick={() => this.handleSelect(index)}\r\n                        >\r\n                            <ListItemIcon className={classes.icon}>\r\n                                <FolderIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                                classes={{ primary: classes.primary }}\r\n                                primary={value.name}\r\n                                primaryTypographyProps={{\r\n                                    style: { whiteSpace: \"normal\" },\r\n                                }}\r\n                            />\r\n                            {value.name !== \"/\" && (\r\n                                <ListItemSecondaryAction\r\n                                    className={classes.buttonIcon}\r\n                                >\r\n                                    <IconButton\r\n                                        className={classNames({\r\n                                            [classes.iconWhite]:\r\n                                                this.state.selectedTarget ===\r\n                                                index,\r\n                                        })}\r\n                                        onClick={() =>\r\n                                            this.enterFolder(\r\n                                                value.path === \"/\"\r\n                                                    ? value.path + value.name\r\n                                                    : value.path +\r\n                                                          \"/\" +\r\n                                                          value.name\r\n                                            )\r\n                                        }\r\n                                    >\r\n                                        <RightIcon />\r\n                                    </IconButton>\r\n                                </ListItemSecondaryAction>\r\n                            )}\r\n                        </MenuItem>\r\n                    ))}\r\n                </MenuList>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nPathSelectorCompoment.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    presentPath: PropTypes.string.isRequired,\r\n    selected: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(PathSelectorCompoment));\r\n"],"sourceRoot":""}